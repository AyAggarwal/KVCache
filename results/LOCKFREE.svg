<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2102" onload="init(evt)" viewBox="0 0 1200 2102" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="2102" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="2085.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="2085.00"> </text><svg id="frames" x="10" width="1180" total_samples="10053159207"><g><title>&lt;http::header::name::HeaderName as core::cmp::PartialEq&lt;&amp;str&gt;&gt;::eq (12,036,108 samples, 0.12%)</title><rect x="0.3492%" y="1717" width="0.1197%" height="15" fill="rgb(227,0,7)" fg:x="35105315" fg:w="12036108"/><text x="0.5992%" y="1727.50"></text></g><g><title>&lt;http::header::name::HeaderName as core::cmp::PartialEq&lt;str&gt;&gt;::eq (12,036,108 samples, 0.12%)</title><rect x="0.3492%" y="1701" width="0.1197%" height="15" fill="rgb(217,0,24)" fg:x="35105315" fg:w="12036108"/><text x="0.5992%" y="1711.50"></text></g><g><title>&lt;http::header::name::HeaderName as core::borrow::Borrow&lt;str&gt;&gt;::borrow (11,033,099 samples, 0.11%)</title><rect x="0.3592%" y="1685" width="0.1097%" height="15" fill="rgb(221,193,54)" fg:x="36108324" fg:w="11033099"/><text x="0.6092%" y="1695.50"></text></g><g><title>http::header::name::HeaderName::as_str (11,033,099 samples, 0.11%)</title><rect x="0.3592%" y="1669" width="0.1097%" height="15" fill="rgb(248,212,6)" fg:x="36108324" fg:w="11033099"/><text x="0.6092%" y="1679.50"></text></g><g><title>http::header::name::StandardHeader::as_str (8,024,072 samples, 0.08%)</title><rect x="0.3891%" y="1653" width="0.0798%" height="15" fill="rgb(208,68,35)" fg:x="39117351" fg:w="8024072"/><text x="0.6391%" y="1663.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (2,006,018 samples, 0.02%)</title><rect x="0.4789%" y="1717" width="0.0200%" height="15" fill="rgb(232,128,0)" fg:x="48144432" fg:w="2006018"/><text x="0.7289%" y="1727.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (2,006,018 samples, 0.02%)</title><rect x="0.5088%" y="1701" width="0.0200%" height="15" fill="rgb(207,160,47)" fg:x="51153459" fg:w="2006018"/><text x="0.7588%" y="1711.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::append (10,030,090 samples, 0.10%)</title><rect x="0.5088%" y="1717" width="0.0998%" height="15" fill="rgb(228,23,34)" fg:x="51153459" fg:w="10030090"/><text x="0.7588%" y="1727.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_append (8,024,072 samples, 0.08%)</title><rect x="0.5288%" y="1701" width="0.0798%" height="15" fill="rgb(218,30,26)" fg:x="53159477" fg:w="8024072"/><text x="0.7788%" y="1711.50"></text></g><g><title>&lt;http::header::name::HeaderName as http::header::map::into_header_name::Sealed&gt;::try_append (8,024,072 samples, 0.08%)</title><rect x="0.5288%" y="1685" width="0.0798%" height="15" fill="rgb(220,122,19)" fg:x="53159477" fg:w="8024072"/><text x="0.7788%" y="1695.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_append2 (8,024,072 samples, 0.08%)</title><rect x="0.5288%" y="1669" width="0.0798%" height="15" fill="rgb(250,228,42)" fg:x="53159477" fg:w="8024072"/><text x="0.7788%" y="1679.50"></text></g><g><title>http::header::name::HeaderName::as_str (5,015,045 samples, 0.05%)</title><rect x="0.6086%" y="1717" width="0.0499%" height="15" fill="rgb(240,193,28)" fg:x="61183549" fg:w="5015045"/><text x="0.8586%" y="1727.50"></text></g><g><title>http::header::name::StandardHeader::as_str (5,015,045 samples, 0.05%)</title><rect x="0.6086%" y="1701" width="0.0499%" height="15" fill="rgb(216,20,37)" fg:x="61183549" fg:w="5015045"/><text x="0.8586%" y="1711.50"></text></g><g><title>h2::frame::headers::HeaderBlock::load::{{closure}} (67,201,603 samples, 0.67%)</title><rect x="0.0000%" y="1733" width="0.6685%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="67201603"/><text x="0.2500%" y="1743.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (3,009,027 samples, 0.03%)</title><rect x="0.7483%" y="1685" width="0.0299%" height="15" fill="rgb(217,207,13)" fg:x="75225675" fg:w="3009027"/><text x="0.9983%" y="1695.50"></text></g><g><title>h2::hpack::decoder::decode_int (2,006,018 samples, 0.02%)</title><rect x="0.7782%" y="1685" width="0.0200%" height="15" fill="rgb(231,73,38)" fg:x="78234702" fg:w="2006018"/><text x="1.0282%" y="1695.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_impl::Buf&gt;::has_remaining (2,006,018 samples, 0.02%)</title><rect x="0.7782%" y="1669" width="0.0200%" height="15" fill="rgb(225,20,46)" fg:x="78234702" fg:w="2006018"/><text x="1.0282%" y="1679.50"></text></g><g><title>bytes::buf::buf_impl::Buf::has_remaining (2,006,018 samples, 0.02%)</title><rect x="0.7782%" y="1653" width="0.0200%" height="15" fill="rgb(210,31,41)" fg:x="78234702" fg:w="2006018"/><text x="1.0282%" y="1663.50"></text></g><g><title>h2::hpack::decoder::peek_u8 (3,009,027 samples, 0.03%)</title><rect x="0.7982%" y="1685" width="0.0299%" height="15" fill="rgb(221,200,47)" fg:x="80240720" fg:w="3009027"/><text x="1.0482%" y="1695.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,012,036 samples, 0.04%)</title><rect x="1.0177%" y="1669" width="0.0399%" height="15" fill="rgb(226,26,5)" fg:x="102306918" fg:w="4012036"/><text x="1.2677%" y="1679.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (3,009,027 samples, 0.03%)</title><rect x="1.0276%" y="1653" width="0.0299%" height="15" fill="rgb(249,33,26)" fg:x="103309927" fg:w="3009027"/><text x="1.2776%" y="1663.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::advance_mut (3,009,027 samples, 0.03%)</title><rect x="1.2471%" y="1621" width="0.0299%" height="15" fill="rgb(235,183,28)" fg:x="125376125" fg:w="3009027"/><text x="1.4971%" y="1631.50"></text></g><g><title>bytes::bytes_mut::BytesMut::spare_capacity_mut (2,006,018 samples, 0.02%)</title><rect x="1.2870%" y="1621" width="0.0200%" height="15" fill="rgb(221,5,38)" fg:x="129388161" fg:w="2006018"/><text x="1.5370%" y="1631.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2,006,018 samples, 0.02%)</title><rect x="1.2870%" y="1605" width="0.0200%" height="15" fill="rgb(247,18,42)" fg:x="129388161" fg:w="2006018"/><text x="1.5370%" y="1615.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_u8 (32,096,288 samples, 0.32%)</title><rect x="1.0576%" y="1669" width="0.3193%" height="15" fill="rgb(241,131,45)" fg:x="106318954" fg:w="32096288"/><text x="1.3076%" y="1679.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (27,081,243 samples, 0.27%)</title><rect x="1.1075%" y="1653" width="0.2694%" height="15" fill="rgb(249,31,29)" fg:x="111333999" fg:w="27081243"/><text x="1.3575%" y="1663.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (13,039,117 samples, 0.13%)</title><rect x="1.2471%" y="1637" width="0.1297%" height="15" fill="rgb(225,111,53)" fg:x="125376125" fg:w="13039117"/><text x="1.4971%" y="1647.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7,021,063 samples, 0.07%)</title><rect x="1.3070%" y="1621" width="0.0698%" height="15" fill="rgb(238,160,17)" fg:x="131394179" fg:w="7021063"/><text x="1.5570%" y="1631.50"></text></g><g><title>__memcpy_evex_unaligned_erms (5,015,045 samples, 0.05%)</title><rect x="1.3269%" y="1605" width="0.0499%" height="15" fill="rgb(214,148,48)" fg:x="133400197" fg:w="5015045"/><text x="1.5769%" y="1615.50"></text></g><g><title>h2::hpack::decoder::Decoder::decode_string (114,343,026 samples, 1.14%)</title><rect x="0.6685%" y="1717" width="1.1374%" height="15" fill="rgb(232,36,49)" fg:x="67201603" fg:w="114343026"/><text x="0.9185%" y="1727.50"></text></g><g><title>h2::hpack::decoder::Decoder::try_decode_string (114,343,026 samples, 1.14%)</title><rect x="0.6685%" y="1701" width="1.1374%" height="15" fill="rgb(209,103,24)" fg:x="67201603" fg:w="114343026"/><text x="0.9185%" y="1711.50"></text></g><g><title>h2::hpack::huffman::decode (98,294,882 samples, 0.98%)</title><rect x="0.8281%" y="1685" width="0.9778%" height="15" fill="rgb(229,88,8)" fg:x="83249747" fg:w="98294882"/><text x="1.0781%" y="1695.50"></text></g><g><title>h2::hpack::huffman::Decoder::decode4 (42,126,378 samples, 0.42%)</title><rect x="1.3868%" y="1669" width="0.4190%" height="15" fill="rgb(213,181,19)" fg:x="139418251" fg:w="42126378"/><text x="1.6368%" y="1679.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (6,018,054 samples, 0.06%)</title><rect x="1.8458%" y="1701" width="0.0599%" height="15" fill="rgb(254,191,54)" fg:x="185556665" fg:w="6018054"/><text x="2.0958%" y="1711.50"></text></g><g><title>&lt;http::header::name::HeaderName as core::clone::Clone&gt;::clone (4,012,036 samples, 0.04%)</title><rect x="1.9056%" y="1701" width="0.0399%" height="15" fill="rgb(241,83,37)" fg:x="191574719" fg:w="4012036"/><text x="2.1556%" y="1711.50"></text></g><g><title>&lt;http::header::name::Repr&lt;T&gt; as core::clone::Clone&gt;::clone (3,009,027 samples, 0.03%)</title><rect x="1.9156%" y="1685" width="0.0299%" height="15" fill="rgb(233,36,39)" fg:x="192577728" fg:w="3009027"/><text x="2.1656%" y="1695.50"></text></g><g><title>&lt;http::header::name::Custom as core::clone::Clone&gt;::clone (3,009,027 samples, 0.03%)</title><rect x="1.9156%" y="1669" width="0.0299%" height="15" fill="rgb(226,3,54)" fg:x="192577728" fg:w="3009027"/><text x="2.1656%" y="1679.50"></text></g><g><title>&lt;http::byte_str::ByteStr as core::clone::Clone&gt;::clone (3,009,027 samples, 0.03%)</title><rect x="1.9156%" y="1653" width="0.0299%" height="15" fill="rgb(245,192,40)" fg:x="192577728" fg:w="3009027"/><text x="2.1656%" y="1663.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (3,009,027 samples, 0.03%)</title><rect x="1.9156%" y="1637" width="0.0299%" height="15" fill="rgb(238,167,29)" fg:x="192577728" fg:w="3009027"/><text x="2.1656%" y="1647.50"></text></g><g><title>bytes::bytes::shared_clone (3,009,027 samples, 0.03%)</title><rect x="1.9156%" y="1621" width="0.0299%" height="15" fill="rgb(232,182,51)" fg:x="192577728" fg:w="3009027"/><text x="2.1656%" y="1631.50"></text></g><g><title>bytes::bytes::shallow_clone_arc (3,009,027 samples, 0.03%)</title><rect x="1.9156%" y="1605" width="0.0299%" height="15" fill="rgb(231,60,39)" fg:x="192577728" fg:w="3009027"/><text x="2.1656%" y="1615.50"></text></g><g><title>h2::hpack::header::BytesStr::try_from (18,054,162 samples, 0.18%)</title><rect x="1.9455%" y="1701" width="0.1796%" height="15" fill="rgb(208,69,12)" fg:x="195586755" fg:w="18054162"/><text x="2.1955%" y="1711.50"></text></g><g><title>core::str::converts::from_utf8 (16,048,144 samples, 0.16%)</title><rect x="1.9655%" y="1685" width="0.1596%" height="15" fill="rgb(235,93,37)" fg:x="197592773" fg:w="16048144"/><text x="2.2155%" y="1695.50"></text></g><g><title>core::str::validations::run_utf8_validation (12,036,108 samples, 0.12%)</title><rect x="2.0054%" y="1669" width="0.1197%" height="15" fill="rgb(213,116,39)" fg:x="201604809" fg:w="12036108"/><text x="2.2554%" y="1679.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3,009,027 samples, 0.03%)</title><rect x="2.1750%" y="1637" width="0.0299%" height="15" fill="rgb(222,207,29)" fg:x="218655962" fg:w="3009027"/><text x="2.4250%" y="1647.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (3,009,027 samples, 0.03%)</title><rect x="2.1750%" y="1621" width="0.0299%" height="15" fill="rgb(206,96,30)" fg:x="218655962" fg:w="3009027"/><text x="2.4250%" y="1631.50"></text></g><g><title>__GI___libc_malloc (5,015,045 samples, 0.05%)</title><rect x="2.2049%" y="1461" width="0.0499%" height="15" fill="rgb(218,138,4)" fg:x="221664989" fg:w="5015045"/><text x="2.4549%" y="1471.50"></text></g><g><title>_int_malloc (2,006,018 samples, 0.02%)</title><rect x="2.2349%" y="1445" width="0.0200%" height="15" fill="rgb(250,191,14)" fg:x="224674016" fg:w="2006018"/><text x="2.4849%" y="1455.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6,018,054 samples, 0.06%)</title><rect x="2.2049%" y="1573" width="0.0599%" height="15" fill="rgb(239,60,40)" fg:x="221664989" fg:w="6018054"/><text x="2.4549%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6,018,054 samples, 0.06%)</title><rect x="2.2049%" y="1557" width="0.0599%" height="15" fill="rgb(206,27,48)" fg:x="221664989" fg:w="6018054"/><text x="2.4549%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (6,018,054 samples, 0.06%)</title><rect x="2.2049%" y="1541" width="0.0599%" height="15" fill="rgb(225,35,8)" fg:x="221664989" fg:w="6018054"/><text x="2.4549%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (6,018,054 samples, 0.06%)</title><rect x="2.2049%" y="1525" width="0.0599%" height="15" fill="rgb(250,213,24)" fg:x="221664989" fg:w="6018054"/><text x="2.4549%" y="1535.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6,018,054 samples, 0.06%)</title><rect x="2.2049%" y="1509" width="0.0599%" height="15" fill="rgb(247,123,22)" fg:x="221664989" fg:w="6018054"/><text x="2.4549%" y="1519.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6,018,054 samples, 0.06%)</title><rect x="2.2049%" y="1493" width="0.0599%" height="15" fill="rgb(231,138,38)" fg:x="221664989" fg:w="6018054"/><text x="2.4549%" y="1503.50"></text></g><g><title>alloc::alloc::alloc (6,018,054 samples, 0.06%)</title><rect x="2.2049%" y="1477" width="0.0599%" height="15" fill="rgb(231,145,46)" fg:x="221664989" fg:w="6018054"/><text x="2.4549%" y="1487.50"></text></g><g><title>&lt;axum::serve::WithGracefulShutdown&lt;L,M,S,F&gt; as core::future::into_future::IntoFuture&gt;::into_future::{{closure}}::{{closure}} (229,689,061 samples, 2.28%)</title><rect x="0.0000%" y="2021" width="2.2847%" height="15" fill="rgb(251,118,11)" fg:x="0" fg:w="229689061"/><text x="0.2500%" y="2031.50">&lt;..</text></g><g><title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (229,689,061 samples, 2.28%)</title><rect x="0.0000%" y="2005" width="2.2847%" height="15" fill="rgb(217,147,25)" fg:x="0" fg:w="229689061"/><text x="0.2500%" y="2015.50">&lt;..</text></g><g><title>&lt;axum::serve::WithGracefulShutdown&lt;L,M,S,F&gt; as core::future::into_future::IntoFuture&gt;::into_future::{{closure}}::{{closure}}::{{closure}} (229,689,061 samples, 2.28%)</title><rect x="0.0000%" y="1989" width="2.2847%" height="15" fill="rgb(247,81,37)" fg:x="0" fg:w="229689061"/><text x="0.2500%" y="1999.50">&lt;..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (229,689,061 samples, 2.28%)</title><rect x="0.0000%" y="1973" width="2.2847%" height="15" fill="rgb(209,12,38)" fg:x="0" fg:w="229689061"/><text x="0.2500%" y="1983.50">&lt;..</text></g><g><title>&lt;hyper_util::server::conn::auto::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (229,689,061 samples, 2.28%)</title><rect x="0.0000%" y="1957" width="2.2847%" height="15" fill="rgb(227,1,9)" fg:x="0" fg:w="229689061"/><text x="0.2500%" y="1967.50">&lt;..</text></g><g><title>&lt;hyper::server::conn::http2::Connection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (229,689,061 samples, 2.28%)</title><rect x="0.0000%" y="1941" width="2.2847%" height="15" fill="rgb(248,47,43)" fg:x="0" fg:w="229689061"/><text x="0.2500%" y="1951.50">&lt;..</text></g><g><title>&lt;hyper::proto::h2::server::Server&lt;T,S,B,E&gt; as core::future::future::Future&gt;::poll (229,689,061 samples, 2.28%)</title><rect x="0.0000%" y="1925" width="2.2847%" height="15" fill="rgb(221,10,30)" fg:x="0" fg:w="229689061"/><text x="0.2500%" y="1935.50">&lt;..</text></g><g><title>hyper::proto::h2::server::Serving&lt;T,B&gt;::poll_server (229,689,061 samples, 2.28%)</title><rect x="0.0000%" y="1909" width="2.2847%" height="15" fill="rgb(210,229,1)" fg:x="0" fg:w="229689061"/><text x="0.2500%" y="1919.50">h..</text></g><g><title>h2::server::Connection&lt;T,B&gt;::poll_accept (229,689,061 samples, 2.28%)</title><rect x="0.0000%" y="1893" width="2.2847%" height="15" fill="rgb(222,148,37)" fg:x="0" fg:w="229689061"/><text x="0.2500%" y="1903.50">h..</text></g><g><title>h2::server::Connection&lt;T,B&gt;::poll_closed (229,689,061 samples, 2.28%)</title><rect x="0.0000%" y="1877" width="2.2847%" height="15" fill="rgb(234,67,33)" fg:x="0" fg:w="229689061"/><text x="0.2500%" y="1887.50">h..</text></g><g><title>h2::proto::connection::Connection&lt;T,P,B&gt;::poll (229,689,061 samples, 2.28%)</title><rect x="0.0000%" y="1861" width="2.2847%" height="15" fill="rgb(247,98,35)" fg:x="0" fg:w="229689061"/><text x="0.2500%" y="1871.50">h..</text></g><g><title>h2::proto::connection::Connection&lt;T,P,B&gt;::poll2 (229,689,061 samples, 2.28%)</title><rect x="0.0000%" y="1845" width="2.2847%" height="15" fill="rgb(247,138,52)" fg:x="0" fg:w="229689061"/><text x="0.2500%" y="1855.50">h..</text></g><g><title>&lt;h2::codec::Codec&lt;T,B&gt; as futures_core::stream::Stream&gt;::poll_next (229,689,061 samples, 2.28%)</title><rect x="0.0000%" y="1829" width="2.2847%" height="15" fill="rgb(213,79,30)" fg:x="0" fg:w="229689061"/><text x="0.2500%" y="1839.50">&lt;..</text></g><g><title>&lt;h2::codec::framed_read::FramedRead&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (229,689,061 samples, 2.28%)</title><rect x="0.0000%" y="1813" width="2.2847%" height="15" fill="rgb(246,177,23)" fg:x="0" fg:w="229689061"/><text x="0.2500%" y="1823.50">&lt;..</text></g><g><title>h2::codec::framed_read::decode_frame (229,689,061 samples, 2.28%)</title><rect x="0.0000%" y="1797" width="2.2847%" height="15" fill="rgb(230,62,27)" fg:x="0" fg:w="229689061"/><text x="0.2500%" y="1807.50">h..</text></g><g><title>h2::frame::headers::Headers::load_hpack (229,689,061 samples, 2.28%)</title><rect x="0.0000%" y="1781" width="2.2847%" height="15" fill="rgb(216,154,8)" fg:x="0" fg:w="229689061"/><text x="0.2500%" y="1791.50">h..</text></g><g><title>h2::frame::headers::HeaderBlock::load (229,689,061 samples, 2.28%)</title><rect x="0.0000%" y="1765" width="2.2847%" height="15" fill="rgb(244,35,45)" fg:x="0" fg:w="229689061"/><text x="0.2500%" y="1775.50">h..</text></g><g><title>h2::hpack::decoder::Decoder::decode (229,689,061 samples, 2.28%)</title><rect x="0.0000%" y="1749" width="2.2847%" height="15" fill="rgb(251,115,12)" fg:x="0" fg:w="229689061"/><text x="0.2500%" y="1759.50">h..</text></g><g><title>h2::hpack::decoder::Decoder::decode_literal (162,487,458 samples, 1.62%)</title><rect x="0.6685%" y="1733" width="1.6163%" height="15" fill="rgb(240,54,50)" fg:x="67201603" fg:w="162487458"/><text x="0.9185%" y="1743.50"></text></g><g><title>h2::hpack::header::Name::into_entry (48,144,432 samples, 0.48%)</title><rect x="1.8058%" y="1717" width="0.4789%" height="15" fill="rgb(233,84,52)" fg:x="181544629" fg:w="48144432"/><text x="2.0558%" y="1727.50"></text></g><g><title>http::header::value::HeaderValue::from_bytes (16,048,144 samples, 0.16%)</title><rect x="2.1251%" y="1701" width="0.1596%" height="15" fill="rgb(207,117,47)" fg:x="213640917" fg:w="16048144"/><text x="2.3751%" y="1711.50"></text></g><g><title>http::header::value::HeaderValue::try_from_generic (16,048,144 samples, 0.16%)</title><rect x="2.1251%" y="1685" width="0.1596%" height="15" fill="rgb(249,43,39)" fg:x="213640917" fg:w="16048144"/><text x="2.3751%" y="1695.50"></text></g><g><title>core::ops::function::FnOnce::call_once (14,042,126 samples, 0.14%)</title><rect x="2.1451%" y="1669" width="0.1397%" height="15" fill="rgb(209,38,44)" fg:x="215646935" fg:w="14042126"/><text x="2.3951%" y="1679.50"></text></g><g><title>bytes::bytes::Bytes::copy_from_slice (14,042,126 samples, 0.14%)</title><rect x="2.1451%" y="1653" width="0.1397%" height="15" fill="rgb(236,212,23)" fg:x="215646935" fg:w="14042126"/><text x="2.3951%" y="1663.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (8,024,072 samples, 0.08%)</title><rect x="2.2049%" y="1637" width="0.0798%" height="15" fill="rgb(242,79,21)" fg:x="221664989" fg:w="8024072"/><text x="2.4549%" y="1647.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8,024,072 samples, 0.08%)</title><rect x="2.2049%" y="1621" width="0.0798%" height="15" fill="rgb(211,96,35)" fg:x="221664989" fg:w="8024072"/><text x="2.4549%" y="1631.50"></text></g><g><title>alloc::slice::hack::to_vec (8,024,072 samples, 0.08%)</title><rect x="2.2049%" y="1605" width="0.0798%" height="15" fill="rgb(253,215,40)" fg:x="221664989" fg:w="8024072"/><text x="2.4549%" y="1615.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8,024,072 samples, 0.08%)</title><rect x="2.2049%" y="1589" width="0.0798%" height="15" fill="rgb(211,81,21)" fg:x="221664989" fg:w="8024072"/><text x="2.4549%" y="1599.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2,006,018 samples, 0.02%)</title><rect x="2.2648%" y="1573" width="0.0200%" height="15" fill="rgb(208,190,38)" fg:x="227683043" fg:w="2006018"/><text x="2.5148%" y="1583.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,006,018 samples, 0.02%)</title><rect x="2.2648%" y="1557" width="0.0200%" height="15" fill="rgb(235,213,38)" fg:x="227683043" fg:w="2006018"/><text x="2.5148%" y="1567.50"></text></g><g><title>__memcpy_evex_unaligned_erms (2,006,018 samples, 0.02%)</title><rect x="2.2648%" y="1541" width="0.0200%" height="15" fill="rgb(237,122,38)" fg:x="227683043" fg:w="2006018"/><text x="2.5148%" y="1551.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_insert_entry (3,009,027 samples, 0.03%)</title><rect x="2.2847%" y="1669" width="0.0299%" height="15" fill="rgb(244,218,35)" fg:x="229689061" fg:w="3009027"/><text x="2.5347%" y="1679.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (2,006,018 samples, 0.02%)</title><rect x="2.3247%" y="1621" width="0.0200%" height="15" fill="rgb(240,68,47)" fg:x="233701097" fg:w="2006018"/><text x="2.5747%" y="1631.50"></text></g><g><title>core::ptr::write (2,006,018 samples, 0.02%)</title><rect x="2.3247%" y="1605" width="0.0200%" height="15" fill="rgb(210,16,53)" fg:x="233701097" fg:w="2006018"/><text x="2.5747%" y="1615.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_reserve_one (4,012,036 samples, 0.04%)</title><rect x="2.3147%" y="1669" width="0.0399%" height="15" fill="rgb(235,124,12)" fg:x="232698088" fg:w="4012036"/><text x="2.5647%" y="1679.50"></text></g><g><title>alloc::vec::from_elem (3,009,027 samples, 0.03%)</title><rect x="2.3247%" y="1653" width="0.0299%" height="15" fill="rgb(224,169,11)" fg:x="233701097" fg:w="3009027"/><text x="2.5747%" y="1663.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (3,009,027 samples, 0.03%)</title><rect x="2.3247%" y="1637" width="0.0299%" height="15" fill="rgb(250,166,2)" fg:x="233701097" fg:w="3009027"/><text x="2.5747%" y="1647.50"></text></g><g><title>h2::frame::headers::HeaderBlock::load::{{closure}} (8,024,072 samples, 0.08%)</title><rect x="2.2847%" y="1749" width="0.0798%" height="15" fill="rgb(242,216,29)" fg:x="229689061" fg:w="8024072"/><text x="2.5347%" y="1759.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::append (8,024,072 samples, 0.08%)</title><rect x="2.2847%" y="1733" width="0.0798%" height="15" fill="rgb(230,116,27)" fg:x="229689061" fg:w="8024072"/><text x="2.5347%" y="1743.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_append (8,024,072 samples, 0.08%)</title><rect x="2.2847%" y="1717" width="0.0798%" height="15" fill="rgb(228,99,48)" fg:x="229689061" fg:w="8024072"/><text x="2.5347%" y="1727.50"></text></g><g><title>&lt;http::header::name::HeaderName as http::header::map::into_header_name::Sealed&gt;::try_append (8,024,072 samples, 0.08%)</title><rect x="2.2847%" y="1701" width="0.0798%" height="15" fill="rgb(253,11,6)" fg:x="229689061" fg:w="8024072"/><text x="2.5347%" y="1711.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_append2 (8,024,072 samples, 0.08%)</title><rect x="2.2847%" y="1685" width="0.0798%" height="15" fill="rgb(247,143,39)" fg:x="229689061" fg:w="8024072"/><text x="2.5347%" y="1695.50"></text></g><g><title>h2::proto::connection::Connection&lt;T,P,B&gt;::poll2 (17,051,153 samples, 0.17%)</title><rect x="2.2847%" y="1861" width="0.1696%" height="15" fill="rgb(236,97,10)" fg:x="229689061" fg:w="17051153"/><text x="2.5347%" y="1871.50"></text></g><g><title>&lt;h2::codec::Codec&lt;T,B&gt; as futures_core::stream::Stream&gt;::poll_next (17,051,153 samples, 0.17%)</title><rect x="2.2847%" y="1845" width="0.1696%" height="15" fill="rgb(233,208,19)" fg:x="229689061" fg:w="17051153"/><text x="2.5347%" y="1855.50"></text></g><g><title>&lt;h2::codec::framed_read::FramedRead&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (17,051,153 samples, 0.17%)</title><rect x="2.2847%" y="1829" width="0.1696%" height="15" fill="rgb(216,164,2)" fg:x="229689061" fg:w="17051153"/><text x="2.5347%" y="1839.50"></text></g><g><title>h2::codec::framed_read::decode_frame (17,051,153 samples, 0.17%)</title><rect x="2.2847%" y="1813" width="0.1696%" height="15" fill="rgb(220,129,5)" fg:x="229689061" fg:w="17051153"/><text x="2.5347%" y="1823.50"></text></g><g><title>h2::frame::headers::Headers::load_hpack (17,051,153 samples, 0.17%)</title><rect x="2.2847%" y="1797" width="0.1696%" height="15" fill="rgb(242,17,10)" fg:x="229689061" fg:w="17051153"/><text x="2.5347%" y="1807.50"></text></g><g><title>h2::frame::headers::HeaderBlock::load (17,051,153 samples, 0.17%)</title><rect x="2.2847%" y="1781" width="0.1696%" height="15" fill="rgb(242,107,0)" fg:x="229689061" fg:w="17051153"/><text x="2.5347%" y="1791.50"></text></g><g><title>h2::hpack::decoder::Decoder::decode (17,051,153 samples, 0.17%)</title><rect x="2.2847%" y="1765" width="0.1696%" height="15" fill="rgb(251,28,31)" fg:x="229689061" fg:w="17051153"/><text x="2.5347%" y="1775.50"></text></g><g><title>h2::hpack::decoder::Decoder::decode_literal (9,027,081 samples, 0.09%)</title><rect x="2.3646%" y="1749" width="0.0898%" height="15" fill="rgb(233,223,10)" fg:x="237713133" fg:w="9027081"/><text x="2.6146%" y="1759.50"></text></g><g><title>h2::hpack::decoder::Decoder::decode_string (9,027,081 samples, 0.09%)</title><rect x="2.3646%" y="1733" width="0.0898%" height="15" fill="rgb(215,21,27)" fg:x="237713133" fg:w="9027081"/><text x="2.6146%" y="1743.50"></text></g><g><title>h2::hpack::decoder::Decoder::try_decode_string (9,027,081 samples, 0.09%)</title><rect x="2.3646%" y="1717" width="0.0898%" height="15" fill="rgb(232,23,21)" fg:x="237713133" fg:w="9027081"/><text x="2.6146%" y="1727.50"></text></g><g><title>h2::hpack::huffman::decode (9,027,081 samples, 0.09%)</title><rect x="2.3646%" y="1701" width="0.0898%" height="15" fill="rgb(244,5,23)" fg:x="237713133" fg:w="9027081"/><text x="2.6146%" y="1711.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split (9,027,081 samples, 0.09%)</title><rect x="2.3646%" y="1685" width="0.0898%" height="15" fill="rgb(226,81,46)" fg:x="237713133" fg:w="9027081"/><text x="2.6146%" y="1695.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (9,027,081 samples, 0.09%)</title><rect x="2.3646%" y="1669" width="0.0898%" height="15" fill="rgb(247,70,30)" fg:x="237713133" fg:w="9027081"/><text x="2.6146%" y="1679.50"></text></g><g><title>bytes::bytes_mut::BytesMut::shallow_clone (7,021,063 samples, 0.07%)</title><rect x="2.3845%" y="1653" width="0.0698%" height="15" fill="rgb(212,68,19)" fg:x="239719151" fg:w="7021063"/><text x="2.6345%" y="1663.50"></text></g><g><title>bytes::bytes_mut::increment_shared (7,021,063 samples, 0.07%)</title><rect x="2.3845%" y="1637" width="0.0698%" height="15" fill="rgb(240,187,13)" fg:x="239719151" fg:w="7021063"/><text x="2.6345%" y="1647.50"></text></g><g><title>&lt;h2::frame::headers::Iter as core::iter::traits::iterator::Iterator&gt;::next (3,009,027 samples, 0.03%)</title><rect x="2.7936%" y="1701" width="0.0299%" height="15" fill="rgb(223,113,26)" fg:x="280842520" fg:w="3009027"/><text x="3.0436%" y="1711.50"></text></g><g><title>__memcpy_evex_unaligned_erms (2,006,018 samples, 0.02%)</title><rect x="2.8235%" y="1701" width="0.0200%" height="15" fill="rgb(206,192,2)" fg:x="283851547" fg:w="2006018"/><text x="3.0735%" y="1711.50"></text></g><g><title>__free (2,006,018 samples, 0.02%)</title><rect x="2.9133%" y="1669" width="0.0200%" height="15" fill="rgb(241,108,4)" fg:x="292878628" fg:w="2006018"/><text x="3.1633%" y="1679.50"></text></g><g><title>bytes::bytes::promotable_even_drop (5,015,045 samples, 0.05%)</title><rect x="2.9333%" y="1669" width="0.0499%" height="15" fill="rgb(247,173,49)" fg:x="294884646" fg:w="5015045"/><text x="3.1833%" y="1679.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (5,015,045 samples, 0.05%)</title><rect x="2.9333%" y="1653" width="0.0499%" height="15" fill="rgb(224,114,35)" fg:x="294884646" fg:w="5015045"/><text x="3.1833%" y="1663.50"></text></g><g><title>bytes::bytes::static_drop (2,006,018 samples, 0.02%)</title><rect x="2.9931%" y="1669" width="0.0200%" height="15" fill="rgb(245,159,27)" fg:x="300902700" fg:w="2006018"/><text x="3.2431%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;h2::hpack::table::Index&gt;&gt; (19,057,171 samples, 0.19%)</title><rect x="2.8435%" y="1701" width="0.1896%" height="15" fill="rgb(245,172,44)" fg:x="285857565" fg:w="19057171"/><text x="3.0935%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;h2::hpack::table::Index&gt; (13,039,117 samples, 0.13%)</title><rect x="2.9033%" y="1685" width="0.1297%" height="15" fill="rgb(236,23,11)" fg:x="291875619" fg:w="13039117"/><text x="3.1533%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;h2::hpack::header::Header&gt; (2,006,018 samples, 0.02%)</title><rect x="3.0131%" y="1669" width="0.0200%" height="15" fill="rgb(205,117,38)" fg:x="302908718" fg:w="2006018"/><text x="3.2631%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;h2::frame::headers::Iter&gt; (3,009,027 samples, 0.03%)</title><rect x="3.0330%" y="1701" width="0.0299%" height="15" fill="rgb(237,72,25)" fg:x="304914736" fg:w="3009027"/><text x="3.2830%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (2,006,018 samples, 0.02%)</title><rect x="3.0630%" y="1701" width="0.0200%" height="15" fill="rgb(244,70,9)" fg:x="307923763" fg:w="2006018"/><text x="3.3130%" y="1711.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (2,006,018 samples, 0.02%)</title><rect x="3.0630%" y="1685" width="0.0200%" height="15" fill="rgb(217,125,39)" fg:x="307923763" fg:w="2006018"/><text x="3.3130%" y="1695.50"></text></g><g><title>tracing::span::Span::do_exit (2,006,018 samples, 0.02%)</title><rect x="3.0630%" y="1669" width="0.0200%" height="15" fill="rgb(235,36,10)" fg:x="307923763" fg:w="2006018"/><text x="3.3130%" y="1679.50"></text></g><g><title>h2::hpack::encoder::encode_int (3,009,027 samples, 0.03%)</title><rect x="3.1627%" y="1685" width="0.0299%" height="15" fill="rgb(251,123,47)" fg:x="317953853" fg:w="3009027"/><text x="3.4127%" y="1695.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_u8 (2,006,018 samples, 0.02%)</title><rect x="3.1727%" y="1669" width="0.0200%" height="15" fill="rgb(221,13,13)" fg:x="318956862" fg:w="2006018"/><text x="3.4227%" y="1679.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (2,006,018 samples, 0.02%)</title><rect x="3.1727%" y="1653" width="0.0200%" height="15" fill="rgb(238,131,9)" fg:x="318956862" fg:w="2006018"/><text x="3.4227%" y="1663.50"></text></g><g><title>h2::hpack::encoder::Encoder::encode_header (15,045,135 samples, 0.15%)</title><rect x="3.0929%" y="1701" width="0.1497%" height="15" fill="rgb(211,50,8)" fg:x="310932790" fg:w="15045135"/><text x="3.3429%" y="1711.50"></text></g><g><title>h2::hpack::header::Header::value_slice (3,009,027 samples, 0.03%)</title><rect x="3.2126%" y="1685" width="0.0299%" height="15" fill="rgb(245,182,24)" fg:x="322968898" fg:w="3009027"/><text x="3.4626%" y="1695.50"></text></g><g><title>h2::hpack::encoder::Encoder::encode_size_updates (3,009,027 samples, 0.03%)</title><rect x="3.2425%" y="1701" width="0.0299%" height="15" fill="rgb(242,14,37)" fg:x="325977925" fg:w="3009027"/><text x="3.4925%" y="1711.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (3,009,027 samples, 0.03%)</title><rect x="3.2425%" y="1685" width="0.0299%" height="15" fill="rgb(246,228,12)" fg:x="325977925" fg:w="3009027"/><text x="3.4925%" y="1695.50"></text></g><g><title>core::mem::replace (3,009,027 samples, 0.03%)</title><rect x="3.2425%" y="1669" width="0.0299%" height="15" fill="rgb(213,55,15)" fg:x="325977925" fg:w="3009027"/><text x="3.4925%" y="1679.50"></text></g><g><title>core::ptr::read (3,009,027 samples, 0.03%)</title><rect x="3.2425%" y="1653" width="0.0299%" height="15" fill="rgb(209,9,3)" fg:x="325977925" fg:w="3009027"/><text x="3.4925%" y="1663.50"></text></g><g><title>h2::hpack::header::Header&lt;core::option::Option&lt;http::header::name::HeaderName&gt;&gt;::reify (10,030,090 samples, 0.10%)</title><rect x="3.2725%" y="1701" width="0.0998%" height="15" fill="rgb(230,59,30)" fg:x="328986952" fg:w="10030090"/><text x="3.5225%" y="1711.50"></text></g><g><title>h2::hpack::header::Header::len (9,027,081 samples, 0.09%)</title><rect x="3.4521%" y="1685" width="0.0898%" height="15" fill="rgb(209,121,21)" fg:x="347041114" fg:w="9027081"/><text x="3.7021%" y="1695.50"></text></g><g><title>h2::hpack::header::Header::skip_value_index (6,018,054 samples, 0.06%)</title><rect x="3.5419%" y="1685" width="0.0599%" height="15" fill="rgb(220,109,13)" fg:x="356068195" fg:w="6018054"/><text x="3.7919%" y="1695.50"></text></g><g><title>h2::hpack::table::Index::new (3,009,027 samples, 0.03%)</title><rect x="3.6017%" y="1685" width="0.0299%" height="15" fill="rgb(232,18,1)" fg:x="362086249" fg:w="3009027"/><text x="3.8517%" y="1695.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::index::Index&lt;usize&gt;&gt;::index (2,006,018 samples, 0.02%)</title><rect x="3.7314%" y="1669" width="0.0200%" height="15" fill="rgb(215,41,42)" fg:x="375125366" fg:w="2006018"/><text x="3.9814%" y="1679.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::get (2,006,018 samples, 0.02%)</title><rect x="3.7314%" y="1653" width="0.0200%" height="15" fill="rgb(224,123,36)" fg:x="375125366" fg:w="2006018"/><text x="3.9814%" y="1663.50"></text></g><g><title>&lt;h2::hpack::header::Name as core::cmp::PartialEq&gt;::eq (4,012,036 samples, 0.04%)</title><rect x="3.7514%" y="1669" width="0.0399%" height="15" fill="rgb(240,125,3)" fg:x="377131384" fg:w="4012036"/><text x="4.0014%" y="1679.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4,012,036 samples, 0.04%)</title><rect x="3.7514%" y="1653" width="0.0399%" height="15" fill="rgb(205,98,50)" fg:x="377131384" fg:w="4012036"/><text x="4.0014%" y="1663.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4,012,036 samples, 0.04%)</title><rect x="3.7514%" y="1637" width="0.0399%" height="15" fill="rgb(205,185,37)" fg:x="377131384" fg:w="4012036"/><text x="4.0014%" y="1647.50"></text></g><g><title>&lt;http::header::name::HeaderName as core::cmp::PartialEq&gt;::eq (4,012,036 samples, 0.04%)</title><rect x="3.7514%" y="1621" width="0.0399%" height="15" fill="rgb(238,207,15)" fg:x="377131384" fg:w="4012036"/><text x="4.0014%" y="1631.50"></text></g><g><title>&lt;http::header::name::Repr&lt;T&gt; as core::cmp::PartialEq&gt;::eq (4,012,036 samples, 0.04%)</title><rect x="3.7514%" y="1605" width="0.0399%" height="15" fill="rgb(213,199,42)" fg:x="377131384" fg:w="4012036"/><text x="4.0014%" y="1615.50"></text></g><g><title>h2::hpack::header::Header::len (2,006,018 samples, 0.02%)</title><rect x="3.7913%" y="1669" width="0.0200%" height="15" fill="rgb(235,201,11)" fg:x="381143420" fg:w="2006018"/><text x="4.0413%" y="1679.50"></text></g><g><title>h2::hpack::header::Header::name (8,024,072 samples, 0.08%)</title><rect x="3.8112%" y="1669" width="0.0798%" height="15" fill="rgb(207,46,11)" fg:x="383149438" fg:w="8024072"/><text x="4.0612%" y="1679.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::index::Index&lt;usize&gt;&gt;::index (9,027,081 samples, 0.09%)</title><rect x="3.9509%" y="1653" width="0.0898%" height="15" fill="rgb(241,35,35)" fg:x="397191564" fg:w="9027081"/><text x="4.2009%" y="1663.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::get (9,027,081 samples, 0.09%)</title><rect x="3.9509%" y="1637" width="0.0898%" height="15" fill="rgb(243,32,47)" fg:x="397191564" fg:w="9027081"/><text x="4.2009%" y="1647.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::to_physical_idx (4,012,036 samples, 0.04%)</title><rect x="4.0008%" y="1621" width="0.0399%" height="15" fill="rgb(247,202,23)" fg:x="402206609" fg:w="4012036"/><text x="4.2508%" y="1631.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::wrap_add (4,012,036 samples, 0.04%)</title><rect x="4.0008%" y="1605" width="0.0399%" height="15" fill="rgb(219,102,11)" fg:x="402206609" fg:w="4012036"/><text x="4.2508%" y="1615.50"></text></g><g><title>alloc::collections::vec_deque::wrap_index (4,012,036 samples, 0.04%)</title><rect x="4.0008%" y="1589" width="0.0399%" height="15" fill="rgb(243,110,44)" fg:x="402206609" fg:w="4012036"/><text x="4.2508%" y="1599.50"></text></g><g><title>bytes::bytes::Bytes::as_slice (4,012,036 samples, 0.04%)</title><rect x="4.0407%" y="1637" width="0.0399%" height="15" fill="rgb(222,74,54)" fg:x="406218645" fg:w="4012036"/><text x="4.2907%" y="1647.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::cmp::PartialEq&gt;::eq (8,024,072 samples, 0.08%)</title><rect x="4.0407%" y="1653" width="0.0798%" height="15" fill="rgb(216,99,12)" fg:x="406218645" fg:w="8024072"/><text x="4.2907%" y="1663.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4,012,036 samples, 0.04%)</title><rect x="4.0806%" y="1637" width="0.0399%" height="15" fill="rgb(226,22,26)" fg:x="410230681" fg:w="4012036"/><text x="4.3306%" y="1647.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (4,012,036 samples, 0.04%)</title><rect x="4.0806%" y="1621" width="0.0399%" height="15" fill="rgb(217,163,10)" fg:x="410230681" fg:w="4012036"/><text x="4.3306%" y="1631.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (4,012,036 samples, 0.04%)</title><rect x="4.0806%" y="1605" width="0.0399%" height="15" fill="rgb(213,25,53)" fg:x="410230681" fg:w="4012036"/><text x="4.3306%" y="1615.50"></text></g><g><title>h2::hpack::table::Table::index_occupied (34,102,306 samples, 0.34%)</title><rect x="3.8911%" y="1669" width="0.3392%" height="15" fill="rgb(252,105,26)" fg:x="391173510" fg:w="34102306"/><text x="4.1411%" y="1679.50"></text></g><g><title>h2::hpack::header::Header::value_eq (11,033,099 samples, 0.11%)</title><rect x="4.1205%" y="1653" width="0.1097%" height="15" fill="rgb(220,39,43)" fg:x="414242717" fg:w="11033099"/><text x="4.3705%" y="1663.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3,009,027 samples, 0.03%)</title><rect x="4.2402%" y="1637" width="0.0299%" height="15" fill="rgb(229,68,48)" fg:x="426278825" fg:w="3009027"/><text x="4.4902%" y="1647.50"></text></g><g><title>&lt;http::header::name::HeaderName as core::hash::Hash&gt;::hash (3,009,027 samples, 0.03%)</title><rect x="4.2402%" y="1621" width="0.0299%" height="15" fill="rgb(252,8,32)" fg:x="426278825" fg:w="3009027"/><text x="4.4902%" y="1631.50"></text></g><g><title>&lt;http::header::name::Repr&lt;T&gt; as core::hash::Hash&gt;::hash (3,009,027 samples, 0.03%)</title><rect x="4.2402%" y="1605" width="0.0299%" height="15" fill="rgb(223,20,43)" fg:x="426278825" fg:w="3009027"/><text x="4.4902%" y="1615.50"></text></g><g><title>&lt;fnv::FnvHasher as core::hash::Hasher&gt;::write (5,015,045 samples, 0.05%)</title><rect x="4.2702%" y="1589" width="0.0499%" height="15" fill="rgb(229,81,49)" fg:x="429287852" fg:w="5015045"/><text x="4.5202%" y="1599.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (3,009,027 samples, 0.03%)</title><rect x="4.2901%" y="1573" width="0.0299%" height="15" fill="rgb(236,28,36)" fg:x="431293870" fg:w="3009027"/><text x="4.5401%" y="1583.50"></text></g><g><title>&lt;h2::hpack::header::Name as core::hash::Hash&gt;::hash (9,027,081 samples, 0.09%)</title><rect x="4.2402%" y="1653" width="0.0898%" height="15" fill="rgb(249,185,26)" fg:x="426278825" fg:w="9027081"/><text x="4.4902%" y="1663.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (6,018,054 samples, 0.06%)</title><rect x="4.2702%" y="1637" width="0.0599%" height="15" fill="rgb(249,174,33)" fg:x="429287852" fg:w="6018054"/><text x="4.5202%" y="1647.50"></text></g><g><title>core::hash::Hasher::write_isize (6,018,054 samples, 0.06%)</title><rect x="4.2702%" y="1621" width="0.0599%" height="15" fill="rgb(233,201,37)" fg:x="429287852" fg:w="6018054"/><text x="4.5202%" y="1631.50"></text></g><g><title>core::hash::Hasher::write_usize (6,018,054 samples, 0.06%)</title><rect x="4.2702%" y="1605" width="0.0599%" height="15" fill="rgb(221,78,26)" fg:x="429287852" fg:w="6018054"/><text x="4.5202%" y="1615.50"></text></g><g><title>h2::hpack::table::Table::index_dynamic (71,213,639 samples, 0.71%)</title><rect x="3.6316%" y="1685" width="0.7084%" height="15" fill="rgb(250,127,30)" fg:x="365095276" fg:w="71213639"/><text x="3.8816%" y="1695.50"></text></g><g><title>h2::hpack::table::hash_header (10,030,090 samples, 0.10%)</title><rect x="4.2402%" y="1669" width="0.0998%" height="15" fill="rgb(230,49,44)" fg:x="426278825" fg:w="10030090"/><text x="4.4902%" y="1679.50"></text></g><g><title>h2::hpack::table::Table::index (109,327,981 samples, 1.09%)</title><rect x="3.3722%" y="1701" width="1.0875%" height="15" fill="rgb(229,67,23)" fg:x="339017042" fg:w="109327981"/><text x="3.6222%" y="1711.50"></text></g><g><title>h2::hpack::table::index_static (12,036,108 samples, 0.12%)</title><rect x="4.3400%" y="1685" width="0.1197%" height="15" fill="rgb(249,83,47)" fg:x="436308915" fg:w="12036108"/><text x="4.5900%" y="1695.50"></text></g><g><title>tracing::span::Span::enter (2,006,018 samples, 0.02%)</title><rect x="4.4597%" y="1701" width="0.0200%" height="15" fill="rgb(215,43,3)" fg:x="448345023" fg:w="2006018"/><text x="4.7097%" y="1711.50"></text></g><g><title>tracing::span::Span::do_enter (2,006,018 samples, 0.02%)</title><rect x="4.4597%" y="1685" width="0.0200%" height="15" fill="rgb(238,154,13)" fg:x="448345023" fg:w="2006018"/><text x="4.7097%" y="1695.50"></text></g><g><title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (221,664,989 samples, 2.20%)</title><rect x="2.2847%" y="2021" width="2.2049%" height="15" fill="rgb(219,56,2)" fg:x="229689061" fg:w="221664989"/><text x="2.5347%" y="2031.50">&lt;..</text></g><g><title>&lt;axum::serve::WithGracefulShutdown&lt;L,M,S,F&gt; as core::future::into_future::IntoFuture&gt;::into_future::{{closure}}::{{closure}}::{{closure}} (221,664,989 samples, 2.20%)</title><rect x="2.2847%" y="2005" width="2.2049%" height="15" fill="rgb(233,0,4)" fg:x="229689061" fg:w="221664989"/><text x="2.5347%" y="2015.50">&lt;..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (221,664,989 samples, 2.20%)</title><rect x="2.2847%" y="1989" width="2.2049%" height="15" fill="rgb(235,30,7)" fg:x="229689061" fg:w="221664989"/><text x="2.5347%" y="1999.50">&lt;..</text></g><g><title>&lt;hyper_util::server::conn::auto::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (221,664,989 samples, 2.20%)</title><rect x="2.2847%" y="1973" width="2.2049%" height="15" fill="rgb(250,79,13)" fg:x="229689061" fg:w="221664989"/><text x="2.5347%" y="1983.50">&lt;..</text></g><g><title>&lt;hyper::server::conn::http2::Connection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (221,664,989 samples, 2.20%)</title><rect x="2.2847%" y="1957" width="2.2049%" height="15" fill="rgb(211,146,34)" fg:x="229689061" fg:w="221664989"/><text x="2.5347%" y="1967.50">&lt;..</text></g><g><title>&lt;hyper::proto::h2::server::Server&lt;T,S,B,E&gt; as core::future::future::Future&gt;::poll (221,664,989 samples, 2.20%)</title><rect x="2.2847%" y="1941" width="2.2049%" height="15" fill="rgb(228,22,38)" fg:x="229689061" fg:w="221664989"/><text x="2.5347%" y="1951.50">&lt;..</text></g><g><title>hyper::proto::h2::server::Serving&lt;T,B&gt;::poll_server (221,664,989 samples, 2.20%)</title><rect x="2.2847%" y="1925" width="2.2049%" height="15" fill="rgb(235,168,5)" fg:x="229689061" fg:w="221664989"/><text x="2.5347%" y="1935.50">h..</text></g><g><title>h2::server::Connection&lt;T,B&gt;::poll_accept (221,664,989 samples, 2.20%)</title><rect x="2.2847%" y="1909" width="2.2049%" height="15" fill="rgb(221,155,16)" fg:x="229689061" fg:w="221664989"/><text x="2.5347%" y="1919.50">h..</text></g><g><title>h2::server::Connection&lt;T,B&gt;::poll_closed (221,664,989 samples, 2.20%)</title><rect x="2.2847%" y="1893" width="2.2049%" height="15" fill="rgb(215,215,53)" fg:x="229689061" fg:w="221664989"/><text x="2.5347%" y="1903.50">h..</text></g><g><title>h2::proto::connection::Connection&lt;T,P,B&gt;::poll (221,664,989 samples, 2.20%)</title><rect x="2.2847%" y="1877" width="2.2049%" height="15" fill="rgb(223,4,10)" fg:x="229689061" fg:w="221664989"/><text x="2.5347%" y="1887.50">h..</text></g><g><title>h2::proto::streams::streams::Streams&lt;B,P&gt;::poll_complete (204,613,836 samples, 2.04%)</title><rect x="2.4544%" y="1861" width="2.0353%" height="15" fill="rgb(234,103,6)" fg:x="246740214" fg:w="204613836"/><text x="2.7044%" y="1871.50">h..</text></g><g><title>h2::proto::streams::streams::Inner::poll_complete (204,613,836 samples, 2.04%)</title><rect x="2.4544%" y="1845" width="2.0353%" height="15" fill="rgb(227,97,0)" fg:x="246740214" fg:w="204613836"/><text x="2.7044%" y="1855.50">h..</text></g><g><title>h2::proto::streams::send::Send::poll_complete (204,613,836 samples, 2.04%)</title><rect x="2.4544%" y="1829" width="2.0353%" height="15" fill="rgb(234,150,53)" fg:x="246740214" fg:w="204613836"/><text x="2.7044%" y="1839.50">h..</text></g><g><title>h2::proto::streams::prioritize::Prioritize::poll_complete (204,613,836 samples, 2.04%)</title><rect x="2.4544%" y="1813" width="2.0353%" height="15" fill="rgb(228,201,54)" fg:x="246740214" fg:w="204613836"/><text x="2.7044%" y="1823.50">h..</text></g><g><title>h2::codec::Codec&lt;T,B&gt;::buffer (204,613,836 samples, 2.04%)</title><rect x="2.4544%" y="1797" width="2.0353%" height="15" fill="rgb(222,22,37)" fg:x="246740214" fg:w="204613836"/><text x="2.7044%" y="1807.50">h..</text></g><g><title>h2::codec::framed_write::FramedWrite&lt;T,B&gt;::buffer (204,613,836 samples, 2.04%)</title><rect x="2.4544%" y="1781" width="2.0353%" height="15" fill="rgb(237,53,32)" fg:x="246740214" fg:w="204613836"/><text x="2.7044%" y="1791.50">h..</text></g><g><title>h2::codec::framed_write::Encoder&lt;B&gt;::buffer (204,613,836 samples, 2.04%)</title><rect x="2.4544%" y="1765" width="2.0353%" height="15" fill="rgb(233,25,53)" fg:x="246740214" fg:w="204613836"/><text x="2.7044%" y="1775.50">h..</text></g><g><title>h2::frame::headers::Headers::encode (204,613,836 samples, 2.04%)</title><rect x="2.4544%" y="1749" width="2.0353%" height="15" fill="rgb(210,40,34)" fg:x="246740214" fg:w="204613836"/><text x="2.7044%" y="1759.50">h..</text></g><g><title>h2::frame::headers::HeaderBlock::into_encoding (204,613,836 samples, 2.04%)</title><rect x="2.4544%" y="1733" width="2.0353%" height="15" fill="rgb(241,220,44)" fg:x="246740214" fg:w="204613836"/><text x="2.7044%" y="1743.50">h..</text></g><g><title>h2::hpack::encoder::Encoder::encode (204,613,836 samples, 2.04%)</title><rect x="2.4544%" y="1717" width="2.0353%" height="15" fill="rgb(235,28,35)" fg:x="246740214" fg:w="204613836"/><text x="2.7044%" y="1727.50">h..</text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_insert_entry (18,054,162 samples, 0.18%)</title><rect x="4.4897%" y="1717" width="0.1796%" height="15" fill="rgb(210,56,17)" fg:x="451354050" fg:w="18054162"/><text x="4.7397%" y="1727.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (18,054,162 samples, 0.18%)</title><rect x="4.4897%" y="1701" width="0.1796%" height="15" fill="rgb(224,130,29)" fg:x="451354050" fg:w="18054162"/><text x="4.7397%" y="1711.50"></text></g><g><title>core::ptr::write (17,051,153 samples, 0.17%)</title><rect x="4.4997%" y="1685" width="0.1696%" height="15" fill="rgb(235,212,8)" fg:x="452357059" fg:w="17051153"/><text x="4.7497%" y="1695.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (21,063,189 samples, 0.21%)</title><rect x="4.6693%" y="1701" width="0.2095%" height="15" fill="rgb(223,33,50)" fg:x="469408212" fg:w="21063189"/><text x="4.9193%" y="1711.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (21,063,189 samples, 0.21%)</title><rect x="4.6693%" y="1685" width="0.2095%" height="15" fill="rgb(219,149,13)" fg:x="469408212" fg:w="21063189"/><text x="4.9193%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (21,063,189 samples, 0.21%)</title><rect x="4.6693%" y="1669" width="0.2095%" height="15" fill="rgb(250,156,29)" fg:x="469408212" fg:w="21063189"/><text x="4.9193%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (21,063,189 samples, 0.21%)</title><rect x="4.6693%" y="1653" width="0.2095%" height="15" fill="rgb(216,193,19)" fg:x="469408212" fg:w="21063189"/><text x="4.9193%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (21,063,189 samples, 0.21%)</title><rect x="4.6693%" y="1637" width="0.2095%" height="15" fill="rgb(216,135,14)" fg:x="469408212" fg:w="21063189"/><text x="4.9193%" y="1647.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (21,063,189 samples, 0.21%)</title><rect x="4.6693%" y="1621" width="0.2095%" height="15" fill="rgb(241,47,5)" fg:x="469408212" fg:w="21063189"/><text x="4.9193%" y="1631.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (21,063,189 samples, 0.21%)</title><rect x="4.6693%" y="1605" width="0.2095%" height="15" fill="rgb(233,42,35)" fg:x="469408212" fg:w="21063189"/><text x="4.9193%" y="1615.50"></text></g><g><title>alloc::alloc::alloc (21,063,189 samples, 0.21%)</title><rect x="4.6693%" y="1589" width="0.2095%" height="15" fill="rgb(231,13,6)" fg:x="469408212" fg:w="21063189"/><text x="4.9193%" y="1599.50"></text></g><g><title>__GI___libc_malloc (21,063,189 samples, 0.21%)</title><rect x="4.6693%" y="1573" width="0.2095%" height="15" fill="rgb(207,181,40)" fg:x="469408212" fg:w="21063189"/><text x="4.9193%" y="1583.50"></text></g><g><title>_int_malloc (11,033,099 samples, 0.11%)</title><rect x="4.7690%" y="1557" width="0.1097%" height="15" fill="rgb(254,173,49)" fg:x="479438302" fg:w="11033099"/><text x="5.0190%" y="1567.50"></text></g><g><title>__GI___libc_malloc (17,051,153 samples, 0.17%)</title><rect x="4.8788%" y="1557" width="0.1696%" height="15" fill="rgb(221,1,38)" fg:x="490471401" fg:w="17051153"/><text x="5.1288%" y="1567.50"></text></g><g><title>_int_malloc (12,036,108 samples, 0.12%)</title><rect x="4.9287%" y="1541" width="0.1197%" height="15" fill="rgb(206,124,46)" fg:x="495486446" fg:w="12036108"/><text x="5.1787%" y="1551.50"></text></g><g><title>__rdl_alloc (2,006,018 samples, 0.02%)</title><rect x="5.0484%" y="1557" width="0.0200%" height="15" fill="rgb(249,21,11)" fg:x="507522554" fg:w="2006018"/><text x="5.2984%" y="1567.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_reserve_one (41,123,369 samples, 0.41%)</title><rect x="4.6693%" y="1717" width="0.4091%" height="15" fill="rgb(222,201,40)" fg:x="469408212" fg:w="41123369"/><text x="4.9193%" y="1727.50"></text></g><g><title>alloc::vec::from_elem (20,060,180 samples, 0.20%)</title><rect x="4.8788%" y="1701" width="0.1995%" height="15" fill="rgb(235,61,29)" fg:x="490471401" fg:w="20060180"/><text x="5.1288%" y="1711.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (20,060,180 samples, 0.20%)</title><rect x="4.8788%" y="1685" width="0.1995%" height="15" fill="rgb(219,207,3)" fg:x="490471401" fg:w="20060180"/><text x="5.1288%" y="1695.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (20,060,180 samples, 0.20%)</title><rect x="4.8788%" y="1669" width="0.1995%" height="15" fill="rgb(222,56,46)" fg:x="490471401" fg:w="20060180"/><text x="5.1288%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (20,060,180 samples, 0.20%)</title><rect x="4.8788%" y="1653" width="0.1995%" height="15" fill="rgb(239,76,54)" fg:x="490471401" fg:w="20060180"/><text x="5.1288%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (20,060,180 samples, 0.20%)</title><rect x="4.8788%" y="1637" width="0.1995%" height="15" fill="rgb(231,124,27)" fg:x="490471401" fg:w="20060180"/><text x="5.1288%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (20,060,180 samples, 0.20%)</title><rect x="4.8788%" y="1621" width="0.1995%" height="15" fill="rgb(249,195,6)" fg:x="490471401" fg:w="20060180"/><text x="5.1288%" y="1631.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (20,060,180 samples, 0.20%)</title><rect x="4.8788%" y="1605" width="0.1995%" height="15" fill="rgb(237,174,47)" fg:x="490471401" fg:w="20060180"/><text x="5.1288%" y="1615.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (20,060,180 samples, 0.20%)</title><rect x="4.8788%" y="1589" width="0.1995%" height="15" fill="rgb(206,201,31)" fg:x="490471401" fg:w="20060180"/><text x="5.1288%" y="1599.50"></text></g><g><title>alloc::alloc::alloc (20,060,180 samples, 0.20%)</title><rect x="4.8788%" y="1573" width="0.1995%" height="15" fill="rgb(231,57,52)" fg:x="490471401" fg:w="20060180"/><text x="5.1288%" y="1583.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,006,018 samples, 0.02%)</title><rect x="5.1083%" y="1637" width="0.0200%" height="15" fill="rgb(248,177,22)" fg:x="513540608" fg:w="2006018"/><text x="5.3583%" y="1647.50"></text></g><g><title>h2::frame::headers::HeaderBlock::load::{{closure}} (68,204,612 samples, 0.68%)</title><rect x="4.4897%" y="1797" width="0.6784%" height="15" fill="rgb(215,211,37)" fg:x="451354050" fg:w="68204612"/><text x="4.7397%" y="1807.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::append (68,204,612 samples, 0.68%)</title><rect x="4.4897%" y="1781" width="0.6784%" height="15" fill="rgb(241,128,51)" fg:x="451354050" fg:w="68204612"/><text x="4.7397%" y="1791.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_append (68,204,612 samples, 0.68%)</title><rect x="4.4897%" y="1765" width="0.6784%" height="15" fill="rgb(227,165,31)" fg:x="451354050" fg:w="68204612"/><text x="4.7397%" y="1775.50"></text></g><g><title>&lt;http::header::name::HeaderName as http::header::map::into_header_name::Sealed&gt;::try_append (68,204,612 samples, 0.68%)</title><rect x="4.4897%" y="1749" width="0.6784%" height="15" fill="rgb(228,167,24)" fg:x="451354050" fg:w="68204612"/><text x="4.7397%" y="1759.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_append2 (68,204,612 samples, 0.68%)</title><rect x="4.4897%" y="1733" width="0.6784%" height="15" fill="rgb(228,143,12)" fg:x="451354050" fg:w="68204612"/><text x="4.7397%" y="1743.50"></text></g><g><title>http::header::map::hash_elem_using (9,027,081 samples, 0.09%)</title><rect x="5.0783%" y="1717" width="0.0898%" height="15" fill="rgb(249,149,8)" fg:x="510531581" fg:w="9027081"/><text x="5.3283%" y="1727.50"></text></g><g><title>&lt;http::header::name::HeaderName as core::hash::Hash&gt;::hash (9,027,081 samples, 0.09%)</title><rect x="5.0783%" y="1701" width="0.0898%" height="15" fill="rgb(243,35,44)" fg:x="510531581" fg:w="9027081"/><text x="5.3283%" y="1711.50"></text></g><g><title>&lt;http::header::name::Repr&lt;T&gt; as core::hash::Hash&gt;::hash (9,027,081 samples, 0.09%)</title><rect x="5.0783%" y="1685" width="0.0898%" height="15" fill="rgb(246,89,9)" fg:x="510531581" fg:w="9027081"/><text x="5.3283%" y="1695.50"></text></g><g><title>&lt;http::header::name::Custom as core::hash::Hash&gt;::hash (7,021,063 samples, 0.07%)</title><rect x="5.0983%" y="1669" width="0.0698%" height="15" fill="rgb(233,213,13)" fg:x="512537599" fg:w="7021063"/><text x="5.3483%" y="1679.50"></text></g><g><title>&lt;fnv::FnvHasher as core::hash::Hasher&gt;::write (7,021,063 samples, 0.07%)</title><rect x="5.0983%" y="1653" width="0.0698%" height="15" fill="rgb(233,141,41)" fg:x="512537599" fg:w="7021063"/><text x="5.3483%" y="1663.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (4,012,036 samples, 0.04%)</title><rect x="5.1282%" y="1637" width="0.0399%" height="15" fill="rgb(239,167,4)" fg:x="515546626" fg:w="4012036"/><text x="5.3782%" y="1647.50"></text></g><g><title>&lt;h2::codec::Codec&lt;T,B&gt; as futures_core::stream::Stream&gt;::poll_next (70,210,630 samples, 0.70%)</title><rect x="4.4897%" y="1893" width="0.6984%" height="15" fill="rgb(209,217,16)" fg:x="451354050" fg:w="70210630"/><text x="4.7397%" y="1903.50"></text></g><g><title>&lt;h2::codec::framed_read::FramedRead&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (70,210,630 samples, 0.70%)</title><rect x="4.4897%" y="1877" width="0.6984%" height="15" fill="rgb(219,88,35)" fg:x="451354050" fg:w="70210630"/><text x="4.7397%" y="1887.50"></text></g><g><title>h2::codec::framed_read::decode_frame (70,210,630 samples, 0.70%)</title><rect x="4.4897%" y="1861" width="0.6984%" height="15" fill="rgb(220,193,23)" fg:x="451354050" fg:w="70210630"/><text x="4.7397%" y="1871.50"></text></g><g><title>h2::frame::headers::Headers::load_hpack (70,210,630 samples, 0.70%)</title><rect x="4.4897%" y="1845" width="0.6984%" height="15" fill="rgb(230,90,52)" fg:x="451354050" fg:w="70210630"/><text x="4.7397%" y="1855.50"></text></g><g><title>h2::frame::headers::HeaderBlock::load (70,210,630 samples, 0.70%)</title><rect x="4.4897%" y="1829" width="0.6984%" height="15" fill="rgb(252,106,19)" fg:x="451354050" fg:w="70210630"/><text x="4.7397%" y="1839.50"></text></g><g><title>h2::hpack::decoder::Decoder::decode (70,210,630 samples, 0.70%)</title><rect x="4.4897%" y="1813" width="0.6984%" height="15" fill="rgb(206,74,20)" fg:x="451354050" fg:w="70210630"/><text x="4.7397%" y="1823.50"></text></g><g><title>h2::hpack::decoder::Decoder::decode_literal (2,006,018 samples, 0.02%)</title><rect x="5.1681%" y="1797" width="0.0200%" height="15" fill="rgb(230,138,44)" fg:x="519558662" fg:w="2006018"/><text x="5.4181%" y="1807.50"></text></g><g><title>h2::hpack::decoder::Decoder::decode_string (2,006,018 samples, 0.02%)</title><rect x="5.1681%" y="1781" width="0.0200%" height="15" fill="rgb(235,182,43)" fg:x="519558662" fg:w="2006018"/><text x="5.4181%" y="1791.50"></text></g><g><title>h2::hpack::decoder::Decoder::try_decode_string (2,006,018 samples, 0.02%)</title><rect x="5.1681%" y="1765" width="0.0200%" height="15" fill="rgb(242,16,51)" fg:x="519558662" fg:w="2006018"/><text x="5.4181%" y="1775.50"></text></g><g><title>h2::hpack::huffman::decode (2,006,018 samples, 0.02%)</title><rect x="5.1681%" y="1749" width="0.0200%" height="15" fill="rgb(248,9,4)" fg:x="519558662" fg:w="2006018"/><text x="5.4181%" y="1759.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve (2,006,018 samples, 0.02%)</title><rect x="5.1681%" y="1733" width="0.0200%" height="15" fill="rgb(210,31,22)" fg:x="519558662" fg:w="2006018"/><text x="5.4181%" y="1743.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (2,006,018 samples, 0.02%)</title><rect x="5.1681%" y="1717" width="0.0200%" height="15" fill="rgb(239,54,39)" fg:x="519558662" fg:w="2006018"/><text x="5.4181%" y="1727.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2,006,018 samples, 0.02%)</title><rect x="5.1681%" y="1701" width="0.0200%" height="15" fill="rgb(230,99,41)" fg:x="519558662" fg:w="2006018"/><text x="5.4181%" y="1711.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,006,018 samples, 0.02%)</title><rect x="5.1681%" y="1685" width="0.0200%" height="15" fill="rgb(253,106,12)" fg:x="519558662" fg:w="2006018"/><text x="5.4181%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,006,018 samples, 0.02%)</title><rect x="5.1681%" y="1669" width="0.0200%" height="15" fill="rgb(213,46,41)" fg:x="519558662" fg:w="2006018"/><text x="5.4181%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,006,018 samples, 0.02%)</title><rect x="5.1681%" y="1653" width="0.0200%" height="15" fill="rgb(215,133,35)" fg:x="519558662" fg:w="2006018"/><text x="5.4181%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,006,018 samples, 0.02%)</title><rect x="5.1681%" y="1637" width="0.0200%" height="15" fill="rgb(213,28,5)" fg:x="519558662" fg:w="2006018"/><text x="5.4181%" y="1647.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,006,018 samples, 0.02%)</title><rect x="5.1681%" y="1621" width="0.0200%" height="15" fill="rgb(215,77,49)" fg:x="519558662" fg:w="2006018"/><text x="5.4181%" y="1631.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,006,018 samples, 0.02%)</title><rect x="5.1681%" y="1605" width="0.0200%" height="15" fill="rgb(248,100,22)" fg:x="519558662" fg:w="2006018"/><text x="5.4181%" y="1615.50"></text></g><g><title>alloc::alloc::alloc (2,006,018 samples, 0.02%)</title><rect x="5.1681%" y="1589" width="0.0200%" height="15" fill="rgb(208,67,9)" fg:x="519558662" fg:w="2006018"/><text x="5.4181%" y="1599.50"></text></g><g><title>__GI___libc_malloc (2,006,018 samples, 0.02%)</title><rect x="5.1681%" y="1573" width="0.0200%" height="15" fill="rgb(219,133,21)" fg:x="519558662" fg:w="2006018"/><text x="5.4181%" y="1583.50"></text></g><g><title>_int_malloc (2,006,018 samples, 0.02%)</title><rect x="5.1681%" y="1557" width="0.0200%" height="15" fill="rgb(246,46,29)" fg:x="519558662" fg:w="2006018"/><text x="5.4181%" y="1567.50"></text></g><g><title>malloc_consolidate (2,006,018 samples, 0.02%)</title><rect x="5.1681%" y="1541" width="0.0200%" height="15" fill="rgb(246,185,52)" fg:x="519558662" fg:w="2006018"/><text x="5.4181%" y="1551.50"></text></g><g><title>bytes::bytes_mut::increment_shared (4,012,036 samples, 0.04%)</title><rect x="5.3876%" y="1717" width="0.0399%" height="15" fill="rgb(252,136,11)" fg:x="541624860" fg:w="4012036"/><text x="5.6376%" y="1727.50"></text></g><g><title>&lt;h2::hpack::header::BytesStr as core::clone::Clone&gt;::clone (6,018,054 samples, 0.06%)</title><rect x="5.3776%" y="1765" width="0.0599%" height="15" fill="rgb(219,138,53)" fg:x="540621851" fg:w="6018054"/><text x="5.6276%" y="1775.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (6,018,054 samples, 0.06%)</title><rect x="5.3776%" y="1749" width="0.0599%" height="15" fill="rgb(211,51,23)" fg:x="540621851" fg:w="6018054"/><text x="5.6276%" y="1759.50"></text></g><g><title>bytes::bytes_mut::shared_v_clone (6,018,054 samples, 0.06%)</title><rect x="5.3776%" y="1733" width="0.0599%" height="15" fill="rgb(247,221,28)" fg:x="540621851" fg:w="6018054"/><text x="5.6276%" y="1743.50"></text></g><g><title>__memcpy_evex_unaligned_erms (8,024,072 samples, 0.08%)</title><rect x="5.4375%" y="1765" width="0.0798%" height="15" fill="rgb(251,222,45)" fg:x="546639905" fg:w="8024072"/><text x="5.6875%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;http::uri::scheme::Scheme&gt;&gt; (3,009,027 samples, 0.03%)</title><rect x="5.5173%" y="1765" width="0.0299%" height="15" fill="rgb(217,162,53)" fg:x="554663977" fg:w="3009027"/><text x="5.7673%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;h2::hpack::header::BytesStr&gt; (4,012,036 samples, 0.04%)</title><rect x="5.5472%" y="1765" width="0.0399%" height="15" fill="rgb(229,93,14)" fg:x="557673004" fg:w="4012036"/><text x="5.7972%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (4,012,036 samples, 0.04%)</title><rect x="5.5472%" y="1749" width="0.0399%" height="15" fill="rgb(209,67,49)" fg:x="557673004" fg:w="4012036"/><text x="5.7972%" y="1759.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (4,012,036 samples, 0.04%)</title><rect x="5.5472%" y="1733" width="0.0399%" height="15" fill="rgb(213,87,29)" fg:x="557673004" fg:w="4012036"/><text x="5.7972%" y="1743.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (2,006,018 samples, 0.02%)</title><rect x="5.5672%" y="1717" width="0.0200%" height="15" fill="rgb(205,151,52)" fg:x="559679022" fg:w="2006018"/><text x="5.8172%" y="1727.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (2,006,018 samples, 0.02%)</title><rect x="5.5672%" y="1701" width="0.0200%" height="15" fill="rgb(253,215,39)" fg:x="559679022" fg:w="2006018"/><text x="5.8172%" y="1711.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop::{{closure}} (2,006,018 samples, 0.02%)</title><rect x="5.5672%" y="1685" width="0.0200%" height="15" fill="rgb(221,220,41)" fg:x="559679022" fg:w="2006018"/><text x="5.8172%" y="1695.50"></text></g><g><title>bytes::bytes_mut::release_shared (2,006,018 samples, 0.02%)</title><rect x="5.5672%" y="1669" width="0.0200%" height="15" fill="rgb(218,133,21)" fg:x="559679022" fg:w="2006018"/><text x="5.8172%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (4,012,036 samples, 0.04%)</title><rect x="5.5871%" y="1765" width="0.0399%" height="15" fill="rgb(221,193,43)" fg:x="561685040" fg:w="4012036"/><text x="5.8371%" y="1775.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::or_else (4,012,036 samples, 0.04%)</title><rect x="5.6271%" y="1765" width="0.0399%" height="15" fill="rgb(240,128,52)" fg:x="565697076" fg:w="4012036"/><text x="5.8771%" y="1775.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (2,006,018 samples, 0.02%)</title><rect x="5.6670%" y="1765" width="0.0200%" height="15" fill="rgb(253,114,12)" fg:x="569709112" fg:w="2006018"/><text x="5.9170%" y="1775.50"></text></g><g><title>&lt;http::uri::scheme::Scheme as core::str::traits::FromStr&gt;::from_str (2,006,018 samples, 0.02%)</title><rect x="5.6670%" y="1749" width="0.0200%" height="15" fill="rgb(215,223,47)" fg:x="569709112" fg:w="2006018"/><text x="5.9170%" y="1759.50"></text></g><g><title>&lt;http::uri::scheme::Scheme as core::convert::TryFrom&lt;&amp;str&gt;&gt;::try_from (2,006,018 samples, 0.02%)</title><rect x="5.6670%" y="1733" width="0.0200%" height="15" fill="rgb(248,225,23)" fg:x="569709112" fg:w="2006018"/><text x="5.9170%" y="1743.50"></text></g><g><title>&lt;http::uri::scheme::Scheme as core::convert::TryFrom&lt;&amp;[u8]&gt;&gt;::try_from (2,006,018 samples, 0.02%)</title><rect x="5.6670%" y="1717" width="0.0200%" height="15" fill="rgb(250,108,0)" fg:x="569709112" fg:w="2006018"/><text x="5.9170%" y="1727.50"></text></g><g><title>http::uri::scheme::Scheme2&lt;usize&gt;::parse_exact (2,006,018 samples, 0.02%)</title><rect x="5.6670%" y="1701" width="0.0200%" height="15" fill="rgb(228,208,7)" fg:x="569709112" fg:w="2006018"/><text x="5.9170%" y="1711.50"></text></g><g><title>http::request::Builder::method (3,009,027 samples, 0.03%)</title><rect x="5.6969%" y="1765" width="0.0299%" height="15" fill="rgb(244,45,10)" fg:x="572718139" fg:w="3009027"/><text x="5.9469%" y="1775.50"></text></g><g><title>http::request::Builder::and_then (3,009,027 samples, 0.03%)</title><rect x="5.6969%" y="1749" width="0.0299%" height="15" fill="rgb(207,125,25)" fg:x="572718139" fg:w="3009027"/><text x="5.9469%" y="1759.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (2,006,018 samples, 0.02%)</title><rect x="5.7069%" y="1733" width="0.0200%" height="15" fill="rgb(210,195,18)" fg:x="573721148" fg:w="2006018"/><text x="5.9569%" y="1743.50"></text></g><g><title>http::request::Builder::method::{{closure}} (2,006,018 samples, 0.02%)</title><rect x="5.7069%" y="1717" width="0.0200%" height="15" fill="rgb(249,80,12)" fg:x="573721148" fg:w="2006018"/><text x="5.9569%" y="1727.50"></text></g><g><title>__memcpy_evex_unaligned_erms (5,015,045 samples, 0.05%)</title><rect x="5.7368%" y="1733" width="0.0499%" height="15" fill="rgb(221,65,9)" fg:x="576730175" fg:w="5015045"/><text x="5.9868%" y="1743.50"></text></g><g><title>__memcpy_evex_unaligned_erms (2,006,018 samples, 0.02%)</title><rect x="5.8066%" y="1717" width="0.0200%" height="15" fill="rgb(235,49,36)" fg:x="583751238" fg:w="2006018"/><text x="6.0566%" y="1727.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (8,024,072 samples, 0.08%)</title><rect x="5.8466%" y="1701" width="0.0798%" height="15" fill="rgb(225,32,20)" fg:x="587763274" fg:w="8024072"/><text x="6.0966%" y="1711.50"></text></g><g><title>&lt;http::uri::Uri as core::convert::TryFrom&lt;http::uri::Parts&gt;&gt;::try_from (8,024,072 samples, 0.08%)</title><rect x="5.8466%" y="1685" width="0.0798%" height="15" fill="rgb(215,141,46)" fg:x="587763274" fg:w="8024072"/><text x="6.0966%" y="1695.50"></text></g><g><title>http::uri::Uri::from_parts (8,024,072 samples, 0.08%)</title><rect x="5.8466%" y="1669" width="0.0798%" height="15" fill="rgb(250,160,47)" fg:x="587763274" fg:w="8024072"/><text x="6.0966%" y="1679.50"></text></g><g><title>__memcpy_evex_unaligned_erms (3,009,027 samples, 0.03%)</title><rect x="5.9264%" y="1701" width="0.0299%" height="15" fill="rgb(216,222,40)" fg:x="595787346" fg:w="3009027"/><text x="6.1764%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::uri::Uri&gt; (4,012,036 samples, 0.04%)</title><rect x="5.9563%" y="1701" width="0.0399%" height="15" fill="rgb(234,217,39)" fg:x="598796373" fg:w="4012036"/><text x="6.2063%" y="1711.50"></text></g><g><title>http::request::Builder::uri (32,096,288 samples, 0.32%)</title><rect x="5.7268%" y="1765" width="0.3193%" height="15" fill="rgb(207,178,40)" fg:x="575727166" fg:w="32096288"/><text x="5.9768%" y="1775.50"></text></g><g><title>http::request::Builder::and_then (32,096,288 samples, 0.32%)</title><rect x="5.7268%" y="1749" width="0.3193%" height="15" fill="rgb(221,136,13)" fg:x="575727166" fg:w="32096288"/><text x="5.9768%" y="1759.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (26,078,234 samples, 0.26%)</title><rect x="5.7867%" y="1733" width="0.2594%" height="15" fill="rgb(249,199,10)" fg:x="581745220" fg:w="26078234"/><text x="6.0367%" y="1743.50"></text></g><g><title>http::request::Builder::uri::{{closure}} (22,066,198 samples, 0.22%)</title><rect x="5.8266%" y="1717" width="0.2195%" height="15" fill="rgb(249,222,13)" fg:x="585757256" fg:w="22066198"/><text x="6.0766%" y="1727.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (5,015,045 samples, 0.05%)</title><rect x="5.9962%" y="1701" width="0.0499%" height="15" fill="rgb(244,185,38)" fg:x="602808409" fg:w="5015045"/><text x="6.2462%" y="1711.50"></text></g><g><title>__memcpy_evex_unaligned_erms (2,006,018 samples, 0.02%)</title><rect x="6.0561%" y="1733" width="0.0200%" height="15" fill="rgb(236,202,9)" fg:x="608826463" fg:w="2006018"/><text x="6.3061%" y="1743.50"></text></g><g><title>http::request::Builder::version (5,015,045 samples, 0.05%)</title><rect x="6.0461%" y="1765" width="0.0499%" height="15" fill="rgb(250,229,37)" fg:x="607823454" fg:w="5015045"/><text x="6.2961%" y="1775.50"></text></g><g><title>http::request::Builder::and_then (4,012,036 samples, 0.04%)</title><rect x="6.0561%" y="1749" width="0.0399%" height="15" fill="rgb(206,174,23)" fg:x="608826463" fg:w="4012036"/><text x="6.3061%" y="1759.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (2,006,018 samples, 0.02%)</title><rect x="6.0760%" y="1733" width="0.0200%" height="15" fill="rgb(211,33,43)" fg:x="610832481" fg:w="2006018"/><text x="6.3260%" y="1743.50"></text></g><g><title>__memcpy_evex_unaligned_erms (2,006,018 samples, 0.02%)</title><rect x="6.0760%" y="1717" width="0.0200%" height="15" fill="rgb(245,58,50)" fg:x="610832481" fg:w="2006018"/><text x="6.3260%" y="1727.50"></text></g><g><title>__memcpy_evex_unaligned_erms (5,015,045 samples, 0.05%)</title><rect x="6.1060%" y="1717" width="0.0499%" height="15" fill="rgb(244,68,36)" fg:x="613841508" fg:w="5015045"/><text x="6.3560%" y="1727.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (8,024,072 samples, 0.08%)</title><rect x="6.1957%" y="1685" width="0.0798%" height="15" fill="rgb(232,229,15)" fg:x="622868589" fg:w="8024072"/><text x="6.4457%" y="1695.50"></text></g><g><title>&lt;http::header::map::HeaderMap&lt;T&gt; as core::default::Default&gt;::default (10,030,090 samples, 0.10%)</title><rect x="6.1957%" y="1701" width="0.0998%" height="15" fill="rgb(254,30,23)" fg:x="622868589" fg:w="10030090"/><text x="6.4457%" y="1711.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_with_capacity (2,006,018 samples, 0.02%)</title><rect x="6.2756%" y="1685" width="0.0200%" height="15" fill="rgb(235,160,14)" fg:x="630892661" fg:w="2006018"/><text x="6.5256%" y="1695.50"></text></g><g><title>http::request::Request&lt;()&gt;::builder (21,063,189 samples, 0.21%)</title><rect x="6.0960%" y="1765" width="0.2095%" height="15" fill="rgb(212,155,44)" fg:x="612838499" fg:w="21063189"/><text x="6.3460%" y="1775.50"></text></g><g><title>http::request::Builder::new (21,063,189 samples, 0.21%)</title><rect x="6.0960%" y="1749" width="0.2095%" height="15" fill="rgb(226,2,50)" fg:x="612838499" fg:w="21063189"/><text x="6.3460%" y="1759.50"></text></g><g><title>&lt;http::request::Builder as core::default::Default&gt;::default (21,063,189 samples, 0.21%)</title><rect x="6.0960%" y="1733" width="0.2095%" height="15" fill="rgb(234,177,6)" fg:x="612838499" fg:w="21063189"/><text x="6.3460%" y="1743.50"></text></g><g><title>http::request::Parts::new (15,045,135 samples, 0.15%)</title><rect x="6.1558%" y="1717" width="0.1497%" height="15" fill="rgb(217,24,9)" fg:x="618856553" fg:w="15045135"/><text x="6.4058%" y="1727.50"></text></g><g><title>http::uri::authority::Authority::from_maybe_shared (16,048,144 samples, 0.16%)</title><rect x="6.3055%" y="1765" width="0.1596%" height="15" fill="rgb(220,13,46)" fg:x="633901688" fg:w="16048144"/><text x="6.5555%" y="1775.50"></text></g><g><title>http::uri::authority::Authority::from_shared (14,042,126 samples, 0.14%)</title><rect x="6.3255%" y="1749" width="0.1397%" height="15" fill="rgb(239,221,27)" fg:x="635907706" fg:w="14042126"/><text x="6.5755%" y="1759.50"></text></g><g><title>http::uri::authority::create_authority (12,036,108 samples, 0.12%)</title><rect x="6.3454%" y="1733" width="0.1197%" height="15" fill="rgb(222,198,25)" fg:x="637913724" fg:w="12036108"/><text x="6.5954%" y="1743.50"></text></g><g><title>http::uri::authority::Authority::parse_non_empty (11,033,099 samples, 0.11%)</title><rect x="6.3554%" y="1717" width="0.1097%" height="15" fill="rgb(211,99,13)" fg:x="638916733" fg:w="11033099"/><text x="6.6054%" y="1727.50"></text></g><g><title>http::uri::authority::Authority::parse (10,030,090 samples, 0.10%)</title><rect x="6.3654%" y="1701" width="0.0998%" height="15" fill="rgb(232,111,31)" fg:x="639919742" fg:w="10030090"/><text x="6.6154%" y="1711.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,006,018 samples, 0.02%)</title><rect x="6.4452%" y="1685" width="0.0200%" height="15" fill="rgb(245,82,37)" fg:x="647943814" fg:w="2006018"/><text x="6.6952%" y="1695.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (2,006,018 samples, 0.02%)</title><rect x="6.6547%" y="1733" width="0.0200%" height="15" fill="rgb(227,149,46)" fg:x="669007003" fg:w="2006018"/><text x="6.9047%" y="1743.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,006,018 samples, 0.02%)</title><rect x="6.6547%" y="1717" width="0.0200%" height="15" fill="rgb(218,36,50)" fg:x="669007003" fg:w="2006018"/><text x="6.9047%" y="1727.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,006,018 samples, 0.02%)</title><rect x="6.6547%" y="1701" width="0.0200%" height="15" fill="rgb(226,80,48)" fg:x="669007003" fg:w="2006018"/><text x="6.9047%" y="1711.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2,006,018 samples, 0.02%)</title><rect x="6.6547%" y="1685" width="0.0200%" height="15" fill="rgb(238,224,15)" fg:x="669007003" fg:w="2006018"/><text x="6.9047%" y="1695.50"></text></g><g><title>h2::proto::connection::Connection&lt;T,P,B&gt;::poll2 (220,661,980 samples, 2.19%)</title><rect x="4.4897%" y="1909" width="2.1950%" height="15" fill="rgb(241,136,10)" fg:x="451354050" fg:w="220661980"/><text x="4.7397%" y="1919.50">h..</text></g><g><title>h2::proto::connection::DynConnection&lt;B&gt;::recv_frame (150,451,350 samples, 1.50%)</title><rect x="5.1881%" y="1893" width="1.4966%" height="15" fill="rgb(208,32,45)" fg:x="521564680" fg:w="150451350"/><text x="5.4381%" y="1903.50"></text></g><g><title>h2::proto::streams::streams::DynStreams&lt;B&gt;::recv_headers (150,451,350 samples, 1.50%)</title><rect x="5.1881%" y="1877" width="1.4966%" height="15" fill="rgb(207,135,9)" fg:x="521564680" fg:w="150451350"/><text x="5.4381%" y="1887.50"></text></g><g><title>h2::proto::streams::streams::Inner::recv_headers (150,451,350 samples, 1.50%)</title><rect x="5.1881%" y="1861" width="1.4966%" height="15" fill="rgb(206,86,44)" fg:x="521564680" fg:w="150451350"/><text x="5.4381%" y="1871.50"></text></g><g><title>h2::proto::streams::counts::Counts::transition (150,451,350 samples, 1.50%)</title><rect x="5.1881%" y="1845" width="1.4966%" height="15" fill="rgb(245,177,15)" fg:x="521564680" fg:w="150451350"/><text x="5.4381%" y="1855.50"></text></g><g><title>h2::proto::streams::streams::Inner::recv_headers::{{closure}} (150,451,350 samples, 1.50%)</title><rect x="5.1881%" y="1829" width="1.4966%" height="15" fill="rgb(206,64,50)" fg:x="521564680" fg:w="150451350"/><text x="5.4381%" y="1839.50"></text></g><g><title>h2::proto::streams::recv::Recv::recv_headers (150,451,350 samples, 1.50%)</title><rect x="5.1881%" y="1813" width="1.4966%" height="15" fill="rgb(234,36,40)" fg:x="521564680" fg:w="150451350"/><text x="5.4381%" y="1823.50"></text></g><g><title>h2::proto::peer::Dyn::convert_poll_message (150,451,350 samples, 1.50%)</title><rect x="5.1881%" y="1797" width="1.4966%" height="15" fill="rgb(213,64,8)" fg:x="521564680" fg:w="150451350"/><text x="5.4381%" y="1807.50"></text></g><g><title>&lt;h2::server::Peer as h2::proto::peer::Peer&gt;::convert_poll_message (150,451,350 samples, 1.50%)</title><rect x="5.1881%" y="1781" width="1.4966%" height="15" fill="rgb(210,75,36)" fg:x="521564680" fg:w="150451350"/><text x="5.4381%" y="1791.50"></text></g><g><title>http::uri::path::PathAndQuery::from_maybe_shared (22,066,198 samples, 0.22%)</title><rect x="6.4651%" y="1765" width="0.2195%" height="15" fill="rgb(229,88,21)" fg:x="649949832" fg:w="22066198"/><text x="6.7151%" y="1775.50"></text></g><g><title>http::uri::path::PathAndQuery::from_shared (20,060,180 samples, 0.20%)</title><rect x="6.4851%" y="1749" width="0.1995%" height="15" fill="rgb(252,204,47)" fg:x="651955850" fg:w="20060180"/><text x="6.7351%" y="1759.50"></text></g><g><title>&lt;http::header::map::IntoIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (29,087,261 samples, 0.29%)</title><rect x="6.7345%" y="1733" width="0.2893%" height="15" fill="rgb(208,77,27)" fg:x="677031075" fg:w="29087261"/><text x="6.9845%" y="1743.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,009,027 samples, 0.03%)</title><rect x="6.9939%" y="1717" width="0.0299%" height="15" fill="rgb(221,76,26)" fg:x="703109309" fg:w="3009027"/><text x="7.2439%" y="1727.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::read (2,006,018 samples, 0.02%)</title><rect x="7.0039%" y="1701" width="0.0200%" height="15" fill="rgb(225,139,18)" fg:x="704112318" fg:w="2006018"/><text x="7.2539%" y="1711.50"></text></g><g><title>core::ptr::read (2,006,018 samples, 0.02%)</title><rect x="7.0039%" y="1685" width="0.0200%" height="15" fill="rgb(230,137,11)" fg:x="704112318" fg:w="2006018"/><text x="7.2539%" y="1695.50"></text></g><g><title>__memcpy_evex_unaligned_erms (7,021,063 samples, 0.07%)</title><rect x="7.0238%" y="1733" width="0.0698%" height="15" fill="rgb(212,28,1)" fg:x="706118336" fg:w="7021063"/><text x="7.2738%" y="1743.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2,006,018 samples, 0.02%)</title><rect x="7.0937%" y="1733" width="0.0200%" height="15" fill="rgb(248,164,17)" fg:x="713139399" fg:w="2006018"/><text x="7.3437%" y="1743.50"></text></g><g><title>core::ptr::read (7,021,063 samples, 0.07%)</title><rect x="7.1136%" y="1701" width="0.0698%" height="15" fill="rgb(222,171,42)" fg:x="715145417" fg:w="7021063"/><text x="7.3636%" y="1711.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (10,030,090 samples, 0.10%)</title><rect x="7.1136%" y="1733" width="0.0998%" height="15" fill="rgb(243,84,45)" fg:x="715145417" fg:w="10030090"/><text x="7.3636%" y="1743.50"></text></g><g><title>core::mem::replace (10,030,090 samples, 0.10%)</title><rect x="7.1136%" y="1717" width="0.0998%" height="15" fill="rgb(252,49,23)" fg:x="715145417" fg:w="10030090"/><text x="7.3636%" y="1727.50"></text></g><g><title>core::ptr::write (3,009,027 samples, 0.03%)</title><rect x="7.1835%" y="1701" width="0.0299%" height="15" fill="rgb(215,19,7)" fg:x="722166480" fg:w="3009027"/><text x="7.4335%" y="1711.50"></text></g><g><title>&lt;h2::frame::headers::Iter as core::iter::traits::iterator::Iterator&gt;::next (58,174,522 samples, 0.58%)</title><rect x="6.6846%" y="1749" width="0.5787%" height="15" fill="rgb(238,81,41)" fg:x="672016030" fg:w="58174522"/><text x="6.9346%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;h2::frame::headers::Pseudo&gt;&gt; (5,015,045 samples, 0.05%)</title><rect x="7.2134%" y="1733" width="0.0499%" height="15" fill="rgb(210,199,37)" fg:x="725175507" fg:w="5015045"/><text x="7.4634%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;h2::frame::headers::Pseudo&gt; (4,012,036 samples, 0.04%)</title><rect x="7.2234%" y="1717" width="0.0399%" height="15" fill="rgb(244,192,49)" fg:x="726178516" fg:w="4012036"/><text x="7.4734%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;h2::ext::Protocol&gt;&gt; (4,012,036 samples, 0.04%)</title><rect x="7.2234%" y="1701" width="0.0399%" height="15" fill="rgb(226,211,11)" fg:x="726178516" fg:w="4012036"/><text x="7.4734%" y="1711.50"></text></g><g><title>__free (7,021,063 samples, 0.07%)</title><rect x="7.2633%" y="1717" width="0.0698%" height="15" fill="rgb(236,162,54)" fg:x="730190552" fg:w="7021063"/><text x="7.5133%" y="1727.50"></text></g><g><title>_int_free (2,006,018 samples, 0.02%)</title><rect x="7.3132%" y="1701" width="0.0200%" height="15" fill="rgb(220,229,9)" fg:x="735205597" fg:w="2006018"/><text x="7.5632%" y="1711.50"></text></g><g><title>bytes::bytes::promotable_even_drop (8,024,072 samples, 0.08%)</title><rect x="7.3331%" y="1717" width="0.0798%" height="15" fill="rgb(250,87,22)" fg:x="737211615" fg:w="8024072"/><text x="7.5831%" y="1727.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (8,024,072 samples, 0.08%)</title><rect x="7.3331%" y="1701" width="0.0798%" height="15" fill="rgb(239,43,17)" fg:x="737211615" fg:w="8024072"/><text x="7.5831%" y="1711.50"></text></g><g><title>bytes::bytes::promotable_even_drop::{{closure}} (8,024,072 samples, 0.08%)</title><rect x="7.3331%" y="1685" width="0.0798%" height="15" fill="rgb(231,177,25)" fg:x="737211615" fg:w="8024072"/><text x="7.5831%" y="1695.50"></text></g><g><title>bytes::bytes::free_boxed_slice (6,018,054 samples, 0.06%)</title><rect x="7.3531%" y="1669" width="0.0599%" height="15" fill="rgb(219,179,1)" fg:x="739217633" fg:w="6018054"/><text x="7.6031%" y="1679.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align (5,015,045 samples, 0.05%)</title><rect x="7.3631%" y="1653" width="0.0499%" height="15" fill="rgb(238,219,53)" fg:x="740220642" fg:w="5015045"/><text x="7.6131%" y="1663.50"></text></g><g><title>core::alloc::layout::Layout::is_size_align_valid (5,015,045 samples, 0.05%)</title><rect x="7.3631%" y="1637" width="0.0499%" height="15" fill="rgb(232,167,36)" fg:x="740220642" fg:w="5015045"/><text x="7.6131%" y="1647.50"></text></g><g><title>bytes::bytes::shared_drop (2,006,018 samples, 0.02%)</title><rect x="7.4130%" y="1717" width="0.0200%" height="15" fill="rgb(244,19,51)" fg:x="745235687" fg:w="2006018"/><text x="7.6630%" y="1727.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (2,006,018 samples, 0.02%)</title><rect x="7.4130%" y="1701" width="0.0200%" height="15" fill="rgb(224,6,22)" fg:x="745235687" fg:w="2006018"/><text x="7.6630%" y="1711.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (2,006,018 samples, 0.02%)</title><rect x="7.4130%" y="1685" width="0.0200%" height="15" fill="rgb(224,145,5)" fg:x="745235687" fg:w="2006018"/><text x="7.6630%" y="1695.50"></text></g><g><title>bytes::bytes::release_shared (2,006,018 samples, 0.02%)</title><rect x="7.4130%" y="1669" width="0.0200%" height="15" fill="rgb(234,130,49)" fg:x="745235687" fg:w="2006018"/><text x="7.6630%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;h2::hpack::table::Index&gt;&gt; (22,066,198 samples, 0.22%)</title><rect x="7.2633%" y="1749" width="0.2195%" height="15" fill="rgb(254,6,2)" fg:x="730190552" fg:w="22066198"/><text x="7.5133%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;h2::hpack::table::Index&gt; (22,066,198 samples, 0.22%)</title><rect x="7.2633%" y="1733" width="0.2195%" height="15" fill="rgb(208,96,46)" fg:x="730190552" fg:w="22066198"/><text x="7.5133%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;h2::hpack::header::Header&gt; (5,015,045 samples, 0.05%)</title><rect x="7.4329%" y="1717" width="0.0499%" height="15" fill="rgb(239,3,39)" fg:x="747241705" fg:w="5015045"/><text x="7.6829%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::value::HeaderValue&gt; (3,009,027 samples, 0.03%)</title><rect x="7.4529%" y="1701" width="0.0299%" height="15" fill="rgb(233,210,1)" fg:x="749247723" fg:w="3009027"/><text x="7.7029%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (3,009,027 samples, 0.03%)</title><rect x="7.4529%" y="1685" width="0.0299%" height="15" fill="rgb(244,137,37)" fg:x="749247723" fg:w="3009027"/><text x="7.7029%" y="1695.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (3,009,027 samples, 0.03%)</title><rect x="7.4529%" y="1669" width="0.0299%" height="15" fill="rgb(240,136,2)" fg:x="749247723" fg:w="3009027"/><text x="7.7029%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;h2::frame::headers::Iter&gt; (2,006,018 samples, 0.02%)</title><rect x="7.4828%" y="1749" width="0.0200%" height="15" fill="rgb(239,18,37)" fg:x="752256750" fg:w="2006018"/><text x="7.7328%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;h2::frame::headers::Pseudo&gt;&gt; (2,006,018 samples, 0.02%)</title><rect x="7.4828%" y="1733" width="0.0200%" height="15" fill="rgb(218,185,22)" fg:x="752256750" fg:w="2006018"/><text x="7.7328%" y="1743.50"></text></g><g><title>&lt;http::header::map::IntoIter&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8,024,072 samples, 0.08%)</title><rect x="7.5027%" y="1733" width="0.0798%" height="15" fill="rgb(225,218,4)" fg:x="754262768" fg:w="8024072"/><text x="7.7527%" y="1743.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (2,006,018 samples, 0.02%)</title><rect x="7.5925%" y="1701" width="0.0200%" height="15" fill="rgb(230,182,32)" fg:x="763289849" fg:w="2006018"/><text x="7.8425%" y="1711.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (2,006,018 samples, 0.02%)</title><rect x="7.5925%" y="1685" width="0.0200%" height="15" fill="rgb(242,56,43)" fg:x="763289849" fg:w="2006018"/><text x="7.8425%" y="1695.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (2,006,018 samples, 0.02%)</title><rect x="7.5925%" y="1669" width="0.0200%" height="15" fill="rgb(233,99,24)" fg:x="763289849" fg:w="2006018"/><text x="7.8425%" y="1679.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (2,006,018 samples, 0.02%)</title><rect x="7.5925%" y="1653" width="0.0200%" height="15" fill="rgb(234,209,42)" fg:x="763289849" fg:w="2006018"/><text x="7.8425%" y="1663.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::sub_ptr (2,006,018 samples, 0.02%)</title><rect x="7.5925%" y="1637" width="0.0200%" height="15" fill="rgb(227,7,12)" fg:x="763289849" fg:w="2006018"/><text x="7.8425%" y="1647.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub_ptr (2,006,018 samples, 0.02%)</title><rect x="7.5925%" y="1621" width="0.0200%" height="15" fill="rgb(245,203,43)" fg:x="763289849" fg:w="2006018"/><text x="7.8425%" y="1631.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (2,006,018 samples, 0.02%)</title><rect x="7.5925%" y="1605" width="0.0200%" height="15" fill="rgb(238,205,33)" fg:x="763289849" fg:w="2006018"/><text x="7.8425%" y="1615.50"></text></g><g><title>__free (22,066,198 samples, 0.22%)</title><rect x="7.6324%" y="1589" width="0.2195%" height="15" fill="rgb(231,56,7)" fg:x="767301885" fg:w="22066198"/><text x="7.8824%" y="1599.50"></text></g><g><title>_int_free (19,057,171 samples, 0.19%)</title><rect x="7.6624%" y="1573" width="0.1896%" height="15" fill="rgb(244,186,29)" fg:x="770310912" fg:w="19057171"/><text x="7.9124%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;http::header::map::Bucket&lt;http::header::value::HeaderValue&gt;,alloc::alloc::Global&gt;&gt; (25,075,225 samples, 0.25%)</title><rect x="7.6125%" y="1701" width="0.2494%" height="15" fill="rgb(234,111,31)" fg:x="765295867" fg:w="25075225"/><text x="7.8625%" y="1711.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25,075,225 samples, 0.25%)</title><rect x="7.6125%" y="1685" width="0.2494%" height="15" fill="rgb(241,149,10)" fg:x="765295867" fg:w="25075225"/><text x="7.8625%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;http::header::map::Bucket&lt;http::header::value::HeaderValue&gt;&gt;&gt; (23,069,207 samples, 0.23%)</title><rect x="7.6324%" y="1669" width="0.2295%" height="15" fill="rgb(249,206,44)" fg:x="767301885" fg:w="23069207"/><text x="7.8824%" y="1679.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23,069,207 samples, 0.23%)</title><rect x="7.6324%" y="1653" width="0.2295%" height="15" fill="rgb(251,153,30)" fg:x="767301885" fg:w="23069207"/><text x="7.8824%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (23,069,207 samples, 0.23%)</title><rect x="7.6324%" y="1637" width="0.2295%" height="15" fill="rgb(239,152,38)" fg:x="767301885" fg:w="23069207"/><text x="7.8824%" y="1647.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (23,069,207 samples, 0.23%)</title><rect x="7.6324%" y="1621" width="0.2295%" height="15" fill="rgb(249,139,47)" fg:x="767301885" fg:w="23069207"/><text x="7.8824%" y="1631.50"></text></g><g><title>alloc::alloc::dealloc (23,069,207 samples, 0.23%)</title><rect x="7.6324%" y="1605" width="0.2295%" height="15" fill="rgb(244,64,35)" fg:x="767301885" fg:w="23069207"/><text x="7.8824%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::map::IntoIter&lt;http::header::value::HeaderValue&gt;&gt; (40,120,360 samples, 0.40%)</title><rect x="7.5027%" y="1749" width="0.3991%" height="15" fill="rgb(216,46,15)" fg:x="754262768" fg:w="40120360"/><text x="7.7527%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;http::header::map::Bucket&lt;http::header::value::HeaderValue&gt;&gt;&gt; (32,096,288 samples, 0.32%)</title><rect x="7.5826%" y="1733" width="0.3193%" height="15" fill="rgb(250,74,19)" fg:x="762286840" fg:w="32096288"/><text x="7.8326%" y="1743.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (32,096,288 samples, 0.32%)</title><rect x="7.5826%" y="1717" width="0.3193%" height="15" fill="rgb(249,42,33)" fg:x="762286840" fg:w="32096288"/><text x="7.8326%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;[http::header::map::Bucket&lt;http::header::value::HeaderValue&gt;]&gt; (4,012,036 samples, 0.04%)</title><rect x="7.8619%" y="1701" width="0.0399%" height="15" fill="rgb(242,149,17)" fg:x="790371092" fg:w="4012036"/><text x="8.1119%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (2,006,018 samples, 0.02%)</title><rect x="7.9018%" y="1749" width="0.0200%" height="15" fill="rgb(244,29,21)" fg:x="794383128" fg:w="2006018"/><text x="8.1518%" y="1759.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (2,006,018 samples, 0.02%)</title><rect x="7.9018%" y="1733" width="0.0200%" height="15" fill="rgb(220,130,37)" fg:x="794383128" fg:w="2006018"/><text x="8.1518%" y="1743.50"></text></g><g><title>tracing::span::Span::do_exit (2,006,018 samples, 0.02%)</title><rect x="7.9018%" y="1717" width="0.0200%" height="15" fill="rgb(211,67,2)" fg:x="794383128" fg:w="2006018"/><text x="8.1518%" y="1727.50"></text></g><g><title>tracing::span::Span::log (2,006,018 samples, 0.02%)</title><rect x="7.9018%" y="1701" width="0.0200%" height="15" fill="rgb(235,68,52)" fg:x="794383128" fg:w="2006018"/><text x="8.1518%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (2,006,018 samples, 0.02%)</title><rect x="7.9218%" y="1749" width="0.0200%" height="15" fill="rgb(246,142,3)" fg:x="796389146" fg:w="2006018"/><text x="8.1718%" y="1759.50"></text></g><g><title>__GI___libc_malloc (12,036,108 samples, 0.12%)</title><rect x="8.0515%" y="1541" width="0.1197%" height="15" fill="rgb(241,25,7)" fg:x="809428263" fg:w="12036108"/><text x="8.3015%" y="1551.50"></text></g><g><title>alloc::raw_vec::finish_grow (15,045,135 samples, 0.15%)</title><rect x="8.0415%" y="1557" width="0.1497%" height="15" fill="rgb(242,119,39)" fg:x="808425254" fg:w="15045135"/><text x="8.2915%" y="1567.50"></text></g><g><title>__rdl_alloc (2,006,018 samples, 0.02%)</title><rect x="8.1712%" y="1541" width="0.0200%" height="15" fill="rgb(241,98,45)" fg:x="821464371" fg:w="2006018"/><text x="8.4212%" y="1551.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2,006,018 samples, 0.02%)</title><rect x="8.1712%" y="1525" width="0.0200%" height="15" fill="rgb(254,28,30)" fg:x="821464371" fg:w="2006018"/><text x="8.4212%" y="1535.50"></text></g><g><title>alloc::raw_vec::layout_array (2,006,018 samples, 0.02%)</title><rect x="8.1912%" y="1557" width="0.0200%" height="15" fill="rgb(241,142,54)" fg:x="823470389" fg:w="2006018"/><text x="8.4412%" y="1567.50"></text></g><g><title>core::alloc::layout::Layout::repeat (2,006,018 samples, 0.02%)</title><rect x="8.1912%" y="1541" width="0.0200%" height="15" fill="rgb(222,85,15)" fg:x="823470389" fg:w="2006018"/><text x="8.4412%" y="1551.50"></text></g><g><title>core::alloc::layout::Layout::pad_to_align (2,006,018 samples, 0.02%)</title><rect x="8.1912%" y="1525" width="0.0200%" height="15" fill="rgb(210,85,47)" fg:x="823470389" fg:w="2006018"/><text x="8.4412%" y="1535.50"></text></g><g><title>core::alloc::layout::Layout::size_rounded_up_to_custom_align (2,006,018 samples, 0.02%)</title><rect x="8.1912%" y="1509" width="0.0200%" height="15" fill="rgb(224,206,25)" fg:x="823470389" fg:w="2006018"/><text x="8.4412%" y="1519.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (24,072,216 samples, 0.24%)</title><rect x="7.9816%" y="1637" width="0.2394%" height="15" fill="rgb(243,201,19)" fg:x="802407200" fg:w="24072216"/><text x="8.2316%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (24,072,216 samples, 0.24%)</title><rect x="7.9816%" y="1621" width="0.2394%" height="15" fill="rgb(236,59,4)" fg:x="802407200" fg:w="24072216"/><text x="8.2316%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (24,072,216 samples, 0.24%)</title><rect x="7.9816%" y="1605" width="0.2394%" height="15" fill="rgb(254,179,45)" fg:x="802407200" fg:w="24072216"/><text x="8.2316%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (23,069,207 samples, 0.23%)</title><rect x="7.9916%" y="1589" width="0.2295%" height="15" fill="rgb(226,14,10)" fg:x="803410209" fg:w="23069207"/><text x="8.2416%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (23,069,207 samples, 0.23%)</title><rect x="7.9916%" y="1573" width="0.2295%" height="15" fill="rgb(244,27,41)" fg:x="803410209" fg:w="23069207"/><text x="8.2416%" y="1583.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve (27,081,243 samples, 0.27%)</title><rect x="7.9617%" y="1669" width="0.2694%" height="15" fill="rgb(235,35,32)" fg:x="800401182" fg:w="27081243"/><text x="8.2117%" y="1679.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (27,081,243 samples, 0.27%)</title><rect x="7.9617%" y="1653" width="0.2694%" height="15" fill="rgb(218,68,31)" fg:x="800401182" fg:w="27081243"/><text x="8.2117%" y="1663.50"></text></g><g><title>h2::hpack::encoder::encode_int (31,093,279 samples, 0.31%)</title><rect x="7.9417%" y="1733" width="0.3093%" height="15" fill="rgb(207,120,37)" fg:x="798395164" fg:w="31093279"/><text x="8.1917%" y="1743.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_u8 (31,093,279 samples, 0.31%)</title><rect x="7.9417%" y="1717" width="0.3093%" height="15" fill="rgb(227,98,0)" fg:x="798395164" fg:w="31093279"/><text x="8.1917%" y="1727.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (31,093,279 samples, 0.31%)</title><rect x="7.9417%" y="1701" width="0.3093%" height="15" fill="rgb(207,7,3)" fg:x="798395164" fg:w="31093279"/><text x="8.1917%" y="1711.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (29,087,261 samples, 0.29%)</title><rect x="7.9617%" y="1685" width="0.2893%" height="15" fill="rgb(206,98,19)" fg:x="800401182" fg:w="29087261"/><text x="8.2117%" y="1695.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,006,018 samples, 0.02%)</title><rect x="8.2311%" y="1669" width="0.0200%" height="15" fill="rgb(217,5,26)" fg:x="827482425" fg:w="2006018"/><text x="8.4811%" y="1679.50"></text></g><g><title>__memcpy_evex_unaligned_erms (2,006,018 samples, 0.02%)</title><rect x="8.2311%" y="1653" width="0.0200%" height="15" fill="rgb(235,190,38)" fg:x="827482425" fg:w="2006018"/><text x="8.4811%" y="1663.50"></text></g><g><title>h2::hpack::encoder::encode_int (6,018,054 samples, 0.06%)</title><rect x="8.2510%" y="1717" width="0.0599%" height="15" fill="rgb(247,86,24)" fg:x="829488443" fg:w="6018054"/><text x="8.5010%" y="1727.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_u8 (5,015,045 samples, 0.05%)</title><rect x="8.2610%" y="1701" width="0.0499%" height="15" fill="rgb(205,101,16)" fg:x="830491452" fg:w="5015045"/><text x="8.5110%" y="1711.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (5,015,045 samples, 0.05%)</title><rect x="8.2610%" y="1685" width="0.0499%" height="15" fill="rgb(246,168,33)" fg:x="830491452" fg:w="5015045"/><text x="8.5110%" y="1695.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (4,012,036 samples, 0.04%)</title><rect x="8.2710%" y="1669" width="0.0399%" height="15" fill="rgb(231,114,1)" fg:x="831494461" fg:w="4012036"/><text x="8.5210%" y="1679.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4,012,036 samples, 0.04%)</title><rect x="8.2710%" y="1653" width="0.0399%" height="15" fill="rgb(207,184,53)" fg:x="831494461" fg:w="4012036"/><text x="8.5210%" y="1663.50"></text></g><g><title>__memcpy_evex_unaligned_erms (4,012,036 samples, 0.04%)</title><rect x="8.2710%" y="1637" width="0.0399%" height="15" fill="rgb(224,95,51)" fg:x="831494461" fg:w="4012036"/><text x="8.5210%" y="1647.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_u8 (4,012,036 samples, 0.04%)</title><rect x="8.3209%" y="1701" width="0.0399%" height="15" fill="rgb(212,188,45)" fg:x="836509506" fg:w="4012036"/><text x="8.5709%" y="1711.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (4,012,036 samples, 0.04%)</title><rect x="8.3209%" y="1685" width="0.0399%" height="15" fill="rgb(223,154,38)" fg:x="836509506" fg:w="4012036"/><text x="8.5709%" y="1695.50"></text></g><g><title>h2::hpack::encoder::Encoder::encode_header (49,147,441 samples, 0.49%)</title><rect x="7.9417%" y="1749" width="0.4889%" height="15" fill="rgb(251,22,52)" fg:x="798395164" fg:w="49147441"/><text x="8.1917%" y="1759.50"></text></g><g><title>h2::hpack::encoder::encode_not_indexed (18,054,162 samples, 0.18%)</title><rect x="8.2510%" y="1733" width="0.1796%" height="15" fill="rgb(229,209,22)" fg:x="829488443" fg:w="18054162"/><text x="8.5010%" y="1743.50"></text></g><g><title>h2::hpack::encoder::encode_str (12,036,108 samples, 0.12%)</title><rect x="8.3109%" y="1717" width="0.1197%" height="15" fill="rgb(234,138,34)" fg:x="835506497" fg:w="12036108"/><text x="8.5609%" y="1727.50"></text></g><g><title>h2::hpack::huffman::encode (7,021,063 samples, 0.07%)</title><rect x="8.3608%" y="1701" width="0.0698%" height="15" fill="rgb(212,95,11)" fg:x="840521542" fg:w="7021063"/><text x="8.6108%" y="1711.50"></text></g><g><title>h2::hpack::header::Header::len (5,015,045 samples, 0.05%)</title><rect x="8.4306%" y="1733" width="0.0499%" height="15" fill="rgb(240,179,47)" fg:x="847542605" fg:w="5015045"/><text x="8.6806%" y="1743.50"></text></g><g><title>h2::hpack::header::len (5,015,045 samples, 0.05%)</title><rect x="8.4306%" y="1717" width="0.0499%" height="15" fill="rgb(240,163,11)" fg:x="847542605" fg:w="5015045"/><text x="8.6806%" y="1727.50"></text></g><g><title>&lt;http::header::name::HeaderName as core::borrow::Borrow&lt;str&gt;&gt;::borrow (5,015,045 samples, 0.05%)</title><rect x="8.4306%" y="1701" width="0.0499%" height="15" fill="rgb(236,37,12)" fg:x="847542605" fg:w="5015045"/><text x="8.6806%" y="1711.50"></text></g><g><title>http::header::name::HeaderName::as_str (4,012,036 samples, 0.04%)</title><rect x="8.4406%" y="1685" width="0.0399%" height="15" fill="rgb(232,164,16)" fg:x="848545614" fg:w="4012036"/><text x="8.6906%" y="1695.50"></text></g><g><title>http::header::name::StandardHeader::as_str (2,006,018 samples, 0.02%)</title><rect x="8.4605%" y="1669" width="0.0200%" height="15" fill="rgb(244,205,15)" fg:x="850551632" fg:w="2006018"/><text x="8.7105%" y="1679.50"></text></g><g><title>h2::hpack::header::Header::len (3,009,027 samples, 0.03%)</title><rect x="8.4805%" y="1717" width="0.0299%" height="15" fill="rgb(223,117,47)" fg:x="852557650" fg:w="3009027"/><text x="8.7305%" y="1727.50"></text></g><g><title>h2::hpack::header::len (3,009,027 samples, 0.03%)</title><rect x="8.4805%" y="1701" width="0.0299%" height="15" fill="rgb(244,107,35)" fg:x="852557650" fg:w="3009027"/><text x="8.7305%" y="1711.50"></text></g><g><title>&lt;http::header::name::HeaderName as core::borrow::Borrow&lt;str&gt;&gt;::borrow (3,009,027 samples, 0.03%)</title><rect x="8.4805%" y="1685" width="0.0299%" height="15" fill="rgb(205,140,8)" fg:x="852557650" fg:w="3009027"/><text x="8.7305%" y="1695.50"></text></g><g><title>http::header::name::HeaderName::as_str (3,009,027 samples, 0.03%)</title><rect x="8.4805%" y="1669" width="0.0299%" height="15" fill="rgb(228,84,46)" fg:x="852557650" fg:w="3009027"/><text x="8.7305%" y="1679.50"></text></g><g><title>http::header::name::StandardHeader::as_str (3,009,027 samples, 0.03%)</title><rect x="8.4805%" y="1653" width="0.0299%" height="15" fill="rgb(254,188,9)" fg:x="852557650" fg:w="3009027"/><text x="8.7305%" y="1663.50"></text></g><g><title>h2::hpack::table::Table::index (69,207,621 samples, 0.69%)</title><rect x="8.4306%" y="1749" width="0.6884%" height="15" fill="rgb(206,112,54)" fg:x="847542605" fg:w="69207621"/><text x="8.6806%" y="1759.50"></text></g><g><title>h2::hpack::table::Table::index_dynamic (64,192,576 samples, 0.64%)</title><rect x="8.4805%" y="1733" width="0.6385%" height="15" fill="rgb(216,84,49)" fg:x="852557650" fg:w="64192576"/><text x="8.7305%" y="1743.50"></text></g><g><title>h2::hpack::table::Table::index_occupied (61,183,549 samples, 0.61%)</title><rect x="8.5104%" y="1717" width="0.6086%" height="15" fill="rgb(214,194,35)" fg:x="855566677" fg:w="61183549"/><text x="8.7604%" y="1727.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::cmp::PartialEq&gt;::eq (61,183,549 samples, 0.61%)</title><rect x="8.5104%" y="1701" width="0.6086%" height="15" fill="rgb(249,28,3)" fg:x="855566677" fg:w="61183549"/><text x="8.7604%" y="1711.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (61,183,549 samples, 0.61%)</title><rect x="8.5104%" y="1685" width="0.6086%" height="15" fill="rgb(222,56,52)" fg:x="855566677" fg:w="61183549"/><text x="8.7604%" y="1695.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (61,183,549 samples, 0.61%)</title><rect x="8.5104%" y="1669" width="0.6086%" height="15" fill="rgb(245,217,50)" fg:x="855566677" fg:w="61183549"/><text x="8.7604%" y="1679.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (61,183,549 samples, 0.61%)</title><rect x="8.5104%" y="1653" width="0.6086%" height="15" fill="rgb(213,201,24)" fg:x="855566677" fg:w="61183549"/><text x="8.7604%" y="1663.50"></text></g><g><title>__memcmp_evex_movbe (61,183,549 samples, 0.61%)</title><rect x="8.5104%" y="1637" width="0.6086%" height="15" fill="rgb(248,116,28)" fg:x="855566677" fg:w="61183549"/><text x="8.7604%" y="1647.50"></text></g><g><title>tracing::span::Span::log (2,006,018 samples, 0.02%)</title><rect x="9.1490%" y="1733" width="0.0200%" height="15" fill="rgb(219,72,43)" fg:x="919759253" fg:w="2006018"/><text x="9.3990%" y="1743.50"></text></g><g><title>&lt;hyper_util::server::conn::auto::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (472,417,239 samples, 4.70%)</title><rect x="4.4897%" y="2021" width="4.6992%" height="15" fill="rgb(209,138,14)" fg:x="451354050" fg:w="472417239"/><text x="4.7397%" y="2031.50">&lt;hype..</text></g><g><title>&lt;hyper::server::conn::http2::Connection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (472,417,239 samples, 4.70%)</title><rect x="4.4897%" y="2005" width="4.6992%" height="15" fill="rgb(222,18,33)" fg:x="451354050" fg:w="472417239"/><text x="4.7397%" y="2015.50">&lt;hype..</text></g><g><title>&lt;hyper::proto::h2::server::Server&lt;T,S,B,E&gt; as core::future::future::Future&gt;::poll (472,417,239 samples, 4.70%)</title><rect x="4.4897%" y="1989" width="4.6992%" height="15" fill="rgb(213,199,7)" fg:x="451354050" fg:w="472417239"/><text x="4.7397%" y="1999.50">&lt;hype..</text></g><g><title>hyper::proto::h2::server::Serving&lt;T,B&gt;::poll_server (472,417,239 samples, 4.70%)</title><rect x="4.4897%" y="1973" width="4.6992%" height="15" fill="rgb(250,110,10)" fg:x="451354050" fg:w="472417239"/><text x="4.7397%" y="1983.50">hyper..</text></g><g><title>h2::server::Connection&lt;T,B&gt;::poll_accept (472,417,239 samples, 4.70%)</title><rect x="4.4897%" y="1957" width="4.6992%" height="15" fill="rgb(248,123,6)" fg:x="451354050" fg:w="472417239"/><text x="4.7397%" y="1967.50">h2::s..</text></g><g><title>h2::server::Connection&lt;T,B&gt;::poll_closed (472,417,239 samples, 4.70%)</title><rect x="4.4897%" y="1941" width="4.6992%" height="15" fill="rgb(206,91,31)" fg:x="451354050" fg:w="472417239"/><text x="4.7397%" y="1951.50">h2::s..</text></g><g><title>h2::proto::connection::Connection&lt;T,P,B&gt;::poll (472,417,239 samples, 4.70%)</title><rect x="4.4897%" y="1925" width="4.6992%" height="15" fill="rgb(211,154,13)" fg:x="451354050" fg:w="472417239"/><text x="4.7397%" y="1935.50">h2::p..</text></g><g><title>h2::proto::streams::streams::Streams&lt;B,P&gt;::poll_complete (251,755,259 samples, 2.50%)</title><rect x="6.6846%" y="1909" width="2.5042%" height="15" fill="rgb(225,148,7)" fg:x="672016030" fg:w="251755259"/><text x="6.9346%" y="1919.50">h2..</text></g><g><title>h2::proto::streams::streams::Inner::poll_complete (251,755,259 samples, 2.50%)</title><rect x="6.6846%" y="1893" width="2.5042%" height="15" fill="rgb(220,160,43)" fg:x="672016030" fg:w="251755259"/><text x="6.9346%" y="1903.50">h2..</text></g><g><title>h2::proto::streams::send::Send::poll_complete (251,755,259 samples, 2.50%)</title><rect x="6.6846%" y="1877" width="2.5042%" height="15" fill="rgb(213,52,39)" fg:x="672016030" fg:w="251755259"/><text x="6.9346%" y="1887.50">h2..</text></g><g><title>h2::proto::streams::prioritize::Prioritize::poll_complete (251,755,259 samples, 2.50%)</title><rect x="6.6846%" y="1861" width="2.5042%" height="15" fill="rgb(243,137,7)" fg:x="672016030" fg:w="251755259"/><text x="6.9346%" y="1871.50">h2..</text></g><g><title>h2::codec::Codec&lt;T,B&gt;::buffer (251,755,259 samples, 2.50%)</title><rect x="6.6846%" y="1845" width="2.5042%" height="15" fill="rgb(230,79,13)" fg:x="672016030" fg:w="251755259"/><text x="6.9346%" y="1855.50">h2..</text></g><g><title>h2::codec::framed_write::FramedWrite&lt;T,B&gt;::buffer (251,755,259 samples, 2.50%)</title><rect x="6.6846%" y="1829" width="2.5042%" height="15" fill="rgb(247,105,23)" fg:x="672016030" fg:w="251755259"/><text x="6.9346%" y="1839.50">h2..</text></g><g><title>h2::codec::framed_write::Encoder&lt;B&gt;::buffer (251,755,259 samples, 2.50%)</title><rect x="6.6846%" y="1813" width="2.5042%" height="15" fill="rgb(223,179,41)" fg:x="672016030" fg:w="251755259"/><text x="6.9346%" y="1823.50">h2..</text></g><g><title>h2::frame::headers::Headers::encode (251,755,259 samples, 2.50%)</title><rect x="6.6846%" y="1797" width="2.5042%" height="15" fill="rgb(218,9,34)" fg:x="672016030" fg:w="251755259"/><text x="6.9346%" y="1807.50">h2..</text></g><g><title>h2::frame::headers::HeaderBlock::into_encoding (251,755,259 samples, 2.50%)</title><rect x="6.6846%" y="1781" width="2.5042%" height="15" fill="rgb(222,106,8)" fg:x="672016030" fg:w="251755259"/><text x="6.9346%" y="1791.50">h2..</text></g><g><title>h2::hpack::encoder::Encoder::encode (251,755,259 samples, 2.50%)</title><rect x="6.6846%" y="1765" width="2.5042%" height="15" fill="rgb(211,220,0)" fg:x="672016030" fg:w="251755259"/><text x="6.9346%" y="1775.50">h2..</text></g><g><title>tracing::span::Span::record_all (7,021,063 samples, 0.07%)</title><rect x="9.1190%" y="1749" width="0.0698%" height="15" fill="rgb(229,52,16)" fg:x="916750226" fg:w="7021063"/><text x="9.3690%" y="1759.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (3,009,027 samples, 0.03%)</title><rect x="9.1889%" y="2021" width="0.0299%" height="15" fill="rgb(212,155,18)" fg:x="923771289" fg:w="3009027"/><text x="9.4389%" y="2031.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}} (3,009,027 samples, 0.03%)</title><rect x="9.1889%" y="2005" width="0.0299%" height="15" fill="rgb(242,21,14)" fg:x="923771289" fg:w="3009027"/><text x="9.4389%" y="2015.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (3,009,027 samples, 0.03%)</title><rect x="9.1889%" y="1989" width="0.0299%" height="15" fill="rgb(222,19,48)" fg:x="923771289" fg:w="3009027"/><text x="9.4389%" y="1999.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (3,009,027 samples, 0.03%)</title><rect x="9.1889%" y="1973" width="0.0299%" height="15" fill="rgb(232,45,27)" fg:x="923771289" fg:w="3009027"/><text x="9.4389%" y="1983.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}} (3,009,027 samples, 0.03%)</title><rect x="9.1889%" y="1957" width="0.0299%" height="15" fill="rgb(249,103,42)" fg:x="923771289" fg:w="3009027"/><text x="9.4389%" y="1967.50"></text></g><g><title>tokio::runtime::context::set_scheduler (3,009,027 samples, 0.03%)</title><rect x="9.1889%" y="1941" width="0.0299%" height="15" fill="rgb(246,81,33)" fg:x="923771289" fg:w="3009027"/><text x="9.4389%" y="1951.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,009,027 samples, 0.03%)</title><rect x="9.1889%" y="1925" width="0.0299%" height="15" fill="rgb(252,33,42)" fg:x="923771289" fg:w="3009027"/><text x="9.4389%" y="1935.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,009,027 samples, 0.03%)</title><rect x="9.1889%" y="1909" width="0.0299%" height="15" fill="rgb(209,212,41)" fg:x="923771289" fg:w="3009027"/><text x="9.4389%" y="1919.50"></text></g><g><title>tokio::runtime::context::set_scheduler::{{closure}} (3,009,027 samples, 0.03%)</title><rect x="9.1889%" y="1893" width="0.0299%" height="15" fill="rgb(207,154,6)" fg:x="923771289" fg:w="3009027"/><text x="9.4389%" y="1903.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (3,009,027 samples, 0.03%)</title><rect x="9.1889%" y="1877" width="0.0299%" height="15" fill="rgb(223,64,47)" fg:x="923771289" fg:w="3009027"/><text x="9.4389%" y="1887.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}}::{{closure}} (3,009,027 samples, 0.03%)</title><rect x="9.1889%" y="1861" width="0.0299%" height="15" fill="rgb(211,161,38)" fg:x="923771289" fg:w="3009027"/><text x="9.4389%" y="1871.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (3,009,027 samples, 0.03%)</title><rect x="9.1889%" y="1845" width="0.0299%" height="15" fill="rgb(219,138,40)" fg:x="923771289" fg:w="3009027"/><text x="9.4389%" y="1855.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (3,009,027 samples, 0.03%)</title><rect x="9.1889%" y="1829" width="0.0299%" height="15" fill="rgb(241,228,46)" fg:x="923771289" fg:w="3009027"/><text x="9.4389%" y="1839.50"></text></g><g><title>tokio::task::coop::budget (3,009,027 samples, 0.03%)</title><rect x="9.1889%" y="1813" width="0.0299%" height="15" fill="rgb(223,209,38)" fg:x="923771289" fg:w="3009027"/><text x="9.4389%" y="1823.50"></text></g><g><title>tokio::task::coop::with_budget (3,009,027 samples, 0.03%)</title><rect x="9.1889%" y="1797" width="0.0299%" height="15" fill="rgb(236,164,45)" fg:x="923771289" fg:w="3009027"/><text x="9.4389%" y="1807.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}} (3,009,027 samples, 0.03%)</title><rect x="9.1889%" y="1781" width="0.0299%" height="15" fill="rgb(231,15,5)" fg:x="923771289" fg:w="3009027"/><text x="9.4389%" y="1791.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (3,009,027 samples, 0.03%)</title><rect x="9.1889%" y="1765" width="0.0299%" height="15" fill="rgb(252,35,15)" fg:x="923771289" fg:w="3009027"/><text x="9.4389%" y="1775.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (3,009,027 samples, 0.03%)</title><rect x="9.1889%" y="1749" width="0.0299%" height="15" fill="rgb(248,181,18)" fg:x="923771289" fg:w="3009027"/><text x="9.4389%" y="1759.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (3,009,027 samples, 0.03%)</title><rect x="9.1889%" y="1733" width="0.0299%" height="15" fill="rgb(233,39,42)" fg:x="923771289" fg:w="3009027"/><text x="9.4389%" y="1743.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (3,009,027 samples, 0.03%)</title><rect x="9.1889%" y="1717" width="0.0299%" height="15" fill="rgb(238,110,33)" fg:x="923771289" fg:w="3009027"/><text x="9.4389%" y="1727.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (3,009,027 samples, 0.03%)</title><rect x="9.1889%" y="1701" width="0.0299%" height="15" fill="rgb(233,195,10)" fg:x="923771289" fg:w="3009027"/><text x="9.4389%" y="1711.50"></text></g><g><title>std::panic::catch_unwind (3,009,027 samples, 0.03%)</title><rect x="9.1889%" y="1685" width="0.0299%" height="15" fill="rgb(254,105,3)" fg:x="923771289" fg:w="3009027"/><text x="9.4389%" y="1695.50"></text></g><g><title>std::panicking::try (3,009,027 samples, 0.03%)</title><rect x="9.1889%" y="1669" width="0.0299%" height="15" fill="rgb(221,225,9)" fg:x="923771289" fg:w="3009027"/><text x="9.4389%" y="1679.50"></text></g><g><title>std::panicking::try::do_call (3,009,027 samples, 0.03%)</title><rect x="9.1889%" y="1653" width="0.0299%" height="15" fill="rgb(224,227,45)" fg:x="923771289" fg:w="3009027"/><text x="9.4389%" y="1663.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3,009,027 samples, 0.03%)</title><rect x="9.1889%" y="1637" width="0.0299%" height="15" fill="rgb(229,198,43)" fg:x="923771289" fg:w="3009027"/><text x="9.4389%" y="1647.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (3,009,027 samples, 0.03%)</title><rect x="9.1889%" y="1621" width="0.0299%" height="15" fill="rgb(206,209,35)" fg:x="923771289" fg:w="3009027"/><text x="9.4389%" y="1631.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (3,009,027 samples, 0.03%)</title><rect x="9.1889%" y="1605" width="0.0299%" height="15" fill="rgb(245,195,53)" fg:x="923771289" fg:w="3009027"/><text x="9.4389%" y="1615.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (3,009,027 samples, 0.03%)</title><rect x="9.1889%" y="1589" width="0.0299%" height="15" fill="rgb(240,92,26)" fg:x="923771289" fg:w="3009027"/><text x="9.4389%" y="1599.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (3,009,027 samples, 0.03%)</title><rect x="9.1889%" y="1573" width="0.0299%" height="15" fill="rgb(207,40,23)" fg:x="923771289" fg:w="3009027"/><text x="9.4389%" y="1583.50"></text></g><g><title>&lt;axum::serve::WithGracefulShutdown&lt;L,M,S,F&gt; as core::future::into_future::IntoFuture&gt;::into_future::{{closure}}::{{closure}} (3,009,027 samples, 0.03%)</title><rect x="9.1889%" y="1557" width="0.0299%" height="15" fill="rgb(223,111,35)" fg:x="923771289" fg:w="3009027"/><text x="9.4389%" y="1567.50"></text></g><g><title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (3,009,027 samples, 0.03%)</title><rect x="9.1889%" y="1541" width="0.0299%" height="15" fill="rgb(229,147,28)" fg:x="923771289" fg:w="3009027"/><text x="9.4389%" y="1551.50"></text></g><g><title>&lt;axum::serve::WithGracefulShutdown&lt;L,M,S,F&gt; as core::future::into_future::IntoFuture&gt;::into_future::{{closure}}::{{closure}}::{{closure}} (3,009,027 samples, 0.03%)</title><rect x="9.1889%" y="1525" width="0.0299%" height="15" fill="rgb(211,29,28)" fg:x="923771289" fg:w="3009027"/><text x="9.4389%" y="1535.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3,009,027 samples, 0.03%)</title><rect x="9.1889%" y="1509" width="0.0299%" height="15" fill="rgb(228,72,33)" fg:x="923771289" fg:w="3009027"/><text x="9.4389%" y="1519.50"></text></g><g><title>&lt;hyper_util::server::conn::auto::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (3,009,027 samples, 0.03%)</title><rect x="9.1889%" y="1493" width="0.0299%" height="15" fill="rgb(205,214,31)" fg:x="923771289" fg:w="3009027"/><text x="9.4389%" y="1503.50"></text></g><g><title>&lt;hyper::server::conn::http2::Connection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (3,009,027 samples, 0.03%)</title><rect x="9.1889%" y="1477" width="0.0299%" height="15" fill="rgb(224,111,15)" fg:x="923771289" fg:w="3009027"/><text x="9.4389%" y="1487.50"></text></g><g><title>&lt;hyper::proto::h2::server::Server&lt;T,S,B,E&gt; as core::future::future::Future&gt;::poll (3,009,027 samples, 0.03%)</title><rect x="9.1889%" y="1461" width="0.0299%" height="15" fill="rgb(253,21,26)" fg:x="923771289" fg:w="3009027"/><text x="9.4389%" y="1471.50"></text></g><g><title>hyper::proto::h2::server::Serving&lt;T,B&gt;::poll_server (3,009,027 samples, 0.03%)</title><rect x="9.1889%" y="1445" width="0.0299%" height="15" fill="rgb(245,139,43)" fg:x="923771289" fg:w="3009027"/><text x="9.4389%" y="1455.50"></text></g><g><title>&lt;E as hyper::rt::bounds::h2::Http2ServerConnExec&lt;F,B&gt;&gt;::execute_h2stream (3,009,027 samples, 0.03%)</title><rect x="9.1889%" y="1429" width="0.0299%" height="15" fill="rgb(252,170,7)" fg:x="923771289" fg:w="3009027"/><text x="9.4389%" y="1439.50"></text></g><g><title>&lt;hyper_util::rt::tokio::TokioExecutor as hyper::rt::Executor&lt;Fut&gt;&gt;::execute (3,009,027 samples, 0.03%)</title><rect x="9.1889%" y="1413" width="0.0299%" height="15" fill="rgb(231,118,14)" fg:x="923771289" fg:w="3009027"/><text x="9.4389%" y="1423.50"></text></g><g><title>tokio::task::spawn::spawn (3,009,027 samples, 0.03%)</title><rect x="9.1889%" y="1397" width="0.0299%" height="15" fill="rgb(238,83,0)" fg:x="923771289" fg:w="3009027"/><text x="9.4389%" y="1407.50"></text></g><g><title>tokio::task::spawn::spawn_inner (3,009,027 samples, 0.03%)</title><rect x="9.1889%" y="1381" width="0.0299%" height="15" fill="rgb(221,39,39)" fg:x="923771289" fg:w="3009027"/><text x="9.4389%" y="1391.50"></text></g><g><title>tokio::runtime::context::current::with_current (3,009,027 samples, 0.03%)</title><rect x="9.1889%" y="1365" width="0.0299%" height="15" fill="rgb(222,119,46)" fg:x="923771289" fg:w="3009027"/><text x="9.4389%" y="1375.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,009,027 samples, 0.03%)</title><rect x="9.1889%" y="1349" width="0.0299%" height="15" fill="rgb(222,165,49)" fg:x="923771289" fg:w="3009027"/><text x="9.4389%" y="1359.50"></text></g><g><title>tokio::runtime::context::current::with_current::{{closure}} (2,006,018 samples, 0.02%)</title><rect x="9.1988%" y="1333" width="0.0200%" height="15" fill="rgb(219,113,52)" fg:x="924774298" fg:w="2006018"/><text x="9.4488%" y="1343.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2,006,018 samples, 0.02%)</title><rect x="9.2388%" y="1365" width="0.0200%" height="15" fill="rgb(214,7,15)" fg:x="928786334" fg:w="2006018"/><text x="9.4888%" y="1375.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (2,006,018 samples, 0.02%)</title><rect x="9.2388%" y="1349" width="0.0200%" height="15" fill="rgb(235,32,4)" fg:x="928786334" fg:w="2006018"/><text x="9.4888%" y="1359.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (2,006,018 samples, 0.02%)</title><rect x="9.2388%" y="1333" width="0.0200%" height="15" fill="rgb(238,90,54)" fg:x="928786334" fg:w="2006018"/><text x="9.4888%" y="1343.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (5,015,045 samples, 0.05%)</title><rect x="9.2587%" y="1365" width="0.0499%" height="15" fill="rgb(213,208,19)" fg:x="930792352" fg:w="5015045"/><text x="9.5087%" y="1375.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (2,006,018 samples, 0.02%)</title><rect x="9.3585%" y="1349" width="0.0200%" height="15" fill="rgb(233,156,4)" fg:x="940822442" fg:w="2006018"/><text x="9.6085%" y="1359.50"></text></g><g><title>__floattidf (4,012,036 samples, 0.04%)</title><rect x="9.3784%" y="1349" width="0.0399%" height="15" fill="rgb(207,194,5)" fg:x="942828460" fg:w="4012036"/><text x="9.6284%" y="1359.50"></text></g><g><title>compiler_builtins::float::conv::__floattidf (3,009,027 samples, 0.03%)</title><rect x="9.3884%" y="1333" width="0.0299%" height="15" fill="rgb(206,111,30)" fg:x="943831469" fg:w="3009027"/><text x="9.6384%" y="1343.50"></text></g><g><title>compiler_builtins::float::conv::int_to_float::signed (3,009,027 samples, 0.03%)</title><rect x="9.3884%" y="1317" width="0.0299%" height="15" fill="rgb(243,70,54)" fg:x="943831469" fg:w="3009027"/><text x="9.6384%" y="1327.50"></text></g><g><title>core::ops::function::Fn::call (3,009,027 samples, 0.03%)</title><rect x="9.3884%" y="1301" width="0.0299%" height="15" fill="rgb(242,28,8)" fg:x="943831469" fg:w="3009027"/><text x="9.6384%" y="1311.50"></text></g><g><title>compiler_builtins::float::conv::int_to_float::u128_to_f64_bits (3,009,027 samples, 0.03%)</title><rect x="9.3884%" y="1285" width="0.0299%" height="15" fill="rgb(219,106,18)" fg:x="943831469" fg:w="3009027"/><text x="9.6384%" y="1295.50"></text></g><g><title>core::time::Duration::as_nanos (2,006,018 samples, 0.02%)</title><rect x="9.4183%" y="1349" width="0.0200%" height="15" fill="rgb(244,222,10)" fg:x="946840496" fg:w="2006018"/><text x="9.6683%" y="1359.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powf (28,084,252 samples, 0.28%)</title><rect x="9.4383%" y="1349" width="0.2794%" height="15" fill="rgb(236,179,52)" fg:x="948846514" fg:w="28084252"/><text x="9.6883%" y="1359.50"></text></g><g><title>pow (28,084,252 samples, 0.28%)</title><rect x="9.4383%" y="1333" width="0.2794%" height="15" fill="rgb(213,23,39)" fg:x="948846514" fg:w="28084252"/><text x="9.6883%" y="1343.50"></text></g><g><title>[libm.so.6] (23,069,207 samples, 0.23%)</title><rect x="9.4882%" y="1317" width="0.2295%" height="15" fill="rgb(238,48,10)" fg:x="953861559" fg:w="23069207"/><text x="9.7382%" y="1327.50"></text></g><g><title>[[vdso]] (11,033,099 samples, 0.11%)</title><rect x="9.8673%" y="1317" width="0.1097%" height="15" fill="rgb(251,196,23)" fg:x="991975901" fg:w="11033099"/><text x="10.1173%" y="1327.50"></text></g><g><title>[[vdso]] (6,018,054 samples, 0.06%)</title><rect x="9.9172%" y="1301" width="0.0599%" height="15" fill="rgb(250,152,24)" fg:x="996990946" fg:w="6018054"/><text x="10.1672%" y="1311.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (28,084,252 samples, 0.28%)</title><rect x="9.7176%" y="1349" width="0.2794%" height="15" fill="rgb(209,150,17)" fg:x="976930766" fg:w="28084252"/><text x="9.9676%" y="1359.50"></text></g><g><title>__clock_gettime_2 (25,075,225 samples, 0.25%)</title><rect x="9.7476%" y="1333" width="0.2494%" height="15" fill="rgb(234,202,34)" fg:x="979939793" fg:w="25075225"/><text x="9.9976%" y="1343.50"></text></g><g><title>__vdso_clock_gettime (2,006,018 samples, 0.02%)</title><rect x="9.9771%" y="1317" width="0.0200%" height="15" fill="rgb(253,148,53)" fg:x="1003009000" fg:w="2006018"/><text x="10.2271%" y="1327.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::end_processing_scheduled_tasks (69,207,621 samples, 0.69%)</title><rect x="9.3186%" y="1365" width="0.6884%" height="15" fill="rgb(218,129,16)" fg:x="936810406" fg:w="69207621"/><text x="9.5686%" y="1375.50"></text></g><g><title>[[vdso]] (12,036,108 samples, 0.12%)</title><rect x="10.0768%" y="1317" width="0.1197%" height="15" fill="rgb(216,85,19)" fg:x="1013039090" fg:w="12036108"/><text x="10.3268%" y="1327.50"></text></g><g><title>[[vdso]] (9,027,081 samples, 0.09%)</title><rect x="10.1068%" y="1301" width="0.0898%" height="15" fill="rgb(235,228,7)" fg:x="1016048117" fg:w="9027081"/><text x="10.3568%" y="1311.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (22,066,198 samples, 0.22%)</title><rect x="10.0070%" y="1349" width="0.2195%" height="15" fill="rgb(245,175,0)" fg:x="1006018027" fg:w="22066198"/><text x="10.2570%" y="1359.50"></text></g><g><title>__clock_gettime_2 (22,066,198 samples, 0.22%)</title><rect x="10.0070%" y="1333" width="0.2195%" height="15" fill="rgb(208,168,36)" fg:x="1006018027" fg:w="22066198"/><text x="10.2570%" y="1343.50"></text></g><g><title>__vdso_clock_gettime (3,009,027 samples, 0.03%)</title><rect x="10.1965%" y="1317" width="0.0299%" height="15" fill="rgb(246,171,24)" fg:x="1025075198" fg:w="3009027"/><text x="10.4465%" y="1327.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::start_processing_scheduled_tasks (24,072,216 samples, 0.24%)</title><rect x="10.0070%" y="1365" width="0.2394%" height="15" fill="rgb(215,142,24)" fg:x="1006018027" fg:w="24072216"/><text x="10.2570%" y="1375.50"></text></g><g><title>std::time::Instant::now (2,006,018 samples, 0.02%)</title><rect x="10.2265%" y="1349" width="0.0200%" height="15" fill="rgb(250,187,7)" fg:x="1028084225" fg:w="2006018"/><text x="10.4765%" y="1359.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (4,012,036 samples, 0.04%)</title><rect x="10.3462%" y="1349" width="0.0399%" height="15" fill="rgb(228,66,33)" fg:x="1040120333" fg:w="4012036"/><text x="10.5962%" y="1359.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (4,012,036 samples, 0.04%)</title><rect x="10.3462%" y="1333" width="0.0399%" height="15" fill="rgb(234,215,21)" fg:x="1040120333" fg:w="4012036"/><text x="10.5962%" y="1343.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (4,012,036 samples, 0.04%)</title><rect x="10.3462%" y="1317" width="0.0399%" height="15" fill="rgb(222,191,20)" fg:x="1040120333" fg:w="4012036"/><text x="10.5962%" y="1327.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powf (2,006,018 samples, 0.02%)</title><rect x="10.3861%" y="1333" width="0.0200%" height="15" fill="rgb(245,79,54)" fg:x="1044132369" fg:w="2006018"/><text x="10.6361%" y="1343.50"></text></g><g><title>pow (2,006,018 samples, 0.02%)</title><rect x="10.3861%" y="1317" width="0.0200%" height="15" fill="rgb(240,10,37)" fg:x="1044132369" fg:w="2006018"/><text x="10.6361%" y="1327.50"></text></g><g><title>[libm.so.6] (2,006,018 samples, 0.02%)</title><rect x="10.3861%" y="1301" width="0.0200%" height="15" fill="rgb(214,192,32)" fg:x="1044132369" fg:w="2006018"/><text x="10.6361%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::end_processing_scheduled_tasks (4,012,036 samples, 0.04%)</title><rect x="10.3861%" y="1349" width="0.0399%" height="15" fill="rgb(209,36,54)" fg:x="1044132369" fg:w="4012036"/><text x="10.6361%" y="1359.50"></text></g><g><title>tokio::runtime::driver::Handle::time (2,006,018 samples, 0.02%)</title><rect x="10.4460%" y="1301" width="0.0200%" height="15" fill="rgb(220,10,11)" fg:x="1050150423" fg:w="2006018"/><text x="10.6960%" y="1311.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (2,006,018 samples, 0.02%)</title><rect x="10.4460%" y="1285" width="0.0200%" height="15" fill="rgb(221,106,17)" fg:x="1050150423" fg:w="2006018"/><text x="10.6960%" y="1295.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (4,012,036 samples, 0.04%)</title><rect x="10.4659%" y="1301" width="0.0399%" height="15" fill="rgb(251,142,44)" fg:x="1052156441" fg:w="4012036"/><text x="10.7159%" y="1311.50"></text></g><g><title>mio::poll::Poll::poll (4,012,036 samples, 0.04%)</title><rect x="10.4659%" y="1285" width="0.0399%" height="15" fill="rgb(238,13,15)" fg:x="1052156441" fg:w="4012036"/><text x="10.7159%" y="1295.50"></text></g><g><title>mio::sys::unix::selector::Selector::select (4,012,036 samples, 0.04%)</title><rect x="10.4659%" y="1269" width="0.0399%" height="15" fill="rgb(208,107,27)" fg:x="1052156441" fg:w="4012036"/><text x="10.7159%" y="1279.50"></text></g><g><title>epoll_wait (4,012,036 samples, 0.04%)</title><rect x="10.4659%" y="1253" width="0.0399%" height="15" fill="rgb(205,136,37)" fg:x="1052156441" fg:w="4012036"/><text x="10.7159%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::time::wheel::Wheel&gt;&gt; (2,006,018 samples, 0.02%)</title><rect x="10.5058%" y="1093" width="0.0200%" height="15" fill="rgb(250,205,27)" fg:x="1056168477" fg:w="2006018"/><text x="10.7558%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::time::wheel::Wheel&gt;&gt; (2,006,018 samples, 0.02%)</title><rect x="10.5058%" y="1077" width="0.0200%" height="15" fill="rgb(210,80,43)" fg:x="1056168477" fg:w="2006018"/><text x="10.7558%" y="1087.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (2,006,018 samples, 0.02%)</title><rect x="10.5058%" y="1061" width="0.0200%" height="15" fill="rgb(247,160,36)" fg:x="1056168477" fg:w="2006018"/><text x="10.7558%" y="1071.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (2,006,018 samples, 0.02%)</title><rect x="10.5058%" y="1045" width="0.0200%" height="15" fill="rgb(234,13,49)" fg:x="1056168477" fg:w="2006018"/><text x="10.7558%" y="1055.50"></text></g><g><title>core::mem::drop (4,012,036 samples, 0.04%)</title><rect x="10.5058%" y="1109" width="0.0399%" height="15" fill="rgb(234,122,0)" fg:x="1056168477" fg:w="4012036"/><text x="10.7558%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::RwLockReadGuard&lt;tokio::runtime::time::ShardedWheel&gt;&gt; (2,006,018 samples, 0.02%)</title><rect x="10.5258%" y="1093" width="0.0200%" height="15" fill="rgb(207,146,38)" fg:x="1058174495" fg:w="2006018"/><text x="10.7758%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,tokio::runtime::time::ShardedWheel&gt;&gt; (2,006,018 samples, 0.02%)</title><rect x="10.5258%" y="1077" width="0.0200%" height="15" fill="rgb(207,177,25)" fg:x="1058174495" fg:w="2006018"/><text x="10.7758%" y="1087.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (2,006,018 samples, 0.02%)</title><rect x="10.5258%" y="1061" width="0.0200%" height="15" fill="rgb(211,178,42)" fg:x="1058174495" fg:w="2006018"/><text x="10.7758%" y="1071.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (2,006,018 samples, 0.02%)</title><rect x="10.5258%" y="1045" width="0.0200%" height="15" fill="rgb(230,69,54)" fg:x="1058174495" fg:w="2006018"/><text x="10.7758%" y="1055.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (6,018,054 samples, 0.06%)</title><rect x="10.5058%" y="1301" width="0.0599%" height="15" fill="rgb(214,135,41)" fg:x="1056168477" fg:w="6018054"/><text x="10.7558%" y="1311.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (6,018,054 samples, 0.06%)</title><rect x="10.5058%" y="1285" width="0.0599%" height="15" fill="rgb(237,67,25)" fg:x="1056168477" fg:w="6018054"/><text x="10.7558%" y="1295.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (6,018,054 samples, 0.06%)</title><rect x="10.5058%" y="1269" width="0.0599%" height="15" fill="rgb(222,189,50)" fg:x="1056168477" fg:w="6018054"/><text x="10.7558%" y="1279.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (6,018,054 samples, 0.06%)</title><rect x="10.5058%" y="1253" width="0.0599%" height="15" fill="rgb(245,148,34)" fg:x="1056168477" fg:w="6018054"/><text x="10.7558%" y="1263.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (6,018,054 samples, 0.06%)</title><rect x="10.5058%" y="1237" width="0.0599%" height="15" fill="rgb(222,29,6)" fg:x="1056168477" fg:w="6018054"/><text x="10.7558%" y="1247.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6,018,054 samples, 0.06%)</title><rect x="10.5058%" y="1221" width="0.0599%" height="15" fill="rgb(221,189,43)" fg:x="1056168477" fg:w="6018054"/><text x="10.7558%" y="1231.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (6,018,054 samples, 0.06%)</title><rect x="10.5058%" y="1205" width="0.0599%" height="15" fill="rgb(207,36,27)" fg:x="1056168477" fg:w="6018054"/><text x="10.7558%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6,018,054 samples, 0.06%)</title><rect x="10.5058%" y="1189" width="0.0599%" height="15" fill="rgb(217,90,24)" fg:x="1056168477" fg:w="6018054"/><text x="10.7558%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (6,018,054 samples, 0.06%)</title><rect x="10.5058%" y="1173" width="0.0599%" height="15" fill="rgb(224,66,35)" fg:x="1056168477" fg:w="6018054"/><text x="10.7558%" y="1183.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (6,018,054 samples, 0.06%)</title><rect x="10.5058%" y="1157" width="0.0599%" height="15" fill="rgb(221,13,50)" fg:x="1056168477" fg:w="6018054"/><text x="10.7558%" y="1167.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::{{closure}} (6,018,054 samples, 0.06%)</title><rect x="10.5058%" y="1141" width="0.0599%" height="15" fill="rgb(236,68,49)" fg:x="1056168477" fg:w="6018054"/><text x="10.7558%" y="1151.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time (6,018,054 samples, 0.06%)</title><rect x="10.5058%" y="1125" width="0.0599%" height="15" fill="rgb(229,146,28)" fg:x="1056168477" fg:w="6018054"/><text x="10.7558%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::maintenance (33,099,297 samples, 0.33%)</title><rect x="10.2464%" y="1365" width="0.3292%" height="15" fill="rgb(225,31,38)" fg:x="1030090243" fg:w="33099297"/><text x="10.4964%" y="1375.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (15,045,135 samples, 0.15%)</title><rect x="10.4260%" y="1349" width="0.1497%" height="15" fill="rgb(250,208,3)" fg:x="1048144405" fg:w="15045135"/><text x="10.6760%" y="1359.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park_timeout (15,045,135 samples, 0.15%)</title><rect x="10.4260%" y="1333" width="0.1497%" height="15" fill="rgb(246,54,23)" fg:x="1048144405" fg:w="15045135"/><text x="10.6760%" y="1343.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (14,042,126 samples, 0.14%)</title><rect x="10.4360%" y="1317" width="0.1397%" height="15" fill="rgb(243,76,11)" fg:x="1049147414" fg:w="14042126"/><text x="10.6860%" y="1327.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5,015,045 samples, 0.05%)</title><rect x="10.6455%" y="1349" width="0.0499%" height="15" fill="rgb(245,21,50)" fg:x="1070210603" fg:w="5015045"/><text x="10.8955%" y="1359.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (5,015,045 samples, 0.05%)</title><rect x="10.6455%" y="1333" width="0.0499%" height="15" fill="rgb(228,9,43)" fg:x="1070210603" fg:w="5015045"/><text x="10.8955%" y="1343.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (5,015,045 samples, 0.05%)</title><rect x="10.6455%" y="1317" width="0.0499%" height="15" fill="rgb(208,100,47)" fg:x="1070210603" fg:w="5015045"/><text x="10.8955%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tokio::runtime::scheduler::multi_thread::park::Parker&gt;&gt; (3,009,027 samples, 0.03%)</title><rect x="10.7553%" y="1333" width="0.0299%" height="15" fill="rgb(232,26,8)" fg:x="1081243702" fg:w="3009027"/><text x="11.0053%" y="1343.50"></text></g><g><title>tokio::runtime::scheduler::defer::Defer::wake (2,006,018 samples, 0.02%)</title><rect x="10.7852%" y="1333" width="0.0200%" height="15" fill="rgb(216,166,38)" fg:x="1084252729" fg:w="2006018"/><text x="11.0352%" y="1343.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (2,006,018 samples, 0.02%)</title><rect x="10.7852%" y="1317" width="0.0200%" height="15" fill="rgb(251,202,51)" fg:x="1084252729" fg:w="2006018"/><text x="11.0352%" y="1327.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (2,006,018 samples, 0.02%)</title><rect x="10.7852%" y="1301" width="0.0200%" height="15" fill="rgb(254,216,34)" fg:x="1084252729" fg:w="2006018"/><text x="11.0352%" y="1311.50"></text></g><g><title>core::cell::BorrowRefMut::new (2,006,018 samples, 0.02%)</title><rect x="10.7852%" y="1285" width="0.0200%" height="15" fill="rgb(251,32,27)" fg:x="1084252729" fg:w="2006018"/><text x="11.0352%" y="1295.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3,009,027 samples, 0.03%)</title><rect x="10.8151%" y="1317" width="0.0299%" height="15" fill="rgb(208,127,28)" fg:x="1087261756" fg:w="3009027"/><text x="11.0651%" y="1327.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (3,009,027 samples, 0.03%)</title><rect x="10.8151%" y="1301" width="0.0299%" height="15" fill="rgb(224,137,22)" fg:x="1087261756" fg:w="3009027"/><text x="11.0651%" y="1311.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (3,009,027 samples, 0.03%)</title><rect x="10.8151%" y="1285" width="0.0299%" height="15" fill="rgb(254,70,32)" fg:x="1087261756" fg:w="3009027"/><text x="11.0651%" y="1295.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (3,009,027 samples, 0.03%)</title><rect x="11.0446%" y="1237" width="0.0299%" height="15" fill="rgb(229,75,37)" fg:x="1110330963" fg:w="3009027"/><text x="11.2946%" y="1247.50"></text></g><g><title>core::sync::atomic::AtomicI32::load (5,015,045 samples, 0.05%)</title><rect x="11.2142%" y="1173" width="0.0499%" height="15" fill="rgb(252,64,23)" fg:x="1127382116" fg:w="5015045"/><text x="11.4642%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_load (5,015,045 samples, 0.05%)</title><rect x="11.2142%" y="1157" width="0.0499%" height="15" fill="rgb(232,162,48)" fg:x="1127382116" fg:w="5015045"/><text x="11.4642%" y="1167.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (100,300,900 samples, 1.00%)</title><rect x="11.0945%" y="1189" width="0.9977%" height="15" fill="rgb(246,160,12)" fg:x="1115346008" fg:w="100300900"/><text x="11.3445%" y="1199.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (83,249,747 samples, 0.83%)</title><rect x="11.2641%" y="1173" width="0.8281%" height="15" fill="rgb(247,166,0)" fg:x="1132397161" fg:w="83249747"/><text x="11.5141%" y="1183.50"></text></g><g><title>syscall (83,249,747 samples, 0.83%)</title><rect x="11.2641%" y="1157" width="0.8281%" height="15" fill="rgb(249,219,21)" fg:x="1132397161" fg:w="83249747"/><text x="11.5141%" y="1167.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket (6,018,054 samples, 0.06%)</title><rect x="12.0922%" y="1189" width="0.0599%" height="15" fill="rgb(205,209,3)" fg:x="1215646908" fg:w="6018054"/><text x="12.3422%" y="1199.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (5,015,045 samples, 0.05%)</title><rect x="12.1022%" y="1173" width="0.0499%" height="15" fill="rgb(243,44,1)" fg:x="1216649917" fg:w="5015045"/><text x="12.3522%" y="1183.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (109,327,981 samples, 1.09%)</title><rect x="11.0945%" y="1205" width="1.0875%" height="15" fill="rgb(206,159,16)" fg:x="1115346008" fg:w="109327981"/><text x="11.3445%" y="1215.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (3,009,027 samples, 0.03%)</title><rect x="12.1521%" y="1189" width="0.0299%" height="15" fill="rgb(244,77,30)" fg:x="1221664962" fg:w="3009027"/><text x="12.4021%" y="1199.50"></text></g><g><title>&lt;usize as parking_lot_core::word_lock::LockState&gt;::is_queue_locked (2,006,018 samples, 0.02%)</title><rect x="12.1620%" y="1173" width="0.0200%" height="15" fill="rgb(218,69,12)" fg:x="1222667971" fg:w="2006018"/><text x="12.4120%" y="1183.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (116,349,044 samples, 1.16%)</title><rect x="11.0346%" y="1285" width="1.1573%" height="15" fill="rgb(212,87,7)" fg:x="1109327954" fg:w="116349044"/><text x="11.2846%" y="1295.50"></text></g><g><title>parking_lot::condvar::Condvar::wait (116,349,044 samples, 1.16%)</title><rect x="11.0346%" y="1269" width="1.1573%" height="15" fill="rgb(245,114,25)" fg:x="1109327954" fg:w="116349044"/><text x="11.2846%" y="1279.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (116,349,044 samples, 1.16%)</title><rect x="11.0346%" y="1253" width="1.1573%" height="15" fill="rgb(210,61,42)" fg:x="1109327954" fg:w="116349044"/><text x="11.2846%" y="1263.50"></text></g><g><title>parking_lot_core::parking_lot::park (112,337,008 samples, 1.12%)</title><rect x="11.0745%" y="1237" width="1.1174%" height="15" fill="rgb(211,52,33)" fg:x="1113339990" fg:w="112337008"/><text x="11.3245%" y="1247.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (112,337,008 samples, 1.12%)</title><rect x="11.0745%" y="1221" width="1.1174%" height="15" fill="rgb(234,58,33)" fg:x="1113339990" fg:w="112337008"/><text x="11.3245%" y="1231.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_condvar (125,376,125 samples, 1.25%)</title><rect x="10.9548%" y="1301" width="1.2471%" height="15" fill="rgb(220,115,36)" fg:x="1101303882" fg:w="125376125"/><text x="11.2048%" y="1311.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (12,036,108 samples, 0.12%)</title><rect x="12.2917%" y="1125" width="0.1197%" height="15" fill="rgb(243,153,54)" fg:x="1235707088" fg:w="12036108"/><text x="12.5417%" y="1135.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (12,036,108 samples, 0.12%)</title><rect x="12.2917%" y="1109" width="0.1197%" height="15" fill="rgb(251,47,18)" fg:x="1235707088" fg:w="12036108"/><text x="12.5417%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (19,057,171 samples, 0.19%)</title><rect x="12.2518%" y="1269" width="0.1896%" height="15" fill="rgb(242,102,42)" fg:x="1231695052" fg:w="19057171"/><text x="12.5018%" y="1279.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (19,057,171 samples, 0.19%)</title><rect x="12.2518%" y="1253" width="0.1896%" height="15" fill="rgb(234,31,38)" fg:x="1231695052" fg:w="19057171"/><text x="12.5018%" y="1263.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (19,057,171 samples, 0.19%)</title><rect x="12.2518%" y="1237" width="0.1896%" height="15" fill="rgb(221,117,51)" fg:x="1231695052" fg:w="19057171"/><text x="12.5018%" y="1247.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (19,057,171 samples, 0.19%)</title><rect x="12.2518%" y="1221" width="0.1896%" height="15" fill="rgb(212,20,18)" fg:x="1231695052" fg:w="19057171"/><text x="12.5018%" y="1231.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (19,057,171 samples, 0.19%)</title><rect x="12.2518%" y="1205" width="0.1896%" height="15" fill="rgb(245,133,36)" fg:x="1231695052" fg:w="19057171"/><text x="12.5018%" y="1215.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (19,057,171 samples, 0.19%)</title><rect x="12.2518%" y="1189" width="0.1896%" height="15" fill="rgb(212,6,19)" fg:x="1231695052" fg:w="19057171"/><text x="12.5018%" y="1199.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal::{{closure}} (19,057,171 samples, 0.19%)</title><rect x="12.2518%" y="1173" width="0.1896%" height="15" fill="rgb(218,1,36)" fg:x="1231695052" fg:w="19057171"/><text x="12.5018%" y="1183.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration_time (19,057,171 samples, 0.19%)</title><rect x="12.2518%" y="1157" width="0.1896%" height="15" fill="rgb(246,84,54)" fg:x="1231695052" fg:w="19057171"/><text x="12.5018%" y="1167.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (19,057,171 samples, 0.19%)</title><rect x="12.2518%" y="1141" width="0.1896%" height="15" fill="rgb(242,110,6)" fg:x="1231695052" fg:w="19057171"/><text x="12.5018%" y="1151.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (3,009,027 samples, 0.03%)</title><rect x="12.4115%" y="1125" width="0.0299%" height="15" fill="rgb(214,47,5)" fg:x="1247743196" fg:w="3009027"/><text x="12.6615%" y="1135.50"></text></g><g><title>tokio::process::imp::orphan::OrphanQueueImpl&lt;T&gt;::reap_orphans (7,021,063 samples, 0.07%)</title><rect x="12.4613%" y="1269" width="0.0698%" height="15" fill="rgb(218,159,25)" fg:x="1252758241" fg:w="7021063"/><text x="12.7113%" y="1279.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::try_lock (5,015,045 samples, 0.05%)</title><rect x="12.4813%" y="1253" width="0.0499%" height="15" fill="rgb(215,211,28)" fg:x="1254764259" fg:w="5015045"/><text x="12.7313%" y="1263.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::try_lock (5,015,045 samples, 0.05%)</title><rect x="12.4813%" y="1237" width="0.0499%" height="15" fill="rgb(238,59,32)" fg:x="1254764259" fg:w="5015045"/><text x="12.7313%" y="1247.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::try_lock (5,015,045 samples, 0.05%)</title><rect x="12.4813%" y="1221" width="0.0499%" height="15" fill="rgb(226,82,3)" fg:x="1254764259" fg:w="5015045"/><text x="12.7313%" y="1231.50"></text></g><g><title>tokio::runtime::driver::Handle::time (2,006,018 samples, 0.02%)</title><rect x="12.5312%" y="1269" width="0.0200%" height="15" fill="rgb(240,164,32)" fg:x="1259779304" fg:w="2006018"/><text x="12.7812%" y="1279.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (2,006,018 samples, 0.02%)</title><rect x="12.5312%" y="1253" width="0.0200%" height="15" fill="rgb(232,46,7)" fg:x="1259779304" fg:w="2006018"/><text x="12.7812%" y="1263.50"></text></g><g><title>&lt;mio::event::events::Iter as core::iter::traits::iterator::Iterator&gt;::next (4,012,036 samples, 0.04%)</title><rect x="12.5711%" y="1253" width="0.0399%" height="15" fill="rgb(229,129,53)" fg:x="1263791340" fg:w="4012036"/><text x="12.8211%" y="1263.50"></text></g><g><title>__GI___pthread_disable_asynccancel (2,006,018 samples, 0.02%)</title><rect x="13.0799%" y="1205" width="0.0200%" height="15" fill="rgb(234,188,29)" fg:x="1314944799" fg:w="2006018"/><text x="13.3299%" y="1215.50"></text></g><g><title>mio::poll::Poll::poll (52,156,468 samples, 0.52%)</title><rect x="12.6110%" y="1253" width="0.5188%" height="15" fill="rgb(246,141,4)" fg:x="1267803376" fg:w="52156468"/><text x="12.8610%" y="1263.50"></text></g><g><title>mio::sys::unix::selector::Selector::select (50,150,450 samples, 0.50%)</title><rect x="12.6309%" y="1237" width="0.4989%" height="15" fill="rgb(229,23,39)" fg:x="1269809394" fg:w="50150450"/><text x="12.8809%" y="1247.50"></text></g><g><title>epoll_wait (48,144,432 samples, 0.48%)</title><rect x="12.6509%" y="1221" width="0.4789%" height="15" fill="rgb(206,12,3)" fg:x="1271815412" fg:w="48144432"/><text x="12.9009%" y="1231.50"></text></g><g><title>__GI___pthread_enable_asynccancel (3,009,027 samples, 0.03%)</title><rect x="13.0999%" y="1205" width="0.0299%" height="15" fill="rgb(252,226,20)" fg:x="1316950817" fg:w="3009027"/><text x="13.3499%" y="1215.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::set_readiness (4,012,036 samples, 0.04%)</title><rect x="13.1298%" y="1253" width="0.0399%" height="15" fill="rgb(216,123,35)" fg:x="1319959844" fg:w="4012036"/><text x="13.3798%" y="1263.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_update (4,012,036 samples, 0.04%)</title><rect x="13.1298%" y="1237" width="0.0399%" height="15" fill="rgb(212,68,40)" fg:x="1319959844" fg:w="4012036"/><text x="13.3798%" y="1247.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::set_readiness::{{closure}} (2,006,018 samples, 0.02%)</title><rect x="13.1498%" y="1221" width="0.0200%" height="15" fill="rgb(254,125,32)" fg:x="1321965862" fg:w="2006018"/><text x="13.3998%" y="1231.50"></text></g><g><title>tokio::util::bit::Pack::pack (2,006,018 samples, 0.02%)</title><rect x="13.1498%" y="1205" width="0.0200%" height="15" fill="rgb(253,97,22)" fg:x="1321965862" fg:w="2006018"/><text x="13.3998%" y="1215.50"></text></g><g><title>core::mem::drop (2,006,018 samples, 0.02%)</title><rect x="13.1897%" y="1237" width="0.0200%" height="15" fill="rgb(241,101,14)" fg:x="1325977898" fg:w="2006018"/><text x="13.4397%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (2,006,018 samples, 0.02%)</title><rect x="13.1897%" y="1221" width="0.0200%" height="15" fill="rgb(238,103,29)" fg:x="1325977898" fg:w="2006018"/><text x="13.4397%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (2,006,018 samples, 0.02%)</title><rect x="13.1897%" y="1205" width="0.0200%" height="15" fill="rgb(233,195,47)" fg:x="1325977898" fg:w="2006018"/><text x="13.4397%" y="1215.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (2,006,018 samples, 0.02%)</title><rect x="13.1897%" y="1189" width="0.0200%" height="15" fill="rgb(246,218,30)" fg:x="1325977898" fg:w="2006018"/><text x="13.4397%" y="1199.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (2,006,018 samples, 0.02%)</title><rect x="13.1897%" y="1173" width="0.0200%" height="15" fill="rgb(219,145,47)" fg:x="1325977898" fg:w="2006018"/><text x="13.4397%" y="1183.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::drop_reference (2,006,018 samples, 0.02%)</title><rect x="13.2096%" y="1173" width="0.0200%" height="15" fill="rgb(243,12,26)" fg:x="1327983916" fg:w="2006018"/><text x="13.4596%" y="1183.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (2,006,018 samples, 0.02%)</title><rect x="13.2096%" y="1157" width="0.0200%" height="15" fill="rgb(214,87,16)" fg:x="1327983916" fg:w="2006018"/><text x="13.4596%" y="1167.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (6,018,054 samples, 0.06%)</title><rect x="13.2296%" y="1157" width="0.0599%" height="15" fill="rgb(208,99,42)" fg:x="1329989934" fg:w="6018054"/><text x="13.4796%" y="1167.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (6,018,054 samples, 0.06%)</title><rect x="13.2296%" y="1141" width="0.0599%" height="15" fill="rgb(253,99,2)" fg:x="1329989934" fg:w="6018054"/><text x="13.4796%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (6,018,054 samples, 0.06%)</title><rect x="13.2296%" y="1125" width="0.0599%" height="15" fill="rgb(220,168,23)" fg:x="1329989934" fg:w="6018054"/><text x="13.4796%" y="1135.50"></text></g><g><title>tokio::runtime::context::with_scheduler (5,015,045 samples, 0.05%)</title><rect x="13.2395%" y="1109" width="0.0499%" height="15" fill="rgb(242,38,24)" fg:x="1330992943" fg:w="5015045"/><text x="13.4895%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4,012,036 samples, 0.04%)</title><rect x="13.2495%" y="1093" width="0.0399%" height="15" fill="rgb(225,182,9)" fg:x="1331995952" fg:w="4012036"/><text x="13.4995%" y="1103.50"></text></g><g><title>tokio::runtime::context::with_scheduler::{{closure}} (3,009,027 samples, 0.03%)</title><rect x="13.2595%" y="1077" width="0.0299%" height="15" fill="rgb(243,178,37)" fg:x="1332998961" fg:w="3009027"/><text x="13.5095%" y="1087.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (3,009,027 samples, 0.03%)</title><rect x="13.2595%" y="1061" width="0.0299%" height="15" fill="rgb(232,139,19)" fg:x="1332998961" fg:w="3009027"/><text x="13.5095%" y="1071.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current::{{closure}} (3,009,027 samples, 0.03%)</title><rect x="13.2595%" y="1045" width="0.0299%" height="15" fill="rgb(225,201,24)" fg:x="1332998961" fg:w="3009027"/><text x="13.5095%" y="1055.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::{{closure}} (2,006,018 samples, 0.02%)</title><rect x="13.2695%" y="1029" width="0.0200%" height="15" fill="rgb(221,47,46)" fg:x="1334001970" fg:w="2006018"/><text x="13.5195%" y="1039.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::schedule (8,024,072 samples, 0.08%)</title><rect x="13.2296%" y="1173" width="0.0798%" height="15" fill="rgb(249,23,13)" fg:x="1329989934" fg:w="8024072"/><text x="13.4796%" y="1183.50"></text></g><g><title>tokio::runtime::task::raw::schedule (2,006,018 samples, 0.02%)</title><rect x="13.2894%" y="1157" width="0.0200%" height="15" fill="rgb(219,9,5)" fg:x="1336007988" fg:w="2006018"/><text x="13.5394%" y="1167.50"></text></g><g><title>tokio::runtime::task::core::Header::get_scheduler (2,006,018 samples, 0.02%)</title><rect x="13.2894%" y="1141" width="0.0200%" height="15" fill="rgb(254,171,16)" fg:x="1336007988" fg:w="2006018"/><text x="13.5394%" y="1151.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (81,243,729 samples, 0.81%)</title><rect x="12.5511%" y="1269" width="0.8081%" height="15" fill="rgb(230,171,20)" fg:x="1261785322" fg:w="81243729"/><text x="12.8011%" y="1279.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (19,057,171 samples, 0.19%)</title><rect x="13.1697%" y="1253" width="0.1896%" height="15" fill="rgb(210,71,41)" fg:x="1323971880" fg:w="19057171"/><text x="13.4197%" y="1263.50"></text></g><g><title>tokio::util::wake_list::WakeList::wake_all (15,045,135 samples, 0.15%)</title><rect x="13.2096%" y="1237" width="0.1497%" height="15" fill="rgb(206,173,20)" fg:x="1327983916" fg:w="15045135"/><text x="13.4596%" y="1247.50"></text></g><g><title>core::task::wake::Waker::wake (15,045,135 samples, 0.15%)</title><rect x="13.2096%" y="1221" width="0.1497%" height="15" fill="rgb(233,88,34)" fg:x="1327983916" fg:w="15045135"/><text x="13.4596%" y="1231.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (15,045,135 samples, 0.15%)</title><rect x="13.2096%" y="1205" width="0.1497%" height="15" fill="rgb(223,209,46)" fg:x="1327983916" fg:w="15045135"/><text x="13.4596%" y="1215.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (15,045,135 samples, 0.15%)</title><rect x="13.2096%" y="1189" width="0.1497%" height="15" fill="rgb(250,43,18)" fg:x="1327983916" fg:w="15045135"/><text x="13.4596%" y="1199.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (5,015,045 samples, 0.05%)</title><rect x="13.3094%" y="1173" width="0.0499%" height="15" fill="rgb(208,13,10)" fg:x="1338014006" fg:w="5015045"/><text x="13.5594%" y="1183.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (5,015,045 samples, 0.05%)</title><rect x="13.3094%" y="1157" width="0.0499%" height="15" fill="rgb(212,200,36)" fg:x="1338014006" fg:w="5015045"/><text x="13.5594%" y="1167.50"></text></g><g><title>tokio::runtime::task::state::State::load (2,006,018 samples, 0.02%)</title><rect x="13.3393%" y="1141" width="0.0200%" height="15" fill="rgb(225,90,30)" fg:x="1341023033" fg:w="2006018"/><text x="13.5893%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2,006,018 samples, 0.02%)</title><rect x="13.3393%" y="1125" width="0.0200%" height="15" fill="rgb(236,182,39)" fg:x="1341023033" fg:w="2006018"/><text x="13.5893%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_load (2,006,018 samples, 0.02%)</title><rect x="13.3393%" y="1109" width="0.0200%" height="15" fill="rgb(212,144,35)" fg:x="1341023033" fg:w="2006018"/><text x="13.5893%" y="1119.50"></text></g><g><title>tokio::runtime::signal::Driver::process (4,012,036 samples, 0.04%)</title><rect x="13.3593%" y="1269" width="0.0399%" height="15" fill="rgb(228,63,44)" fg:x="1343029051" fg:w="4012036"/><text x="13.6093%" y="1279.50"></text></g><g><title>tokio::runtime::io::driver::signal::&lt;impl tokio::runtime::io::driver::Driver&gt;::consume_signal_ready (4,012,036 samples, 0.04%)</title><rect x="13.3593%" y="1253" width="0.0399%" height="15" fill="rgb(228,109,6)" fg:x="1343029051" fg:w="4012036"/><text x="13.6093%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::time::wheel::Wheel&gt;&gt; (9,027,081 samples, 0.09%)</title><rect x="13.4990%" y="1061" width="0.0898%" height="15" fill="rgb(238,117,24)" fg:x="1357071177" fg:w="9027081"/><text x="13.7490%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::time::wheel::Wheel&gt;&gt; (9,027,081 samples, 0.09%)</title><rect x="13.4990%" y="1045" width="0.0898%" height="15" fill="rgb(242,26,26)" fg:x="1357071177" fg:w="9027081"/><text x="13.7490%" y="1055.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (9,027,081 samples, 0.09%)</title><rect x="13.4990%" y="1029" width="0.0898%" height="15" fill="rgb(221,92,48)" fg:x="1357071177" fg:w="9027081"/><text x="13.7490%" y="1039.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (9,027,081 samples, 0.09%)</title><rect x="13.4990%" y="1013" width="0.0898%" height="15" fill="rgb(209,209,32)" fg:x="1357071177" fg:w="9027081"/><text x="13.7490%" y="1023.50"></text></g><g><title>core::mem::drop (12,036,108 samples, 0.12%)</title><rect x="13.4990%" y="1077" width="0.1197%" height="15" fill="rgb(221,70,22)" fg:x="1357071177" fg:w="12036108"/><text x="13.7490%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::RwLockReadGuard&lt;tokio::runtime::time::ShardedWheel&gt;&gt; (3,009,027 samples, 0.03%)</title><rect x="13.5887%" y="1061" width="0.0299%" height="15" fill="rgb(248,145,5)" fg:x="1366098258" fg:w="3009027"/><text x="13.8387%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,tokio::runtime::time::ShardedWheel&gt;&gt; (3,009,027 samples, 0.03%)</title><rect x="13.5887%" y="1045" width="0.0299%" height="15" fill="rgb(226,116,26)" fg:x="1366098258" fg:w="3009027"/><text x="13.8387%" y="1055.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (3,009,027 samples, 0.03%)</title><rect x="13.5887%" y="1029" width="0.0299%" height="15" fill="rgb(244,5,17)" fg:x="1366098258" fg:w="3009027"/><text x="13.8387%" y="1039.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (3,009,027 samples, 0.03%)</title><rect x="13.5887%" y="1013" width="0.0299%" height="15" fill="rgb(252,159,33)" fg:x="1366098258" fg:w="3009027"/><text x="13.8387%" y="1023.50"></text></g><g><title>tokio::loom::std::parking_lot::RwLock&lt;T&gt;::read (6,018,054 samples, 0.06%)</title><rect x="13.6187%" y="1077" width="0.0599%" height="15" fill="rgb(206,71,0)" fg:x="1369107285" fg:w="6018054"/><text x="13.8687%" y="1087.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (6,018,054 samples, 0.06%)</title><rect x="13.6187%" y="1061" width="0.0599%" height="15" fill="rgb(233,118,54)" fg:x="1369107285" fg:w="6018054"/><text x="13.8687%" y="1071.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (6,018,054 samples, 0.06%)</title><rect x="13.6187%" y="1045" width="0.0599%" height="15" fill="rgb(234,83,48)" fg:x="1369107285" fg:w="6018054"/><text x="13.8687%" y="1055.50"></text></g><g><title>tokio::runtime::time::ShardedWheel::lock_sharded_wheel (10,030,090 samples, 0.10%)</title><rect x="13.6785%" y="1077" width="0.0998%" height="15" fill="rgb(228,3,54)" fg:x="1375125339" fg:w="10030090"/><text x="13.9285%" y="1087.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (7,021,063 samples, 0.07%)</title><rect x="13.7085%" y="1061" width="0.0698%" height="15" fill="rgb(226,155,13)" fg:x="1378134366" fg:w="7021063"/><text x="13.9585%" y="1071.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (7,021,063 samples, 0.07%)</title><rect x="13.7085%" y="1045" width="0.0698%" height="15" fill="rgb(241,28,37)" fg:x="1378134366" fg:w="7021063"/><text x="13.9585%" y="1055.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (7,021,063 samples, 0.07%)</title><rect x="13.7085%" y="1029" width="0.0698%" height="15" fill="rgb(233,93,10)" fg:x="1378134366" fg:w="7021063"/><text x="13.9585%" y="1039.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll (5,015,045 samples, 0.05%)</title><rect x="13.7783%" y="1077" width="0.0499%" height="15" fill="rgb(225,113,19)" fg:x="1385155429" fg:w="5015045"/><text x="14.0283%" y="1087.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (4,012,036 samples, 0.04%)</title><rect x="13.7883%" y="1061" width="0.0399%" height="15" fill="rgb(241,2,18)" fg:x="1386158438" fg:w="4012036"/><text x="14.0383%" y="1071.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (3,009,027 samples, 0.03%)</title><rect x="13.7983%" y="1045" width="0.0299%" height="15" fill="rgb(228,207,21)" fg:x="1387161447" fg:w="3009027"/><text x="14.0483%" y="1055.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (3,009,027 samples, 0.03%)</title><rect x="13.7983%" y="1029" width="0.0299%" height="15" fill="rgb(213,211,35)" fg:x="1387161447" fg:w="3009027"/><text x="14.0483%" y="1039.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll_at (6,018,054 samples, 0.06%)</title><rect x="13.8282%" y="1077" width="0.0599%" height="15" fill="rgb(209,83,10)" fg:x="1390170474" fg:w="6018054"/><text x="14.0782%" y="1087.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (5,015,045 samples, 0.05%)</title><rect x="13.8382%" y="1061" width="0.0499%" height="15" fill="rgb(209,164,1)" fg:x="1391173483" fg:w="5015045"/><text x="14.0882%" y="1071.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (48,144,432 samples, 0.48%)</title><rect x="13.4291%" y="1253" width="0.4789%" height="15" fill="rgb(213,184,43)" fg:x="1350050114" fg:w="48144432"/><text x="13.6791%" y="1263.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (48,144,432 samples, 0.48%)</title><rect x="13.4291%" y="1237" width="0.4789%" height="15" fill="rgb(231,61,34)" fg:x="1350050114" fg:w="48144432"/><text x="13.6791%" y="1247.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (48,144,432 samples, 0.48%)</title><rect x="13.4291%" y="1221" width="0.4789%" height="15" fill="rgb(235,75,3)" fg:x="1350050114" fg:w="48144432"/><text x="13.6791%" y="1231.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (48,144,432 samples, 0.48%)</title><rect x="13.4291%" y="1205" width="0.4789%" height="15" fill="rgb(220,106,47)" fg:x="1350050114" fg:w="48144432"/><text x="13.6791%" y="1215.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (48,144,432 samples, 0.48%)</title><rect x="13.4291%" y="1189" width="0.4789%" height="15" fill="rgb(210,196,33)" fg:x="1350050114" fg:w="48144432"/><text x="13.6791%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (48,144,432 samples, 0.48%)</title><rect x="13.4291%" y="1173" width="0.4789%" height="15" fill="rgb(229,154,42)" fg:x="1350050114" fg:w="48144432"/><text x="13.6791%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (48,144,432 samples, 0.48%)</title><rect x="13.4291%" y="1157" width="0.4789%" height="15" fill="rgb(228,114,26)" fg:x="1350050114" fg:w="48144432"/><text x="13.6791%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (46,138,414 samples, 0.46%)</title><rect x="13.4491%" y="1141" width="0.4589%" height="15" fill="rgb(208,144,1)" fg:x="1352056132" fg:w="46138414"/><text x="13.6991%" y="1151.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (46,138,414 samples, 0.46%)</title><rect x="13.4491%" y="1125" width="0.4589%" height="15" fill="rgb(239,112,37)" fg:x="1352056132" fg:w="46138414"/><text x="13.6991%" y="1135.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::{{closure}} (46,138,414 samples, 0.46%)</title><rect x="13.4491%" y="1109" width="0.4589%" height="15" fill="rgb(210,96,50)" fg:x="1352056132" fg:w="46138414"/><text x="13.6991%" y="1119.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time (44,132,396 samples, 0.44%)</title><rect x="13.4690%" y="1093" width="0.4390%" height="15" fill="rgb(222,178,2)" fg:x="1354062150" fg:w="44132396"/><text x="13.7190%" y="1103.50"></text></g><g><title>tokio::util::wake_list::WakeList::wake_all (2,006,018 samples, 0.02%)</title><rect x="13.8881%" y="1077" width="0.0200%" height="15" fill="rgb(226,74,18)" fg:x="1396188528" fg:w="2006018"/><text x="14.1381%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (317,953,853 samples, 3.16%)</title><rect x="10.8051%" y="1333" width="3.1627%" height="15" fill="rgb(225,67,54)" fg:x="1086258747" fg:w="317953853"/><text x="11.0551%" y="1343.50">tok..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park (313,941,817 samples, 3.12%)</title><rect x="10.8451%" y="1317" width="3.1228%" height="15" fill="rgb(251,92,32)" fg:x="1090270783" fg:w="313941817"/><text x="11.0951%" y="1327.50">tok..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_driver (177,532,593 samples, 1.77%)</title><rect x="12.2019%" y="1301" width="1.7659%" height="15" fill="rgb(228,149,22)" fg:x="1226680007" fg:w="177532593"/><text x="12.4519%" y="1311.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (172,517,548 samples, 1.72%)</title><rect x="12.2518%" y="1285" width="1.7161%" height="15" fill="rgb(243,54,13)" fg:x="1231695052" fg:w="172517548"/><text x="12.5018%" y="1295.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (57,171,513 samples, 0.57%)</title><rect x="13.3992%" y="1269" width="0.5687%" height="15" fill="rgb(243,180,28)" fg:x="1347041087" fg:w="57171513"/><text x="13.6492%" y="1279.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::now (6,018,054 samples, 0.06%)</title><rect x="13.9080%" y="1253" width="0.0599%" height="15" fill="rgb(208,167,24)" fg:x="1398194546" fg:w="6018054"/><text x="14.1580%" y="1263.50"></text></g><g><title>tokio::time::clock::Clock::now (6,018,054 samples, 0.06%)</title><rect x="13.9080%" y="1237" width="0.0599%" height="15" fill="rgb(245,73,45)" fg:x="1398194546" fg:w="6018054"/><text x="14.1580%" y="1247.50"></text></g><g><title>tokio::time::clock::now (6,018,054 samples, 0.06%)</title><rect x="13.9080%" y="1221" width="0.0599%" height="15" fill="rgb(237,203,48)" fg:x="1398194546" fg:w="6018054"/><text x="14.1580%" y="1231.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (6,018,054 samples, 0.06%)</title><rect x="13.9080%" y="1205" width="0.0599%" height="15" fill="rgb(211,197,16)" fg:x="1398194546" fg:w="6018054"/><text x="14.1580%" y="1215.50"></text></g><g><title>__clock_gettime_2 (5,015,045 samples, 0.05%)</title><rect x="13.9180%" y="1189" width="0.0499%" height="15" fill="rgb(243,99,51)" fg:x="1399197555" fg:w="5015045"/><text x="14.1680%" y="1199.50"></text></g><g><title>[[vdso]] (4,012,036 samples, 0.04%)</title><rect x="13.9280%" y="1173" width="0.0399%" height="15" fill="rgb(215,123,29)" fg:x="1400200564" fg:w="4012036"/><text x="14.1780%" y="1183.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (330,992,970 samples, 3.29%)</title><rect x="10.6954%" y="1349" width="3.2924%" height="15" fill="rgb(239,186,37)" fg:x="1075225648" fg:w="330992970"/><text x="10.9454%" y="1359.50">tok..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::should_notify_others (2,006,018 samples, 0.02%)</title><rect x="13.9679%" y="1333" width="0.0200%" height="15" fill="rgb(252,136,39)" fg:x="1404212600" fg:w="2006018"/><text x="14.2179%" y="1343.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::maintenance (22,066,198 samples, 0.22%)</title><rect x="13.9878%" y="1349" width="0.2195%" height="15" fill="rgb(223,213,32)" fg:x="1406218618" fg:w="22066198"/><text x="14.2378%" y="1359.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (15,045,135 samples, 0.15%)</title><rect x="14.0577%" y="1333" width="0.1497%" height="15" fill="rgb(233,115,5)" fg:x="1413239681" fg:w="15045135"/><text x="14.3077%" y="1343.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (15,045,135 samples, 0.15%)</title><rect x="14.0577%" y="1317" width="0.1497%" height="15" fill="rgb(207,226,44)" fg:x="1413239681" fg:w="15045135"/><text x="14.3077%" y="1327.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (15,045,135 samples, 0.15%)</title><rect x="14.0577%" y="1301" width="0.1497%" height="15" fill="rgb(208,126,0)" fg:x="1413239681" fg:w="15045135"/><text x="14.3077%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::is_parked (2,006,018 samples, 0.02%)</title><rect x="14.2173%" y="1333" width="0.0200%" height="15" fill="rgb(244,66,21)" fg:x="1429287825" fg:w="2006018"/><text x="14.4673%" y="1343.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (2,006,018 samples, 0.02%)</title><rect x="14.2173%" y="1317" width="0.0200%" height="15" fill="rgb(222,97,12)" fg:x="1429287825" fg:w="2006018"/><text x="14.4673%" y="1327.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (2,006,018 samples, 0.02%)</title><rect x="14.2173%" y="1301" width="0.0200%" height="15" fill="rgb(219,213,19)" fg:x="1429287825" fg:w="2006018"/><text x="14.4673%" y="1311.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (2,006,018 samples, 0.02%)</title><rect x="14.2173%" y="1285" width="0.0200%" height="15" fill="rgb(252,169,30)" fg:x="1429287825" fg:w="2006018"/><text x="14.4673%" y="1295.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_parked (5,015,045 samples, 0.05%)</title><rect x="14.2073%" y="1349" width="0.0499%" height="15" fill="rgb(206,32,51)" fg:x="1428284816" fg:w="5015045"/><text x="14.4573%" y="1359.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::unpark_worker_by_id (2,006,018 samples, 0.02%)</title><rect x="14.2373%" y="1333" width="0.0200%" height="15" fill="rgb(250,172,42)" fg:x="1431293843" fg:w="2006018"/><text x="14.4873%" y="1343.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::State::unpark_one (2,006,018 samples, 0.02%)</title><rect x="14.2373%" y="1317" width="0.0200%" height="15" fill="rgb(209,34,43)" fg:x="1431293843" fg:w="2006018"/><text x="14.4873%" y="1327.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2,006,018 samples, 0.02%)</title><rect x="14.2373%" y="1301" width="0.0200%" height="15" fill="rgb(223,11,35)" fg:x="1431293843" fg:w="2006018"/><text x="14.4873%" y="1311.50"></text></g><g><title>core::sync::atomic::atomic_add (2,006,018 samples, 0.02%)</title><rect x="14.2373%" y="1285" width="0.0200%" height="15" fill="rgb(251,219,26)" fg:x="1431293843" fg:w="2006018"/><text x="14.4873%" y="1295.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4,012,036 samples, 0.04%)</title><rect x="14.2871%" y="1317" width="0.0399%" height="15" fill="rgb(231,119,3)" fg:x="1436308888" fg:w="4012036"/><text x="14.5371%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (10,030,090 samples, 0.10%)</title><rect x="14.3270%" y="1317" width="0.0998%" height="15" fill="rgb(216,97,11)" fg:x="1440320924" fg:w="10030090"/><text x="14.5770%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (10,030,090 samples, 0.10%)</title><rect x="14.3270%" y="1301" width="0.0998%" height="15" fill="rgb(223,59,9)" fg:x="1440320924" fg:w="10030090"/><text x="14.5770%" y="1311.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (10,030,090 samples, 0.10%)</title><rect x="14.3270%" y="1285" width="0.0998%" height="15" fill="rgb(233,93,31)" fg:x="1440320924" fg:w="10030090"/><text x="14.5770%" y="1295.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (10,030,090 samples, 0.10%)</title><rect x="14.3270%" y="1269" width="0.0998%" height="15" fill="rgb(239,81,33)" fg:x="1440320924" fg:w="10030090"/><text x="14.5770%" y="1279.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (3,009,027 samples, 0.03%)</title><rect x="14.4268%" y="1317" width="0.0299%" height="15" fill="rgb(213,120,34)" fg:x="1450351014" fg:w="3009027"/><text x="14.6768%" y="1327.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (3,009,027 samples, 0.03%)</title><rect x="14.4268%" y="1301" width="0.0299%" height="15" fill="rgb(243,49,53)" fg:x="1450351014" fg:w="3009027"/><text x="14.6768%" y="1311.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (3,009,027 samples, 0.03%)</title><rect x="14.4268%" y="1285" width="0.0299%" height="15" fill="rgb(247,216,33)" fg:x="1450351014" fg:w="3009027"/><text x="14.6768%" y="1295.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_parked (20,060,180 samples, 0.20%)</title><rect x="14.2871%" y="1333" width="0.1995%" height="15" fill="rgb(226,26,14)" fg:x="1436308888" fg:w="20060180"/><text x="14.5371%" y="1343.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::State::dec_num_unparked (3,009,027 samples, 0.03%)</title><rect x="14.4567%" y="1317" width="0.0299%" height="15" fill="rgb(215,49,53)" fg:x="1453360041" fg:w="3009027"/><text x="14.7067%" y="1327.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2,006,018 samples, 0.02%)</title><rect x="14.4967%" y="1301" width="0.0200%" height="15" fill="rgb(245,162,40)" fg:x="1457372077" fg:w="2006018"/><text x="14.7467%" y="1311.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (2,006,018 samples, 0.02%)</title><rect x="14.4967%" y="1285" width="0.0200%" height="15" fill="rgb(229,68,17)" fg:x="1457372077" fg:w="2006018"/><text x="14.7467%" y="1295.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (2,006,018 samples, 0.02%)</title><rect x="14.4967%" y="1269" width="0.0200%" height="15" fill="rgb(213,182,10)" fg:x="1457372077" fg:w="2006018"/><text x="14.7467%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park (398,194,573 samples, 3.96%)</title><rect x="10.5757%" y="1365" width="3.9609%" height="15" fill="rgb(245,125,30)" fg:x="1063189540" fg:w="398194573"/><text x="10.8257%" y="1375.50">toki..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_to_parked (28,084,252 samples, 0.28%)</title><rect x="14.2572%" y="1349" width="0.2794%" height="15" fill="rgb(232,202,2)" fg:x="1433299861" fg:w="28084252"/><text x="14.5072%" y="1359.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_if_work_pending (5,015,045 samples, 0.05%)</title><rect x="14.4867%" y="1333" width="0.0499%" height="15" fill="rgb(237,140,51)" fg:x="1456369068" fg:w="5015045"/><text x="14.7367%" y="1343.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::is_empty (4,012,036 samples, 0.04%)</title><rect x="14.4967%" y="1317" width="0.0399%" height="15" fill="rgb(236,157,25)" fg:x="1457372077" fg:w="4012036"/><text x="14.7467%" y="1327.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Inner&lt;T&gt;::is_empty (2,006,018 samples, 0.02%)</title><rect x="14.5166%" y="1301" width="0.0200%" height="15" fill="rgb(219,209,0)" fg:x="1459378095" fg:w="2006018"/><text x="14.7666%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Inner&lt;T&gt;::len (2,006,018 samples, 0.02%)</title><rect x="14.5166%" y="1285" width="0.0200%" height="15" fill="rgb(240,116,54)" fg:x="1459378095" fg:w="2006018"/><text x="14.7666%" y="1295.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (2,006,018 samples, 0.02%)</title><rect x="14.5166%" y="1269" width="0.0200%" height="15" fill="rgb(216,10,36)" fg:x="1459378095" fg:w="2006018"/><text x="14.7666%" y="1279.50"></text></g><g><title>core::sync::atomic::atomic_load (2,006,018 samples, 0.02%)</title><rect x="14.5166%" y="1253" width="0.0200%" height="15" fill="rgb(222,72,44)" fg:x="1459378095" fg:w="2006018"/><text x="14.7666%" y="1263.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (72,216,648 samples, 0.72%)</title><rect x="14.6663%" y="1285" width="0.7183%" height="15" fill="rgb(232,159,9)" fg:x="1474423230" fg:w="72216648"/><text x="14.9163%" y="1295.50"></text></g><g><title>syscall (71,213,639 samples, 0.71%)</title><rect x="14.6762%" y="1269" width="0.7084%" height="15" fill="rgb(210,39,32)" fg:x="1475426239" fg:w="71213639"/><text x="14.9262%" y="1279.50"></text></g><g><title>core::cmp::PartialOrd::gt (2,006,018 samples, 0.02%)</title><rect x="15.3846%" y="1269" width="0.0200%" height="15" fill="rgb(216,194,45)" fg:x="1546639878" fg:w="2006018"/><text x="15.6346%" y="1279.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (4,012,036 samples, 0.04%)</title><rect x="15.3846%" y="1285" width="0.0399%" height="15" fill="rgb(218,18,35)" fg:x="1546639878" fg:w="4012036"/><text x="15.6346%" y="1295.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (2,006,018 samples, 0.02%)</title><rect x="15.4046%" y="1269" width="0.0200%" height="15" fill="rgb(207,83,51)" fg:x="1548645896" fg:w="2006018"/><text x="15.6546%" y="1279.50"></text></g><g><title>__clock_gettime_2 (2,006,018 samples, 0.02%)</title><rect x="15.4046%" y="1253" width="0.0200%" height="15" fill="rgb(225,63,43)" fg:x="1548645896" fg:w="2006018"/><text x="15.6546%" y="1263.50"></text></g><g><title>[[vdso]] (2,006,018 samples, 0.02%)</title><rect x="15.4046%" y="1237" width="0.0200%" height="15" fill="rgb(207,57,36)" fg:x="1548645896" fg:w="2006018"/><text x="15.6546%" y="1247.50"></text></g><g><title>[[vdso]] (2,006,018 samples, 0.02%)</title><rect x="15.4046%" y="1221" width="0.0200%" height="15" fill="rgb(216,99,33)" fg:x="1548645896" fg:w="2006018"/><text x="15.6546%" y="1231.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (10,030,090 samples, 0.10%)</title><rect x="15.4245%" y="1285" width="0.0998%" height="15" fill="rgb(225,42,16)" fg:x="1550651914" fg:w="10030090"/><text x="15.6745%" y="1295.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (4,012,036 samples, 0.04%)</title><rect x="15.4844%" y="1269" width="0.0399%" height="15" fill="rgb(220,201,45)" fg:x="1556669968" fg:w="4012036"/><text x="15.7344%" y="1279.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (105,315,945 samples, 1.05%)</title><rect x="14.5765%" y="1317" width="1.0476%" height="15" fill="rgb(225,33,4)" fg:x="1465396149" fg:w="105315945"/><text x="14.8265%" y="1327.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (102,306,918 samples, 1.02%)</title><rect x="14.6064%" y="1301" width="1.0177%" height="15" fill="rgb(224,33,50)" fg:x="1468405176" fg:w="102306918"/><text x="14.8564%" y="1311.50"></text></g><g><title>parking_lot_core::parking_lot::unlock_bucket_pair (10,030,090 samples, 0.10%)</title><rect x="15.5243%" y="1285" width="0.0998%" height="15" fill="rgb(246,198,51)" fg:x="1560682004" fg:w="10030090"/><text x="15.7743%" y="1295.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (10,030,090 samples, 0.10%)</title><rect x="15.5243%" y="1269" width="0.0998%" height="15" fill="rgb(205,22,4)" fg:x="1560682004" fg:w="10030090"/><text x="15.7743%" y="1279.50"></text></g><g><title>&lt;usize as parking_lot_core::word_lock::LockState&gt;::is_queue_locked (10,030,090 samples, 0.10%)</title><rect x="15.5243%" y="1253" width="0.0998%" height="15" fill="rgb(206,3,8)" fg:x="1560682004" fg:w="10030090"/><text x="15.7743%" y="1263.50"></text></g><g><title>__GI___write (4,012,036 samples, 0.04%)</title><rect x="15.6241%" y="1205" width="0.0399%" height="15" fill="rgb(251,23,15)" fg:x="1570712094" fg:w="4012036"/><text x="15.8741%" y="1215.50"></text></g><g><title>tokio::runtime::driver::Handle::unpark (5,015,045 samples, 0.05%)</title><rect x="15.6241%" y="1317" width="0.0499%" height="15" fill="rgb(252,88,28)" fg:x="1570712094" fg:w="5015045"/><text x="15.8741%" y="1327.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (5,015,045 samples, 0.05%)</title><rect x="15.6241%" y="1301" width="0.0499%" height="15" fill="rgb(212,127,14)" fg:x="1570712094" fg:w="5015045"/><text x="15.8741%" y="1311.50"></text></g><g><title>tokio::runtime::io::driver::Handle::unpark (5,015,045 samples, 0.05%)</title><rect x="15.6241%" y="1285" width="0.0499%" height="15" fill="rgb(247,145,37)" fg:x="1570712094" fg:w="5015045"/><text x="15.8741%" y="1295.50"></text></g><g><title>mio::sys::unix::waker::Waker::wake (5,015,045 samples, 0.05%)</title><rect x="15.6241%" y="1269" width="0.0499%" height="15" fill="rgb(209,117,53)" fg:x="1570712094" fg:w="5015045"/><text x="15.8741%" y="1279.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (5,015,045 samples, 0.05%)</title><rect x="15.6241%" y="1253" width="0.0499%" height="15" fill="rgb(212,90,42)" fg:x="1570712094" fg:w="5015045"/><text x="15.8741%" y="1263.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (5,015,045 samples, 0.05%)</title><rect x="15.6241%" y="1237" width="0.0499%" height="15" fill="rgb(218,164,37)" fg:x="1570712094" fg:w="5015045"/><text x="15.8741%" y="1247.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (5,015,045 samples, 0.05%)</title><rect x="15.6241%" y="1221" width="0.0499%" height="15" fill="rgb(246,65,34)" fg:x="1570712094" fg:w="5015045"/><text x="15.8741%" y="1231.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_from_searching (3,009,027 samples, 0.03%)</title><rect x="15.6739%" y="1317" width="0.0299%" height="15" fill="rgb(231,100,33)" fg:x="1575727139" fg:w="3009027"/><text x="15.9239%" y="1327.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::State::dec_num_searching (3,009,027 samples, 0.03%)</title><rect x="15.6739%" y="1301" width="0.0299%" height="15" fill="rgb(228,126,14)" fg:x="1575727139" fg:w="3009027"/><text x="15.9239%" y="1311.50"></text></g><g><title>core::mem::drop (2,006,018 samples, 0.02%)</title><rect x="15.7338%" y="1269" width="0.0200%" height="15" fill="rgb(215,173,21)" fg:x="1581745193" fg:w="2006018"/><text x="15.9838%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;()&gt;&gt; (2,006,018 samples, 0.02%)</title><rect x="15.7338%" y="1253" width="0.0200%" height="15" fill="rgb(210,6,40)" fg:x="1581745193" fg:w="2006018"/><text x="15.9838%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,()&gt;&gt; (2,006,018 samples, 0.02%)</title><rect x="15.7338%" y="1237" width="0.0200%" height="15" fill="rgb(212,48,18)" fg:x="1581745193" fg:w="2006018"/><text x="15.9838%" y="1247.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (2,006,018 samples, 0.02%)</title><rect x="15.7338%" y="1221" width="0.0200%" height="15" fill="rgb(230,214,11)" fg:x="1581745193" fg:w="2006018"/><text x="15.9838%" y="1231.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (2,006,018 samples, 0.02%)</title><rect x="15.7338%" y="1205" width="0.0200%" height="15" fill="rgb(254,105,39)" fg:x="1581745193" fg:w="2006018"/><text x="15.9838%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (8,024,072 samples, 0.08%)</title><rect x="15.7039%" y="1317" width="0.0798%" height="15" fill="rgb(245,158,5)" fg:x="1578736166" fg:w="8024072"/><text x="15.9539%" y="1327.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (8,024,072 samples, 0.08%)</title><rect x="15.7039%" y="1301" width="0.0798%" height="15" fill="rgb(249,208,11)" fg:x="1578736166" fg:w="8024072"/><text x="15.9539%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark_condvar (5,015,045 samples, 0.05%)</title><rect x="15.7338%" y="1285" width="0.0499%" height="15" fill="rgb(210,39,28)" fg:x="1581745193" fg:w="5015045"/><text x="15.9838%" y="1295.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (3,009,027 samples, 0.03%)</title><rect x="15.7538%" y="1269" width="0.0299%" height="15" fill="rgb(211,56,53)" fg:x="1583751211" fg:w="3009027"/><text x="16.0038%" y="1279.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (3,009,027 samples, 0.03%)</title><rect x="15.7538%" y="1253" width="0.0299%" height="15" fill="rgb(226,201,30)" fg:x="1583751211" fg:w="3009027"/><text x="16.0038%" y="1263.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (3,009,027 samples, 0.03%)</title><rect x="15.7538%" y="1237" width="0.0299%" height="15" fill="rgb(239,101,34)" fg:x="1583751211" fg:w="3009027"/><text x="16.0038%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (7,021,063 samples, 0.07%)</title><rect x="15.8037%" y="1285" width="0.0698%" height="15" fill="rgb(226,209,5)" fg:x="1588766256" fg:w="7021063"/><text x="16.0537%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (7,021,063 samples, 0.07%)</title><rect x="15.8037%" y="1269" width="0.0698%" height="15" fill="rgb(250,105,47)" fg:x="1588766256" fg:w="7021063"/><text x="16.0537%" y="1279.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (7,021,063 samples, 0.07%)</title><rect x="15.8037%" y="1253" width="0.0698%" height="15" fill="rgb(230,72,3)" fg:x="1588766256" fg:w="7021063"/><text x="16.0537%" y="1263.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (7,021,063 samples, 0.07%)</title><rect x="15.8037%" y="1237" width="0.0698%" height="15" fill="rgb(232,218,39)" fg:x="1588766256" fg:w="7021063"/><text x="16.0537%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_searching (132,397,188 samples, 1.32%)</title><rect x="14.5765%" y="1349" width="1.3170%" height="15" fill="rgb(248,166,6)" fg:x="1465396149" fg:w="132397188"/><text x="14.8265%" y="1359.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::transition_worker_from_searching (132,397,188 samples, 1.32%)</title><rect x="14.5765%" y="1333" width="1.3170%" height="15" fill="rgb(247,89,20)" fg:x="1465396149" fg:w="132397188"/><text x="14.8265%" y="1343.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (11,033,099 samples, 0.11%)</title><rect x="15.7837%" y="1317" width="0.1097%" height="15" fill="rgb(248,130,54)" fg:x="1586760238" fg:w="11033099"/><text x="16.0337%" y="1327.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (11,033,099 samples, 0.11%)</title><rect x="15.7837%" y="1301" width="0.1097%" height="15" fill="rgb(234,196,4)" fg:x="1586760238" fg:w="11033099"/><text x="16.0337%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (2,006,018 samples, 0.02%)</title><rect x="15.8735%" y="1285" width="0.0200%" height="15" fill="rgb(250,143,31)" fg:x="1595787319" fg:w="2006018"/><text x="16.1235%" y="1295.50"></text></g><g><title>core::ops::function::FnOnce::call_once (8,024,072 samples, 0.08%)</title><rect x="15.9034%" y="1285" width="0.0798%" height="15" fill="rgb(211,110,34)" fg:x="1598796346" fg:w="8024072"/><text x="16.1534%" y="1295.50"></text></g><g><title>tokio::runtime::context::CONTEXT::{{constant}}::{{closure}} (8,024,072 samples, 0.08%)</title><rect x="15.9034%" y="1269" width="0.0798%" height="15" fill="rgb(215,124,48)" fg:x="1598796346" fg:w="8024072"/><text x="16.1534%" y="1279.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (8,024,072 samples, 0.08%)</title><rect x="15.9034%" y="1253" width="0.0798%" height="15" fill="rgb(216,46,13)" fg:x="1598796346" fg:w="8024072"/><text x="16.1534%" y="1263.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (7,021,063 samples, 0.07%)</title><rect x="15.9134%" y="1237" width="0.0698%" height="15" fill="rgb(205,184,25)" fg:x="1599799355" fg:w="7021063"/><text x="16.1634%" y="1247.50"></text></g><g><title>tokio::runtime::context::budget (11,033,099 samples, 0.11%)</title><rect x="15.8934%" y="1317" width="0.1097%" height="15" fill="rgb(228,1,10)" fg:x="1597793337" fg:w="11033099"/><text x="16.1434%" y="1327.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (10,030,090 samples, 0.10%)</title><rect x="15.9034%" y="1301" width="0.0998%" height="15" fill="rgb(213,116,27)" fg:x="1598796346" fg:w="10030090"/><text x="16.1534%" y="1311.50"></text></g><g><title>tokio::runtime::context::budget::{{closure}} (2,006,018 samples, 0.02%)</title><rect x="15.9832%" y="1285" width="0.0200%" height="15" fill="rgb(241,95,50)" fg:x="1606820418" fg:w="2006018"/><text x="16.2332%" y="1295.50"></text></g><g><title>tokio::task::coop::with_budget::{{closure}} (2,006,018 samples, 0.02%)</title><rect x="15.9832%" y="1269" width="0.0200%" height="15" fill="rgb(238,48,32)" fg:x="1606820418" fg:w="2006018"/><text x="16.2332%" y="1279.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (2,006,018 samples, 0.02%)</title><rect x="15.9832%" y="1253" width="0.0200%" height="15" fill="rgb(235,113,49)" fg:x="1606820418" fg:w="2006018"/><text x="16.2332%" y="1263.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (8,024,072 samples, 0.08%)</title><rect x="16.0231%" y="1301" width="0.0798%" height="15" fill="rgb(205,127,43)" fg:x="1610832454" fg:w="8024072"/><text x="16.2731%" y="1311.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (8,024,072 samples, 0.08%)</title><rect x="16.0231%" y="1285" width="0.0798%" height="15" fill="rgb(250,162,2)" fg:x="1610832454" fg:w="8024072"/><text x="16.2731%" y="1295.50"></text></g><g><title>core::cell::BorrowRefMut::new (8,024,072 samples, 0.08%)</title><rect x="16.0231%" y="1269" width="0.0798%" height="15" fill="rgb(220,13,41)" fg:x="1610832454" fg:w="8024072"/><text x="16.2731%" y="1279.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (6,018,054 samples, 0.06%)</title><rect x="16.1030%" y="1301" width="0.0599%" height="15" fill="rgb(249,221,25)" fg:x="1618856526" fg:w="6018054"/><text x="16.3530%" y="1311.50"></text></g><g><title>core::mem::replace (6,018,054 samples, 0.06%)</title><rect x="16.1030%" y="1285" width="0.0599%" height="15" fill="rgb(215,208,19)" fg:x="1618856526" fg:w="6018054"/><text x="16.3530%" y="1295.50"></text></g><g><title>core::ptr::write (6,018,054 samples, 0.06%)</title><rect x="16.1030%" y="1269" width="0.0599%" height="15" fill="rgb(236,175,2)" fg:x="1618856526" fg:w="6018054"/><text x="16.3530%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::reset_lifo_enabled (5,015,045 samples, 0.05%)</title><rect x="16.1728%" y="1301" width="0.0499%" height="15" fill="rgb(241,52,2)" fg:x="1625877589" fg:w="5015045"/><text x="16.4228%" y="1311.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (3,009,027 samples, 0.03%)</title><rect x="16.5420%" y="1077" width="0.0299%" height="15" fill="rgb(248,140,14)" fg:x="1662988922" fg:w="3009027"/><text x="16.7920%" y="1087.50"></text></g><g><title>syscall (3,009,027 samples, 0.03%)</title><rect x="16.5420%" y="1061" width="0.0299%" height="15" fill="rgb(253,22,42)" fg:x="1662988922" fg:w="3009027"/><text x="16.7920%" y="1071.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (5,015,045 samples, 0.05%)</title><rect x="16.5320%" y="1109" width="0.0499%" height="15" fill="rgb(234,61,47)" fg:x="1661985913" fg:w="5015045"/><text x="16.7820%" y="1119.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (5,015,045 samples, 0.05%)</title><rect x="16.5320%" y="1093" width="0.0499%" height="15" fill="rgb(208,226,15)" fg:x="1661985913" fg:w="5015045"/><text x="16.7820%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::yield_now (13,039,117 samples, 0.13%)</title><rect x="16.5020%" y="1253" width="0.1297%" height="15" fill="rgb(217,221,4)" fg:x="1658976886" fg:w="13039117"/><text x="16.7520%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (13,039,117 samples, 0.13%)</title><rect x="16.5020%" y="1237" width="0.1297%" height="15" fill="rgb(212,174,34)" fg:x="1658976886" fg:w="13039117"/><text x="16.7520%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (13,039,117 samples, 0.13%)</title><rect x="16.5020%" y="1221" width="0.1297%" height="15" fill="rgb(253,83,4)" fg:x="1658976886" fg:w="13039117"/><text x="16.7520%" y="1231.50"></text></g><g><title>tokio::runtime::context::with_scheduler (13,039,117 samples, 0.13%)</title><rect x="16.5020%" y="1205" width="0.1297%" height="15" fill="rgb(250,195,49)" fg:x="1658976886" fg:w="13039117"/><text x="16.7520%" y="1215.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (13,039,117 samples, 0.13%)</title><rect x="16.5020%" y="1189" width="0.1297%" height="15" fill="rgb(241,192,25)" fg:x="1658976886" fg:w="13039117"/><text x="16.7520%" y="1199.50"></text></g><g><title>tokio::runtime::context::with_scheduler::{{closure}} (13,039,117 samples, 0.13%)</title><rect x="16.5020%" y="1173" width="0.1297%" height="15" fill="rgb(208,124,10)" fg:x="1658976886" fg:w="13039117"/><text x="16.7520%" y="1183.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (12,036,108 samples, 0.12%)</title><rect x="16.5120%" y="1157" width="0.1197%" height="15" fill="rgb(222,33,0)" fg:x="1659979895" fg:w="12036108"/><text x="16.7620%" y="1167.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current::{{closure}} (12,036,108 samples, 0.12%)</title><rect x="16.5120%" y="1141" width="0.1197%" height="15" fill="rgb(234,209,28)" fg:x="1659979895" fg:w="12036108"/><text x="16.7620%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::{{closure}} (10,030,090 samples, 0.10%)</title><rect x="16.5320%" y="1125" width="0.0998%" height="15" fill="rgb(224,11,23)" fg:x="1661985913" fg:w="10030090"/><text x="16.7820%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (5,015,045 samples, 0.05%)</title><rect x="16.5819%" y="1109" width="0.0499%" height="15" fill="rgb(232,99,1)" fg:x="1667000958" fg:w="5015045"/><text x="16.8319%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (4,012,036 samples, 0.04%)</title><rect x="16.5918%" y="1093" width="0.0399%" height="15" fill="rgb(237,95,45)" fg:x="1668003967" fg:w="4012036"/><text x="16.8418%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (2,006,018 samples, 0.02%)</title><rect x="16.6118%" y="1077" width="0.0200%" height="15" fill="rgb(208,109,11)" fg:x="1670009985" fg:w="2006018"/><text x="16.8618%" y="1087.50"></text></g><g><title>__free (17,051,153 samples, 0.17%)</title><rect x="16.6717%" y="1237" width="0.1696%" height="15" fill="rgb(216,190,48)" fg:x="1676028039" fg:w="17051153"/><text x="16.9217%" y="1247.50"></text></g><g><title>_int_free (12,036,108 samples, 0.12%)</title><rect x="16.7215%" y="1221" width="0.1197%" height="15" fill="rgb(251,171,36)" fg:x="1681043084" fg:w="12036108"/><text x="16.9715%" y="1231.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (4,012,036 samples, 0.04%)</title><rect x="16.8512%" y="1237" width="0.0399%" height="15" fill="rgb(230,62,22)" fg:x="1694082201" fg:w="4012036"/><text x="17.1012%" y="1247.50"></text></g><g><title>__memcpy_evex_unaligned_erms (5,015,045 samples, 0.05%)</title><rect x="16.8912%" y="1109" width="0.0499%" height="15" fill="rgb(225,114,35)" fg:x="1698094237" fg:w="5015045"/><text x="17.1412%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::TaskIdGuard&gt; (5,015,045 samples, 0.05%)</title><rect x="16.9410%" y="1109" width="0.0499%" height="15" fill="rgb(215,118,42)" fg:x="1703109282" fg:w="5015045"/><text x="17.1910%" y="1119.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (5,015,045 samples, 0.05%)</title><rect x="16.9410%" y="1093" width="0.0499%" height="15" fill="rgb(243,119,21)" fg:x="1703109282" fg:w="5015045"/><text x="17.1910%" y="1103.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (16,048,144 samples, 0.16%)</title><rect x="16.9909%" y="1109" width="0.1596%" height="15" fill="rgb(252,177,53)" fg:x="1708124327" fg:w="16048144"/><text x="17.2409%" y="1119.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage::{{closure}} (16,048,144 samples, 0.16%)</title><rect x="16.9909%" y="1093" width="0.1596%" height="15" fill="rgb(237,209,29)" fg:x="1708124327" fg:w="16048144"/><text x="17.2409%" y="1103.50"></text></g><g><title>__memcpy_evex_unaligned_erms (15,045,135 samples, 0.15%)</title><rect x="17.0009%" y="1077" width="0.1497%" height="15" fill="rgb(212,65,23)" fg:x="1709127336" fg:w="15045135"/><text x="17.2509%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (28,084,252 samples, 0.28%)</title><rect x="16.8912%" y="1237" width="0.2794%" height="15" fill="rgb(230,222,46)" fg:x="1698094237" fg:w="28084252"/><text x="17.1412%" y="1247.50"></text></g><g><title>std::panicking::try (28,084,252 samples, 0.28%)</title><rect x="16.8912%" y="1221" width="0.2794%" height="15" fill="rgb(215,135,32)" fg:x="1698094237" fg:w="28084252"/><text x="17.1412%" y="1231.50"></text></g><g><title>std::panicking::try::do_call (28,084,252 samples, 0.28%)</title><rect x="16.8912%" y="1205" width="0.2794%" height="15" fill="rgb(246,101,22)" fg:x="1698094237" fg:w="28084252"/><text x="17.1412%" y="1215.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (28,084,252 samples, 0.28%)</title><rect x="16.8912%" y="1189" width="0.2794%" height="15" fill="rgb(206,107,13)" fg:x="1698094237" fg:w="28084252"/><text x="17.1412%" y="1199.50"></text></g><g><title>core::ops::function::FnOnce::call_once (28,084,252 samples, 0.28%)</title><rect x="16.8912%" y="1173" width="0.2794%" height="15" fill="rgb(250,100,44)" fg:x="1698094237" fg:w="28084252"/><text x="17.1412%" y="1183.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete::{{closure}} (28,084,252 samples, 0.28%)</title><rect x="16.8912%" y="1157" width="0.2794%" height="15" fill="rgb(231,147,38)" fg:x="1698094237" fg:w="28084252"/><text x="17.1412%" y="1167.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::drop_future_or_output (28,084,252 samples, 0.28%)</title><rect x="16.8912%" y="1141" width="0.2794%" height="15" fill="rgb(229,8,40)" fg:x="1698094237" fg:w="28084252"/><text x="17.1412%" y="1151.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (28,084,252 samples, 0.28%)</title><rect x="16.8912%" y="1125" width="0.2794%" height="15" fill="rgb(221,135,30)" fg:x="1698094237" fg:w="28084252"/><text x="17.1412%" y="1135.50"></text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (2,006,018 samples, 0.02%)</title><rect x="17.1506%" y="1109" width="0.0200%" height="15" fill="rgb(249,193,18)" fg:x="1724172471" fg:w="2006018"/><text x="17.4006%" y="1119.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::dealloc (2,006,018 samples, 0.02%)</title><rect x="17.1705%" y="1237" width="0.0200%" height="15" fill="rgb(209,133,39)" fg:x="1726178489" fg:w="2006018"/><text x="17.4205%" y="1247.50"></text></g><g><title>core::mem::drop (2,006,018 samples, 0.02%)</title><rect x="17.1705%" y="1221" width="0.0200%" height="15" fill="rgb(232,100,14)" fg:x="1726178489" fg:w="2006018"/><text x="17.4205%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tokio::runtime::task::core::Cell&lt;hyper::proto::h2::server::H2Stream&lt;hyper_util::service::glue::TowerToHyperServiceFuture&lt;tower::util::map_request::MapRequest&lt;axum::routing::Router,&lt;axum::serve::WithGracefulShutdown&lt;tokio::net::tcp::listener::TcpListener,axum::routing::Router,axum::routing::Router,interview::shutdown_signal::{{closure}}&gt; as core::future::into_future::IntoFuture&gt;::into_future::{{closure}}::{{closure}}&gt;,http::request::Request&lt;hyper::body::incoming::Incoming&gt;&gt;,axum_core::body::Body&gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;&gt;&gt; (2,006,018 samples, 0.02%)</title><rect x="17.1705%" y="1205" width="0.0200%" height="15" fill="rgb(224,185,1)" fg:x="1726178489" fg:w="2006018"/><text x="17.4205%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::release (10,030,090 samples, 0.10%)</title><rect x="17.1905%" y="1221" width="0.0998%" height="15" fill="rgb(223,139,8)" fg:x="1728184507" fg:w="10030090"/><text x="17.4405%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::util::linked_list::LinkedList&lt;tokio::runtime::task::Task&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;,tokio::runtime::task::core::Header&gt;&gt;&gt; (2,006,018 samples, 0.02%)</title><rect x="17.3202%" y="1205" width="0.0200%" height="15" fill="rgb(232,213,38)" fg:x="1741223624" fg:w="2006018"/><text x="17.5702%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::util::linked_list::LinkedList&lt;tokio::runtime::task::Task&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;,tokio::runtime::task::core::Header&gt;&gt;&gt; (2,006,018 samples, 0.02%)</title><rect x="17.3202%" y="1189" width="0.0200%" height="15" fill="rgb(207,94,22)" fg:x="1741223624" fg:w="2006018"/><text x="17.5702%" y="1199.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (2,006,018 samples, 0.02%)</title><rect x="17.3202%" y="1173" width="0.0200%" height="15" fill="rgb(219,183,54)" fg:x="1741223624" fg:w="2006018"/><text x="17.5702%" y="1183.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (2,006,018 samples, 0.02%)</title><rect x="17.3202%" y="1157" width="0.0200%" height="15" fill="rgb(216,185,54)" fg:x="1741223624" fg:w="2006018"/><text x="17.5702%" y="1167.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (3,009,027 samples, 0.03%)</title><rect x="17.3401%" y="1205" width="0.0299%" height="15" fill="rgb(254,217,39)" fg:x="1743229642" fg:w="3009027"/><text x="17.5901%" y="1215.50"></text></g><g><title>tokio::util::metric_atomics::MetricAtomicUsize::decrement (9,027,081 samples, 0.09%)</title><rect x="17.3700%" y="1205" width="0.0898%" height="15" fill="rgb(240,178,23)" fg:x="1746238669" fg:w="9027081"/><text x="17.6200%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (9,027,081 samples, 0.09%)</title><rect x="17.3700%" y="1189" width="0.0898%" height="15" fill="rgb(218,11,47)" fg:x="1746238669" fg:w="9027081"/><text x="17.6200%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_sub (9,027,081 samples, 0.09%)</title><rect x="17.3700%" y="1173" width="0.0898%" height="15" fill="rgb(218,51,51)" fg:x="1746238669" fg:w="9027081"/><text x="17.6200%" y="1183.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::release (46,138,414 samples, 0.46%)</title><rect x="17.1905%" y="1237" width="0.4589%" height="15" fill="rgb(238,126,27)" fg:x="1728184507" fg:w="46138414"/><text x="17.4405%" y="1247.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (36,108,324 samples, 0.36%)</title><rect x="17.2902%" y="1221" width="0.3592%" height="15" fill="rgb(249,202,22)" fg:x="1738214597" fg:w="36108324"/><text x="17.5402%" y="1231.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::shard_inner (19,057,171 samples, 0.19%)</title><rect x="17.4598%" y="1205" width="0.1896%" height="15" fill="rgb(254,195,49)" fg:x="1755265750" fg:w="19057171"/><text x="17.7098%" y="1215.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (18,054,162 samples, 0.18%)</title><rect x="17.4698%" y="1189" width="0.1796%" height="15" fill="rgb(208,123,14)" fg:x="1756268759" fg:w="18054162"/><text x="17.7198%" y="1199.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (18,054,162 samples, 0.18%)</title><rect x="17.4698%" y="1173" width="0.1796%" height="15" fill="rgb(224,200,8)" fg:x="1756268759" fg:w="18054162"/><text x="17.7198%" y="1183.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (18,054,162 samples, 0.18%)</title><rect x="17.4698%" y="1157" width="0.1796%" height="15" fill="rgb(217,61,36)" fg:x="1756268759" fg:w="18054162"/><text x="17.7198%" y="1167.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_complete (3,009,027 samples, 0.03%)</title><rect x="17.6494%" y="1237" width="0.0299%" height="15" fill="rgb(206,35,45)" fg:x="1774322921" fg:w="3009027"/><text x="17.8994%" y="1247.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (108,324,972 samples, 1.08%)</title><rect x="16.6317%" y="1253" width="1.0775%" height="15" fill="rgb(217,65,33)" fg:x="1672016003" fg:w="108324972"/><text x="16.8817%" y="1263.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_terminal (3,009,027 samples, 0.03%)</title><rect x="17.6793%" y="1237" width="0.0299%" height="15" fill="rgb(222,158,48)" fg:x="1777331948" fg:w="3009027"/><text x="17.9293%" y="1247.50"></text></g><g><title>tokio::runtime::task::state::Snapshot::ref_count (2,006,018 samples, 0.02%)</title><rect x="17.6893%" y="1221" width="0.0200%" height="15" fill="rgb(254,2,54)" fg:x="1778334957" fg:w="2006018"/><text x="17.9393%" y="1231.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (3,009,027 samples, 0.03%)</title><rect x="17.7093%" y="1253" width="0.0299%" height="15" fill="rgb(250,143,38)" fg:x="1780340975" fg:w="3009027"/><text x="17.9593%" y="1263.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (2,006,018 samples, 0.02%)</title><rect x="17.7192%" y="1237" width="0.0200%" height="15" fill="rgb(248,25,0)" fg:x="1781343984" fg:w="2006018"/><text x="17.9692%" y="1247.50"></text></g><g><title>&lt;tokio::sync::notify::Notified as core::future::future::Future&gt;::poll (2,006,018 samples, 0.02%)</title><rect x="18.6671%" y="949" width="0.0200%" height="15" fill="rgb(206,152,27)" fg:x="1876629839" fg:w="2006018"/><text x="18.9171%" y="959.50"></text></g><g><title>core::task::wake::Context::waker (2,006,018 samples, 0.02%)</title><rect x="18.6671%" y="933" width="0.0200%" height="15" fill="rgb(240,77,30)" fg:x="1876629839" fg:w="2006018"/><text x="18.9171%" y="943.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (11,033,099 samples, 0.11%)</title><rect x="18.7369%" y="933" width="0.1097%" height="15" fill="rgb(231,5,3)" fg:x="1883650902" fg:w="11033099"/><text x="18.9869%" y="943.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (11,033,099 samples, 0.11%)</title><rect x="18.7369%" y="917" width="0.1097%" height="15" fill="rgb(207,226,32)" fg:x="1883650902" fg:w="11033099"/><text x="18.9869%" y="927.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (11,033,099 samples, 0.11%)</title><rect x="18.7369%" y="901" width="0.1097%" height="15" fill="rgb(222,207,47)" fg:x="1883650902" fg:w="11033099"/><text x="18.9869%" y="911.50"></text></g><g><title>tokio::sync::watch::Sender&lt;T&gt;::closed::{{closure}}::{{closure}} (23,069,207 samples, 0.23%)</title><rect x="18.6272%" y="965" width="0.2295%" height="15" fill="rgb(229,115,45)" fg:x="1872617803" fg:w="23069207"/><text x="18.8772%" y="975.50"></text></g><g><title>tokio::sync::notify::Notified::poll_notified (17,051,153 samples, 0.17%)</title><rect x="18.6870%" y="949" width="0.1696%" height="15" fill="rgb(224,191,6)" fg:x="1878635857" fg:w="17051153"/><text x="18.9370%" y="959.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (44,132,396 samples, 0.44%)</title><rect x="18.4276%" y="1045" width="0.4390%" height="15" fill="rgb(230,227,24)" fg:x="1852557623" fg:w="44132396"/><text x="18.6776%" y="1055.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (44,132,396 samples, 0.44%)</title><rect x="18.4276%" y="1029" width="0.4390%" height="15" fill="rgb(228,80,19)" fg:x="1852557623" fg:w="44132396"/><text x="18.6776%" y="1039.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (44,132,396 samples, 0.44%)</title><rect x="18.4276%" y="1013" width="0.4390%" height="15" fill="rgb(247,229,0)" fg:x="1852557623" fg:w="44132396"/><text x="18.6776%" y="1023.50"></text></g><g><title>tokio::sync::watch::Sender&lt;T&gt;::closed::{{closure}} (44,132,396 samples, 0.44%)</title><rect x="18.4276%" y="997" width="0.4390%" height="15" fill="rgb(237,194,15)" fg:x="1852557623" fg:w="44132396"/><text x="18.6776%" y="1007.50"></text></g><g><title>&lt;tokio::task::coop::Coop&lt;F&gt; as core::future::future::Future&gt;::poll (30,090,270 samples, 0.30%)</title><rect x="18.5673%" y="981" width="0.2993%" height="15" fill="rgb(219,203,20)" fg:x="1866599749" fg:w="30090270"/><text x="18.8173%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::join::JoinHandle&lt;()&gt;&gt; (2,006,018 samples, 0.02%)</title><rect x="19.2058%" y="933" width="0.0200%" height="15" fill="rgb(234,128,8)" fg:x="1930792325" fg:w="2006018"/><text x="19.4558%" y="943.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,006,018 samples, 0.02%)</title><rect x="19.2058%" y="917" width="0.0200%" height="15" fill="rgb(248,202,8)" fg:x="1930792325" fg:w="2006018"/><text x="19.4558%" y="927.50"></text></g><g><title>tokio::runtime::task::state::State::drop_join_handle_fast (2,006,018 samples, 0.02%)</title><rect x="19.2058%" y="901" width="0.0200%" height="15" fill="rgb(206,104,37)" fg:x="1930792325" fg:w="2006018"/><text x="19.4558%" y="911.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (2,006,018 samples, 0.02%)</title><rect x="19.2058%" y="885" width="0.0200%" height="15" fill="rgb(223,8,27)" fg:x="1930792325" fg:w="2006018"/><text x="19.4558%" y="895.50"></text></g><g><title>&lt;E as hyper::rt::bounds::h2::Http2ServerConnExec&lt;F,B&gt;&gt;::execute_h2stream (5,015,045 samples, 0.05%)</title><rect x="19.2058%" y="965" width="0.0499%" height="15" fill="rgb(216,217,28)" fg:x="1930792325" fg:w="5015045"/><text x="19.4558%" y="975.50"></text></g><g><title>&lt;hyper_util::rt::tokio::TokioExecutor as hyper::rt::Executor&lt;Fut&gt;&gt;::execute (5,015,045 samples, 0.05%)</title><rect x="19.2058%" y="949" width="0.0499%" height="15" fill="rgb(249,199,1)" fg:x="1930792325" fg:w="5015045"/><text x="19.4558%" y="959.50"></text></g><g><title>tokio::task::spawn::spawn (3,009,027 samples, 0.03%)</title><rect x="19.2258%" y="933" width="0.0299%" height="15" fill="rgb(240,85,17)" fg:x="1932798343" fg:w="3009027"/><text x="19.4758%" y="943.50"></text></g><g><title>&lt;T as hyper::service::http::HttpService&lt;B1&gt;&gt;::call (5,015,045 samples, 0.05%)</title><rect x="19.2557%" y="965" width="0.0499%" height="15" fill="rgb(206,108,45)" fg:x="1935807370" fg:w="5015045"/><text x="19.5057%" y="975.50"></text></g><g><title>&lt;hyper_util::service::glue::TowerToHyperService&lt;S&gt; as hyper::service::service::Service&lt;R&gt;&gt;::call (5,015,045 samples, 0.05%)</title><rect x="19.2557%" y="949" width="0.0499%" height="15" fill="rgb(245,210,41)" fg:x="1935807370" fg:w="5015045"/><text x="19.5057%" y="959.50"></text></g><g><title>&lt;tower::util::map_request::MapRequest&lt;S,F&gt; as core::clone::Clone&gt;::clone (5,015,045 samples, 0.05%)</title><rect x="19.2557%" y="933" width="0.0499%" height="15" fill="rgb(206,13,37)" fg:x="1935807370" fg:w="5015045"/><text x="19.5057%" y="943.50"></text></g><g><title>&lt;axum::routing::Router&lt;S&gt; as core::clone::Clone&gt;::clone (5,015,045 samples, 0.05%)</title><rect x="19.2557%" y="917" width="0.0499%" height="15" fill="rgb(250,61,18)" fg:x="1935807370" fg:w="5015045"/><text x="19.5057%" y="927.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,015,045 samples, 0.05%)</title><rect x="19.2557%" y="901" width="0.0499%" height="15" fill="rgb(235,172,48)" fg:x="1935807370" fg:w="5015045"/><text x="19.5057%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (5,015,045 samples, 0.05%)</title><rect x="19.2557%" y="885" width="0.0499%" height="15" fill="rgb(249,201,17)" fg:x="1935807370" fg:w="5015045"/><text x="19.5057%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_add (5,015,045 samples, 0.05%)</title><rect x="19.2557%" y="869" width="0.0499%" height="15" fill="rgb(219,208,6)" fg:x="1935807370" fg:w="5015045"/><text x="19.5057%" y="879.50"></text></g><g><title>__memcpy_evex_unaligned_erms (12,036,108 samples, 0.12%)</title><rect x="19.3056%" y="965" width="0.1197%" height="15" fill="rgb(248,31,23)" fg:x="1940822415" fg:w="12036108"/><text x="19.5556%" y="975.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (3,009,027 samples, 0.03%)</title><rect x="19.4253%" y="965" width="0.0299%" height="15" fill="rgb(245,15,42)" fg:x="1952858523" fg:w="3009027"/><text x="19.6753%" y="975.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (3,009,027 samples, 0.03%)</title><rect x="19.4253%" y="949" width="0.0299%" height="15" fill="rgb(222,217,39)" fg:x="1952858523" fg:w="3009027"/><text x="19.6753%" y="959.50"></text></g><g><title>h2::server::Connection&lt;T,B&gt;::poll_accept (8,024,072 samples, 0.08%)</title><rect x="19.4553%" y="965" width="0.0798%" height="15" fill="rgb(210,219,27)" fg:x="1955867550" fg:w="8024072"/><text x="19.7053%" y="975.50"></text></g><g><title>http::extensions::Extensions::remove (2,006,018 samples, 0.02%)</title><rect x="19.5351%" y="965" width="0.0200%" height="15" fill="rgb(252,166,36)" fg:x="1963891622" fg:w="2006018"/><text x="19.7851%" y="975.50"></text></g><g><title>http::request::Request&lt;T&gt;::from_parts (3,009,027 samples, 0.03%)</title><rect x="19.5550%" y="965" width="0.0299%" height="15" fill="rgb(245,132,34)" fg:x="1965897640" fg:w="3009027"/><text x="19.8050%" y="975.50"></text></g><g><title>__memcpy_evex_unaligned_erms (2,006,018 samples, 0.02%)</title><rect x="19.5650%" y="949" width="0.0200%" height="15" fill="rgb(236,54,3)" fg:x="1966900649" fg:w="2006018"/><text x="19.8150%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::poison::mutex::MutexGuard&lt;h2::proto::streams::streams::Inner&gt;&gt; (2,006,018 samples, 0.02%)</title><rect x="19.6548%" y="933" width="0.0200%" height="15" fill="rgb(241,173,43)" fg:x="1975927730" fg:w="2006018"/><text x="19.9048%" y="943.50"></text></g><g><title>&lt;std::sync::poison::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,006,018 samples, 0.02%)</title><rect x="19.6548%" y="917" width="0.0200%" height="15" fill="rgb(215,190,9)" fg:x="1975927730" fg:w="2006018"/><text x="19.9048%" y="927.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (2,006,018 samples, 0.02%)</title><rect x="19.6548%" y="901" width="0.0200%" height="15" fill="rgb(242,101,16)" fg:x="1975927730" fg:w="2006018"/><text x="19.9048%" y="911.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (5,015,045 samples, 0.05%)</title><rect x="19.6947%" y="885" width="0.0499%" height="15" fill="rgb(223,190,21)" fg:x="1979939766" fg:w="5015045"/><text x="19.9447%" y="895.50"></text></g><g><title>syscall (5,015,045 samples, 0.05%)</title><rect x="19.6947%" y="869" width="0.0499%" height="15" fill="rgb(215,228,25)" fg:x="1979939766" fg:w="5015045"/><text x="19.9447%" y="879.50"></text></g><g><title>h2::proto::streams::streams::OpaqueStreamRef::is_end_stream (12,036,108 samples, 0.12%)</title><rect x="19.6348%" y="949" width="0.1197%" height="15" fill="rgb(225,36,22)" fg:x="1973921712" fg:w="12036108"/><text x="19.8848%" y="959.50"></text></g><g><title>std::sync::poison::mutex::Mutex&lt;T&gt;::lock (7,021,063 samples, 0.07%)</title><rect x="19.6847%" y="933" width="0.0698%" height="15" fill="rgb(251,106,46)" fg:x="1978936757" fg:w="7021063"/><text x="19.9347%" y="943.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (7,021,063 samples, 0.07%)</title><rect x="19.6847%" y="917" width="0.0698%" height="15" fill="rgb(208,90,1)" fg:x="1978936757" fg:w="7021063"/><text x="19.9347%" y="927.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (6,018,054 samples, 0.06%)</title><rect x="19.6947%" y="901" width="0.0599%" height="15" fill="rgb(243,10,4)" fg:x="1979939766" fg:w="6018054"/><text x="19.9447%" y="911.50"></text></g><g><title>hyper::body::incoming::Incoming::h2 (18,054,162 samples, 0.18%)</title><rect x="19.5850%" y="965" width="0.1796%" height="15" fill="rgb(212,137,27)" fg:x="1968906667" fg:w="18054162"/><text x="19.8350%" y="975.50"></text></g><g><title>http::header::map::Pos::resolve (4,012,036 samples, 0.04%)</title><rect x="19.8344%" y="901" width="0.0399%" height="15" fill="rgb(231,220,49)" fg:x="1993981892" fg:w="4012036"/><text x="20.0844%" y="911.50"></text></g><g><title>http::header::map::Pos::is_some (2,006,018 samples, 0.02%)</title><rect x="19.8543%" y="885" width="0.0200%" height="15" fill="rgb(237,96,20)" fg:x="1995987910" fg:w="2006018"/><text x="20.1043%" y="895.50"></text></g><g><title>http::header::map::Pos::is_none (2,006,018 samples, 0.02%)</title><rect x="19.8543%" y="869" width="0.0200%" height="15" fill="rgb(239,229,30)" fg:x="1995987910" fg:w="2006018"/><text x="20.1043%" y="879.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::get_all (10,030,090 samples, 0.10%)</title><rect x="19.7845%" y="949" width="0.0998%" height="15" fill="rgb(219,65,33)" fg:x="1988966847" fg:w="10030090"/><text x="20.0345%" y="959.50"></text></g><g><title>&lt;http::header::name::HeaderName as http::header::map::as_header_name::Sealed&gt;::find (6,018,054 samples, 0.06%)</title><rect x="19.8244%" y="933" width="0.0599%" height="15" fill="rgb(243,134,7)" fg:x="1992978883" fg:w="6018054"/><text x="20.0744%" y="943.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::find (6,018,054 samples, 0.06%)</title><rect x="19.8244%" y="917" width="0.0599%" height="15" fill="rgb(216,177,54)" fg:x="1992978883" fg:w="6018054"/><text x="20.0744%" y="927.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim (4,012,036 samples, 0.04%)</title><rect x="19.8942%" y="933" width="0.0399%" height="15" fill="rgb(211,160,20)" fg:x="1999999946" fg:w="4012036"/><text x="20.1442%" y="943.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_matches (4,012,036 samples, 0.04%)</title><rect x="19.8942%" y="917" width="0.0399%" height="15" fill="rgb(239,85,39)" fg:x="1999999946" fg:w="4012036"/><text x="20.1442%" y="927.50"></text></g><g><title>hyper::headers::content_length_parse_all (19,057,171 samples, 0.19%)</title><rect x="19.7645%" y="965" width="0.1896%" height="15" fill="rgb(232,125,22)" fg:x="1986960829" fg:w="19057171"/><text x="20.0145%" y="975.50"></text></g><g><title>hyper::headers::content_length_parse_all_values (7,021,063 samples, 0.07%)</title><rect x="19.8843%" y="949" width="0.0698%" height="15" fill="rgb(244,57,34)" fg:x="1998996937" fg:w="7021063"/><text x="20.1343%" y="959.50"></text></g><g><title>hyper::headers::from_digits (2,006,018 samples, 0.02%)</title><rect x="19.9342%" y="933" width="0.0200%" height="15" fill="rgb(214,203,32)" fg:x="2004011982" fg:w="2006018"/><text x="20.1842%" y="943.50"></text></g><g><title>hyper::proto::h2::ping::Recorder::record_non_data (2,006,018 samples, 0.02%)</title><rect x="19.9541%" y="965" width="0.0200%" height="15" fill="rgb(207,58,43)" fg:x="2006018000" fg:w="2006018"/><text x="20.2041%" y="975.50"></text></g><g><title>&lt;hyper::server::conn::http2::Connection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (109,327,981 samples, 1.09%)</title><rect x="18.9065%" y="1013" width="1.0875%" height="15" fill="rgb(215,193,15)" fg:x="1900702055" fg:w="109327981"/><text x="19.1565%" y="1023.50"></text></g><g><title>&lt;hyper::proto::h2::server::Server&lt;T,S,B,E&gt; as core::future::future::Future&gt;::poll (98,294,882 samples, 0.98%)</title><rect x="19.0163%" y="997" width="0.9778%" height="15" fill="rgb(232,15,44)" fg:x="1911735154" fg:w="98294882"/><text x="19.2663%" y="1007.50"></text></g><g><title>hyper::proto::h2::server::Serving&lt;T,B&gt;::poll_server (89,267,801 samples, 0.89%)</title><rect x="19.1061%" y="981" width="0.8880%" height="15" fill="rgb(212,3,48)" fg:x="1920762235" fg:w="89267801"/><text x="19.3561%" y="991.50"></text></g><g><title>core::task::poll::Poll&lt;core::result::Result&lt;T,E&gt;&gt;::map_err (9,027,081 samples, 0.09%)</title><rect x="19.9940%" y="1013" width="0.0898%" height="15" fill="rgb(218,128,7)" fg:x="2010030036" fg:w="9027081"/><text x="20.2440%" y="1023.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (128,385,152 samples, 1.28%)</title><rect x="18.8666%" y="1045" width="1.2771%" height="15" fill="rgb(226,216,39)" fg:x="1896690019" fg:w="128385152"/><text x="19.1166%" y="1055.50"></text></g><g><title>&lt;hyper_util::server::conn::auto::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (128,385,152 samples, 1.28%)</title><rect x="18.8666%" y="1029" width="1.2771%" height="15" fill="rgb(243,47,51)" fg:x="1896690019" fg:w="128385152"/><text x="19.1166%" y="1039.50"></text></g><g><title>hyper_util::server::conn::auto::_::&lt;impl hyper_util::server::conn::auto::UpgradeableConnState&lt;I,S,E&gt;&gt;::project (6,018,054 samples, 0.06%)</title><rect x="20.0838%" y="1013" width="0.0599%" height="15" fill="rgb(241,183,40)" fg:x="2019057117" fg:w="6018054"/><text x="20.3338%" y="1023.50"></text></g><g><title>tokio::macros::support::poll_budget_available (5,015,045 samples, 0.05%)</title><rect x="20.1437%" y="1045" width="0.0499%" height="15" fill="rgb(231,217,32)" fg:x="2025075171" fg:w="5015045"/><text x="20.3937%" y="1055.50"></text></g><g><title>tokio::task::coop::poll_budget_available (5,015,045 samples, 0.05%)</title><rect x="20.1437%" y="1029" width="0.0499%" height="15" fill="rgb(229,61,38)" fg:x="2025075171" fg:w="5015045"/><text x="20.3937%" y="1039.50"></text></g><g><title>tokio::task::coop::has_budget_remaining (5,015,045 samples, 0.05%)</title><rect x="20.1437%" y="1013" width="0.0499%" height="15" fill="rgb(225,210,5)" fg:x="2025075171" fg:w="5015045"/><text x="20.3937%" y="1023.50"></text></g><g><title>tokio::runtime::context::budget (5,015,045 samples, 0.05%)</title><rect x="20.1437%" y="997" width="0.0499%" height="15" fill="rgb(231,79,45)" fg:x="2025075171" fg:w="5015045"/><text x="20.3937%" y="1007.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5,015,045 samples, 0.05%)</title><rect x="20.1437%" y="981" width="0.0499%" height="15" fill="rgb(224,100,7)" fg:x="2025075171" fg:w="5015045"/><text x="20.3937%" y="991.50"></text></g><g><title>tokio::runtime::context::budget::{{closure}} (5,015,045 samples, 0.05%)</title><rect x="20.1437%" y="965" width="0.0499%" height="15" fill="rgb(241,198,18)" fg:x="2025075171" fg:w="5015045"/><text x="20.3937%" y="975.50"></text></g><g><title>tokio::task::coop::has_budget_remaining::{{closure}} (5,015,045 samples, 0.05%)</title><rect x="20.1437%" y="949" width="0.0499%" height="15" fill="rgb(252,97,53)" fg:x="2025075171" fg:w="5015045"/><text x="20.3937%" y="959.50"></text></g><g><title>tokio::task::coop::Budget::has_remaining (2,006,018 samples, 0.02%)</title><rect x="20.1736%" y="933" width="0.0200%" height="15" fill="rgb(220,88,7)" fg:x="2028084198" fg:w="2006018"/><text x="20.4236%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (2,006,018 samples, 0.02%)</title><rect x="20.1736%" y="917" width="0.0200%" height="15" fill="rgb(213,176,14)" fg:x="2028084198" fg:w="2006018"/><text x="20.4236%" y="927.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (2,006,018 samples, 0.02%)</title><rect x="20.2634%" y="965" width="0.0200%" height="15" fill="rgb(246,73,7)" fg:x="2037111279" fg:w="2006018"/><text x="20.5134%" y="975.50"></text></g><g><title>&lt;axum::serve::WithGracefulShutdown&lt;L,M,S,F&gt; as core::future::into_future::IntoFuture&gt;::into_future::{{closure}}::{{closure}} (218,655,962 samples, 2.17%)</title><rect x="18.1283%" y="1093" width="2.1750%" height="15" fill="rgb(245,64,36)" fg:x="1822467353" fg:w="218655962"/><text x="18.3783%" y="1103.50">&lt;..</text></g><g><title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (192,577,728 samples, 1.92%)</title><rect x="18.3877%" y="1077" width="1.9156%" height="15" fill="rgb(245,80,10)" fg:x="1848545587" fg:w="192577728"/><text x="18.6377%" y="1087.50">&lt;..</text></g><g><title>&lt;axum::serve::WithGracefulShutdown&lt;L,M,S,F&gt; as core::future::into_future::IntoFuture&gt;::into_future::{{closure}}::{{closure}}::{{closure}} (191,574,719 samples, 1.91%)</title><rect x="18.3977%" y="1061" width="1.9056%" height="15" fill="rgb(232,107,50)" fg:x="1849548596" fg:w="191574719"/><text x="18.6477%" y="1071.50">&lt;..</text></g><g><title>tokio::macros::support::thread_rng_n (11,033,099 samples, 0.11%)</title><rect x="20.1936%" y="1045" width="0.1097%" height="15" fill="rgb(253,3,0)" fg:x="2030090216" fg:w="11033099"/><text x="20.4436%" y="1055.50"></text></g><g><title>tokio::runtime::context::thread_rng_n (4,012,036 samples, 0.04%)</title><rect x="20.2634%" y="1029" width="0.0399%" height="15" fill="rgb(212,99,53)" fg:x="2037111279" fg:w="4012036"/><text x="20.5134%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4,012,036 samples, 0.04%)</title><rect x="20.2634%" y="1013" width="0.0399%" height="15" fill="rgb(249,111,54)" fg:x="2037111279" fg:w="4012036"/><text x="20.5134%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4,012,036 samples, 0.04%)</title><rect x="20.2634%" y="997" width="0.0399%" height="15" fill="rgb(249,55,30)" fg:x="2037111279" fg:w="4012036"/><text x="20.5134%" y="1007.50"></text></g><g><title>tokio::runtime::context::thread_rng_n::{{closure}} (4,012,036 samples, 0.04%)</title><rect x="20.2634%" y="981" width="0.0399%" height="15" fill="rgb(237,47,42)" fg:x="2037111279" fg:w="4012036"/><text x="20.5134%" y="991.50"></text></g><g><title>tokio::util::rand::FastRand::fastrand_n (2,006,018 samples, 0.02%)</title><rect x="20.2833%" y="965" width="0.0200%" height="15" fill="rgb(211,20,18)" fg:x="2039117297" fg:w="2006018"/><text x="20.5333%" y="975.50"></text></g><g><title>&lt;axum_core::body::Body as http_body::Body&gt;::is_end_stream (3,009,027 samples, 0.03%)</title><rect x="20.6525%" y="1061" width="0.0299%" height="15" fill="rgb(231,203,46)" fg:x="2076228630" fg:w="3009027"/><text x="20.9025%" y="1071.50"></text></g><g><title>&lt;http_body_util::combinators::box_body::UnsyncBoxBody&lt;D,E&gt; as http_body::Body&gt;::is_end_stream (3,009,027 samples, 0.03%)</title><rect x="20.6525%" y="1045" width="0.0299%" height="15" fill="rgb(237,142,3)" fg:x="2076228630" fg:w="3009027"/><text x="20.9025%" y="1055.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as http_body::Body&gt;::is_end_stream (3,009,027 samples, 0.03%)</title><rect x="20.6525%" y="1029" width="0.0299%" height="15" fill="rgb(241,107,1)" fg:x="2076228630" fg:w="3009027"/><text x="20.9025%" y="1039.50"></text></g><g><title>&lt;http_body_util::combinators::map_err::MapErr&lt;B,F&gt; as http_body::Body&gt;::is_end_stream (3,009,027 samples, 0.03%)</title><rect x="20.6525%" y="1013" width="0.0299%" height="15" fill="rgb(229,83,13)" fg:x="2076228630" fg:w="3009027"/><text x="20.9025%" y="1023.50"></text></g><g><title>&lt;http_body_util::full::Full&lt;D&gt; as http_body::Body&gt;::is_end_stream (2,006,018 samples, 0.02%)</title><rect x="20.6625%" y="997" width="0.0200%" height="15" fill="rgb(241,91,40)" fg:x="2077231639" fg:w="2006018"/><text x="20.9125%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (2,006,018 samples, 0.02%)</title><rect x="20.6625%" y="981" width="0.0200%" height="15" fill="rgb(225,3,45)" fg:x="2077231639" fg:w="2006018"/><text x="20.9125%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (2,006,018 samples, 0.02%)</title><rect x="20.6625%" y="965" width="0.0200%" height="15" fill="rgb(244,223,14)" fg:x="2077231639" fg:w="2006018"/><text x="20.9125%" y="975.50"></text></g><g><title>&lt;axum_core::body::Body as http_body::Body&gt;::poll_frame (3,009,027 samples, 0.03%)</title><rect x="20.7124%" y="1045" width="0.0299%" height="15" fill="rgb(224,124,37)" fg:x="2082246684" fg:w="3009027"/><text x="20.9624%" y="1055.50"></text></g><g><title>&lt;http_body_util::combinators::box_body::UnsyncBoxBody&lt;D,E&gt; as http_body::Body&gt;::poll_frame (3,009,027 samples, 0.03%)</title><rect x="20.7124%" y="1029" width="0.0299%" height="15" fill="rgb(251,171,30)" fg:x="2082246684" fg:w="3009027"/><text x="20.9624%" y="1039.50"></text></g><g><title>&lt;http_body_util::combinators::map_err::MapErr&lt;B,F&gt; as http_body::Body&gt;::poll_frame (2,006,018 samples, 0.02%)</title><rect x="20.7223%" y="1013" width="0.0200%" height="15" fill="rgb(236,46,54)" fg:x="2083249693" fg:w="2006018"/><text x="20.9723%" y="1023.50"></text></g><g><title>&lt;http_body_util::full::Full&lt;D&gt; as http_body::Body&gt;::poll_frame (2,006,018 samples, 0.02%)</title><rect x="20.7223%" y="997" width="0.0200%" height="15" fill="rgb(245,213,5)" fg:x="2083249693" fg:w="2006018"/><text x="20.9723%" y="1007.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2,006,018 samples, 0.02%)</title><rect x="20.7423%" y="1013" width="0.0200%" height="15" fill="rgb(230,144,27)" fg:x="2085255711" fg:w="2006018"/><text x="20.9923%" y="1023.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (2,006,018 samples, 0.02%)</title><rect x="20.7423%" y="997" width="0.0200%" height="15" fill="rgb(220,86,6)" fg:x="2085255711" fg:w="2006018"/><text x="20.9923%" y="1007.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (2,006,018 samples, 0.02%)</title><rect x="20.7423%" y="981" width="0.0200%" height="15" fill="rgb(240,20,13)" fg:x="2085255711" fg:w="2006018"/><text x="20.9923%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::poison::mutex::MutexGuard&lt;h2::proto::streams::streams::Inner&gt;&gt; (14,042,126 samples, 0.14%)</title><rect x="20.7722%" y="1013" width="0.1397%" height="15" fill="rgb(217,89,34)" fg:x="2088264738" fg:w="14042126"/><text x="21.0222%" y="1023.50"></text></g><g><title>&lt;std::sync::poison::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14,042,126 samples, 0.14%)</title><rect x="20.7722%" y="997" width="0.1397%" height="15" fill="rgb(229,13,5)" fg:x="2088264738" fg:w="14042126"/><text x="21.0222%" y="1007.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (14,042,126 samples, 0.14%)</title><rect x="20.7722%" y="981" width="0.1397%" height="15" fill="rgb(244,67,35)" fg:x="2088264738" fg:w="14042126"/><text x="21.0222%" y="991.50"></text></g><g><title>syscall (12,036,108 samples, 0.12%)</title><rect x="20.7922%" y="965" width="0.1197%" height="15" fill="rgb(221,40,2)" fg:x="2090270756" fg:w="12036108"/><text x="21.0422%" y="975.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::Deref&gt;::deref (3,009,027 samples, 0.03%)</title><rect x="20.9319%" y="997" width="0.0299%" height="15" fill="rgb(237,157,21)" fg:x="2104312882" fg:w="3009027"/><text x="21.1819%" y="1007.50"></text></g><g><title>h2::proto::streams::send::Send::capacity (6,018,054 samples, 0.06%)</title><rect x="20.9119%" y="1013" width="0.0599%" height="15" fill="rgb(222,94,11)" fg:x="2102306864" fg:w="6018054"/><text x="21.1619%" y="1023.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (12,036,108 samples, 0.12%)</title><rect x="21.0616%" y="965" width="0.1197%" height="15" fill="rgb(249,113,6)" fg:x="2117351999" fg:w="12036108"/><text x="21.3116%" y="975.50"></text></g><g><title>syscall (12,036,108 samples, 0.12%)</title><rect x="21.0616%" y="949" width="0.1197%" height="15" fill="rgb(238,137,36)" fg:x="2117351999" fg:w="12036108"/><text x="21.3116%" y="959.50"></text></g><g><title>h2::share::SendStream&lt;B&gt;::capacity (57,171,513 samples, 0.57%)</title><rect x="20.7423%" y="1045" width="0.5687%" height="15" fill="rgb(210,102,26)" fg:x="2085255711" fg:w="57171513"/><text x="20.9923%" y="1055.50"></text></g><g><title>h2::proto::streams::streams::StreamRef&lt;B&gt;::capacity (57,171,513 samples, 0.57%)</title><rect x="20.7423%" y="1029" width="0.5687%" height="15" fill="rgb(218,30,30)" fg:x="2085255711" fg:w="57171513"/><text x="20.9923%" y="1039.50"></text></g><g><title>std::sync::poison::mutex::Mutex&lt;T&gt;::lock (34,102,306 samples, 0.34%)</title><rect x="20.9718%" y="1013" width="0.3392%" height="15" fill="rgb(214,67,26)" fg:x="2108324918" fg:w="34102306"/><text x="21.2218%" y="1023.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (34,102,306 samples, 0.34%)</title><rect x="20.9718%" y="997" width="0.3392%" height="15" fill="rgb(251,9,53)" fg:x="2108324918" fg:w="34102306"/><text x="21.2218%" y="1007.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (28,084,252 samples, 0.28%)</title><rect x="21.0316%" y="981" width="0.2794%" height="15" fill="rgb(228,204,25)" fg:x="2114342972" fg:w="28084252"/><text x="21.2816%" y="991.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (13,039,117 samples, 0.13%)</title><rect x="21.1813%" y="965" width="0.1297%" height="15" fill="rgb(207,153,8)" fg:x="2129388107" fg:w="13039117"/><text x="21.4313%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (10,030,090 samples, 0.10%)</title><rect x="21.2112%" y="949" width="0.0998%" height="15" fill="rgb(242,9,16)" fg:x="2132397134" fg:w="10030090"/><text x="21.4612%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_load (10,030,090 samples, 0.10%)</title><rect x="21.2112%" y="933" width="0.0998%" height="15" fill="rgb(217,211,10)" fg:x="2132397134" fg:w="10030090"/><text x="21.4612%" y="943.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::DerefMut&gt;::deref_mut (2,006,018 samples, 0.02%)</title><rect x="21.3509%" y="1013" width="0.0200%" height="15" fill="rgb(219,228,52)" fg:x="2146439260" fg:w="2006018"/><text x="21.6009%" y="1023.50"></text></g><g><title>&lt;h2::proto::streams::store::Store as core::ops::index::IndexMut&lt;h2::proto::streams::store::Key&gt;&gt;::index_mut (2,006,018 samples, 0.02%)</title><rect x="21.3509%" y="997" width="0.0200%" height="15" fill="rgb(231,92,29)" fg:x="2146439260" fg:w="2006018"/><text x="21.6009%" y="1007.50"></text></g><g><title>slab::Slab&lt;T&gt;::get_mut (2,006,018 samples, 0.02%)</title><rect x="21.3509%" y="981" width="0.0200%" height="15" fill="rgb(232,8,23)" fg:x="2146439260" fg:w="2006018"/><text x="21.6009%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::poison::mutex::MutexGuard&lt;h2::proto::streams::streams::Inner&gt;&gt; (11,033,099 samples, 0.11%)</title><rect x="21.3808%" y="1013" width="0.1097%" height="15" fill="rgb(216,211,34)" fg:x="2149448287" fg:w="11033099"/><text x="21.6308%" y="1023.50"></text></g><g><title>&lt;std::sync::poison::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11,033,099 samples, 0.11%)</title><rect x="21.3808%" y="997" width="0.1097%" height="15" fill="rgb(236,151,0)" fg:x="2149448287" fg:w="11033099"/><text x="21.6308%" y="1007.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (11,033,099 samples, 0.11%)</title><rect x="21.3808%" y="981" width="0.1097%" height="15" fill="rgb(209,168,3)" fg:x="2149448287" fg:w="11033099"/><text x="21.6308%" y="991.50"></text></g><g><title>syscall (7,021,063 samples, 0.07%)</title><rect x="21.4207%" y="965" width="0.0698%" height="15" fill="rgb(208,129,28)" fg:x="2153460323" fg:w="7021063"/><text x="21.6707%" y="975.50"></text></g><g><title>h2::proto::streams::state::State::ensure_reason (6,018,054 samples, 0.06%)</title><rect x="21.5305%" y="997" width="0.0599%" height="15" fill="rgb(229,78,22)" fg:x="2164493422" fg:w="6018054"/><text x="21.7805%" y="1007.50"></text></g><g><title>h2::proto::streams::send::Send::poll_reset (24,072,216 samples, 0.24%)</title><rect x="21.4906%" y="1013" width="0.2394%" height="15" fill="rgb(228,187,13)" fg:x="2160481386" fg:w="24072216"/><text x="21.7406%" y="1023.50"></text></g><g><title>h2::proto::streams::stream::Stream::wait_send (14,042,126 samples, 0.14%)</title><rect x="21.5903%" y="997" width="0.1397%" height="15" fill="rgb(240,119,24)" fg:x="2170511476" fg:w="14042126"/><text x="21.8403%" y="1007.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (13,039,117 samples, 0.13%)</title><rect x="21.6003%" y="981" width="0.1297%" height="15" fill="rgb(209,194,42)" fg:x="2171514485" fg:w="13039117"/><text x="21.8503%" y="991.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (7,021,063 samples, 0.07%)</title><rect x="21.6602%" y="965" width="0.0698%" height="15" fill="rgb(247,200,46)" fg:x="2177532539" fg:w="7021063"/><text x="21.9102%" y="975.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (4,012,036 samples, 0.04%)</title><rect x="21.6901%" y="949" width="0.0399%" height="15" fill="rgb(218,76,16)" fg:x="2180541566" fg:w="4012036"/><text x="21.9401%" y="959.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (17,051,153 samples, 0.17%)</title><rect x="21.7600%" y="965" width="0.1696%" height="15" fill="rgb(225,21,48)" fg:x="2187562629" fg:w="17051153"/><text x="22.0100%" y="975.50"></text></g><g><title>syscall (16,048,144 samples, 0.16%)</title><rect x="21.7699%" y="949" width="0.1596%" height="15" fill="rgb(239,223,50)" fg:x="2188565638" fg:w="16048144"/><text x="22.0199%" y="959.50"></text></g><g><title>h2::share::SendStream&lt;B&gt;::poll_reset (77,231,693 samples, 0.77%)</title><rect x="21.3110%" y="1045" width="0.7682%" height="15" fill="rgb(244,45,21)" fg:x="2142427224" fg:w="77231693"/><text x="21.5610%" y="1055.50"></text></g><g><title>h2::proto::streams::streams::StreamRef&lt;B&gt;::poll_reset (77,231,693 samples, 0.77%)</title><rect x="21.3110%" y="1029" width="0.7682%" height="15" fill="rgb(232,33,43)" fg:x="2142427224" fg:w="77231693"/><text x="21.5610%" y="1039.50"></text></g><g><title>std::sync::poison::mutex::Mutex&lt;T&gt;::lock (35,105,315 samples, 0.35%)</title><rect x="21.7300%" y="1013" width="0.3492%" height="15" fill="rgb(209,8,3)" fg:x="2184553602" fg:w="35105315"/><text x="21.9800%" y="1023.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (35,105,315 samples, 0.35%)</title><rect x="21.7300%" y="997" width="0.3492%" height="15" fill="rgb(214,25,53)" fg:x="2184553602" fg:w="35105315"/><text x="21.9800%" y="1007.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (33,099,297 samples, 0.33%)</title><rect x="21.7500%" y="981" width="0.3292%" height="15" fill="rgb(254,186,54)" fg:x="2186559620" fg:w="33099297"/><text x="22.0000%" y="991.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (15,045,135 samples, 0.15%)</title><rect x="21.9296%" y="965" width="0.1497%" height="15" fill="rgb(208,174,49)" fg:x="2204613782" fg:w="15045135"/><text x="22.1796%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (12,036,108 samples, 0.12%)</title><rect x="21.9595%" y="949" width="0.1197%" height="15" fill="rgb(233,191,51)" fg:x="2207622809" fg:w="12036108"/><text x="22.2095%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_load (12,036,108 samples, 0.12%)</title><rect x="21.9595%" y="933" width="0.1197%" height="15" fill="rgb(222,134,10)" fg:x="2207622809" fg:w="12036108"/><text x="22.2095%" y="943.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::wake (2,006,018 samples, 0.02%)</title><rect x="22.1391%" y="965" width="0.0200%" height="15" fill="rgb(230,226,20)" fg:x="2225676971" fg:w="2006018"/><text x="22.3891%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::poison::mutex::MutexGuard&lt;h2::proto::streams::streams::Inner&gt;&gt; (18,054,162 samples, 0.18%)</title><rect x="22.1091%" y="1013" width="0.1796%" height="15" fill="rgb(251,111,25)" fg:x="2222667944" fg:w="18054162"/><text x="22.3591%" y="1023.50"></text></g><g><title>&lt;std::sync::poison::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (18,054,162 samples, 0.18%)</title><rect x="22.1091%" y="997" width="0.1796%" height="15" fill="rgb(224,40,46)" fg:x="2222667944" fg:w="18054162"/><text x="22.3591%" y="1007.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (18,054,162 samples, 0.18%)</title><rect x="22.1091%" y="981" width="0.1796%" height="15" fill="rgb(236,108,47)" fg:x="2222667944" fg:w="18054162"/><text x="22.3591%" y="991.50"></text></g><g><title>syscall (13,039,117 samples, 0.13%)</title><rect x="22.1590%" y="965" width="0.1297%" height="15" fill="rgb(234,93,0)" fg:x="2227682989" fg:w="13039117"/><text x="22.4090%" y="975.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::Deref&gt;::deref (4,012,036 samples, 0.04%)</title><rect x="22.4983%" y="997" width="0.0399%" height="15" fill="rgb(224,213,32)" fg:x="2261785295" fg:w="4012036"/><text x="22.7483%" y="1007.50"></text></g><g><title>&lt;h2::proto::streams::store::Store as core::ops::index::Index&lt;h2::proto::streams::store::Key&gt;&gt;::index (3,009,027 samples, 0.03%)</title><rect x="22.5082%" y="981" width="0.0299%" height="15" fill="rgb(251,11,48)" fg:x="2262788304" fg:w="3009027"/><text x="22.7582%" y="991.50"></text></g><g><title>slab::Slab&lt;T&gt;::get (2,006,018 samples, 0.02%)</title><rect x="22.5182%" y="965" width="0.0200%" height="15" fill="rgb(236,173,5)" fg:x="2263791313" fg:w="2006018"/><text x="22.7682%" y="975.50"></text></g><g><title>&lt;tracing_core::field::Iter as core::iter::traits::iterator::Iterator&gt;::next (3,009,027 samples, 0.03%)</title><rect x="22.5382%" y="997" width="0.0299%" height="15" fill="rgb(230,95,12)" fg:x="2265797331" fg:w="3009027"/><text x="22.7882%" y="1007.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3,009,027 samples, 0.03%)</title><rect x="22.5382%" y="981" width="0.0299%" height="15" fill="rgb(232,209,1)" fg:x="2265797331" fg:w="3009027"/><text x="22.7882%" y="991.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3,009,027 samples, 0.03%)</title><rect x="22.5382%" y="965" width="0.0299%" height="15" fill="rgb(232,6,1)" fg:x="2265797331" fg:w="3009027"/><text x="22.7882%" y="975.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2,006,018 samples, 0.02%)</title><rect x="22.5481%" y="949" width="0.0200%" height="15" fill="rgb(210,224,50)" fg:x="2266800340" fg:w="2006018"/><text x="22.7981%" y="959.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (2,006,018 samples, 0.02%)</title><rect x="22.5880%" y="949" width="0.0200%" height="15" fill="rgb(228,127,35)" fg:x="2270812376" fg:w="2006018"/><text x="22.8380%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (4,012,036 samples, 0.04%)</title><rect x="22.5781%" y="997" width="0.0399%" height="15" fill="rgb(245,102,45)" fg:x="2269809367" fg:w="4012036"/><text x="22.8281%" y="1007.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (4,012,036 samples, 0.04%)</title><rect x="22.5781%" y="981" width="0.0399%" height="15" fill="rgb(214,1,49)" fg:x="2269809367" fg:w="4012036"/><text x="22.8281%" y="991.50"></text></g><g><title>tracing::span::Span::do_exit (4,012,036 samples, 0.04%)</title><rect x="22.5781%" y="965" width="0.0399%" height="15" fill="rgb(226,163,40)" fg:x="2269809367" fg:w="4012036"/><text x="22.8281%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (3,009,027 samples, 0.03%)</title><rect x="22.6180%" y="997" width="0.0299%" height="15" fill="rgb(239,212,28)" fg:x="2273821403" fg:w="3009027"/><text x="22.8680%" y="1007.50"></text></g><g><title>&lt;tracing::span::Span as core::ops::drop::Drop&gt;::drop (2,006,018 samples, 0.02%)</title><rect x="22.6280%" y="981" width="0.0200%" height="15" fill="rgb(220,20,13)" fg:x="2274824412" fg:w="2006018"/><text x="22.8780%" y="991.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::Deref&gt;::deref (14,042,126 samples, 0.14%)</title><rect x="22.7177%" y="981" width="0.1397%" height="15" fill="rgb(210,164,35)" fg:x="2283851493" fg:w="14042126"/><text x="22.9677%" y="991.50"></text></g><g><title>&lt;h2::proto::streams::store::Store as core::ops::index::Index&lt;h2::proto::streams::store::Key&gt;&gt;::index (3,009,027 samples, 0.03%)</title><rect x="22.8275%" y="965" width="0.0299%" height="15" fill="rgb(248,109,41)" fg:x="2294884592" fg:w="3009027"/><text x="23.0775%" y="975.50"></text></g><g><title>slab::Slab&lt;T&gt;::get (3,009,027 samples, 0.03%)</title><rect x="22.8275%" y="949" width="0.0299%" height="15" fill="rgb(238,23,50)" fg:x="2294884592" fg:w="3009027"/><text x="23.0775%" y="959.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (2,006,018 samples, 0.02%)</title><rect x="22.8375%" y="933" width="0.0200%" height="15" fill="rgb(211,48,49)" fg:x="2295887601" fg:w="2006018"/><text x="23.0875%" y="943.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (2,006,018 samples, 0.02%)</title><rect x="22.8375%" y="917" width="0.0200%" height="15" fill="rgb(223,36,21)" fg:x="2295887601" fg:w="2006018"/><text x="23.0875%" y="927.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::DerefMut&gt;::deref_mut (2,006,018 samples, 0.02%)</title><rect x="22.8574%" y="981" width="0.0200%" height="15" fill="rgb(207,123,46)" fg:x="2297893619" fg:w="2006018"/><text x="23.1074%" y="991.50"></text></g><g><title>tracing::span::Span::log (2,006,018 samples, 0.02%)</title><rect x="22.8874%" y="949" width="0.0200%" height="15" fill="rgb(240,218,32)" fg:x="2300902646" fg:w="2006018"/><text x="23.1374%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (4,012,036 samples, 0.04%)</title><rect x="22.8774%" y="981" width="0.0399%" height="15" fill="rgb(252,5,43)" fg:x="2299899637" fg:w="4012036"/><text x="23.1274%" y="991.50"></text></g><g><title>&lt;tracing::span::Span as core::ops::drop::Drop&gt;::drop (3,009,027 samples, 0.03%)</title><rect x="22.8874%" y="965" width="0.0299%" height="15" fill="rgb(252,84,19)" fg:x="2300902646" fg:w="3009027"/><text x="23.1374%" y="975.50"></text></g><g><title>h2::proto::streams::stream::Stream::capacity (2,006,018 samples, 0.02%)</title><rect x="22.9772%" y="965" width="0.0200%" height="15" fill="rgb(243,152,39)" fg:x="2309929727" fg:w="2006018"/><text x="23.2272%" y="975.50"></text></g><g><title>h2::proto::streams::stream::Stream::notify_send (3,009,027 samples, 0.03%)</title><rect x="23.0071%" y="949" width="0.0299%" height="15" fill="rgb(234,160,15)" fg:x="2312938754" fg:w="3009027"/><text x="23.2571%" y="959.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (3,009,027 samples, 0.03%)</title><rect x="23.0071%" y="933" width="0.0299%" height="15" fill="rgb(237,34,20)" fg:x="2312938754" fg:w="3009027"/><text x="23.2571%" y="943.50"></text></g><g><title>core::mem::replace (3,009,027 samples, 0.03%)</title><rect x="23.0071%" y="917" width="0.0299%" height="15" fill="rgb(229,97,13)" fg:x="2312938754" fg:w="3009027"/><text x="23.2571%" y="927.50"></text></g><g><title>core::ptr::read (3,009,027 samples, 0.03%)</title><rect x="23.0071%" y="901" width="0.0299%" height="15" fill="rgb(234,71,50)" fg:x="2312938754" fg:w="3009027"/><text x="23.2571%" y="911.50"></text></g><g><title>h2::proto::streams::stream::Stream::assign_capacity (13,039,117 samples, 0.13%)</title><rect x="22.9173%" y="981" width="0.1297%" height="15" fill="rgb(253,155,4)" fg:x="2303911673" fg:w="13039117"/><text x="23.1673%" y="991.50"></text></g><g><title>h2::proto::streams::stream::Stream::notify_capacity (5,015,045 samples, 0.05%)</title><rect x="22.9971%" y="965" width="0.0499%" height="15" fill="rgb(222,185,37)" fg:x="2311935745" fg:w="5015045"/><text x="23.2471%" y="975.50"></text></g><g><title>h2::proto::streams::prioritize::Prioritize::try_assign_capacity (49,147,441 samples, 0.49%)</title><rect x="22.6479%" y="997" width="0.4889%" height="15" fill="rgb(251,177,13)" fg:x="2276830430" fg:w="49147441"/><text x="22.8979%" y="1007.50"></text></g><g><title>tracing::span::Span::record_all (7,021,063 samples, 0.07%)</title><rect x="23.0669%" y="981" width="0.0698%" height="15" fill="rgb(250,179,40)" fg:x="2318956808" fg:w="7021063"/><text x="23.3169%" y="991.50"></text></g><g><title>tracing::span::Span::enter (4,012,036 samples, 0.04%)</title><rect x="23.1468%" y="997" width="0.0399%" height="15" fill="rgb(242,44,2)" fg:x="2326980880" fg:w="4012036"/><text x="23.3968%" y="1007.50"></text></g><g><title>tracing::span::Span::do_enter (4,012,036 samples, 0.04%)</title><rect x="23.1468%" y="981" width="0.0399%" height="15" fill="rgb(216,177,13)" fg:x="2326980880" fg:w="4012036"/><text x="23.3968%" y="991.50"></text></g><g><title>tracing::span::Span::log (4,012,036 samples, 0.04%)</title><rect x="23.1468%" y="965" width="0.0399%" height="15" fill="rgb(216,106,43)" fg:x="2326980880" fg:w="4012036"/><text x="23.3968%" y="975.50"></text></g><g><title>tracing::span::Span::record_all (7,021,063 samples, 0.07%)</title><rect x="23.1867%" y="997" width="0.0698%" height="15" fill="rgb(216,183,2)" fg:x="2330992916" fg:w="7021063"/><text x="23.4367%" y="1007.50"></text></g><g><title>tracing_core::metadata::Metadata::name (3,009,027 samples, 0.03%)</title><rect x="23.2266%" y="981" width="0.0299%" height="15" fill="rgb(249,75,3)" fg:x="2335004952" fg:w="3009027"/><text x="23.4766%" y="991.50"></text></g><g><title>h2::proto::streams::prioritize::Prioritize::reserve_capacity (98,294,882 samples, 0.98%)</title><rect x="22.2887%" y="1013" width="0.9778%" height="15" fill="rgb(219,67,39)" fg:x="2240722106" fg:w="98294882"/><text x="22.5387%" y="1023.50"></text></g><g><title>h2::proto::streams::send::Send::reserve_capacity (3,009,027 samples, 0.03%)</title><rect x="23.2665%" y="1013" width="0.0299%" height="15" fill="rgb(253,228,2)" fg:x="2339016988" fg:w="3009027"/><text x="23.5165%" y="1023.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (18,054,162 samples, 0.18%)</title><rect x="23.3862%" y="965" width="0.1796%" height="15" fill="rgb(235,138,27)" fg:x="2351053096" fg:w="18054162"/><text x="23.6362%" y="975.50"></text></g><g><title>syscall (18,054,162 samples, 0.18%)</title><rect x="23.3862%" y="949" width="0.1796%" height="15" fill="rgb(236,97,51)" fg:x="2351053096" fg:w="18054162"/><text x="23.6362%" y="959.50"></text></g><g><title>h2::share::SendStream&lt;B&gt;::reserve_capacity (163,490,467 samples, 1.63%)</title><rect x="22.0792%" y="1045" width="1.6263%" height="15" fill="rgb(240,80,30)" fg:x="2219658917" fg:w="163490467"/><text x="22.3292%" y="1055.50"></text></g><g><title>h2::proto::streams::streams::StreamRef&lt;B&gt;::reserve_capacity (163,490,467 samples, 1.63%)</title><rect x="22.0792%" y="1029" width="1.6263%" height="15" fill="rgb(230,178,19)" fg:x="2219658917" fg:w="163490467"/><text x="22.3292%" y="1039.50"></text></g><g><title>std::sync::poison::mutex::Mutex&lt;T&gt;::lock (41,123,369 samples, 0.41%)</title><rect x="23.2964%" y="1013" width="0.4091%" height="15" fill="rgb(210,190,27)" fg:x="2342026015" fg:w="41123369"/><text x="23.5464%" y="1023.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (41,123,369 samples, 0.41%)</title><rect x="23.2964%" y="997" width="0.4091%" height="15" fill="rgb(222,107,31)" fg:x="2342026015" fg:w="41123369"/><text x="23.5464%" y="1007.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (36,108,324 samples, 0.36%)</title><rect x="23.3463%" y="981" width="0.3592%" height="15" fill="rgb(216,127,34)" fg:x="2347041060" fg:w="36108324"/><text x="23.5963%" y="991.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (14,042,126 samples, 0.14%)</title><rect x="23.5658%" y="965" width="0.1397%" height="15" fill="rgb(234,116,52)" fg:x="2369107258" fg:w="14042126"/><text x="23.8158%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (10,030,090 samples, 0.10%)</title><rect x="23.6057%" y="949" width="0.0998%" height="15" fill="rgb(222,124,15)" fg:x="2373119294" fg:w="10030090"/><text x="23.8557%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_load (10,030,090 samples, 0.10%)</title><rect x="23.6057%" y="933" width="0.0998%" height="15" fill="rgb(231,179,28)" fg:x="2373119294" fg:w="10030090"/><text x="23.8557%" y="943.50"></text></g><g><title>std::sync::poison::Flag::done (4,012,036 samples, 0.04%)</title><rect x="23.7853%" y="981" width="0.0399%" height="15" fill="rgb(226,93,45)" fg:x="2391173456" fg:w="4012036"/><text x="24.0353%" y="991.50"></text></g><g><title>std::thread::panicking (2,006,018 samples, 0.02%)</title><rect x="23.8052%" y="965" width="0.0200%" height="15" fill="rgb(215,8,51)" fg:x="2393179474" fg:w="2006018"/><text x="24.0552%" y="975.50"></text></g><g><title>std::panicking::panicking (2,006,018 samples, 0.02%)</title><rect x="23.8052%" y="949" width="0.0200%" height="15" fill="rgb(223,106,5)" fg:x="2393179474" fg:w="2006018"/><text x="24.0552%" y="959.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (2,006,018 samples, 0.02%)</title><rect x="23.8052%" y="933" width="0.0200%" height="15" fill="rgb(250,191,5)" fg:x="2393179474" fg:w="2006018"/><text x="24.0552%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::poison::mutex::MutexGuard&lt;h2::proto::streams::buffer::Buffer&lt;h2::frame::Frame&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt;&gt;&gt;&gt;&gt; (7,021,063 samples, 0.07%)</title><rect x="23.7853%" y="1013" width="0.0698%" height="15" fill="rgb(242,132,44)" fg:x="2391173456" fg:w="7021063"/><text x="24.0353%" y="1023.50"></text></g><g><title>&lt;std::sync::poison::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7,021,063 samples, 0.07%)</title><rect x="23.7853%" y="997" width="0.0698%" height="15" fill="rgb(251,152,29)" fg:x="2391173456" fg:w="7021063"/><text x="24.0353%" y="1007.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (3,009,027 samples, 0.03%)</title><rect x="23.8252%" y="981" width="0.0299%" height="15" fill="rgb(218,179,5)" fg:x="2395185492" fg:w="3009027"/><text x="24.0752%" y="991.50"></text></g><g><title>std::sync::poison::Flag::done (2,006,018 samples, 0.02%)</title><rect x="23.8551%" y="981" width="0.0200%" height="15" fill="rgb(227,67,19)" fg:x="2398194519" fg:w="2006018"/><text x="24.1051%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::poison::mutex::MutexGuard&lt;h2::proto::streams::streams::Inner&gt;&gt; (22,066,198 samples, 0.22%)</title><rect x="23.8551%" y="1013" width="0.2195%" height="15" fill="rgb(233,119,31)" fg:x="2398194519" fg:w="22066198"/><text x="24.1051%" y="1023.50"></text></g><g><title>&lt;std::sync::poison::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (22,066,198 samples, 0.22%)</title><rect x="23.8551%" y="997" width="0.2195%" height="15" fill="rgb(241,120,22)" fg:x="2398194519" fg:w="22066198"/><text x="24.1051%" y="1007.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (20,060,180 samples, 0.20%)</title><rect x="23.8751%" y="981" width="0.1995%" height="15" fill="rgb(224,102,30)" fg:x="2400200537" fg:w="20060180"/><text x="24.1251%" y="991.50"></text></g><g><title>syscall (13,039,117 samples, 0.13%)</title><rect x="23.9449%" y="965" width="0.1297%" height="15" fill="rgb(210,164,37)" fg:x="2407221600" fg:w="13039117"/><text x="24.1949%" y="975.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::Deref&gt;::deref (4,012,036 samples, 0.04%)</title><rect x="24.1145%" y="997" width="0.0399%" height="15" fill="rgb(226,191,16)" fg:x="2424272753" fg:w="4012036"/><text x="24.3645%" y="1007.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::Deref&gt;::deref (5,015,045 samples, 0.05%)</title><rect x="24.1944%" y="981" width="0.0499%" height="15" fill="rgb(214,40,45)" fg:x="2432296825" fg:w="5015045"/><text x="24.4444%" y="991.50"></text></g><g><title>&lt;h2::proto::streams::store::Store as core::ops::index::Index&lt;h2::proto::streams::store::Key&gt;&gt;::index (3,009,027 samples, 0.03%)</title><rect x="24.2143%" y="965" width="0.0299%" height="15" fill="rgb(244,29,26)" fg:x="2434302843" fg:w="3009027"/><text x="24.4643%" y="975.50"></text></g><g><title>slab::Slab&lt;T&gt;::get (3,009,027 samples, 0.03%)</title><rect x="24.2143%" y="949" width="0.0299%" height="15" fill="rgb(216,16,5)" fg:x="2434302843" fg:w="3009027"/><text x="24.4643%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2,006,018 samples, 0.02%)</title><rect x="24.2243%" y="933" width="0.0200%" height="15" fill="rgb(249,76,35)" fg:x="2435305852" fg:w="2006018"/><text x="24.4743%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (2,006,018 samples, 0.02%)</title><rect x="24.2243%" y="917" width="0.0200%" height="15" fill="rgb(207,11,44)" fg:x="2435305852" fg:w="2006018"/><text x="24.4743%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (2,006,018 samples, 0.02%)</title><rect x="24.2243%" y="901" width="0.0200%" height="15" fill="rgb(228,190,49)" fg:x="2435305852" fg:w="2006018"/><text x="24.4743%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2,006,018 samples, 0.02%)</title><rect x="24.2243%" y="885" width="0.0200%" height="15" fill="rgb(214,173,12)" fg:x="2435305852" fg:w="2006018"/><text x="24.4743%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (2,006,018 samples, 0.02%)</title><rect x="24.2243%" y="869" width="0.0200%" height="15" fill="rgb(218,26,35)" fg:x="2435305852" fg:w="2006018"/><text x="24.4743%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (2,006,018 samples, 0.02%)</title><rect x="24.2243%" y="853" width="0.0200%" height="15" fill="rgb(220,200,19)" fg:x="2435305852" fg:w="2006018"/><text x="24.4743%" y="863.50"></text></g><g><title>h2::proto::streams::counts::Counts::transition_after (10,030,090 samples, 0.10%)</title><rect x="24.1544%" y="997" width="0.0998%" height="15" fill="rgb(239,95,49)" fg:x="2428284789" fg:w="10030090"/><text x="24.4044%" y="1007.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::Deref&gt;::deref (17,051,153 samples, 0.17%)</title><rect x="24.4538%" y="949" width="0.1696%" height="15" fill="rgb(235,85,53)" fg:x="2458375059" fg:w="17051153"/><text x="24.7038%" y="959.50"></text></g><g><title>&lt;h2::proto::streams::store::Store as core::ops::index::Index&lt;h2::proto::streams::store::Key&gt;&gt;::index (3,009,027 samples, 0.03%)</title><rect x="24.5934%" y="933" width="0.0299%" height="15" fill="rgb(233,133,31)" fg:x="2472417185" fg:w="3009027"/><text x="24.8434%" y="943.50"></text></g><g><title>slab::Slab&lt;T&gt;::get (3,009,027 samples, 0.03%)</title><rect x="24.5934%" y="917" width="0.0299%" height="15" fill="rgb(218,25,20)" fg:x="2472417185" fg:w="3009027"/><text x="24.8434%" y="927.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (2,006,018 samples, 0.02%)</title><rect x="24.6034%" y="901" width="0.0200%" height="15" fill="rgb(252,210,38)" fg:x="2473420194" fg:w="2006018"/><text x="24.8534%" y="911.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (2,006,018 samples, 0.02%)</title><rect x="24.6034%" y="885" width="0.0200%" height="15" fill="rgb(242,134,21)" fg:x="2473420194" fg:w="2006018"/><text x="24.8534%" y="895.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::DerefMut&gt;::deref_mut (4,012,036 samples, 0.04%)</title><rect x="24.6234%" y="949" width="0.0399%" height="15" fill="rgb(213,28,48)" fg:x="2475426212" fg:w="4012036"/><text x="24.8734%" y="959.50"></text></g><g><title>&lt;h2::proto::streams::store::Store as core::ops::index::IndexMut&lt;h2::proto::streams::store::Key&gt;&gt;::index_mut (3,009,027 samples, 0.03%)</title><rect x="24.6333%" y="933" width="0.0299%" height="15" fill="rgb(250,196,2)" fg:x="2476429221" fg:w="3009027"/><text x="24.8833%" y="943.50"></text></g><g><title>slab::Slab&lt;T&gt;::get_mut (3,009,027 samples, 0.03%)</title><rect x="24.6333%" y="917" width="0.0299%" height="15" fill="rgb(227,5,17)" fg:x="2476429221" fg:w="3009027"/><text x="24.8833%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (2,006,018 samples, 0.02%)</title><rect x="24.6733%" y="949" width="0.0200%" height="15" fill="rgb(221,226,24)" fg:x="2480441257" fg:w="2006018"/><text x="24.9233%" y="959.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (2,006,018 samples, 0.02%)</title><rect x="24.6733%" y="933" width="0.0200%" height="15" fill="rgb(211,5,48)" fg:x="2480441257" fg:w="2006018"/><text x="24.9233%" y="943.50"></text></g><g><title>tracing::span::Span::do_exit (2,006,018 samples, 0.02%)</title><rect x="24.6733%" y="917" width="0.0200%" height="15" fill="rgb(219,150,6)" fg:x="2480441257" fg:w="2006018"/><text x="24.9233%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (5,015,045 samples, 0.05%)</title><rect x="24.6932%" y="949" width="0.0499%" height="15" fill="rgb(251,46,16)" fg:x="2482447275" fg:w="5015045"/><text x="24.9432%" y="959.50"></text></g><g><title>&lt;tracing::span::Span as core::ops::drop::Drop&gt;::drop (2,006,018 samples, 0.02%)</title><rect x="24.7231%" y="933" width="0.0200%" height="15" fill="rgb(220,204,40)" fg:x="2485456302" fg:w="2006018"/><text x="24.9731%" y="943.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::Deref&gt;::deref (2,006,018 samples, 0.02%)</title><rect x="24.7930%" y="933" width="0.0200%" height="15" fill="rgb(211,85,2)" fg:x="2492477365" fg:w="2006018"/><text x="25.0430%" y="943.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::DerefMut&gt;::deref_mut (4,012,036 samples, 0.04%)</title><rect x="24.8129%" y="933" width="0.0399%" height="15" fill="rgb(229,17,7)" fg:x="2494483383" fg:w="4012036"/><text x="25.0629%" y="943.50"></text></g><g><title>&lt;h2::proto::streams::store::Store as core::ops::index::IndexMut&lt;h2::proto::streams::store::Key&gt;&gt;::index_mut (3,009,027 samples, 0.03%)</title><rect x="24.8229%" y="917" width="0.0299%" height="15" fill="rgb(239,72,28)" fg:x="2495486392" fg:w="3009027"/><text x="25.0729%" y="927.50"></text></g><g><title>slab::Slab&lt;T&gt;::get_mut (2,006,018 samples, 0.02%)</title><rect x="24.8329%" y="901" width="0.0200%" height="15" fill="rgb(230,47,54)" fg:x="2496489401" fg:w="2006018"/><text x="25.0829%" y="911.50"></text></g><g><title>&lt;tracing_core::field::Iter as core::iter::traits::iterator::Iterator&gt;::next (2,006,018 samples, 0.02%)</title><rect x="24.8528%" y="933" width="0.0200%" height="15" fill="rgb(214,50,8)" fg:x="2498495419" fg:w="2006018"/><text x="25.1028%" y="943.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2,006,018 samples, 0.02%)</title><rect x="24.8528%" y="917" width="0.0200%" height="15" fill="rgb(216,198,43)" fg:x="2498495419" fg:w="2006018"/><text x="25.1028%" y="927.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2,006,018 samples, 0.02%)</title><rect x="24.8528%" y="901" width="0.0200%" height="15" fill="rgb(234,20,35)" fg:x="2498495419" fg:w="2006018"/><text x="25.1028%" y="911.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2,006,018 samples, 0.02%)</title><rect x="24.8528%" y="885" width="0.0200%" height="15" fill="rgb(254,45,19)" fg:x="2498495419" fg:w="2006018"/><text x="25.1028%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (11,033,099 samples, 0.11%)</title><rect x="24.8828%" y="933" width="0.1097%" height="15" fill="rgb(219,14,44)" fg:x="2501504446" fg:w="11033099"/><text x="25.1328%" y="943.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (11,033,099 samples, 0.11%)</title><rect x="24.8828%" y="917" width="0.1097%" height="15" fill="rgb(217,220,26)" fg:x="2501504446" fg:w="11033099"/><text x="25.1328%" y="927.50"></text></g><g><title>tracing::span::Span::do_exit (11,033,099 samples, 0.11%)</title><rect x="24.8828%" y="901" width="0.1097%" height="15" fill="rgb(213,158,28)" fg:x="2501504446" fg:w="11033099"/><text x="25.1328%" y="911.50"></text></g><g><title>tracing::span::Span::log (4,012,036 samples, 0.04%)</title><rect x="24.9526%" y="885" width="0.0399%" height="15" fill="rgb(252,51,52)" fg:x="2508525509" fg:w="4012036"/><text x="25.2026%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (5,015,045 samples, 0.05%)</title><rect x="24.9925%" y="933" width="0.0499%" height="15" fill="rgb(246,89,16)" fg:x="2512537545" fg:w="5015045"/><text x="25.2425%" y="943.50"></text></g><g><title>&lt;tracing::span::Span as core::ops::drop::Drop&gt;::drop (5,015,045 samples, 0.05%)</title><rect x="24.9925%" y="917" width="0.0499%" height="15" fill="rgb(216,158,49)" fg:x="2512537545" fg:w="5015045"/><text x="25.2425%" y="927.50"></text></g><g><title>tracing::span::Span::log (5,015,045 samples, 0.05%)</title><rect x="24.9925%" y="901" width="0.0499%" height="15" fill="rgb(236,107,19)" fg:x="2512537545" fg:w="5015045"/><text x="25.2425%" y="911.50"></text></g><g><title>h2::proto::streams::buffer::Deque::push_back (15,045,135 samples, 0.15%)</title><rect x="25.0424%" y="933" width="0.1497%" height="15" fill="rgb(228,185,30)" fg:x="2517552590" fg:w="15045135"/><text x="25.2924%" y="943.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert (14,042,126 samples, 0.14%)</title><rect x="25.0524%" y="917" width="0.1397%" height="15" fill="rgb(246,134,8)" fg:x="2518555599" fg:w="14042126"/><text x="25.3024%" y="927.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert_at (13,039,117 samples, 0.13%)</title><rect x="25.0624%" y="901" width="0.1297%" height="15" fill="rgb(214,143,50)" fg:x="2519558608" fg:w="13039117"/><text x="25.3124%" y="911.50"></text></g><g><title>core::task::wake::Waker::wake (2,006,018 samples, 0.02%)</title><rect x="25.2120%" y="917" width="0.0200%" height="15" fill="rgb(228,75,8)" fg:x="2534603743" fg:w="2006018"/><text x="25.4620%" y="927.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (2,006,018 samples, 0.02%)</title><rect x="25.2120%" y="901" width="0.0200%" height="15" fill="rgb(207,175,4)" fg:x="2534603743" fg:w="2006018"/><text x="25.4620%" y="911.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (2,006,018 samples, 0.02%)</title><rect x="25.2120%" y="885" width="0.0200%" height="15" fill="rgb(205,108,24)" fg:x="2534603743" fg:w="2006018"/><text x="25.4620%" y="895.50"></text></g><g><title>h2::proto::streams::prioritize::Prioritize::schedule_send (9,027,081 samples, 0.09%)</title><rect x="25.1921%" y="933" width="0.0898%" height="15" fill="rgb(244,120,49)" fg:x="2532597725" fg:w="9027081"/><text x="25.4421%" y="943.50"></text></g><g><title>h2::proto::streams::store::Queue&lt;N&gt;::push (5,015,045 samples, 0.05%)</title><rect x="25.2320%" y="917" width="0.0499%" height="15" fill="rgb(223,47,38)" fg:x="2536609761" fg:w="5015045"/><text x="25.4820%" y="927.50"></text></g><g><title>tracing::span::Span::log (2,006,018 samples, 0.02%)</title><rect x="25.2819%" y="901" width="0.0200%" height="15" fill="rgb(229,179,11)" fg:x="2541624806" fg:w="2006018"/><text x="25.5319%" y="911.50"></text></g><g><title>tracing::span::Span::enter (3,009,027 samples, 0.03%)</title><rect x="25.2819%" y="933" width="0.0299%" height="15" fill="rgb(231,122,1)" fg:x="2541624806" fg:w="3009027"/><text x="25.5319%" y="943.50"></text></g><g><title>tracing::span::Span::do_enter (3,009,027 samples, 0.03%)</title><rect x="25.2819%" y="917" width="0.0299%" height="15" fill="rgb(245,119,9)" fg:x="2541624806" fg:w="3009027"/><text x="25.5319%" y="927.50"></text></g><g><title>h2::proto::streams::prioritize::Prioritize::queue_frame (63,189,567 samples, 0.63%)</title><rect x="24.7431%" y="949" width="0.6286%" height="15" fill="rgb(241,163,25)" fg:x="2487462320" fg:w="63189567"/><text x="24.9931%" y="959.50"></text></g><g><title>tracing::span::Span::record_all (6,018,054 samples, 0.06%)</title><rect x="25.3118%" y="933" width="0.0599%" height="15" fill="rgb(217,214,3)" fg:x="2544633833" fg:w="6018054"/><text x="25.5618%" y="943.50"></text></g><g><title>tracing::span::Span::log (4,012,036 samples, 0.04%)</title><rect x="25.3317%" y="917" width="0.0399%" height="15" fill="rgb(240,86,28)" fg:x="2546639851" fg:w="4012036"/><text x="25.5817%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (2,006,018 samples, 0.02%)</title><rect x="25.4315%" y="933" width="0.0200%" height="15" fill="rgb(215,47,9)" fg:x="2556669941" fg:w="2006018"/><text x="25.6815%" y="943.50"></text></g><g><title>core::fmt::Arguments::new_v1 (3,009,027 samples, 0.03%)</title><rect x="25.4614%" y="901" width="0.0299%" height="15" fill="rgb(252,25,45)" fg:x="2559678968" fg:w="3009027"/><text x="25.7114%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (6,018,054 samples, 0.06%)</title><rect x="25.4515%" y="933" width="0.0599%" height="15" fill="rgb(251,164,9)" fg:x="2558675959" fg:w="6018054"/><text x="25.7015%" y="943.50"></text></g><g><title>&lt;tracing::span::Span as core::ops::drop::Drop&gt;::drop (5,015,045 samples, 0.05%)</title><rect x="25.4614%" y="917" width="0.0499%" height="15" fill="rgb(233,194,0)" fg:x="2559678968" fg:w="5015045"/><text x="25.7114%" y="927.50"></text></g><g><title>tracing::span::Span::log (2,006,018 samples, 0.02%)</title><rect x="25.4914%" y="901" width="0.0200%" height="15" fill="rgb(249,111,24)" fg:x="2562687995" fg:w="2006018"/><text x="25.7414%" y="911.50"></text></g><g><title>tracing::span::Span::enter (4,012,036 samples, 0.04%)</title><rect x="25.5213%" y="933" width="0.0399%" height="15" fill="rgb(250,223,3)" fg:x="2565697022" fg:w="4012036"/><text x="25.7713%" y="943.50"></text></g><g><title>tracing::span::Span::do_enter (4,012,036 samples, 0.04%)</title><rect x="25.5213%" y="917" width="0.0399%" height="15" fill="rgb(236,178,37)" fg:x="2565697022" fg:w="4012036"/><text x="25.7713%" y="927.50"></text></g><g><title>h2::proto::streams::prioritize::Prioritize::reserve_capacity (23,069,207 samples, 0.23%)</title><rect x="25.3716%" y="949" width="0.2295%" height="15" fill="rgb(241,158,50)" fg:x="2550651887" fg:w="23069207"/><text x="25.6216%" y="959.50"></text></g><g><title>tracing::span::Span::record_all (4,012,036 samples, 0.04%)</title><rect x="25.5612%" y="933" width="0.0399%" height="15" fill="rgb(213,121,41)" fg:x="2569709058" fg:w="4012036"/><text x="25.8112%" y="943.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::Deref&gt;::deref (3,009,027 samples, 0.03%)</title><rect x="25.6310%" y="933" width="0.0299%" height="15" fill="rgb(240,92,3)" fg:x="2576730121" fg:w="3009027"/><text x="25.8810%" y="943.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::DerefMut&gt;::deref_mut (3,009,027 samples, 0.03%)</title><rect x="25.6610%" y="933" width="0.0299%" height="15" fill="rgb(205,123,3)" fg:x="2579739148" fg:w="3009027"/><text x="25.9110%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (2,006,018 samples, 0.02%)</title><rect x="25.7009%" y="933" width="0.0200%" height="15" fill="rgb(205,97,47)" fg:x="2583751184" fg:w="2006018"/><text x="25.9509%" y="943.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (2,006,018 samples, 0.02%)</title><rect x="25.7009%" y="917" width="0.0200%" height="15" fill="rgb(247,152,14)" fg:x="2583751184" fg:w="2006018"/><text x="25.9509%" y="927.50"></text></g><g><title>tracing::span::Span::do_exit (2,006,018 samples, 0.02%)</title><rect x="25.7009%" y="901" width="0.0200%" height="15" fill="rgb(248,195,53)" fg:x="2583751184" fg:w="2006018"/><text x="25.9509%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (2,006,018 samples, 0.02%)</title><rect x="25.7208%" y="933" width="0.0200%" height="15" fill="rgb(226,201,16)" fg:x="2585757202" fg:w="2006018"/><text x="25.9708%" y="943.50"></text></g><g><title>h2::proto::streams::store::Queue&lt;N&gt;::push (8,024,072 samples, 0.08%)</title><rect x="25.7408%" y="933" width="0.0798%" height="15" fill="rgb(205,98,0)" fg:x="2587763220" fg:w="8024072"/><text x="25.9908%" y="943.50"></text></g><g><title>h2::proto::streams::stream::Stream::assign_capacity (4,012,036 samples, 0.04%)</title><rect x="25.8206%" y="933" width="0.0399%" height="15" fill="rgb(214,191,48)" fg:x="2595787292" fg:w="4012036"/><text x="26.0706%" y="943.50"></text></g><g><title>h2::proto::streams::stream::Stream::capacity (2,006,018 samples, 0.02%)</title><rect x="25.8406%" y="917" width="0.0200%" height="15" fill="rgb(237,112,39)" fg:x="2597793310" fg:w="2006018"/><text x="26.0906%" y="927.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_sub (2,006,018 samples, 0.02%)</title><rect x="25.8406%" y="901" width="0.0200%" height="15" fill="rgb(247,203,27)" fg:x="2597793310" fg:w="2006018"/><text x="26.0906%" y="911.50"></text></g><g><title>core::fmt::Arguments::new_v1 (2,006,018 samples, 0.02%)</title><rect x="25.8705%" y="901" width="0.0200%" height="15" fill="rgb(235,124,28)" fg:x="2600802337" fg:w="2006018"/><text x="26.1205%" y="911.50"></text></g><g><title>tracing::span::Span::enter (3,009,027 samples, 0.03%)</title><rect x="25.8705%" y="933" width="0.0299%" height="15" fill="rgb(208,207,46)" fg:x="2600802337" fg:w="3009027"/><text x="26.1205%" y="943.50"></text></g><g><title>tracing::span::Span::do_enter (3,009,027 samples, 0.03%)</title><rect x="25.8705%" y="917" width="0.0299%" height="15" fill="rgb(234,176,4)" fg:x="2600802337" fg:w="3009027"/><text x="26.1205%" y="927.50"></text></g><g><title>h2::proto::streams::prioritize::Prioritize::try_assign_capacity (32,096,288 samples, 0.32%)</title><rect x="25.6011%" y="949" width="0.3193%" height="15" fill="rgb(230,133,28)" fg:x="2573721094" fg:w="32096288"/><text x="25.8511%" y="959.50"></text></g><g><title>tracing::span::Span::record_all (2,006,018 samples, 0.02%)</title><rect x="25.9004%" y="933" width="0.0200%" height="15" fill="rgb(211,137,40)" fg:x="2603811364" fg:w="2006018"/><text x="26.1504%" y="943.50"></text></g><g><title>h2::proto::streams::state::State::send_close (15,045,135 samples, 0.15%)</title><rect x="25.9204%" y="949" width="0.1497%" height="15" fill="rgb(254,35,13)" fg:x="2605817382" fg:w="15045135"/><text x="26.1704%" y="959.50"></text></g><g><title>tracing::span::Span::enter (3,009,027 samples, 0.03%)</title><rect x="26.0700%" y="949" width="0.0299%" height="15" fill="rgb(225,49,51)" fg:x="2620862517" fg:w="3009027"/><text x="26.3200%" y="959.50"></text></g><g><title>tracing::span::Span::do_enter (3,009,027 samples, 0.03%)</title><rect x="26.0700%" y="933" width="0.0299%" height="15" fill="rgb(251,10,15)" fg:x="2620862517" fg:w="3009027"/><text x="26.3200%" y="943.50"></text></g><g><title>tracing::span::Span::log (3,009,027 samples, 0.03%)</title><rect x="26.0700%" y="917" width="0.0299%" height="15" fill="rgb(228,207,15)" fg:x="2620862517" fg:w="3009027"/><text x="26.3200%" y="927.50"></text></g><g><title>tracing::span::Span::record_all (3,009,027 samples, 0.03%)</title><rect x="26.1000%" y="949" width="0.0299%" height="15" fill="rgb(241,99,19)" fg:x="2623871544" fg:w="3009027"/><text x="26.3500%" y="959.50"></text></g><g><title>h2::proto::streams::counts::Counts::transition (208,625,872 samples, 2.08%)</title><rect x="24.0746%" y="1013" width="2.0752%" height="15" fill="rgb(207,104,49)" fg:x="2420260717" fg:w="208625872"/><text x="24.3246%" y="1023.50">h..</text></g><g><title>h2::proto::streams::streams::StreamRef&lt;B&gt;::send_data::{{closure}} (190,571,710 samples, 1.90%)</title><rect x="24.2542%" y="997" width="1.8956%" height="15" fill="rgb(234,99,18)" fg:x="2438314879" fg:w="190571710"/><text x="24.5042%" y="1007.50">h..</text></g><g><title>h2::proto::streams::send::Send::send_data (188,565,692 samples, 1.88%)</title><rect x="24.2742%" y="981" width="1.8757%" height="15" fill="rgb(213,191,49)" fg:x="2440320897" fg:w="188565692"/><text x="24.5242%" y="991.50">h..</text></g><g><title>h2::proto::streams::prioritize::Prioritize::send_data (188,565,692 samples, 1.88%)</title><rect x="24.2742%" y="965" width="1.8757%" height="15" fill="rgb(210,226,19)" fg:x="2440320897" fg:w="188565692"/><text x="24.5242%" y="975.50">h..</text></g><g><title>std::sys::pal::unix::futex::futex_wait (11,033,099 samples, 0.11%)</title><rect x="26.2696%" y="965" width="0.1097%" height="15" fill="rgb(229,97,18)" fg:x="2640922697" fg:w="11033099"/><text x="26.5196%" y="975.50"></text></g><g><title>syscall (11,033,099 samples, 0.11%)</title><rect x="26.2696%" y="949" width="0.1097%" height="15" fill="rgb(211,167,15)" fg:x="2640922697" fg:w="11033099"/><text x="26.5196%" y="959.50"></text></g><g><title>h2::share::SendStream&lt;B&gt;::send_data (279,839,511 samples, 2.78%)</title><rect x="23.7055%" y="1045" width="2.7836%" height="15" fill="rgb(210,169,34)" fg:x="2383149384" fg:w="279839511"/><text x="23.9555%" y="1055.50">h2..</text></g><g><title>h2::proto::streams::streams::StreamRef&lt;B&gt;::send_data (279,839,511 samples, 2.78%)</title><rect x="23.7055%" y="1029" width="2.7836%" height="15" fill="rgb(241,121,31)" fg:x="2383149384" fg:w="279839511"/><text x="23.9555%" y="1039.50">h2..</text></g><g><title>std::sync::poison::mutex::Mutex&lt;T&gt;::lock (34,102,306 samples, 0.34%)</title><rect x="26.1499%" y="1013" width="0.3392%" height="15" fill="rgb(232,40,11)" fg:x="2628886589" fg:w="34102306"/><text x="26.3999%" y="1023.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (33,099,297 samples, 0.33%)</title><rect x="26.1598%" y="997" width="0.3292%" height="15" fill="rgb(205,86,26)" fg:x="2629889598" fg:w="33099297"/><text x="26.4098%" y="1007.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (24,072,216 samples, 0.24%)</title><rect x="26.2496%" y="981" width="0.2394%" height="15" fill="rgb(231,126,28)" fg:x="2638916679" fg:w="24072216"/><text x="26.4996%" y="991.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (11,033,099 samples, 0.11%)</title><rect x="26.3793%" y="965" width="0.1097%" height="15" fill="rgb(219,221,18)" fg:x="2651955796" fg:w="11033099"/><text x="26.6293%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (8,024,072 samples, 0.08%)</title><rect x="26.4093%" y="949" width="0.0798%" height="15" fill="rgb(211,40,0)" fg:x="2654964823" fg:w="8024072"/><text x="26.6593%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_load (8,024,072 samples, 0.08%)</title><rect x="26.4093%" y="933" width="0.0798%" height="15" fill="rgb(239,85,43)" fg:x="2654964823" fg:w="8024072"/><text x="26.6593%" y="943.50"></text></g><g><title>&lt;hyper::proto::h2::PipeToSendStream&lt;S&gt; as core::future::future::Future&gt;::poll (584,754,247 samples, 5.82%)</title><rect x="20.6924%" y="1061" width="5.8166%" height="15" fill="rgb(231,55,21)" fg:x="2080240666" fg:w="584754247"/><text x="20.9424%" y="1071.50">&lt;hyper:..</text></g><g><title>h2::share::SendStream&lt;B&gt;::send_trailers (2,006,018 samples, 0.02%)</title><rect x="26.4891%" y="1045" width="0.0200%" height="15" fill="rgb(225,184,43)" fg:x="2662988895" fg:w="2006018"/><text x="26.7391%" y="1055.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (2,006,018 samples, 0.02%)</title><rect x="26.4891%" y="1029" width="0.0200%" height="15" fill="rgb(251,158,41)" fg:x="2662988895" fg:w="2006018"/><text x="26.7391%" y="1039.50"></text></g><g><title>&lt;http::method::Method as core::cmp::PartialEq&gt;::eq (2,006,018 samples, 0.02%)</title><rect x="26.7385%" y="1013" width="0.0200%" height="15" fill="rgb(234,159,37)" fg:x="2688064120" fg:w="2006018"/><text x="26.9885%" y="1023.50"></text></g><g><title>&lt;http::method::Inner as core::cmp::PartialEq&gt;::eq (2,006,018 samples, 0.02%)</title><rect x="26.7385%" y="997" width="0.0200%" height="15" fill="rgb(216,204,22)" fg:x="2688064120" fg:w="2006018"/><text x="26.9885%" y="1007.50"></text></g><g><title>&lt;http::response::Response&lt;B&gt; as http_body::Body&gt;::size_hint (5,015,045 samples, 0.05%)</title><rect x="26.7585%" y="1013" width="0.0499%" height="15" fill="rgb(214,17,3)" fg:x="2690070138" fg:w="5015045"/><text x="27.0085%" y="1023.50"></text></g><g><title>&lt;axum_core::body::Body as http_body::Body&gt;::size_hint (5,015,045 samples, 0.05%)</title><rect x="26.7585%" y="997" width="0.0499%" height="15" fill="rgb(212,111,17)" fg:x="2690070138" fg:w="5015045"/><text x="27.0085%" y="1007.50"></text></g><g><title>&lt;http_body_util::combinators::box_body::UnsyncBoxBody&lt;D,E&gt; as http_body::Body&gt;::size_hint (5,015,045 samples, 0.05%)</title><rect x="26.7585%" y="981" width="0.0499%" height="15" fill="rgb(221,157,24)" fg:x="2690070138" fg:w="5015045"/><text x="27.0085%" y="991.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as http_body::Body&gt;::size_hint (5,015,045 samples, 0.05%)</title><rect x="26.7585%" y="965" width="0.0499%" height="15" fill="rgb(252,16,13)" fg:x="2690070138" fg:w="5015045"/><text x="27.0085%" y="975.50"></text></g><g><title>&lt;http_body_util::combinators::map_err::MapErr&lt;B,F&gt; as http_body::Body&gt;::size_hint (5,015,045 samples, 0.05%)</title><rect x="26.7585%" y="949" width="0.0499%" height="15" fill="rgb(221,62,2)" fg:x="2690070138" fg:w="5015045"/><text x="27.0085%" y="959.50"></text></g><g><title>&lt;http::method::Method as core::cmp::PartialEq&gt;::eq (2,006,018 samples, 0.02%)</title><rect x="27.3371%" y="661" width="0.0200%" height="15" fill="rgb(247,87,22)" fg:x="2748244660" fg:w="2006018"/><text x="27.5871%" y="671.50"></text></g><g><title>&lt;http::method::Inner as core::cmp::PartialEq&gt;::eq (2,006,018 samples, 0.02%)</title><rect x="27.3371%" y="645" width="0.0200%" height="15" fill="rgb(215,73,9)" fg:x="2748244660" fg:w="2006018"/><text x="27.5871%" y="655.50"></text></g><g><title>&lt;T as futures_util::fns::FnOnce1&lt;A&gt;&gt;::call_once (4,012,036 samples, 0.04%)</title><rect x="27.6963%" y="485" width="0.0399%" height="15" fill="rgb(207,175,33)" fg:x="2784352984" fg:w="4012036"/><text x="27.9463%" y="495.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,012,036 samples, 0.04%)</title><rect x="27.6963%" y="469" width="0.0399%" height="15" fill="rgb(243,129,54)" fg:x="2784352984" fg:w="4012036"/><text x="27.9463%" y="479.50"></text></g><g><title>core::result::Result::Ok (4,012,036 samples, 0.04%)</title><rect x="27.6963%" y="453" width="0.0399%" height="15" fill="rgb(227,119,45)" fg:x="2784352984" fg:w="4012036"/><text x="27.9463%" y="463.50"></text></g><g><title>&lt;axum_core::body::Body as axum_core::response::into_response::IntoResponse&gt;::into_response (21,063,189 samples, 0.21%)</title><rect x="27.9357%" y="405" width="0.2095%" height="15" fill="rgb(205,109,36)" fg:x="2808425200" fg:w="21063189"/><text x="28.1857%" y="415.50"></text></g><g><title>http::response::Response&lt;T&gt;::new (21,063,189 samples, 0.21%)</title><rect x="27.9357%" y="389" width="0.2095%" height="15" fill="rgb(205,6,39)" fg:x="2808425200" fg:w="21063189"/><text x="28.1857%" y="399.50"></text></g><g><title>http::response::Parts::new (21,063,189 samples, 0.21%)</title><rect x="27.9357%" y="373" width="0.2095%" height="15" fill="rgb(221,32,16)" fg:x="2808425200" fg:w="21063189"/><text x="28.1857%" y="383.50"></text></g><g><title>&lt;http::header::map::HeaderMap&lt;T&gt; as core::default::Default&gt;::default (13,039,117 samples, 0.13%)</title><rect x="28.0156%" y="357" width="0.1297%" height="15" fill="rgb(228,144,50)" fg:x="2816449272" fg:w="13039117"/><text x="28.2656%" y="367.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_with_capacity (11,033,099 samples, 0.11%)</title><rect x="28.0355%" y="341" width="0.1097%" height="15" fill="rgb(229,201,53)" fg:x="2818455290" fg:w="11033099"/><text x="28.2855%" y="351.50"></text></g><g><title>&lt;http_body_util::full::Full&lt;D&gt; as core::convert::From&lt;alloc::borrow::Cow&lt;B&gt;&gt;&gt;::from (3,009,027 samples, 0.03%)</title><rect x="28.1453%" y="389" width="0.0299%" height="15" fill="rgb(249,153,27)" fg:x="2829488389" fg:w="3009027"/><text x="28.3953%" y="399.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::string::String&gt;&gt;::from (3,009,027 samples, 0.03%)</title><rect x="28.1453%" y="373" width="0.0299%" height="15" fill="rgb(227,106,25)" fg:x="2829488389" fg:w="3009027"/><text x="28.3953%" y="383.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (3,009,027 samples, 0.03%)</title><rect x="28.1453%" y="357" width="0.0299%" height="15" fill="rgb(230,65,29)" fg:x="2829488389" fg:w="3009027"/><text x="28.3953%" y="367.50"></text></g><g><title>__GI___libc_malloc (3,009,027 samples, 0.03%)</title><rect x="28.2051%" y="165" width="0.0299%" height="15" fill="rgb(221,57,46)" fg:x="2835506443" fg:w="3009027"/><text x="28.4551%" y="175.50"></text></g><g><title>&lt;axum_core::body::Body as core::convert::From&lt;alloc::borrow::Cow&lt;str&gt;&gt;&gt;::from (11,033,099 samples, 0.11%)</title><rect x="28.1453%" y="405" width="0.1097%" height="15" fill="rgb(229,161,17)" fg:x="2829488389" fg:w="11033099"/><text x="28.3953%" y="415.50"></text></g><g><title>axum_core::body::Body::new (8,024,072 samples, 0.08%)</title><rect x="28.1752%" y="389" width="0.0798%" height="15" fill="rgb(222,213,11)" fg:x="2832497416" fg:w="8024072"/><text x="28.4252%" y="399.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (7,021,063 samples, 0.07%)</title><rect x="28.1852%" y="373" width="0.0698%" height="15" fill="rgb(235,35,13)" fg:x="2833500425" fg:w="7021063"/><text x="28.4352%" y="383.50"></text></g><g><title>axum_core::body::Body::new::{{closure}} (7,021,063 samples, 0.07%)</title><rect x="28.1852%" y="357" width="0.0698%" height="15" fill="rgb(233,158,34)" fg:x="2833500425" fg:w="7021063"/><text x="28.4352%" y="367.50"></text></g><g><title>axum_core::body::boxed (7,021,063 samples, 0.07%)</title><rect x="28.1852%" y="341" width="0.0698%" height="15" fill="rgb(215,151,48)" fg:x="2833500425" fg:w="7021063"/><text x="28.4352%" y="351.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (7,021,063 samples, 0.07%)</title><rect x="28.1852%" y="325" width="0.0698%" height="15" fill="rgb(229,84,14)" fg:x="2833500425" fg:w="7021063"/><text x="28.4352%" y="335.50"></text></g><g><title>axum_core::body::boxed::{{closure}} (7,021,063 samples, 0.07%)</title><rect x="28.1852%" y="309" width="0.0698%" height="15" fill="rgb(229,68,14)" fg:x="2833500425" fg:w="7021063"/><text x="28.4352%" y="319.50"></text></g><g><title>http_body_util::BodyExt::boxed_unsync (7,021,063 samples, 0.07%)</title><rect x="28.1852%" y="293" width="0.0698%" height="15" fill="rgb(243,106,26)" fg:x="2833500425" fg:w="7021063"/><text x="28.4352%" y="303.50"></text></g><g><title>http_body_util::combinators::box_body::UnsyncBoxBody&lt;D,E&gt;::new (7,021,063 samples, 0.07%)</title><rect x="28.1852%" y="277" width="0.0698%" height="15" fill="rgb(206,45,38)" fg:x="2833500425" fg:w="7021063"/><text x="28.4352%" y="287.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (7,021,063 samples, 0.07%)</title><rect x="28.1852%" y="261" width="0.0698%" height="15" fill="rgb(226,6,15)" fg:x="2833500425" fg:w="7021063"/><text x="28.4352%" y="271.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (7,021,063 samples, 0.07%)</title><rect x="28.1852%" y="245" width="0.0698%" height="15" fill="rgb(232,22,54)" fg:x="2833500425" fg:w="7021063"/><text x="28.4352%" y="255.50"></text></g><g><title>alloc::alloc::exchange_malloc (6,018,054 samples, 0.06%)</title><rect x="28.1952%" y="229" width="0.0599%" height="15" fill="rgb(229,222,32)" fg:x="2834503434" fg:w="6018054"/><text x="28.4452%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6,018,054 samples, 0.06%)</title><rect x="28.1952%" y="213" width="0.0599%" height="15" fill="rgb(228,62,29)" fg:x="2834503434" fg:w="6018054"/><text x="28.4452%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6,018,054 samples, 0.06%)</title><rect x="28.1952%" y="197" width="0.0599%" height="15" fill="rgb(251,103,34)" fg:x="2834503434" fg:w="6018054"/><text x="28.4452%" y="207.50"></text></g><g><title>alloc::alloc::alloc (6,018,054 samples, 0.06%)</title><rect x="28.1952%" y="181" width="0.0599%" height="15" fill="rgb(233,12,30)" fg:x="2834503434" fg:w="6018054"/><text x="28.4452%" y="191.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (5,015,045 samples, 0.05%)</title><rect x="28.2550%" y="389" width="0.0499%" height="15" fill="rgb(238,52,0)" fg:x="2840521488" fg:w="5015045"/><text x="28.5050%" y="399.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_insert_entry (6,018,054 samples, 0.06%)</title><rect x="28.3847%" y="341" width="0.0599%" height="15" fill="rgb(223,98,5)" fg:x="2853560605" fg:w="6018054"/><text x="28.6347%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4,012,036 samples, 0.04%)</title><rect x="28.4047%" y="325" width="0.0399%" height="15" fill="rgb(228,75,37)" fg:x="2855566623" fg:w="4012036"/><text x="28.6547%" y="335.50"></text></g><g><title>core::ptr::write (3,009,027 samples, 0.03%)</title><rect x="28.4146%" y="309" width="0.0299%" height="15" fill="rgb(205,115,49)" fg:x="2856569632" fg:w="3009027"/><text x="28.6646%" y="319.50"></text></g><g><title>__GI___libc_malloc (6,018,054 samples, 0.06%)</title><rect x="28.5144%" y="197" width="0.0599%" height="15" fill="rgb(250,154,43)" fg:x="2866599722" fg:w="6018054"/><text x="28.7644%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (7,021,063 samples, 0.07%)</title><rect x="28.5144%" y="325" width="0.0698%" height="15" fill="rgb(226,43,29)" fg:x="2866599722" fg:w="7021063"/><text x="28.7644%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7,021,063 samples, 0.07%)</title><rect x="28.5144%" y="309" width="0.0698%" height="15" fill="rgb(249,228,39)" fg:x="2866599722" fg:w="7021063"/><text x="28.7644%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7,021,063 samples, 0.07%)</title><rect x="28.5144%" y="293" width="0.0698%" height="15" fill="rgb(216,79,43)" fg:x="2866599722" fg:w="7021063"/><text x="28.7644%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (7,021,063 samples, 0.07%)</title><rect x="28.5144%" y="277" width="0.0698%" height="15" fill="rgb(228,95,12)" fg:x="2866599722" fg:w="7021063"/><text x="28.7644%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (7,021,063 samples, 0.07%)</title><rect x="28.5144%" y="261" width="0.0698%" height="15" fill="rgb(249,221,15)" fg:x="2866599722" fg:w="7021063"/><text x="28.7644%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7,021,063 samples, 0.07%)</title><rect x="28.5144%" y="245" width="0.0698%" height="15" fill="rgb(233,34,13)" fg:x="2866599722" fg:w="7021063"/><text x="28.7644%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7,021,063 samples, 0.07%)</title><rect x="28.5144%" y="229" width="0.0698%" height="15" fill="rgb(214,103,39)" fg:x="2866599722" fg:w="7021063"/><text x="28.7644%" y="239.50"></text></g><g><title>alloc::alloc::alloc (7,021,063 samples, 0.07%)</title><rect x="28.5144%" y="213" width="0.0698%" height="15" fill="rgb(251,126,39)" fg:x="2866599722" fg:w="7021063"/><text x="28.7644%" y="223.50"></text></g><g><title>__GI___libc_malloc (6,018,054 samples, 0.06%)</title><rect x="28.6042%" y="181" width="0.0599%" height="15" fill="rgb(214,216,36)" fg:x="2875626803" fg:w="6018054"/><text x="28.8542%" y="191.50"></text></g><g><title>alloc::vec::from_elem (10,030,090 samples, 0.10%)</title><rect x="28.5843%" y="325" width="0.0998%" height="15" fill="rgb(220,221,8)" fg:x="2873620785" fg:w="10030090"/><text x="28.8343%" y="335.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (10,030,090 samples, 0.10%)</title><rect x="28.5843%" y="309" width="0.0998%" height="15" fill="rgb(240,216,3)" fg:x="2873620785" fg:w="10030090"/><text x="28.8343%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (10,030,090 samples, 0.10%)</title><rect x="28.5843%" y="293" width="0.0998%" height="15" fill="rgb(232,218,17)" fg:x="2873620785" fg:w="10030090"/><text x="28.8343%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10,030,090 samples, 0.10%)</title><rect x="28.5843%" y="277" width="0.0998%" height="15" fill="rgb(229,163,45)" fg:x="2873620785" fg:w="10030090"/><text x="28.8343%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (10,030,090 samples, 0.10%)</title><rect x="28.5843%" y="261" width="0.0998%" height="15" fill="rgb(231,110,42)" fg:x="2873620785" fg:w="10030090"/><text x="28.8343%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (10,030,090 samples, 0.10%)</title><rect x="28.5843%" y="245" width="0.0998%" height="15" fill="rgb(208,170,48)" fg:x="2873620785" fg:w="10030090"/><text x="28.8343%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8,024,072 samples, 0.08%)</title><rect x="28.6042%" y="229" width="0.0798%" height="15" fill="rgb(239,116,25)" fg:x="2875626803" fg:w="8024072"/><text x="28.8542%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8,024,072 samples, 0.08%)</title><rect x="28.6042%" y="213" width="0.0798%" height="15" fill="rgb(219,200,50)" fg:x="2875626803" fg:w="8024072"/><text x="28.8542%" y="223.50"></text></g><g><title>alloc::alloc::alloc (8,024,072 samples, 0.08%)</title><rect x="28.6042%" y="197" width="0.0798%" height="15" fill="rgb(245,200,0)" fg:x="2875626803" fg:w="8024072"/><text x="28.8542%" y="207.50"></text></g><g><title>__rdl_alloc (2,006,018 samples, 0.02%)</title><rect x="28.6641%" y="181" width="0.0200%" height="15" fill="rgb(245,119,33)" fg:x="2881644857" fg:w="2006018"/><text x="28.9141%" y="191.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2,006,018 samples, 0.02%)</title><rect x="28.6641%" y="165" width="0.0200%" height="15" fill="rgb(231,125,12)" fg:x="2881644857" fg:w="2006018"/><text x="28.9141%" y="175.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_reserve_one (26,078,234 samples, 0.26%)</title><rect x="28.4446%" y="341" width="0.2594%" height="15" fill="rgb(216,96,41)" fg:x="2859578659" fg:w="26078234"/><text x="28.6946%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;http::header::map::Bucket&lt;http::header::value::HeaderValue&gt;&gt;&gt; (2,006,018 samples, 0.02%)</title><rect x="28.6840%" y="325" width="0.0200%" height="15" fill="rgb(248,43,45)" fg:x="2883650875" fg:w="2006018"/><text x="28.9340%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,006,018 samples, 0.02%)</title><rect x="28.6840%" y="309" width="0.0200%" height="15" fill="rgb(217,222,7)" fg:x="2883650875" fg:w="2006018"/><text x="28.9340%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;[http::header::map::Bucket&lt;http::header::value::HeaderValue&gt;]&gt; (2,006,018 samples, 0.02%)</title><rect x="28.6840%" y="293" width="0.0200%" height="15" fill="rgb(233,28,6)" fg:x="2883650875" fg:w="2006018"/><text x="28.9340%" y="303.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::insert (51,153,459 samples, 0.51%)</title><rect x="28.2550%" y="405" width="0.5088%" height="15" fill="rgb(231,218,15)" fg:x="2840521488" fg:w="51153459"/><text x="28.5050%" y="415.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_insert (46,138,414 samples, 0.46%)</title><rect x="28.3049%" y="389" width="0.4589%" height="15" fill="rgb(226,171,48)" fg:x="2845536533" fg:w="46138414"/><text x="28.5549%" y="399.50"></text></g><g><title>&lt;http::header::name::HeaderName as http::header::map::into_header_name::Sealed&gt;::try_insert (46,138,414 samples, 0.46%)</title><rect x="28.3049%" y="373" width="0.4589%" height="15" fill="rgb(235,201,9)" fg:x="2845536533" fg:w="46138414"/><text x="28.5549%" y="383.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_insert2 (46,138,414 samples, 0.46%)</title><rect x="28.3049%" y="357" width="0.4589%" height="15" fill="rgb(217,80,15)" fg:x="2845536533" fg:w="46138414"/><text x="28.5549%" y="367.50"></text></g><g><title>http::header::map::hash_elem_using (5,015,045 samples, 0.05%)</title><rect x="28.7140%" y="341" width="0.0499%" height="15" fill="rgb(219,152,8)" fg:x="2886659902" fg:w="5015045"/><text x="28.9640%" y="351.50"></text></g><g><title>&lt;http::header::name::HeaderName as core::hash::Hash&gt;::hash (3,009,027 samples, 0.03%)</title><rect x="28.7339%" y="325" width="0.0299%" height="15" fill="rgb(243,107,38)" fg:x="2888665920" fg:w="3009027"/><text x="28.9839%" y="335.50"></text></g><g><title>&lt;http::header::name::Repr&lt;T&gt; as core::hash::Hash&gt;::hash (3,009,027 samples, 0.03%)</title><rect x="28.7339%" y="309" width="0.0299%" height="15" fill="rgb(231,17,5)" fg:x="2888665920" fg:w="3009027"/><text x="28.9839%" y="319.50"></text></g><g><title>&lt;http::header::name::StandardHeader as core::hash::Hash&gt;::hash (2,006,018 samples, 0.02%)</title><rect x="28.7439%" y="293" width="0.0200%" height="15" fill="rgb(209,25,54)" fg:x="2889668929" fg:w="2006018"/><text x="28.9939%" y="303.50"></text></g><g><title>&lt;(http::status::StatusCode,R) as axum_core::response::into_response::IntoResponse&gt;::into_response (92,276,828 samples, 0.92%)</title><rect x="27.8559%" y="453" width="0.9179%" height="15" fill="rgb(219,0,2)" fg:x="2800401128" fg:w="92276828"/><text x="28.1059%" y="463.50"></text></g><g><title>&lt;alloc::string::String as axum_core::response::into_response::IntoResponse&gt;::into_response (91,273,819 samples, 0.91%)</title><rect x="27.8659%" y="437" width="0.9079%" height="15" fill="rgb(246,9,5)" fg:x="2801404137" fg:w="91273819"/><text x="28.1159%" y="447.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;str&gt; as axum_core::response::into_response::IntoResponse&gt;::into_response (86,258,774 samples, 0.86%)</title><rect x="27.9158%" y="421" width="0.8580%" height="15" fill="rgb(226,159,4)" fg:x="2806419182" fg:w="86258774"/><text x="28.1658%" y="431.50"></text></g><g><title>&lt;axum::extract::state::State&lt;InnerState&gt; as axum_core::extract::FromRequestParts&lt;OuterState&gt;&gt;::from_request_parts::{{closure}} (8,024,072 samples, 0.08%)</title><rect x="28.7838%" y="437" width="0.0798%" height="15" fill="rgb(219,175,34)" fg:x="2893680965" fg:w="8024072"/><text x="29.0338%" y="447.50"></text></g><g><title>&lt;T as axum_core::extract::from_ref::FromRef&lt;T&gt;&gt;::from_ref (8,024,072 samples, 0.08%)</title><rect x="28.7838%" y="421" width="0.0798%" height="15" fill="rgb(236,10,46)" fg:x="2893680965" fg:w="8024072"/><text x="29.0338%" y="431.50"></text></g><g><title>&lt;interview::AppState as core::clone::Clone&gt;::clone (8,024,072 samples, 0.08%)</title><rect x="28.7838%" y="405" width="0.0798%" height="15" fill="rgb(240,211,16)" fg:x="2893680965" fg:w="8024072"/><text x="29.0338%" y="415.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (8,024,072 samples, 0.08%)</title><rect x="28.7838%" y="389" width="0.0798%" height="15" fill="rgb(205,3,43)" fg:x="2893680965" fg:w="8024072"/><text x="29.0338%" y="399.50"></text></g><g><title>__free (2,006,018 samples, 0.02%)</title><rect x="28.8636%" y="437" width="0.0200%" height="15" fill="rgb(245,7,22)" fg:x="2901705037" fg:w="2006018"/><text x="29.1136%" y="447.50"></text></g><g><title>__free (10,030,090 samples, 0.10%)</title><rect x="28.9135%" y="325" width="0.0998%" height="15" fill="rgb(239,132,32)" fg:x="2906720082" fg:w="10030090"/><text x="29.1635%" y="335.50"></text></g><g><title>_int_free (4,012,036 samples, 0.04%)</title><rect x="28.9734%" y="309" width="0.0399%" height="15" fill="rgb(228,202,34)" fg:x="2912738136" fg:w="4012036"/><text x="29.2234%" y="319.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,036,108 samples, 0.12%)</title><rect x="28.9135%" y="373" width="0.1197%" height="15" fill="rgb(254,200,22)" fg:x="2906720082" fg:w="12036108"/><text x="29.1635%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12,036,108 samples, 0.12%)</title><rect x="28.9135%" y="357" width="0.1197%" height="15" fill="rgb(219,10,39)" fg:x="2906720082" fg:w="12036108"/><text x="29.1635%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (12,036,108 samples, 0.12%)</title><rect x="28.9135%" y="341" width="0.1197%" height="15" fill="rgb(226,210,39)" fg:x="2906720082" fg:w="12036108"/><text x="29.1635%" y="351.50"></text></g><g><title>&lt;h2::share::RecvStream as core::ops::drop::Drop&gt;::drop (3,009,027 samples, 0.03%)</title><rect x="29.0432%" y="357" width="0.0299%" height="15" fill="rgb(208,219,16)" fg:x="2919759199" fg:w="3009027"/><text x="29.2932%" y="367.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (7,021,063 samples, 0.07%)</title><rect x="29.0931%" y="309" width="0.0698%" height="15" fill="rgb(216,158,51)" fg:x="2924774244" fg:w="7021063"/><text x="29.3431%" y="319.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (7,021,063 samples, 0.07%)</title><rect x="29.0931%" y="293" width="0.0698%" height="15" fill="rgb(233,14,44)" fg:x="2924774244" fg:w="7021063"/><text x="29.3431%" y="303.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (7,021,063 samples, 0.07%)</title><rect x="29.0931%" y="277" width="0.0698%" height="15" fill="rgb(237,97,39)" fg:x="2924774244" fg:w="7021063"/><text x="29.3431%" y="287.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::DerefMut&gt;::deref_mut (2,006,018 samples, 0.02%)</title><rect x="29.1829%" y="293" width="0.0200%" height="15" fill="rgb(218,198,43)" fg:x="2933801325" fg:w="2006018"/><text x="29.4329%" y="303.50"></text></g><g><title>&lt;h2::proto::streams::store::Store as core::ops::index::IndexMut&lt;h2::proto::streams::store::Key&gt;&gt;::index_mut (2,006,018 samples, 0.02%)</title><rect x="29.1829%" y="277" width="0.0200%" height="15" fill="rgb(231,104,20)" fg:x="2933801325" fg:w="2006018"/><text x="29.4329%" y="287.50"></text></g><g><title>slab::Slab&lt;T&gt;::get_mut (2,006,018 samples, 0.02%)</title><rect x="29.1829%" y="261" width="0.0200%" height="15" fill="rgb(254,36,13)" fg:x="2933801325" fg:w="2006018"/><text x="29.4329%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::poison::mutex::MutexGuard&lt;h2::proto::streams::streams::Inner&gt;&gt; (23,069,207 samples, 0.23%)</title><rect x="29.2028%" y="293" width="0.2295%" height="15" fill="rgb(248,14,50)" fg:x="2935807343" fg:w="23069207"/><text x="29.4528%" y="303.50"></text></g><g><title>&lt;std::sync::poison::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (23,069,207 samples, 0.23%)</title><rect x="29.2028%" y="277" width="0.2295%" height="15" fill="rgb(217,107,29)" fg:x="2935807343" fg:w="23069207"/><text x="29.4528%" y="287.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (23,069,207 samples, 0.23%)</title><rect x="29.2028%" y="261" width="0.2295%" height="15" fill="rgb(251,169,33)" fg:x="2935807343" fg:w="23069207"/><text x="29.4528%" y="271.50"></text></g><g><title>syscall (18,054,162 samples, 0.18%)</title><rect x="29.2527%" y="245" width="0.1796%" height="15" fill="rgb(217,108,32)" fg:x="2940822388" fg:w="18054162"/><text x="29.5027%" y="255.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::Deref&gt;::deref (4,012,036 samples, 0.04%)</title><rect x="29.5221%" y="261" width="0.0399%" height="15" fill="rgb(219,66,42)" fg:x="2967903631" fg:w="4012036"/><text x="29.7721%" y="271.50"></text></g><g><title>&lt;h2::proto::streams::store::Store as core::ops::index::Index&lt;h2::proto::streams::store::Key&gt;&gt;::index (3,009,027 samples, 0.03%)</title><rect x="29.5321%" y="245" width="0.0299%" height="15" fill="rgb(206,180,7)" fg:x="2968906640" fg:w="3009027"/><text x="29.7821%" y="255.50"></text></g><g><title>slab::Slab&lt;T&gt;::get (3,009,027 samples, 0.03%)</title><rect x="29.5321%" y="229" width="0.0299%" height="15" fill="rgb(208,226,31)" fg:x="2968906640" fg:w="3009027"/><text x="29.7821%" y="239.50"></text></g><g><title>h2::proto::streams::counts::Counts::transition_after (13,039,117 samples, 0.13%)</title><rect x="29.4423%" y="277" width="0.1297%" height="15" fill="rgb(218,26,49)" fg:x="2959879559" fg:w="13039117"/><text x="29.6923%" y="287.50"></text></g><g><title>h2::proto::streams::counts::Counts::transition (23,069,207 samples, 0.23%)</title><rect x="29.4323%" y="293" width="0.2295%" height="15" fill="rgb(233,197,48)" fg:x="2958876550" fg:w="23069207"/><text x="29.6823%" y="303.50"></text></g><g><title>h2::proto::streams::streams::drop_stream_ref::{{closure}} (9,027,081 samples, 0.09%)</title><rect x="29.5720%" y="277" width="0.0898%" height="15" fill="rgb(252,181,51)" fg:x="2972918676" fg:w="9027081"/><text x="29.8220%" y="287.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (10,030,090 samples, 0.10%)</title><rect x="29.7815%" y="245" width="0.0998%" height="15" fill="rgb(253,90,19)" fg:x="2993981865" fg:w="10030090"/><text x="30.0315%" y="255.50"></text></g><g><title>syscall (8,024,072 samples, 0.08%)</title><rect x="29.8015%" y="229" width="0.0798%" height="15" fill="rgb(215,171,30)" fg:x="2995987883" fg:w="8024072"/><text x="30.0515%" y="239.50"></text></g><g><title>&lt;h2::proto::streams::streams::OpaqueStreamRef as core::ops::drop::Drop&gt;::drop (94,282,846 samples, 0.94%)</title><rect x="29.0931%" y="325" width="0.9378%" height="15" fill="rgb(214,222,9)" fg:x="2924774244" fg:w="94282846"/><text x="29.3431%" y="335.50"></text></g><g><title>h2::proto::streams::streams::drop_stream_ref (87,261,783 samples, 0.87%)</title><rect x="29.1629%" y="309" width="0.8680%" height="15" fill="rgb(223,3,22)" fg:x="2931795307" fg:w="87261783"/><text x="29.4129%" y="319.50"></text></g><g><title>std::sync::poison::mutex::Mutex&lt;T&gt;::lock (36,108,324 samples, 0.36%)</title><rect x="29.6718%" y="293" width="0.3592%" height="15" fill="rgb(225,196,46)" fg:x="2982948766" fg:w="36108324"/><text x="29.9218%" y="303.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (36,108,324 samples, 0.36%)</title><rect x="29.6718%" y="277" width="0.3592%" height="15" fill="rgb(209,110,37)" fg:x="2982948766" fg:w="36108324"/><text x="29.9218%" y="287.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (31,093,279 samples, 0.31%)</title><rect x="29.7216%" y="261" width="0.3093%" height="15" fill="rgb(249,89,12)" fg:x="2987963811" fg:w="31093279"/><text x="29.9716%" y="271.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (15,045,135 samples, 0.15%)</title><rect x="29.8813%" y="245" width="0.1497%" height="15" fill="rgb(226,27,33)" fg:x="3004011955" fg:w="15045135"/><text x="30.1313%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (9,027,081 samples, 0.09%)</title><rect x="29.9411%" y="229" width="0.0898%" height="15" fill="rgb(213,82,22)" fg:x="3010030009" fg:w="9027081"/><text x="30.1911%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_load (9,027,081 samples, 0.09%)</title><rect x="29.9411%" y="213" width="0.0898%" height="15" fill="rgb(248,140,0)" fg:x="3010030009" fg:w="9027081"/><text x="30.1911%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;h2::share::FlowControl&gt; (100,300,900 samples, 1.00%)</title><rect x="29.0731%" y="357" width="0.9977%" height="15" fill="rgb(228,106,3)" fg:x="2922768226" fg:w="100300900"/><text x="29.3231%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;h2::proto::streams::streams::OpaqueStreamRef&gt; (100,300,900 samples, 1.00%)</title><rect x="29.0731%" y="341" width="0.9977%" height="15" fill="rgb(209,23,37)" fg:x="2922768226" fg:w="100300900"/><text x="29.3231%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::poison::mutex::Mutex&lt;h2::proto::streams::streams::Inner&gt;&gt;&gt; (4,012,036 samples, 0.04%)</title><rect x="30.0309%" y="325" width="0.0399%" height="15" fill="rgb(241,93,50)" fg:x="3019057090" fg:w="4012036"/><text x="30.2809%" y="335.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,012,036 samples, 0.04%)</title><rect x="30.0309%" y="309" width="0.0399%" height="15" fill="rgb(253,46,43)" fg:x="3019057090" fg:w="4012036"/><text x="30.2809%" y="319.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3,009,027 samples, 0.03%)</title><rect x="30.1107%" y="341" width="0.0299%" height="15" fill="rgb(226,206,43)" fg:x="3027081162" fg:w="3009027"/><text x="30.3607%" y="351.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (3,009,027 samples, 0.03%)</title><rect x="30.1107%" y="325" width="0.0299%" height="15" fill="rgb(217,54,7)" fg:x="3027081162" fg:w="3009027"/><text x="30.3607%" y="335.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (3,009,027 samples, 0.03%)</title><rect x="30.1107%" y="309" width="0.0299%" height="15" fill="rgb(223,5,52)" fg:x="3027081162" fg:w="3009027"/><text x="30.3607%" y="319.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::DerefMut&gt;::deref_mut (10,030,090 samples, 0.10%)</title><rect x="30.1407%" y="341" width="0.0998%" height="15" fill="rgb(206,52,46)" fg:x="3030090189" fg:w="10030090"/><text x="30.3907%" y="351.50"></text></g><g><title>&lt;h2::proto::streams::store::Store as core::ops::index::IndexMut&lt;h2::proto::streams::store::Key&gt;&gt;::index_mut (10,030,090 samples, 0.10%)</title><rect x="30.1407%" y="325" width="0.0998%" height="15" fill="rgb(253,136,11)" fg:x="3030090189" fg:w="10030090"/><text x="30.3907%" y="335.50"></text></g><g><title>slab::Slab&lt;T&gt;::get_mut (9,027,081 samples, 0.09%)</title><rect x="30.1507%" y="309" width="0.0898%" height="15" fill="rgb(208,106,33)" fg:x="3031093198" fg:w="9027081"/><text x="30.4007%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_mut (3,009,027 samples, 0.03%)</title><rect x="30.2105%" y="293" width="0.0299%" height="15" fill="rgb(206,54,4)" fg:x="3037111252" fg:w="3009027"/><text x="30.4605%" y="303.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_mut (3,009,027 samples, 0.03%)</title><rect x="30.2105%" y="277" width="0.0299%" height="15" fill="rgb(213,3,15)" fg:x="3037111252" fg:w="3009027"/><text x="30.4605%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::poison::mutex::MutexGuard&lt;h2::proto::streams::streams::Inner&gt;&gt; (35,105,315 samples, 0.35%)</title><rect x="30.2404%" y="341" width="0.3492%" height="15" fill="rgb(252,211,39)" fg:x="3040120279" fg:w="35105315"/><text x="30.4904%" y="351.50"></text></g><g><title>&lt;std::sync::poison::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (35,105,315 samples, 0.35%)</title><rect x="30.2404%" y="325" width="0.3492%" height="15" fill="rgb(223,6,36)" fg:x="3040120279" fg:w="35105315"/><text x="30.4904%" y="335.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (35,105,315 samples, 0.35%)</title><rect x="30.2404%" y="309" width="0.3492%" height="15" fill="rgb(252,169,45)" fg:x="3040120279" fg:w="35105315"/><text x="30.4904%" y="319.50"></text></g><g><title>syscall (32,096,288 samples, 0.32%)</title><rect x="30.2704%" y="293" width="0.3193%" height="15" fill="rgb(212,48,26)" fg:x="3043129306" fg:w="32096288"/><text x="30.5204%" y="303.50"></text></g><g><title>h2::proto::streams::recv::Recv::clear_recv_buffer (3,009,027 samples, 0.03%)</title><rect x="30.5896%" y="341" width="0.0299%" height="15" fill="rgb(251,102,48)" fg:x="3075225594" fg:w="3009027"/><text x="30.8396%" y="351.50"></text></g><g><title>h2::proto::streams::buffer::Deque::pop_front (3,009,027 samples, 0.03%)</title><rect x="30.5896%" y="325" width="0.0299%" height="15" fill="rgb(243,208,16)" fg:x="3075225594" fg:w="3009027"/><text x="30.8396%" y="335.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (41,123,369 samples, 0.41%)</title><rect x="30.8291%" y="293" width="0.4091%" height="15" fill="rgb(219,96,24)" fg:x="3099297810" fg:w="41123369"/><text x="31.0791%" y="303.50"></text></g><g><title>syscall (39,117,351 samples, 0.39%)</title><rect x="30.8490%" y="277" width="0.3891%" height="15" fill="rgb(219,33,29)" fg:x="3101303828" fg:w="39117351"/><text x="31.0990%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;h2::share::RecvStream&gt; (286,860,574 samples, 2.85%)</title><rect x="29.0332%" y="373" width="2.8534%" height="15" fill="rgb(223,176,5)" fg:x="2918756190" fg:w="286860574"/><text x="29.2832%" y="383.50">co..</text></g><g><title>h2::proto::streams::streams::OpaqueStreamRef::clear_recv_buffer (182,547,638 samples, 1.82%)</title><rect x="30.0708%" y="357" width="1.8158%" height="15" fill="rgb(228,140,14)" fg:x="3023069126" fg:w="182547638"/><text x="30.3208%" y="367.50">h..</text></g><g><title>std::sync::poison::mutex::Mutex&lt;T&gt;::lock (127,382,143 samples, 1.27%)</title><rect x="30.6196%" y="341" width="1.2671%" height="15" fill="rgb(217,179,31)" fg:x="3078234621" fg:w="127382143"/><text x="30.8696%" y="351.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (126,379,134 samples, 1.26%)</title><rect x="30.6296%" y="325" width="1.2571%" height="15" fill="rgb(230,9,30)" fg:x="3079237630" fg:w="126379134"/><text x="30.8796%" y="335.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (114,343,026 samples, 1.14%)</title><rect x="30.7493%" y="309" width="1.1374%" height="15" fill="rgb(230,136,20)" fg:x="3091273738" fg:w="114343026"/><text x="30.9993%" y="319.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (65,195,585 samples, 0.65%)</title><rect x="31.2382%" y="293" width="0.6485%" height="15" fill="rgb(215,210,22)" fg:x="3140421179" fg:w="65195585"/><text x="31.4882%" y="303.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (45,135,405 samples, 0.45%)</title><rect x="31.4377%" y="277" width="0.4490%" height="15" fill="rgb(218,43,5)" fg:x="3160481359" fg:w="45135405"/><text x="31.6877%" y="287.50"></text></g><g><title>core::sync::atomic::atomic_load (45,135,405 samples, 0.45%)</title><rect x="31.4377%" y="261" width="0.4490%" height="15" fill="rgb(216,11,5)" fg:x="3160481359" fg:w="45135405"/><text x="31.6877%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;http_body_util::combinators::map_err::MapErr&lt;hyper::body::incoming::Incoming,axum_core::error::Error::new&lt;hyper::error::Error&gt;&gt;&gt; (5,015,045 samples, 0.05%)</title><rect x="31.8867%" y="373" width="0.0499%" height="15" fill="rgb(209,82,29)" fg:x="3205616764" fg:w="5015045"/><text x="32.1367%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum_core::body::Body&gt; (307,923,763 samples, 3.06%)</title><rect x="28.9035%" y="437" width="3.0630%" height="15" fill="rgb(244,115,12)" fg:x="2905717073" fg:w="307923763"/><text x="29.1535%" y="447.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;http_body_util::combinators::box_body::UnsyncBoxBody&lt;bytes::bytes::Bytes,axum_core::error::Error&gt;&gt; (307,923,763 samples, 3.06%)</title><rect x="28.9035%" y="421" width="3.0630%" height="15" fill="rgb(222,82,18)" fg:x="2905717073" fg:w="307923763"/><text x="29.1535%" y="431.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn http_body::Body+Error = axum_core::error::Error+Data = bytes::bytes::Bytes+core::marker::Send&gt;&gt;&gt; (307,923,763 samples, 3.06%)</title><rect x="28.9035%" y="405" width="3.0630%" height="15" fill="rgb(249,227,8)" fg:x="2905717073" fg:w="307923763"/><text x="29.1535%" y="415.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn http_body::Body+Error = axum_core::error::Error+Data = bytes::bytes::Bytes+core::marker::Send&gt;&gt; (307,923,763 samples, 3.06%)</title><rect x="28.9035%" y="389" width="3.0630%" height="15" fill="rgb(253,141,45)" fg:x="2905717073" fg:w="307923763"/><text x="29.1535%" y="399.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;hyper::body::incoming::Incoming&gt; (3,009,027 samples, 0.03%)</title><rect x="31.9365%" y="373" width="0.0299%" height="15" fill="rgb(234,184,4)" fg:x="3210631809" fg:w="3009027"/><text x="32.1865%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::body::incoming::Kind&gt; (3,009,027 samples, 0.03%)</title><rect x="31.9365%" y="357" width="0.0299%" height="15" fill="rgb(218,194,23)" fg:x="3210631809" fg:w="3009027"/><text x="32.1865%" y="367.50"></text></g><g><title>__free (19,057,171 samples, 0.19%)</title><rect x="32.0862%" y="165" width="0.1896%" height="15" fill="rgb(235,66,41)" fg:x="3225676944" fg:w="19057171"/><text x="32.3362%" y="175.50"></text></g><g><title>_int_free (11,033,099 samples, 0.11%)</title><rect x="32.1660%" y="149" width="0.1097%" height="15" fill="rgb(245,217,1)" fg:x="3233701016" fg:w="11033099"/><text x="32.4160%" y="159.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20,060,180 samples, 0.20%)</title><rect x="32.0862%" y="213" width="0.1995%" height="15" fill="rgb(229,91,1)" fg:x="3225676944" fg:w="20060180"/><text x="32.3362%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (20,060,180 samples, 0.20%)</title><rect x="32.0862%" y="197" width="0.1995%" height="15" fill="rgb(207,101,30)" fg:x="3225676944" fg:w="20060180"/><text x="32.3362%" y="207.50"></text></g><g><title>alloc::alloc::dealloc (20,060,180 samples, 0.20%)</title><rect x="32.0862%" y="181" width="0.1995%" height="15" fill="rgb(223,82,49)" fg:x="3225676944" fg:w="20060180"/><text x="32.3362%" y="191.50"></text></g><g><title>__free (5,015,045 samples, 0.05%)</title><rect x="32.2857%" y="213" width="0.0499%" height="15" fill="rgb(218,167,17)" fg:x="3245737124" fg:w="5015045"/><text x="32.5357%" y="223.50"></text></g><g><title>_int_free (2,006,018 samples, 0.02%)</title><rect x="32.3157%" y="197" width="0.0200%" height="15" fill="rgb(208,103,14)" fg:x="3248746151" fg:w="2006018"/><text x="32.5657%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::extract::matched_path::MatchedPath&gt; (12,036,108 samples, 0.12%)</title><rect x="32.3456%" y="213" width="0.1197%" height="15" fill="rgb(238,20,8)" fg:x="3251755178" fg:w="12036108"/><text x="32.5956%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;str&gt;&gt; (12,036,108 samples, 0.12%)</title><rect x="32.3456%" y="197" width="0.1197%" height="15" fill="rgb(218,80,54)" fg:x="3251755178" fg:w="12036108"/><text x="32.5956%" y="207.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,036,108 samples, 0.12%)</title><rect x="32.3456%" y="181" width="0.1197%" height="15" fill="rgb(240,144,17)" fg:x="3251755178" fg:w="12036108"/><text x="32.5956%" y="191.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (3,009,027 samples, 0.03%)</title><rect x="32.4354%" y="165" width="0.0299%" height="15" fill="rgb(245,27,50)" fg:x="3260782259" fg:w="3009027"/><text x="32.6854%" y="175.50"></text></g><g><title>core::sync::atomic::atomic_sub (3,009,027 samples, 0.03%)</title><rect x="32.4354%" y="149" width="0.0299%" height="15" fill="rgb(251,51,7)" fg:x="3260782259" fg:w="3009027"/><text x="32.6854%" y="159.50"></text></g><g><title>__free (6,018,054 samples, 0.06%)</title><rect x="32.5751%" y="101" width="0.0599%" height="15" fill="rgb(245,217,29)" fg:x="3274824385" fg:w="6018054"/><text x="32.8251%" y="111.50"></text></g><g><title>_int_free (4,012,036 samples, 0.04%)</title><rect x="32.5950%" y="85" width="0.0399%" height="15" fill="rgb(221,176,29)" fg:x="3276830403" fg:w="4012036"/><text x="32.8450%" y="95.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (3,009,027 samples, 0.03%)</title><rect x="32.6349%" y="101" width="0.0299%" height="15" fill="rgb(212,180,24)" fg:x="3280842439" fg:w="3009027"/><text x="32.8849%" y="111.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;str,&amp;alloc::alloc::Global&gt;&gt; (3,009,027 samples, 0.03%)</title><rect x="32.6349%" y="85" width="0.0299%" height="15" fill="rgb(254,24,2)" fg:x="3280842439" fg:w="3009027"/><text x="32.8849%" y="95.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,009,027 samples, 0.03%)</title><rect x="32.6349%" y="69" width="0.0299%" height="15" fill="rgb(230,100,2)" fg:x="3280842439" fg:w="3009027"/><text x="32.8849%" y="79.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;str&gt;&gt; (17,051,153 samples, 0.17%)</title><rect x="32.5252%" y="133" width="0.1696%" height="15" fill="rgb(219,142,25)" fg:x="3269809340" fg:w="17051153"/><text x="32.7752%" y="143.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17,051,153 samples, 0.17%)</title><rect x="32.5252%" y="117" width="0.1696%" height="15" fill="rgb(240,73,43)" fg:x="3269809340" fg:w="17051153"/><text x="32.7752%" y="127.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (3,009,027 samples, 0.03%)</title><rect x="32.6649%" y="101" width="0.0299%" height="15" fill="rgb(214,114,15)" fg:x="3283851466" fg:w="3009027"/><text x="32.9149%" y="111.50"></text></g><g><title>core::sync::atomic::atomic_sub (3,009,027 samples, 0.03%)</title><rect x="32.6649%" y="85" width="0.0299%" height="15" fill="rgb(207,130,4)" fg:x="3283851466" fg:w="3009027"/><text x="32.9149%" y="95.50"></text></g><g><title>__free (8,024,072 samples, 0.08%)</title><rect x="32.7148%" y="85" width="0.0798%" height="15" fill="rgb(221,25,40)" fg:x="3288866511" fg:w="8024072"/><text x="32.9648%" y="95.50"></text></g><g><title>_int_free (4,012,036 samples, 0.04%)</title><rect x="32.7547%" y="69" width="0.0399%" height="15" fill="rgb(241,184,7)" fg:x="3292878547" fg:w="4012036"/><text x="33.0047%" y="79.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::routing::url_params::UrlParams&gt; (33,099,297 samples, 0.33%)</title><rect x="32.4753%" y="213" width="0.3292%" height="15" fill="rgb(235,159,4)" fg:x="3264794295" fg:w="33099297"/><text x="32.7253%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(alloc::sync::Arc&lt;str&gt;,axum::util::PercentDecodedStr)&gt;&gt; (30,090,270 samples, 0.30%)</title><rect x="32.5052%" y="197" width="0.2993%" height="15" fill="rgb(214,87,48)" fg:x="3267803322" fg:w="30090270"/><text x="32.7552%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30,090,270 samples, 0.30%)</title><rect x="32.5052%" y="181" width="0.2993%" height="15" fill="rgb(246,198,24)" fg:x="3267803322" fg:w="30090270"/><text x="32.7552%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(alloc::sync::Arc&lt;str&gt;,axum::util::PercentDecodedStr)]&gt; (30,090,270 samples, 0.30%)</title><rect x="32.5052%" y="165" width="0.2993%" height="15" fill="rgb(209,66,40)" fg:x="3267803322" fg:w="30090270"/><text x="32.7552%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::sync::Arc&lt;str&gt;,axum::util::PercentDecodedStr)&gt; (28,084,252 samples, 0.28%)</title><rect x="32.5252%" y="149" width="0.2794%" height="15" fill="rgb(233,147,39)" fg:x="3269809340" fg:w="28084252"/><text x="32.7752%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::util::PercentDecodedStr&gt; (11,033,099 samples, 0.11%)</title><rect x="32.6948%" y="133" width="0.1097%" height="15" fill="rgb(231,145,52)" fg:x="3286860493" fg:w="11033099"/><text x="32.9448%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;str&gt;&gt; (11,033,099 samples, 0.11%)</title><rect x="32.6948%" y="117" width="0.1097%" height="15" fill="rgb(206,20,26)" fg:x="3286860493" fg:w="11033099"/><text x="32.9448%" y="127.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11,033,099 samples, 0.11%)</title><rect x="32.6948%" y="101" width="0.1097%" height="15" fill="rgb(238,220,4)" fg:x="3286860493" fg:w="11033099"/><text x="32.9448%" y="111.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (88,264,792 samples, 0.88%)</title><rect x="32.0263%" y="277" width="0.8780%" height="15" fill="rgb(252,195,42)" fg:x="3219658890" fg:w="88264792"/><text x="32.2763%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (88,264,792 samples, 0.88%)</title><rect x="32.0263%" y="261" width="0.8780%" height="15" fill="rgb(209,10,6)" fg:x="3219658890" fg:w="88264792"/><text x="32.2763%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Send+core::marker::Sync&gt;)&gt; (88,264,792 samples, 0.88%)</title><rect x="32.0263%" y="245" width="0.8780%" height="15" fill="rgb(229,3,52)" fg:x="3219658890" fg:w="88264792"/><text x="32.2763%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Send+core::marker::Sync&gt;&gt; (88,264,792 samples, 0.88%)</title><rect x="32.0263%" y="229" width="0.8780%" height="15" fill="rgb(253,49,37)" fg:x="3219658890" fg:w="88264792"/><text x="32.2763%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::uri::Uri&gt; (10,030,090 samples, 0.10%)</title><rect x="32.8045%" y="213" width="0.0998%" height="15" fill="rgb(240,103,49)" fg:x="3297893592" fg:w="10030090"/><text x="33.0545%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::uri::authority::Authority&gt; (7,021,063 samples, 0.07%)</title><rect x="32.8345%" y="197" width="0.0698%" height="15" fill="rgb(250,182,30)" fg:x="3300902619" fg:w="7021063"/><text x="33.0845%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::byte_str::ByteStr&gt; (7,021,063 samples, 0.07%)</title><rect x="32.8345%" y="181" width="0.0698%" height="15" fill="rgb(248,8,30)" fg:x="3300902619" fg:w="7021063"/><text x="33.0845%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (7,021,063 samples, 0.07%)</title><rect x="32.8345%" y="165" width="0.0698%" height="15" fill="rgb(237,120,30)" fg:x="3300902619" fg:w="7021063"/><text x="33.0845%" y="175.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (7,021,063 samples, 0.07%)</title><rect x="32.8345%" y="149" width="0.0698%" height="15" fill="rgb(221,146,34)" fg:x="3300902619" fg:w="7021063"/><text x="33.0845%" y="159.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (6,018,054 samples, 0.06%)</title><rect x="32.8445%" y="133" width="0.0599%" height="15" fill="rgb(242,55,13)" fg:x="3301905628" fg:w="6018054"/><text x="33.0945%" y="143.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (6,018,054 samples, 0.06%)</title><rect x="32.8445%" y="117" width="0.0599%" height="15" fill="rgb(242,112,31)" fg:x="3301905628" fg:w="6018054"/><text x="33.0945%" y="127.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop::{{closure}} (6,018,054 samples, 0.06%)</title><rect x="32.8445%" y="101" width="0.0599%" height="15" fill="rgb(249,192,27)" fg:x="3301905628" fg:w="6018054"/><text x="33.0945%" y="111.50"></text></g><g><title>bytes::bytes_mut::release_shared (4,012,036 samples, 0.04%)</title><rect x="32.8644%" y="85" width="0.0399%" height="15" fill="rgb(208,204,44)" fg:x="3303911646" fg:w="4012036"/><text x="33.1144%" y="95.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (93,279,837 samples, 0.93%)</title><rect x="31.9964%" y="293" width="0.9279%" height="15" fill="rgb(208,93,54)" fg:x="3216649863" fg:w="93279837"/><text x="32.2464%" y="303.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (2,006,018 samples, 0.02%)</title><rect x="32.9043%" y="277" width="0.0200%" height="15" fill="rgb(242,1,31)" fg:x="3307923682" fg:w="2006018"/><text x="33.1543%" y="287.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (2,006,018 samples, 0.02%)</title><rect x="32.9043%" y="261" width="0.0200%" height="15" fill="rgb(241,83,25)" fg:x="3307923682" fg:w="2006018"/><text x="33.1543%" y="271.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_full (2,006,018 samples, 0.02%)</title><rect x="32.9043%" y="245" width="0.0200%" height="15" fill="rgb(205,169,50)" fg:x="3307923682" fg:w="2006018"/><text x="33.1543%" y="255.50"></text></g><g><title>__free (4,012,036 samples, 0.04%)</title><rect x="32.9243%" y="245" width="0.0399%" height="15" fill="rgb(239,186,37)" fg:x="3309929700" fg:w="4012036"/><text x="33.1743%" y="255.50"></text></g><g><title>_int_free (3,009,027 samples, 0.03%)</title><rect x="32.9343%" y="229" width="0.0299%" height="15" fill="rgb(205,221,10)" fg:x="3310932709" fg:w="3009027"/><text x="33.1843%" y="239.50"></text></g><g><title>__rdl_dealloc (4,012,036 samples, 0.04%)</title><rect x="32.9642%" y="245" width="0.0399%" height="15" fill="rgb(218,196,15)" fg:x="3313941736" fg:w="4012036"/><text x="33.2142%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10,030,090 samples, 0.10%)</title><rect x="32.9243%" y="277" width="0.0998%" height="15" fill="rgb(218,196,35)" fg:x="3309929700" fg:w="10030090"/><text x="33.1743%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (10,030,090 samples, 0.10%)</title><rect x="32.9243%" y="261" width="0.0998%" height="15" fill="rgb(233,63,24)" fg:x="3309929700" fg:w="10030090"/><text x="33.1743%" y="271.50"></text></g><g><title>__rust_dealloc (2,006,018 samples, 0.02%)</title><rect x="33.0041%" y="245" width="0.0200%" height="15" fill="rgb(225,8,4)" fg:x="3317953772" fg:w="2006018"/><text x="33.2541%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::extensions::Extensions&gt; (105,315,945 samples, 1.05%)</title><rect x="31.9864%" y="421" width="1.0476%" height="15" fill="rgb(234,105,35)" fg:x="3215646854" fg:w="105315945"/><text x="32.2364%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;std::collections::hash::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Send+core::marker::Sync&gt;,core::hash::BuildHasherDefault&lt;http::extensions::IdHasher&gt;&gt;&gt;&gt;&gt; (105,315,945 samples, 1.05%)</title><rect x="31.9864%" y="405" width="1.0476%" height="15" fill="rgb(236,21,32)" fg:x="3215646854" fg:w="105315945"/><text x="32.2364%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;std::collections::hash::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Send+core::marker::Sync&gt;,core::hash::BuildHasherDefault&lt;http::extensions::IdHasher&gt;&gt;&gt;&gt; (105,315,945 samples, 1.05%)</title><rect x="31.9864%" y="389" width="1.0476%" height="15" fill="rgb(228,109,6)" fg:x="3215646854" fg:w="105315945"/><text x="32.2364%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Send+core::marker::Sync&gt;,core::hash::BuildHasherDefault&lt;http::extensions::IdHasher&gt;&gt;&gt; (105,315,945 samples, 1.05%)</title><rect x="31.9864%" y="373" width="1.0476%" height="15" fill="rgb(229,215,31)" fg:x="3215646854" fg:w="105315945"/><text x="32.2364%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Send+core::marker::Sync&gt;,core::hash::BuildHasherDefault&lt;http::extensions::IdHasher&gt;&gt;&gt; (105,315,945 samples, 1.05%)</title><rect x="31.9864%" y="357" width="1.0476%" height="15" fill="rgb(221,52,54)" fg:x="3215646854" fg:w="105315945"/><text x="32.2364%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Send+core::marker::Sync&gt;)&gt;&gt; (105,315,945 samples, 1.05%)</title><rect x="31.9864%" y="341" width="1.0476%" height="15" fill="rgb(252,129,43)" fg:x="3215646854" fg:w="105315945"/><text x="32.2364%" y="351.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (105,315,945 samples, 1.05%)</title><rect x="31.9864%" y="325" width="1.0476%" height="15" fill="rgb(248,183,27)" fg:x="3215646854" fg:w="105315945"/><text x="32.2364%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (105,315,945 samples, 1.05%)</title><rect x="31.9864%" y="309" width="1.0476%" height="15" fill="rgb(250,0,22)" fg:x="3215646854" fg:w="105315945"/><text x="32.2364%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (11,033,099 samples, 0.11%)</title><rect x="32.9243%" y="293" width="0.1097%" height="15" fill="rgb(213,166,10)" fg:x="3309929700" fg:w="11033099"/><text x="33.1743%" y="303.50"></text></g><g><title>__free (18,054,162 samples, 0.18%)</title><rect x="33.0440%" y="341" width="0.1796%" height="15" fill="rgb(207,163,36)" fg:x="3321965808" fg:w="18054162"/><text x="33.2940%" y="351.50"></text></g><g><title>_int_free (7,021,063 samples, 0.07%)</title><rect x="33.1537%" y="325" width="0.0698%" height="15" fill="rgb(208,122,22)" fg:x="3332998907" fg:w="7021063"/><text x="33.4037%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[http::header::map::Pos]&gt;&gt; (19,057,171 samples, 0.19%)</title><rect x="33.0440%" y="405" width="0.1896%" height="15" fill="rgb(207,104,49)" fg:x="3321965808" fg:w="19057171"/><text x="33.2940%" y="415.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19,057,171 samples, 0.19%)</title><rect x="33.0440%" y="389" width="0.1896%" height="15" fill="rgb(248,211,50)" fg:x="3321965808" fg:w="19057171"/><text x="33.2940%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (19,057,171 samples, 0.19%)</title><rect x="33.0440%" y="373" width="0.1896%" height="15" fill="rgb(217,13,45)" fg:x="3321965808" fg:w="19057171"/><text x="33.2940%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (19,057,171 samples, 0.19%)</title><rect x="33.0440%" y="357" width="0.1896%" height="15" fill="rgb(211,216,49)" fg:x="3321965808" fg:w="19057171"/><text x="33.2940%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::name::HeaderName&gt; (19,057,171 samples, 0.19%)</title><rect x="33.2535%" y="341" width="0.1896%" height="15" fill="rgb(221,58,53)" fg:x="3343028997" fg:w="19057171"/><text x="33.5035%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::name::Repr&lt;http::header::name::Custom&gt;&gt; (19,057,171 samples, 0.19%)</title><rect x="33.2535%" y="325" width="0.1896%" height="15" fill="rgb(220,112,41)" fg:x="3343028997" fg:w="19057171"/><text x="33.5035%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::name::Custom&gt; (12,036,108 samples, 0.12%)</title><rect x="33.3234%" y="309" width="0.1197%" height="15" fill="rgb(236,38,28)" fg:x="3350050060" fg:w="12036108"/><text x="33.5734%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::byte_str::ByteStr&gt; (12,036,108 samples, 0.12%)</title><rect x="33.3234%" y="293" width="0.1197%" height="15" fill="rgb(227,195,22)" fg:x="3350050060" fg:w="12036108"/><text x="33.5734%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (12,036,108 samples, 0.12%)</title><rect x="33.3234%" y="277" width="0.1197%" height="15" fill="rgb(214,55,33)" fg:x="3350050060" fg:w="12036108"/><text x="33.5734%" y="287.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (12,036,108 samples, 0.12%)</title><rect x="33.3234%" y="261" width="0.1197%" height="15" fill="rgb(248,80,13)" fg:x="3350050060" fg:w="12036108"/><text x="33.5734%" y="271.50"></text></g><g><title>bytes::bytes::shared_drop (12,036,108 samples, 0.12%)</title><rect x="33.3234%" y="245" width="0.1197%" height="15" fill="rgb(238,52,6)" fg:x="3350050060" fg:w="12036108"/><text x="33.5734%" y="255.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (11,033,099 samples, 0.11%)</title><rect x="33.3333%" y="229" width="0.1097%" height="15" fill="rgb(224,198,47)" fg:x="3351053069" fg:w="11033099"/><text x="33.5833%" y="239.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (11,033,099 samples, 0.11%)</title><rect x="33.3333%" y="213" width="0.1097%" height="15" fill="rgb(233,171,20)" fg:x="3351053069" fg:w="11033099"/><text x="33.5833%" y="223.50"></text></g><g><title>bytes::bytes::release_shared (9,027,081 samples, 0.09%)</title><rect x="33.3533%" y="197" width="0.0898%" height="15" fill="rgb(241,30,25)" fg:x="3353059087" fg:w="9027081"/><text x="33.6033%" y="207.50"></text></g><g><title>bytes::bytes::promotable_even_drop (14,042,126 samples, 0.14%)</title><rect x="33.4730%" y="293" width="0.1397%" height="15" fill="rgb(207,171,38)" fg:x="3365095195" fg:w="14042126"/><text x="33.7230%" y="303.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (11,033,099 samples, 0.11%)</title><rect x="33.5029%" y="277" width="0.1097%" height="15" fill="rgb(234,70,1)" fg:x="3368104222" fg:w="11033099"/><text x="33.7529%" y="287.50"></text></g><g><title>bytes::bytes::promotable_even_drop::{{closure}} (10,030,090 samples, 0.10%)</title><rect x="33.5129%" y="261" width="0.0998%" height="15" fill="rgb(232,178,18)" fg:x="3369107231" fg:w="10030090"/><text x="33.7629%" y="271.50"></text></g><g><title>bytes::bytes::release_shared (10,030,090 samples, 0.10%)</title><rect x="33.5129%" y="245" width="0.0998%" height="15" fill="rgb(241,78,40)" fg:x="3369107231" fg:w="10030090"/><text x="33.7629%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (53,159,477 samples, 0.53%)</title><rect x="33.2336%" y="389" width="0.5288%" height="15" fill="rgb(222,35,25)" fg:x="3341022979" fg:w="53159477"/><text x="33.4836%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[http::header::map::Bucket&lt;http::header::value::HeaderValue&gt;]&gt; (51,153,459 samples, 0.51%)</title><rect x="33.2535%" y="373" width="0.5088%" height="15" fill="rgb(207,92,16)" fg:x="3343028997" fg:w="51153459"/><text x="33.5035%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::map::Bucket&lt;http::header::value::HeaderValue&gt;&gt; (51,153,459 samples, 0.51%)</title><rect x="33.2535%" y="357" width="0.5088%" height="15" fill="rgb(216,59,51)" fg:x="3343028997" fg:w="51153459"/><text x="33.5035%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::value::HeaderValue&gt; (32,096,288 samples, 0.32%)</title><rect x="33.4431%" y="341" width="0.3193%" height="15" fill="rgb(213,80,28)" fg:x="3362086168" fg:w="32096288"/><text x="33.6931%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (32,096,288 samples, 0.32%)</title><rect x="33.4431%" y="325" width="0.3193%" height="15" fill="rgb(220,93,7)" fg:x="3362086168" fg:w="32096288"/><text x="33.6931%" y="335.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (32,096,288 samples, 0.32%)</title><rect x="33.4431%" y="309" width="0.3193%" height="15" fill="rgb(225,24,44)" fg:x="3362086168" fg:w="32096288"/><text x="33.6931%" y="319.50"></text></g><g><title>bytes::bytes::shared_drop (15,045,135 samples, 0.15%)</title><rect x="33.6127%" y="293" width="0.1497%" height="15" fill="rgb(243,74,40)" fg:x="3379137321" fg:w="15045135"/><text x="33.8627%" y="303.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (14,042,126 samples, 0.14%)</title><rect x="33.6227%" y="277" width="0.1397%" height="15" fill="rgb(228,39,7)" fg:x="3380140330" fg:w="14042126"/><text x="33.8727%" y="287.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (14,042,126 samples, 0.14%)</title><rect x="33.6227%" y="261" width="0.1397%" height="15" fill="rgb(227,79,8)" fg:x="3380140330" fg:w="14042126"/><text x="33.8727%" y="271.50"></text></g><g><title>bytes::bytes::release_shared (13,039,117 samples, 0.13%)</title><rect x="33.6326%" y="245" width="0.1297%" height="15" fill="rgb(236,58,11)" fg:x="3381143339" fg:w="13039117"/><text x="33.8826%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;http::header::map::Bucket&lt;http::header::value::HeaderValue&gt;&gt;&gt; (70,210,630 samples, 0.70%)</title><rect x="33.2336%" y="405" width="0.6984%" height="15" fill="rgb(249,63,35)" fg:x="3341022979" fg:w="70210630"/><text x="33.4836%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;http::header::map::Bucket&lt;http::header::value::HeaderValue&gt;&gt;&gt; (17,051,153 samples, 0.17%)</title><rect x="33.7623%" y="389" width="0.1696%" height="15" fill="rgb(252,114,16)" fg:x="3394182456" fg:w="17051153"/><text x="34.0123%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17,051,153 samples, 0.17%)</title><rect x="33.7623%" y="373" width="0.1696%" height="15" fill="rgb(254,151,24)" fg:x="3394182456" fg:w="17051153"/><text x="34.0123%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (17,051,153 samples, 0.17%)</title><rect x="33.7623%" y="357" width="0.1696%" height="15" fill="rgb(253,54,39)" fg:x="3394182456" fg:w="17051153"/><text x="34.0123%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17,051,153 samples, 0.17%)</title><rect x="33.7623%" y="341" width="0.1696%" height="15" fill="rgb(243,25,45)" fg:x="3394182456" fg:w="17051153"/><text x="34.0123%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (17,051,153 samples, 0.17%)</title><rect x="33.7623%" y="325" width="0.1696%" height="15" fill="rgb(234,134,9)" fg:x="3394182456" fg:w="17051153"/><text x="34.0123%" y="335.50"></text></g><g><title>__free (17,051,153 samples, 0.17%)</title><rect x="33.7623%" y="309" width="0.1696%" height="15" fill="rgb(227,166,31)" fg:x="3394182456" fg:w="17051153"/><text x="34.0123%" y="319.50"></text></g><g><title>_int_free (16,048,144 samples, 0.16%)</title><rect x="33.7723%" y="293" width="0.1596%" height="15" fill="rgb(245,143,41)" fg:x="3395185465" fg:w="16048144"/><text x="34.0223%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (91,273,819 samples, 0.91%)</title><rect x="33.0340%" y="421" width="0.9079%" height="15" fill="rgb(238,181,32)" fg:x="3320962799" fg:w="91273819"/><text x="33.2840%" y="431.50"></text></g><g><title>&lt;T as axum_core::extract::FromRequest&lt;S,axum_core::extract::private::ViaParts&gt;&gt;::from_request::{{closure}} (529,588,752 samples, 5.27%)</title><rect x="28.7738%" y="453" width="5.2679%" height="15" fill="rgb(224,113,18)" fg:x="2892677956" fg:w="529588752"/><text x="29.0238%" y="463.50">&lt;T as ..</text></g><g><title>core::ptr::drop_in_place&lt;http::request::Parts&gt; (208,625,872 samples, 2.08%)</title><rect x="31.9665%" y="437" width="2.0752%" height="15" fill="rgb(240,229,28)" fg:x="3213640836" fg:w="208625872"/><text x="32.2165%" y="447.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;http::uri::Uri&gt; (10,030,090 samples, 0.10%)</title><rect x="33.9419%" y="421" width="0.0998%" height="15" fill="rgb(250,185,3)" fg:x="3412236618" fg:w="10030090"/><text x="34.1919%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::uri::authority::Authority&gt; (8,024,072 samples, 0.08%)</title><rect x="33.9619%" y="405" width="0.0798%" height="15" fill="rgb(212,59,25)" fg:x="3414242636" fg:w="8024072"/><text x="34.2119%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::byte_str::ByteStr&gt; (8,024,072 samples, 0.08%)</title><rect x="33.9619%" y="389" width="0.0798%" height="15" fill="rgb(221,87,20)" fg:x="3414242636" fg:w="8024072"/><text x="34.2119%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (8,024,072 samples, 0.08%)</title><rect x="33.9619%" y="373" width="0.0798%" height="15" fill="rgb(213,74,28)" fg:x="3414242636" fg:w="8024072"/><text x="34.2119%" y="383.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (8,024,072 samples, 0.08%)</title><rect x="33.9619%" y="357" width="0.0798%" height="15" fill="rgb(224,132,34)" fg:x="3414242636" fg:w="8024072"/><text x="34.2119%" y="367.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (8,024,072 samples, 0.08%)</title><rect x="33.9619%" y="341" width="0.0798%" height="15" fill="rgb(222,101,24)" fg:x="3414242636" fg:w="8024072"/><text x="34.2119%" y="351.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (8,024,072 samples, 0.08%)</title><rect x="33.9619%" y="325" width="0.0798%" height="15" fill="rgb(254,142,4)" fg:x="3414242636" fg:w="8024072"/><text x="34.2119%" y="335.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop::{{closure}} (8,024,072 samples, 0.08%)</title><rect x="33.9619%" y="309" width="0.0798%" height="15" fill="rgb(230,229,49)" fg:x="3414242636" fg:w="8024072"/><text x="34.2119%" y="319.50"></text></g><g><title>bytes::bytes_mut::release_shared (3,009,027 samples, 0.03%)</title><rect x="34.0118%" y="293" width="0.0299%" height="15" fill="rgb(238,70,47)" fg:x="3419257681" fg:w="3009027"/><text x="34.2618%" y="303.50"></text></g><g><title>&lt;T as http::extensions::AnyClone&gt;::as_any (3,009,027 samples, 0.03%)</title><rect x="34.1016%" y="389" width="0.0299%" height="15" fill="rgb(231,160,17)" fg:x="3428284762" fg:w="3009027"/><text x="34.3516%" y="399.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::downcast_ref (2,006,018 samples, 0.02%)</title><rect x="34.1315%" y="389" width="0.0200%" height="15" fill="rgb(218,68,53)" fg:x="3431293789" fg:w="2006018"/><text x="34.3815%" y="399.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::is (2,006,018 samples, 0.02%)</title><rect x="34.1315%" y="373" width="0.0200%" height="15" fill="rgb(236,111,10)" fg:x="3431293789" fg:w="2006018"/><text x="34.3815%" y="383.50"></text></g><g><title>&lt;T as core::any::Any&gt;::type_id (2,006,018 samples, 0.02%)</title><rect x="34.1315%" y="357" width="0.0200%" height="15" fill="rgb(224,34,41)" fg:x="3431293789" fg:w="2006018"/><text x="34.3815%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (8,024,072 samples, 0.08%)</title><rect x="34.0916%" y="421" width="0.0798%" height="15" fill="rgb(241,118,19)" fg:x="3427281753" fg:w="8024072"/><text x="34.3416%" y="431.50"></text></g><g><title>http::extensions::Extensions::get::{{closure}} (8,024,072 samples, 0.08%)</title><rect x="34.0916%" y="405" width="0.0798%" height="15" fill="rgb(238,129,25)" fg:x="3427281753" fg:w="8024072"/><text x="34.3416%" y="415.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2,006,018 samples, 0.02%)</title><rect x="34.1515%" y="389" width="0.0200%" height="15" fill="rgb(238,22,31)" fg:x="3433299807" fg:w="2006018"/><text x="34.4015%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2,006,018 samples, 0.02%)</title><rect x="34.1515%" y="373" width="0.0200%" height="15" fill="rgb(222,174,48)" fg:x="3433299807" fg:w="2006018"/><text x="34.4015%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2,006,018 samples, 0.02%)</title><rect x="34.1515%" y="357" width="0.0200%" height="15" fill="rgb(206,152,40)" fg:x="3433299807" fg:w="2006018"/><text x="34.4015%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2,006,018 samples, 0.02%)</title><rect x="34.1515%" y="341" width="0.0200%" height="15" fill="rgb(218,99,54)" fg:x="3433299807" fg:w="2006018"/><text x="34.4015%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2,006,018 samples, 0.02%)</title><rect x="34.1515%" y="325" width="0.0200%" height="15" fill="rgb(220,174,26)" fg:x="3433299807" fg:w="2006018"/><text x="34.4015%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (2,006,018 samples, 0.02%)</title><rect x="34.1515%" y="309" width="0.0200%" height="15" fill="rgb(245,116,9)" fg:x="3433299807" fg:w="2006018"/><text x="34.4015%" y="319.50"></text></g><g><title>http::extensions::Extensions::get (9,027,081 samples, 0.09%)</title><rect x="34.0916%" y="437" width="0.0898%" height="15" fill="rgb(209,72,35)" fg:x="3427281753" fg:w="9027081"/><text x="34.3416%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9,027,081 samples, 0.09%)</title><rect x="34.1914%" y="197" width="0.0898%" height="15" fill="rgb(226,126,21)" fg:x="3437311843" fg:w="9027081"/><text x="34.4414%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9,027,081 samples, 0.09%)</title><rect x="34.1914%" y="181" width="0.0898%" height="15" fill="rgb(227,192,1)" fg:x="3437311843" fg:w="9027081"/><text x="34.4414%" y="191.50"></text></g><g><title>alloc::alloc::alloc (9,027,081 samples, 0.09%)</title><rect x="34.1914%" y="165" width="0.0898%" height="15" fill="rgb(237,180,29)" fg:x="3437311843" fg:w="9027081"/><text x="34.4414%" y="175.50"></text></g><g><title>__GI___libc_malloc (8,024,072 samples, 0.08%)</title><rect x="34.2013%" y="149" width="0.0798%" height="15" fill="rgb(230,197,35)" fg:x="3438314852" fg:w="8024072"/><text x="34.4513%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12,036,108 samples, 0.12%)</title><rect x="34.1814%" y="261" width="0.1197%" height="15" fill="rgb(246,193,31)" fg:x="3436308834" fg:w="12036108"/><text x="34.4314%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12,036,108 samples, 0.12%)</title><rect x="34.1814%" y="245" width="0.1197%" height="15" fill="rgb(241,36,4)" fg:x="3436308834" fg:w="12036108"/><text x="34.4314%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (12,036,108 samples, 0.12%)</title><rect x="34.1814%" y="229" width="0.1197%" height="15" fill="rgb(241,130,17)" fg:x="3436308834" fg:w="12036108"/><text x="34.4314%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (12,036,108 samples, 0.12%)</title><rect x="34.1814%" y="213" width="0.1197%" height="15" fill="rgb(206,137,32)" fg:x="3436308834" fg:w="12036108"/><text x="34.4314%" y="223.50"></text></g><g><title>alloc::raw_vec::layout_array (2,006,018 samples, 0.02%)</title><rect x="34.2812%" y="197" width="0.0200%" height="15" fill="rgb(237,228,51)" fg:x="3446338924" fg:w="2006018"/><text x="34.5312%" y="207.50"></text></g><g><title>core::alloc::layout::Layout::repeat (2,006,018 samples, 0.02%)</title><rect x="34.2812%" y="181" width="0.0200%" height="15" fill="rgb(243,6,42)" fg:x="3446338924" fg:w="2006018"/><text x="34.5312%" y="191.50"></text></g><g><title>core::alloc::layout::Layout::repeat_packed (2,006,018 samples, 0.02%)</title><rect x="34.2812%" y="165" width="0.0200%" height="15" fill="rgb(251,74,28)" fg:x="3446338924" fg:w="2006018"/><text x="34.5312%" y="175.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (2,006,018 samples, 0.02%)</title><rect x="34.2812%" y="149" width="0.0200%" height="15" fill="rgb(218,20,49)" fg:x="3446338924" fg:w="2006018"/><text x="34.5312%" y="159.50"></text></g><g><title>core::intrinsics::unlikely (2,006,018 samples, 0.02%)</title><rect x="34.2812%" y="133" width="0.0200%" height="15" fill="rgb(238,28,14)" fg:x="3446338924" fg:w="2006018"/><text x="34.5312%" y="143.50"></text></g><g><title>&lt;axum::extract::path::Path&lt;T&gt; as axum_core::extract::FromRequestParts&lt;S&gt;&gt;::from_request_parts::{{closure}} (28,084,252 samples, 0.28%)</title><rect x="34.0417%" y="453" width="0.2794%" height="15" fill="rgb(229,40,46)" fg:x="3422266708" fg:w="28084252"/><text x="34.2917%" y="463.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (14,042,126 samples, 0.14%)</title><rect x="34.1814%" y="437" width="0.1397%" height="15" fill="rgb(244,195,20)" fg:x="3436308834" fg:w="14042126"/><text x="34.4314%" y="447.50"></text></g><g><title>&lt;axum::extract::path::de::PathDeserializer as serde::de::Deserializer&gt;::deserialize_string (14,042,126 samples, 0.14%)</title><rect x="34.1814%" y="421" width="0.1397%" height="15" fill="rgb(253,56,35)" fg:x="3436308834" fg:w="14042126"/><text x="34.4314%" y="431.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (14,042,126 samples, 0.14%)</title><rect x="34.1814%" y="405" width="0.1397%" height="15" fill="rgb(210,149,44)" fg:x="3436308834" fg:w="14042126"/><text x="34.4314%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::str::traits::FromStr&gt;::from_str (14,042,126 samples, 0.14%)</title><rect x="34.1814%" y="389" width="0.1397%" height="15" fill="rgb(240,135,12)" fg:x="3436308834" fg:w="14042126"/><text x="34.4314%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (14,042,126 samples, 0.14%)</title><rect x="34.1814%" y="373" width="0.1397%" height="15" fill="rgb(251,24,50)" fg:x="3436308834" fg:w="14042126"/><text x="34.4314%" y="383.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (14,042,126 samples, 0.14%)</title><rect x="34.1814%" y="357" width="0.1397%" height="15" fill="rgb(243,200,47)" fg:x="3436308834" fg:w="14042126"/><text x="34.4314%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (14,042,126 samples, 0.14%)</title><rect x="34.1814%" y="341" width="0.1397%" height="15" fill="rgb(224,166,26)" fg:x="3436308834" fg:w="14042126"/><text x="34.4314%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (14,042,126 samples, 0.14%)</title><rect x="34.1814%" y="325" width="0.1397%" height="15" fill="rgb(233,0,47)" fg:x="3436308834" fg:w="14042126"/><text x="34.4314%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (14,042,126 samples, 0.14%)</title><rect x="34.1814%" y="309" width="0.1397%" height="15" fill="rgb(253,80,5)" fg:x="3436308834" fg:w="14042126"/><text x="34.4314%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (14,042,126 samples, 0.14%)</title><rect x="34.1814%" y="293" width="0.1397%" height="15" fill="rgb(214,133,25)" fg:x="3436308834" fg:w="14042126"/><text x="34.4314%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (14,042,126 samples, 0.14%)</title><rect x="34.1814%" y="277" width="0.1397%" height="15" fill="rgb(209,27,14)" fg:x="3436308834" fg:w="14042126"/><text x="34.4314%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2,006,018 samples, 0.02%)</title><rect x="34.3011%" y="261" width="0.0200%" height="15" fill="rgb(219,102,51)" fg:x="3448344942" fg:w="2006018"/><text x="34.5511%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,006,018 samples, 0.02%)</title><rect x="34.3011%" y="245" width="0.0200%" height="15" fill="rgb(237,18,16)" fg:x="3448344942" fg:w="2006018"/><text x="34.5511%" y="255.50"></text></g><g><title>__memcpy_evex_unaligned_erms (4,012,036 samples, 0.04%)</title><rect x="34.3211%" y="453" width="0.0399%" height="15" fill="rgb(241,85,17)" fg:x="3450350960" fg:w="4012036"/><text x="34.5711%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;interview::AppState&gt; (2,006,018 samples, 0.02%)</title><rect x="34.3610%" y="453" width="0.0200%" height="15" fill="rgb(236,90,42)" fg:x="3454362996" fg:w="2006018"/><text x="34.6110%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;papaya::map::HashMap&lt;alloc::string::String,alloc::string::String&gt;&gt;&gt; (2,006,018 samples, 0.02%)</title><rect x="34.3610%" y="437" width="0.0200%" height="15" fill="rgb(249,57,21)" fg:x="3454362996" fg:w="2006018"/><text x="34.6110%" y="447.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,006,018 samples, 0.02%)</title><rect x="34.3610%" y="421" width="0.0200%" height="15" fill="rgb(243,12,36)" fg:x="3454362996" fg:w="2006018"/><text x="34.6110%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2,006,018 samples, 0.02%)</title><rect x="34.3610%" y="405" width="0.0200%" height="15" fill="rgb(253,128,47)" fg:x="3454362996" fg:w="2006018"/><text x="34.6110%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_sub (2,006,018 samples, 0.02%)</title><rect x="34.3610%" y="389" width="0.0200%" height="15" fill="rgb(207,33,20)" fg:x="3454362996" fg:w="2006018"/><text x="34.6110%" y="399.50"></text></g><g><title>__GI___libc_malloc (4,012,036 samples, 0.04%)</title><rect x="34.4208%" y="245" width="0.0399%" height="15" fill="rgb(233,215,35)" fg:x="3460381050" fg:w="4012036"/><text x="34.6708%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5,015,045 samples, 0.05%)</title><rect x="34.4208%" y="293" width="0.0499%" height="15" fill="rgb(249,188,52)" fg:x="3460381050" fg:w="5015045"/><text x="34.6708%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5,015,045 samples, 0.05%)</title><rect x="34.4208%" y="277" width="0.0499%" height="15" fill="rgb(225,12,32)" fg:x="3460381050" fg:w="5015045"/><text x="34.6708%" y="287.50"></text></g><g><title>alloc::alloc::alloc (5,015,045 samples, 0.05%)</title><rect x="34.4208%" y="261" width="0.0499%" height="15" fill="rgb(247,98,14)" fg:x="3460381050" fg:w="5015045"/><text x="34.6708%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8,024,072 samples, 0.08%)</title><rect x="34.4009%" y="357" width="0.0798%" height="15" fill="rgb(247,219,48)" fg:x="3458375032" fg:w="8024072"/><text x="34.6509%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8,024,072 samples, 0.08%)</title><rect x="34.4009%" y="341" width="0.0798%" height="15" fill="rgb(253,60,48)" fg:x="3458375032" fg:w="8024072"/><text x="34.6509%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (8,024,072 samples, 0.08%)</title><rect x="34.4009%" y="325" width="0.0798%" height="15" fill="rgb(245,15,52)" fg:x="3458375032" fg:w="8024072"/><text x="34.6509%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (8,024,072 samples, 0.08%)</title><rect x="34.4009%" y="309" width="0.0798%" height="15" fill="rgb(220,133,28)" fg:x="3458375032" fg:w="8024072"/><text x="34.6509%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (22,066,198 samples, 0.22%)</title><rect x="34.4009%" y="437" width="0.2195%" height="15" fill="rgb(217,180,4)" fg:x="3458375032" fg:w="22066198"/><text x="34.6509%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (22,066,198 samples, 0.22%)</title><rect x="34.4009%" y="421" width="0.2195%" height="15" fill="rgb(251,24,1)" fg:x="3458375032" fg:w="22066198"/><text x="34.6509%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (22,066,198 samples, 0.22%)</title><rect x="34.4009%" y="405" width="0.2195%" height="15" fill="rgb(212,185,49)" fg:x="3458375032" fg:w="22066198"/><text x="34.6509%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (22,066,198 samples, 0.22%)</title><rect x="34.4009%" y="389" width="0.2195%" height="15" fill="rgb(215,175,22)" fg:x="3458375032" fg:w="22066198"/><text x="34.6509%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (22,066,198 samples, 0.22%)</title><rect x="34.4009%" y="373" width="0.2195%" height="15" fill="rgb(250,205,14)" fg:x="3458375032" fg:w="22066198"/><text x="34.6509%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (14,042,126 samples, 0.14%)</title><rect x="34.4807%" y="357" width="0.1397%" height="15" fill="rgb(225,211,22)" fg:x="3466399104" fg:w="14042126"/><text x="34.7307%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (14,042,126 samples, 0.14%)</title><rect x="34.4807%" y="341" width="0.1397%" height="15" fill="rgb(251,179,42)" fg:x="3466399104" fg:w="14042126"/><text x="34.7307%" y="351.50"></text></g><g><title>__memcpy_evex_unaligned_erms (14,042,126 samples, 0.14%)</title><rect x="34.4807%" y="325" width="0.1397%" height="15" fill="rgb(208,216,51)" fg:x="3466399104" fg:w="14042126"/><text x="34.7307%" y="335.50"></text></g><g><title>__free (4,012,036 samples, 0.04%)</title><rect x="34.6304%" y="325" width="0.0399%" height="15" fill="rgb(235,36,11)" fg:x="3481444239" fg:w="4012036"/><text x="34.8804%" y="335.50"></text></g><g><title>_int_free (3,009,027 samples, 0.03%)</title><rect x="34.6403%" y="309" width="0.0299%" height="15" fill="rgb(213,189,28)" fg:x="3482447248" fg:w="3009027"/><text x="34.8903%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (8,024,072 samples, 0.08%)</title><rect x="34.6204%" y="437" width="0.0798%" height="15" fill="rgb(227,203,42)" fg:x="3480441230" fg:w="8024072"/><text x="34.8704%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (8,024,072 samples, 0.08%)</title><rect x="34.6204%" y="421" width="0.0798%" height="15" fill="rgb(244,72,36)" fg:x="3480441230" fg:w="8024072"/><text x="34.8704%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (8,024,072 samples, 0.08%)</title><rect x="34.6204%" y="405" width="0.0798%" height="15" fill="rgb(213,53,17)" fg:x="3480441230" fg:w="8024072"/><text x="34.8704%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8,024,072 samples, 0.08%)</title><rect x="34.6204%" y="389" width="0.0798%" height="15" fill="rgb(207,167,3)" fg:x="3480441230" fg:w="8024072"/><text x="34.8704%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (7,021,063 samples, 0.07%)</title><rect x="34.6304%" y="373" width="0.0698%" height="15" fill="rgb(216,98,30)" fg:x="3481444239" fg:w="7021063"/><text x="34.8804%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7,021,063 samples, 0.07%)</title><rect x="34.6304%" y="357" width="0.0698%" height="15" fill="rgb(236,123,15)" fg:x="3481444239" fg:w="7021063"/><text x="34.8804%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (7,021,063 samples, 0.07%)</title><rect x="34.6304%" y="341" width="0.0698%" height="15" fill="rgb(248,81,50)" fg:x="3481444239" fg:w="7021063"/><text x="34.8804%" y="351.50"></text></g><g><title>__rdl_dealloc (3,009,027 samples, 0.03%)</title><rect x="34.6703%" y="325" width="0.0299%" height="15" fill="rgb(214,120,4)" fg:x="3485456275" fg:w="3009027"/><text x="34.9203%" y="335.50"></text></g><g><title>seize::raw::collector::Collector::enter (2,006,018 samples, 0.02%)</title><rect x="34.7201%" y="373" width="0.0200%" height="15" fill="rgb(208,179,34)" fg:x="3490471320" fg:w="2006018"/><text x="34.9701%" y="383.50"></text></g><g><title>seize::raw::membarrier::linux::light_store (2,006,018 samples, 0.02%)</title><rect x="34.7201%" y="357" width="0.0200%" height="15" fill="rgb(227,140,7)" fg:x="3490471320" fg:w="2006018"/><text x="34.9701%" y="367.50"></text></g><g><title>seize::raw::collector::Collector::reservation (2,006,018 samples, 0.02%)</title><rect x="34.7401%" y="373" width="0.0200%" height="15" fill="rgb(214,22,6)" fg:x="3492477338" fg:w="2006018"/><text x="34.9901%" y="383.50"></text></g><g><title>seize::raw::tls::ThreadLocal&lt;T&gt;::load (2,006,018 samples, 0.02%)</title><rect x="34.7401%" y="357" width="0.0200%" height="15" fill="rgb(207,137,27)" fg:x="3492477338" fg:w="2006018"/><text x="34.9901%" y="367.50"></text></g><g><title>seize::raw::tls::ThreadLocal&lt;T&gt;::load_or (2,006,018 samples, 0.02%)</title><rect x="34.7401%" y="341" width="0.0200%" height="15" fill="rgb(210,8,46)" fg:x="3492477338" fg:w="2006018"/><text x="34.9901%" y="351.50"></text></g><g><title>papaya::map::HashMap&lt;K,V,S&gt;::pin (6,018,054 samples, 0.06%)</title><rect x="34.7201%" y="437" width="0.0599%" height="15" fill="rgb(240,16,54)" fg:x="3490471320" fg:w="6018054"/><text x="34.9701%" y="447.50"></text></g><g><title>papaya::raw::HashMap&lt;K,V,S&gt;::guard (6,018,054 samples, 0.06%)</title><rect x="34.7201%" y="421" width="0.0599%" height="15" fill="rgb(211,209,29)" fg:x="3490471320" fg:w="6018054"/><text x="34.9701%" y="431.50"></text></g><g><title>seize::collector::Collector::enter (6,018,054 samples, 0.06%)</title><rect x="34.7201%" y="405" width="0.0599%" height="15" fill="rgb(226,228,24)" fg:x="3490471320" fg:w="6018054"/><text x="34.9701%" y="415.50"></text></g><g><title>seize::guard::LocalGuard::enter (6,018,054 samples, 0.06%)</title><rect x="34.7201%" y="389" width="0.0599%" height="15" fill="rgb(222,84,9)" fg:x="3490471320" fg:w="6018054"/><text x="34.9701%" y="399.50"></text></g><g><title>seize::raw::tls::thread_id::Thread::current (2,006,018 samples, 0.02%)</title><rect x="34.7601%" y="373" width="0.0200%" height="15" fill="rgb(234,203,30)" fg:x="3494483356" fg:w="2006018"/><text x="35.0101%" y="383.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,006,018 samples, 0.02%)</title><rect x="34.7601%" y="357" width="0.0200%" height="15" fill="rgb(238,109,14)" fg:x="3494483356" fg:w="2006018"/><text x="35.0101%" y="367.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,006,018 samples, 0.02%)</title><rect x="34.7601%" y="341" width="0.0200%" height="15" fill="rgb(233,206,34)" fg:x="3494483356" fg:w="2006018"/><text x="35.0101%" y="351.50"></text></g><g><title>seize::raw::tls::thread_id::Thread::current::{{closure}} (2,006,018 samples, 0.02%)</title><rect x="34.7601%" y="325" width="0.0200%" height="15" fill="rgb(220,167,47)" fg:x="3494483356" fg:w="2006018"/><text x="35.0101%" y="335.50"></text></g><g><title>&lt;Q as equivalent::Equivalent&lt;K&gt;&gt;::equivalent (32,096,288 samples, 0.32%)</title><rect x="35.4884%" y="405" width="0.3193%" height="15" fill="rgb(238,105,10)" fg:x="3567703013" fg:w="32096288"/><text x="35.7384%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (32,096,288 samples, 0.32%)</title><rect x="35.4884%" y="389" width="0.3193%" height="15" fill="rgb(213,227,17)" fg:x="3567703013" fg:w="32096288"/><text x="35.7384%" y="399.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (32,096,288 samples, 0.32%)</title><rect x="35.4884%" y="373" width="0.3193%" height="15" fill="rgb(217,132,38)" fg:x="3567703013" fg:w="32096288"/><text x="35.7384%" y="383.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (32,096,288 samples, 0.32%)</title><rect x="35.4884%" y="357" width="0.3193%" height="15" fill="rgb(242,146,4)" fg:x="3567703013" fg:w="32096288"/><text x="35.7384%" y="367.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (32,096,288 samples, 0.32%)</title><rect x="35.4884%" y="341" width="0.3193%" height="15" fill="rgb(212,61,9)" fg:x="3567703013" fg:w="32096288"/><text x="35.7384%" y="351.50"></text></g><g><title>__memcmp_evex_movbe (32,096,288 samples, 0.32%)</title><rect x="35.4884%" y="325" width="0.3193%" height="15" fill="rgb(247,126,22)" fg:x="3567703013" fg:w="32096288"/><text x="35.7384%" y="335.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (3,009,027 samples, 0.03%)</title><rect x="35.8076%" y="373" width="0.0299%" height="15" fill="rgb(220,196,2)" fg:x="3599799301" fg:w="3009027"/><text x="36.0576%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3,009,027 samples, 0.03%)</title><rect x="35.8076%" y="357" width="0.0299%" height="15" fill="rgb(208,46,4)" fg:x="3599799301" fg:w="3009027"/><text x="36.0576%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3,009,027 samples, 0.03%)</title><rect x="35.8076%" y="341" width="0.0299%" height="15" fill="rgb(252,104,46)" fg:x="3599799301" fg:w="3009027"/><text x="36.0576%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2,006,018 samples, 0.02%)</title><rect x="35.8176%" y="325" width="0.0200%" height="15" fill="rgb(237,152,48)" fg:x="3600802310" fg:w="2006018"/><text x="36.0676%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5,015,045 samples, 0.05%)</title><rect x="35.8476%" y="277" width="0.0499%" height="15" fill="rgb(221,59,37)" fg:x="3603811337" fg:w="5015045"/><text x="36.0976%" y="287.50"></text></g><g><title>core::hash::sip::u8to64_le (3,009,027 samples, 0.03%)</title><rect x="35.8675%" y="261" width="0.0299%" height="15" fill="rgb(209,202,51)" fg:x="3605817355" fg:w="3009027"/><text x="36.1175%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,006,018 samples, 0.02%)</title><rect x="35.8775%" y="245" width="0.0200%" height="15" fill="rgb(228,81,30)" fg:x="3606820364" fg:w="2006018"/><text x="36.1275%" y="255.50"></text></g><g><title>core::hash::BuildHasher::hash_one (13,039,117 samples, 0.13%)</title><rect x="35.8076%" y="389" width="0.1297%" height="15" fill="rgb(227,42,39)" fg:x="3599799301" fg:w="13039117"/><text x="36.0576%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (9,027,081 samples, 0.09%)</title><rect x="35.8476%" y="373" width="0.0898%" height="15" fill="rgb(221,26,2)" fg:x="3603811337" fg:w="9027081"/><text x="36.0976%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (9,027,081 samples, 0.09%)</title><rect x="35.8476%" y="357" width="0.0898%" height="15" fill="rgb(254,61,31)" fg:x="3603811337" fg:w="9027081"/><text x="36.0976%" y="367.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (9,027,081 samples, 0.09%)</title><rect x="35.8476%" y="341" width="0.0898%" height="15" fill="rgb(222,173,38)" fg:x="3603811337" fg:w="9027081"/><text x="36.0976%" y="351.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (9,027,081 samples, 0.09%)</title><rect x="35.8476%" y="325" width="0.0898%" height="15" fill="rgb(218,50,12)" fg:x="3603811337" fg:w="9027081"/><text x="36.0976%" y="335.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (9,027,081 samples, 0.09%)</title><rect x="35.8476%" y="309" width="0.0898%" height="15" fill="rgb(223,88,40)" fg:x="3603811337" fg:w="9027081"/><text x="36.0976%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (9,027,081 samples, 0.09%)</title><rect x="35.8476%" y="293" width="0.0898%" height="15" fill="rgb(237,54,19)" fg:x="3603811337" fg:w="9027081"/><text x="36.0976%" y="303.50"></text></g><g><title>core::hash::Hasher::write_u8 (4,012,036 samples, 0.04%)</title><rect x="35.8974%" y="277" width="0.0399%" height="15" fill="rgb(251,129,25)" fg:x="3608826382" fg:w="4012036"/><text x="36.1474%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4,012,036 samples, 0.04%)</title><rect x="35.8974%" y="261" width="0.0399%" height="15" fill="rgb(238,97,19)" fg:x="3608826382" fg:w="4012036"/><text x="36.1474%" y="271.50"></text></g><g><title>core::hash::sip::u8to64_le (2,006,018 samples, 0.02%)</title><rect x="35.9174%" y="245" width="0.0200%" height="15" fill="rgb(240,169,18)" fg:x="3610832400" fg:w="2006018"/><text x="36.1674%" y="255.50"></text></g><g><title>papaya::raw::HashMap&lt;K,V,S&gt;::hash (14,042,126 samples, 0.14%)</title><rect x="35.8076%" y="405" width="0.1397%" height="15" fill="rgb(230,187,49)" fg:x="3599799301" fg:w="14042126"/><text x="36.0576%" y="415.50"></text></g><g><title>&lt;F as axum::handler::Handler&lt;(M,T1,T2),S&gt;&gt;::call::{{closure}} (825,476,407 samples, 8.21%)</title><rect x="27.7462%" y="469" width="8.2111%" height="15" fill="rgb(209,44,26)" fg:x="2789368029" fg:w="825476407"/><text x="27.9962%" y="479.50">&lt;F as axum:..</text></g><g><title>interview::main::{{closure}}::{{closure}}::{{closure}} (158,475,422 samples, 1.58%)</title><rect x="34.3809%" y="453" width="1.5764%" height="15" fill="rgb(244,0,6)" fg:x="3456369014" fg:w="158475422"/><text x="34.6309%" y="463.50"></text></g><g><title>papaya::map::HashMapRef&lt;K,V,S,G&gt;::get (118,355,062 samples, 1.18%)</title><rect x="34.7800%" y="437" width="1.1773%" height="15" fill="rgb(248,18,21)" fg:x="3496489374" fg:w="118355062"/><text x="35.0300%" y="447.50"></text></g><g><title>papaya::raw::HashMap&lt;K,V,S&gt;::get (118,355,062 samples, 1.18%)</title><rect x="34.7800%" y="421" width="1.1773%" height="15" fill="rgb(245,180,19)" fg:x="3496489374" fg:w="118355062"/><text x="35.0300%" y="431.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::downcast_ref (2,006,018 samples, 0.02%)</title><rect x="36.0870%" y="389" width="0.0200%" height="15" fill="rgb(252,118,36)" fg:x="3627883553" fg:w="2006018"/><text x="36.3370%" y="399.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::is (2,006,018 samples, 0.02%)</title><rect x="36.0870%" y="373" width="0.0200%" height="15" fill="rgb(210,224,19)" fg:x="3627883553" fg:w="2006018"/><text x="36.3370%" y="383.50"></text></g><g><title>&lt;T as core::any::Any&gt;::type_id (2,006,018 samples, 0.02%)</title><rect x="36.0870%" y="357" width="0.0200%" height="15" fill="rgb(218,30,24)" fg:x="3627883553" fg:w="2006018"/><text x="36.3370%" y="367.50"></text></g><g><title>http::extensions::Extensions::get (3,009,027 samples, 0.03%)</title><rect x="36.0870%" y="437" width="0.0299%" height="15" fill="rgb(219,75,50)" fg:x="3627883553" fg:w="3009027"/><text x="36.3370%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (3,009,027 samples, 0.03%)</title><rect x="36.0870%" y="421" width="0.0299%" height="15" fill="rgb(234,72,50)" fg:x="3627883553" fg:w="3009027"/><text x="36.3370%" y="431.50"></text></g><g><title>http::extensions::Extensions::get::{{closure}} (3,009,027 samples, 0.03%)</title><rect x="36.0870%" y="405" width="0.0299%" height="15" fill="rgb(219,100,48)" fg:x="3627883553" fg:w="3009027"/><text x="36.3370%" y="415.50"></text></g><g><title>&lt;axum::extract::path::Path&lt;T&gt; as axum_core::extract::FromRequestParts&lt;S&gt;&gt;::from_request_parts::{{closure}} (5,015,045 samples, 0.05%)</title><rect x="36.0770%" y="453" width="0.0499%" height="15" fill="rgb(253,5,41)" fg:x="3626880544" fg:w="5015045"/><text x="36.3270%" y="463.50"></text></g><g><title>&lt;axum::extract::state::State&lt;InnerState&gt; as axum_core::extract::FromRequestParts&lt;OuterState&gt;&gt;::from_request_parts::{{closure}} (2,006,018 samples, 0.02%)</title><rect x="36.1269%" y="453" width="0.0200%" height="15" fill="rgb(247,181,11)" fg:x="3631895589" fg:w="2006018"/><text x="36.3769%" y="463.50"></text></g><g><title>&lt;T as axum_core::extract::from_ref::FromRef&lt;T&gt;&gt;::from_ref (2,006,018 samples, 0.02%)</title><rect x="36.1269%" y="437" width="0.0200%" height="15" fill="rgb(222,223,25)" fg:x="3631895589" fg:w="2006018"/><text x="36.3769%" y="447.50"></text></g><g><title>&lt;interview::AppState as core::clone::Clone&gt;::clone (2,006,018 samples, 0.02%)</title><rect x="36.1269%" y="421" width="0.0200%" height="15" fill="rgb(214,198,28)" fg:x="3631895589" fg:w="2006018"/><text x="36.3769%" y="431.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,006,018 samples, 0.02%)</title><rect x="36.1269%" y="405" width="0.0200%" height="15" fill="rgb(230,46,43)" fg:x="3631895589" fg:w="2006018"/><text x="36.3769%" y="415.50"></text></g><g><title>&lt;http::status::StatusCode as axum_core::response::into_response::IntoResponse&gt;::into_response (3,009,027 samples, 0.03%)</title><rect x="36.1469%" y="453" width="0.0299%" height="15" fill="rgb(233,65,53)" fg:x="3633901607" fg:w="3009027"/><text x="36.3969%" y="463.50"></text></g><g><title>&lt;() as axum_core::response::into_response::IntoResponse&gt;::into_response (3,009,027 samples, 0.03%)</title><rect x="36.1469%" y="437" width="0.0299%" height="15" fill="rgb(221,121,27)" fg:x="3633901607" fg:w="3009027"/><text x="36.3969%" y="447.50"></text></g><g><title>&lt;axum_core::body::Body as axum_core::response::into_response::IntoResponse&gt;::into_response (3,009,027 samples, 0.03%)</title><rect x="36.1469%" y="421" width="0.0299%" height="15" fill="rgb(247,70,47)" fg:x="3633901607" fg:w="3009027"/><text x="36.3969%" y="431.50"></text></g><g><title>http::response::Response&lt;T&gt;::new (3,009,027 samples, 0.03%)</title><rect x="36.1469%" y="405" width="0.0299%" height="15" fill="rgb(228,85,35)" fg:x="3633901607" fg:w="3009027"/><text x="36.3969%" y="415.50"></text></g><g><title>http::response::Parts::new (3,009,027 samples, 0.03%)</title><rect x="36.1469%" y="389" width="0.0299%" height="15" fill="rgb(209,50,18)" fg:x="3633901607" fg:w="3009027"/><text x="36.3969%" y="399.50"></text></g><g><title>&lt;http::header::map::HeaderMap&lt;T&gt; as core::default::Default&gt;::default (2,006,018 samples, 0.02%)</title><rect x="36.1568%" y="373" width="0.0200%" height="15" fill="rgb(250,19,35)" fg:x="3634904616" fg:w="2006018"/><text x="36.4068%" y="383.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_with_capacity (2,006,018 samples, 0.02%)</title><rect x="36.1568%" y="357" width="0.0200%" height="15" fill="rgb(253,107,29)" fg:x="3634904616" fg:w="2006018"/><text x="36.4068%" y="367.50"></text></g><g><title>__memcpy_evex_unaligned_erms (4,012,036 samples, 0.04%)</title><rect x="36.1768%" y="453" width="0.0399%" height="15" fill="rgb(252,179,29)" fg:x="3636910634" fg:w="4012036"/><text x="36.4268%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,006,018 samples, 0.02%)</title><rect x="36.2367%" y="325" width="0.0200%" height="15" fill="rgb(238,194,6)" fg:x="3642928688" fg:w="2006018"/><text x="36.4867%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,006,018 samples, 0.02%)</title><rect x="36.2367%" y="309" width="0.0200%" height="15" fill="rgb(238,164,29)" fg:x="3642928688" fg:w="2006018"/><text x="36.4867%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,006,018 samples, 0.02%)</title><rect x="36.2367%" y="293" width="0.0200%" height="15" fill="rgb(224,25,9)" fg:x="3642928688" fg:w="2006018"/><text x="36.4867%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,006,018 samples, 0.02%)</title><rect x="36.2367%" y="277" width="0.0200%" height="15" fill="rgb(244,153,23)" fg:x="3642928688" fg:w="2006018"/><text x="36.4867%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,006,018 samples, 0.02%)</title><rect x="36.2367%" y="261" width="0.0200%" height="15" fill="rgb(212,203,14)" fg:x="3642928688" fg:w="2006018"/><text x="36.4867%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,006,018 samples, 0.02%)</title><rect x="36.2367%" y="245" width="0.0200%" height="15" fill="rgb(220,164,20)" fg:x="3642928688" fg:w="2006018"/><text x="36.4867%" y="255.50"></text></g><g><title>alloc::alloc::alloc (2,006,018 samples, 0.02%)</title><rect x="36.2367%" y="229" width="0.0200%" height="15" fill="rgb(222,203,48)" fg:x="3642928688" fg:w="2006018"/><text x="36.4867%" y="239.50"></text></g><g><title>__GI___libc_malloc (2,006,018 samples, 0.02%)</title><rect x="36.2367%" y="213" width="0.0200%" height="15" fill="rgb(215,159,22)" fg:x="3642928688" fg:w="2006018"/><text x="36.4867%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (8,024,072 samples, 0.08%)</title><rect x="36.2367%" y="389" width="0.0798%" height="15" fill="rgb(216,183,47)" fg:x="3642928688" fg:w="8024072"/><text x="36.4867%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8,024,072 samples, 0.08%)</title><rect x="36.2367%" y="373" width="0.0798%" height="15" fill="rgb(229,195,25)" fg:x="3642928688" fg:w="8024072"/><text x="36.4867%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (8,024,072 samples, 0.08%)</title><rect x="36.2367%" y="357" width="0.0798%" height="15" fill="rgb(224,132,51)" fg:x="3642928688" fg:w="8024072"/><text x="36.4867%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8,024,072 samples, 0.08%)</title><rect x="36.2367%" y="341" width="0.0798%" height="15" fill="rgb(240,63,7)" fg:x="3642928688" fg:w="8024072"/><text x="36.4867%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (6,018,054 samples, 0.06%)</title><rect x="36.2566%" y="325" width="0.0599%" height="15" fill="rgb(249,182,41)" fg:x="3644934706" fg:w="6018054"/><text x="36.5066%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6,018,054 samples, 0.06%)</title><rect x="36.2566%" y="309" width="0.0599%" height="15" fill="rgb(243,47,26)" fg:x="3644934706" fg:w="6018054"/><text x="36.5066%" y="319.50"></text></g><g><title>__memcpy_evex_unaligned_erms (6,018,054 samples, 0.06%)</title><rect x="36.2566%" y="293" width="0.0599%" height="15" fill="rgb(233,48,2)" fg:x="3644934706" fg:w="6018054"/><text x="36.5066%" y="303.50"></text></g><g><title>bytes::bytes_mut::Shared::is_unique (4,012,036 samples, 0.04%)</title><rect x="36.3165%" y="389" width="0.0399%" height="15" fill="rgb(244,165,34)" fg:x="3650952760" fg:w="4012036"/><text x="36.5665%" y="399.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (14,042,126 samples, 0.14%)</title><rect x="36.2267%" y="437" width="0.1397%" height="15" fill="rgb(207,89,7)" fg:x="3641925679" fg:w="14042126"/><text x="36.4767%" y="447.50"></text></g><g><title>bytes::bytes::&lt;impl core::convert::From&lt;bytes::bytes::Bytes&gt; for alloc::vec::Vec&lt;u8&gt;&gt;::from (14,042,126 samples, 0.14%)</title><rect x="36.2267%" y="421" width="0.1397%" height="15" fill="rgb(244,117,36)" fg:x="3641925679" fg:w="14042126"/><text x="36.4767%" y="431.50"></text></g><g><title>bytes::bytes_mut::shared_v_to_vec (13,039,117 samples, 0.13%)</title><rect x="36.2367%" y="405" width="0.1297%" height="15" fill="rgb(226,144,34)" fg:x="3642928688" fg:w="13039117"/><text x="36.4867%" y="415.50"></text></g><g><title>alloc::string::String::from_utf8 (2,006,018 samples, 0.02%)</title><rect x="36.3664%" y="437" width="0.0200%" height="15" fill="rgb(213,23,19)" fg:x="3655967805" fg:w="2006018"/><text x="36.6164%" y="447.50"></text></g><g><title>core::str::converts::from_utf8 (2,006,018 samples, 0.02%)</title><rect x="36.3664%" y="421" width="0.0200%" height="15" fill="rgb(217,75,12)" fg:x="3655967805" fg:w="2006018"/><text x="36.6164%" y="431.50"></text></g><g><title>__GI___libc_malloc (2,006,018 samples, 0.02%)</title><rect x="36.4661%" y="133" width="0.0200%" height="15" fill="rgb(224,159,17)" fg:x="3665997895" fg:w="2006018"/><text x="36.7161%" y="143.50"></text></g><g><title>__rdl_alloc (2,006,018 samples, 0.02%)</title><rect x="36.4861%" y="133" width="0.0200%" height="15" fill="rgb(217,118,1)" fg:x="3668003913" fg:w="2006018"/><text x="36.7361%" y="143.50"></text></g><g><title>&lt;http::request::Request&lt;axum_core::body::Body&gt; as axum_core::ext_traits::request::RequestExt&gt;::with_limited_body (8,024,072 samples, 0.08%)</title><rect x="36.4362%" y="405" width="0.0798%" height="15" fill="rgb(232,180,48)" fg:x="3662988868" fg:w="8024072"/><text x="36.6862%" y="415.50"></text></g><g><title>http::request::Request&lt;T&gt;::map (5,015,045 samples, 0.05%)</title><rect x="36.4661%" y="389" width="0.0499%" height="15" fill="rgb(230,27,33)" fg:x="3665997895" fg:w="5015045"/><text x="36.7161%" y="399.50"></text></g><g><title>&lt;http::request::Request&lt;axum_core::body::Body&gt; as axum_core::ext_traits::request::RequestExt&gt;::with_limited_body::{{closure}} (5,015,045 samples, 0.05%)</title><rect x="36.4661%" y="373" width="0.0499%" height="15" fill="rgb(205,31,21)" fg:x="3665997895" fg:w="5015045"/><text x="36.7161%" y="383.50"></text></g><g><title>axum_core::body::Body::new (5,015,045 samples, 0.05%)</title><rect x="36.4661%" y="357" width="0.0499%" height="15" fill="rgb(253,59,4)" fg:x="3665997895" fg:w="5015045"/><text x="36.7161%" y="367.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (5,015,045 samples, 0.05%)</title><rect x="36.4661%" y="341" width="0.0499%" height="15" fill="rgb(224,201,9)" fg:x="3665997895" fg:w="5015045"/><text x="36.7161%" y="351.50"></text></g><g><title>axum_core::body::Body::new::{{closure}} (5,015,045 samples, 0.05%)</title><rect x="36.4661%" y="325" width="0.0499%" height="15" fill="rgb(229,206,30)" fg:x="3665997895" fg:w="5015045"/><text x="36.7161%" y="335.50"></text></g><g><title>axum_core::body::boxed (5,015,045 samples, 0.05%)</title><rect x="36.4661%" y="309" width="0.0499%" height="15" fill="rgb(212,67,47)" fg:x="3665997895" fg:w="5015045"/><text x="36.7161%" y="319.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (5,015,045 samples, 0.05%)</title><rect x="36.4661%" y="293" width="0.0499%" height="15" fill="rgb(211,96,50)" fg:x="3665997895" fg:w="5015045"/><text x="36.7161%" y="303.50"></text></g><g><title>axum_core::body::boxed::{{closure}} (5,015,045 samples, 0.05%)</title><rect x="36.4661%" y="277" width="0.0499%" height="15" fill="rgb(252,114,18)" fg:x="3665997895" fg:w="5015045"/><text x="36.7161%" y="287.50"></text></g><g><title>http_body_util::BodyExt::boxed_unsync (5,015,045 samples, 0.05%)</title><rect x="36.4661%" y="261" width="0.0499%" height="15" fill="rgb(223,58,37)" fg:x="3665997895" fg:w="5015045"/><text x="36.7161%" y="271.50"></text></g><g><title>http_body_util::combinators::box_body::UnsyncBoxBody&lt;D,E&gt;::new (5,015,045 samples, 0.05%)</title><rect x="36.4661%" y="245" width="0.0499%" height="15" fill="rgb(237,70,4)" fg:x="3665997895" fg:w="5015045"/><text x="36.7161%" y="255.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (5,015,045 samples, 0.05%)</title><rect x="36.4661%" y="229" width="0.0499%" height="15" fill="rgb(244,85,46)" fg:x="3665997895" fg:w="5015045"/><text x="36.7161%" y="239.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (5,015,045 samples, 0.05%)</title><rect x="36.4661%" y="213" width="0.0499%" height="15" fill="rgb(223,39,52)" fg:x="3665997895" fg:w="5015045"/><text x="36.7161%" y="223.50"></text></g><g><title>alloc::alloc::exchange_malloc (5,015,045 samples, 0.05%)</title><rect x="36.4661%" y="197" width="0.0499%" height="15" fill="rgb(218,200,14)" fg:x="3665997895" fg:w="5015045"/><text x="36.7161%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5,015,045 samples, 0.05%)</title><rect x="36.4661%" y="181" width="0.0499%" height="15" fill="rgb(208,171,16)" fg:x="3665997895" fg:w="5015045"/><text x="36.7161%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5,015,045 samples, 0.05%)</title><rect x="36.4661%" y="165" width="0.0499%" height="15" fill="rgb(234,200,18)" fg:x="3665997895" fg:w="5015045"/><text x="36.7161%" y="175.50"></text></g><g><title>alloc::alloc::alloc (5,015,045 samples, 0.05%)</title><rect x="36.4661%" y="149" width="0.0499%" height="15" fill="rgb(228,45,11)" fg:x="3665997895" fg:w="5015045"/><text x="36.7161%" y="159.50"></text></g><g><title>__free (2,006,018 samples, 0.02%)</title><rect x="36.5160%" y="389" width="0.0200%" height="15" fill="rgb(237,182,11)" fg:x="3671012940" fg:w="2006018"/><text x="36.7660%" y="399.50"></text></g><g><title>__free (5,015,045 samples, 0.05%)</title><rect x="36.5559%" y="117" width="0.0499%" height="15" fill="rgb(241,175,49)" fg:x="3675024976" fg:w="5015045"/><text x="36.8059%" y="127.50"></text></g><g><title>_int_free (3,009,027 samples, 0.03%)</title><rect x="36.5759%" y="101" width="0.0299%" height="15" fill="rgb(247,38,35)" fg:x="3677030994" fg:w="3009027"/><text x="36.8259%" y="111.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,018,054 samples, 0.06%)</title><rect x="36.5559%" y="165" width="0.0599%" height="15" fill="rgb(228,39,49)" fg:x="3675024976" fg:w="6018054"/><text x="36.8059%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6,018,054 samples, 0.06%)</title><rect x="36.5559%" y="149" width="0.0599%" height="15" fill="rgb(226,101,26)" fg:x="3675024976" fg:w="6018054"/><text x="36.8059%" y="159.50"></text></g><g><title>alloc::alloc::dealloc (6,018,054 samples, 0.06%)</title><rect x="36.5559%" y="133" width="0.0599%" height="15" fill="rgb(206,141,19)" fg:x="3675024976" fg:w="6018054"/><text x="36.8059%" y="143.50"></text></g><g><title>__free (4,012,036 samples, 0.04%)</title><rect x="36.6158%" y="165" width="0.0399%" height="15" fill="rgb(211,200,13)" fg:x="3681043030" fg:w="4012036"/><text x="36.8658%" y="175.50"></text></g><g><title>_int_free (3,009,027 samples, 0.03%)</title><rect x="36.6258%" y="149" width="0.0299%" height="15" fill="rgb(241,121,6)" fg:x="3682046039" fg:w="3009027"/><text x="36.8758%" y="159.50"></text></g><g><title>__free (3,009,027 samples, 0.03%)</title><rect x="36.7255%" y="53" width="0.0299%" height="15" fill="rgb(234,221,29)" fg:x="3692076129" fg:w="3009027"/><text x="36.9755%" y="63.50"></text></g><g><title>_int_free (2,006,018 samples, 0.02%)</title><rect x="36.7355%" y="37" width="0.0200%" height="15" fill="rgb(229,136,5)" fg:x="3693079138" fg:w="2006018"/><text x="36.9855%" y="47.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;str&gt;&gt; (6,018,054 samples, 0.06%)</title><rect x="36.7156%" y="85" width="0.0599%" height="15" fill="rgb(238,36,11)" fg:x="3691073120" fg:w="6018054"/><text x="36.9656%" y="95.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,018,054 samples, 0.06%)</title><rect x="36.7156%" y="69" width="0.0599%" height="15" fill="rgb(251,55,41)" fg:x="3691073120" fg:w="6018054"/><text x="36.9656%" y="79.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (2,006,018 samples, 0.02%)</title><rect x="36.7555%" y="53" width="0.0200%" height="15" fill="rgb(242,34,40)" fg:x="3695085156" fg:w="2006018"/><text x="37.0055%" y="63.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::routing::url_params::UrlParams&gt; (12,036,108 samples, 0.12%)</title><rect x="36.6856%" y="165" width="0.1197%" height="15" fill="rgb(215,42,17)" fg:x="3688064093" fg:w="12036108"/><text x="36.9356%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(alloc::sync::Arc&lt;str&gt;,axum::util::PercentDecodedStr)&gt;&gt; (9,027,081 samples, 0.09%)</title><rect x="36.7156%" y="149" width="0.0898%" height="15" fill="rgb(207,44,46)" fg:x="3691073120" fg:w="9027081"/><text x="36.9656%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,027,081 samples, 0.09%)</title><rect x="36.7156%" y="133" width="0.0898%" height="15" fill="rgb(211,206,28)" fg:x="3691073120" fg:w="9027081"/><text x="36.9656%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(alloc::sync::Arc&lt;str&gt;,axum::util::PercentDecodedStr)]&gt; (9,027,081 samples, 0.09%)</title><rect x="36.7156%" y="117" width="0.0898%" height="15" fill="rgb(237,167,16)" fg:x="3691073120" fg:w="9027081"/><text x="36.9656%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::sync::Arc&lt;str&gt;,axum::util::PercentDecodedStr)&gt; (9,027,081 samples, 0.09%)</title><rect x="36.7156%" y="101" width="0.0898%" height="15" fill="rgb(233,66,6)" fg:x="3691073120" fg:w="9027081"/><text x="36.9656%" y="111.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::util::PercentDecodedStr&gt; (3,009,027 samples, 0.03%)</title><rect x="36.7754%" y="85" width="0.0299%" height="15" fill="rgb(246,123,29)" fg:x="3697091174" fg:w="3009027"/><text x="37.0254%" y="95.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;str&gt;&gt; (3,009,027 samples, 0.03%)</title><rect x="36.7754%" y="69" width="0.0299%" height="15" fill="rgb(209,62,40)" fg:x="3697091174" fg:w="3009027"/><text x="37.0254%" y="79.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,009,027 samples, 0.03%)</title><rect x="36.7754%" y="53" width="0.0299%" height="15" fill="rgb(218,4,25)" fg:x="3697091174" fg:w="3009027"/><text x="37.0254%" y="63.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (30,090,270 samples, 0.30%)</title><rect x="36.5360%" y="245" width="0.2993%" height="15" fill="rgb(253,91,49)" fg:x="3673018958" fg:w="30090270"/><text x="36.7860%" y="255.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (29,087,261 samples, 0.29%)</title><rect x="36.5459%" y="229" width="0.2893%" height="15" fill="rgb(228,155,29)" fg:x="3674021967" fg:w="29087261"/><text x="36.7959%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (29,087,261 samples, 0.29%)</title><rect x="36.5459%" y="213" width="0.2893%" height="15" fill="rgb(243,57,37)" fg:x="3674021967" fg:w="29087261"/><text x="36.7959%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Send+core::marker::Sync&gt;)&gt; (29,087,261 samples, 0.29%)</title><rect x="36.5459%" y="197" width="0.2893%" height="15" fill="rgb(244,167,17)" fg:x="3674021967" fg:w="29087261"/><text x="36.7959%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Send+core::marker::Sync&gt;&gt; (29,087,261 samples, 0.29%)</title><rect x="36.5459%" y="181" width="0.2893%" height="15" fill="rgb(207,181,38)" fg:x="3674021967" fg:w="29087261"/><text x="36.7959%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::uri::Uri&gt; (3,009,027 samples, 0.03%)</title><rect x="36.8053%" y="165" width="0.0299%" height="15" fill="rgb(211,8,23)" fg:x="3700100201" fg:w="3009027"/><text x="37.0553%" y="175.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33,099,297 samples, 0.33%)</title><rect x="36.5360%" y="277" width="0.3292%" height="15" fill="rgb(235,11,44)" fg:x="3673018958" fg:w="33099297"/><text x="36.7860%" y="287.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (33,099,297 samples, 0.33%)</title><rect x="36.5360%" y="261" width="0.3292%" height="15" fill="rgb(248,18,52)" fg:x="3673018958" fg:w="33099297"/><text x="36.7860%" y="271.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_empty_singleton (2,006,018 samples, 0.02%)</title><rect x="36.8453%" y="245" width="0.0200%" height="15" fill="rgb(208,4,7)" fg:x="3704112237" fg:w="2006018"/><text x="37.0953%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::extensions::Extensions&gt; (35,105,315 samples, 0.35%)</title><rect x="36.5360%" y="373" width="0.3492%" height="15" fill="rgb(240,17,39)" fg:x="3673018958" fg:w="35105315"/><text x="36.7860%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;std::collections::hash::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Send+core::marker::Sync&gt;,core::hash::BuildHasherDefault&lt;http::extensions::IdHasher&gt;&gt;&gt;&gt;&gt; (35,105,315 samples, 0.35%)</title><rect x="36.5360%" y="357" width="0.3492%" height="15" fill="rgb(207,170,3)" fg:x="3673018958" fg:w="35105315"/><text x="36.7860%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;std::collections::hash::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Send+core::marker::Sync&gt;,core::hash::BuildHasherDefault&lt;http::extensions::IdHasher&gt;&gt;&gt;&gt; (35,105,315 samples, 0.35%)</title><rect x="36.5360%" y="341" width="0.3492%" height="15" fill="rgb(236,100,52)" fg:x="3673018958" fg:w="35105315"/><text x="36.7860%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Send+core::marker::Sync&gt;,core::hash::BuildHasherDefault&lt;http::extensions::IdHasher&gt;&gt;&gt; (35,105,315 samples, 0.35%)</title><rect x="36.5360%" y="325" width="0.3492%" height="15" fill="rgb(246,78,51)" fg:x="3673018958" fg:w="35105315"/><text x="36.7860%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Send+core::marker::Sync&gt;,core::hash::BuildHasherDefault&lt;http::extensions::IdHasher&gt;&gt;&gt; (35,105,315 samples, 0.35%)</title><rect x="36.5360%" y="309" width="0.3492%" height="15" fill="rgb(211,17,15)" fg:x="3673018958" fg:w="35105315"/><text x="36.7860%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn http::extensions::AnyClone+core::marker::Send+core::marker::Sync&gt;)&gt;&gt; (35,105,315 samples, 0.35%)</title><rect x="36.5360%" y="293" width="0.3492%" height="15" fill="rgb(209,59,46)" fg:x="3673018958" fg:w="35105315"/><text x="36.7860%" y="303.50"></text></g><g><title>__free (8,024,072 samples, 0.08%)</title><rect x="36.9051%" y="293" width="0.0798%" height="15" fill="rgb(210,92,25)" fg:x="3710130291" fg:w="8024072"/><text x="37.1551%" y="303.50"></text></g><g><title>_int_free (2,006,018 samples, 0.02%)</title><rect x="36.9650%" y="277" width="0.0200%" height="15" fill="rgb(238,174,52)" fg:x="3716148345" fg:w="2006018"/><text x="37.2150%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[http::header::map::Pos]&gt;&gt; (9,027,081 samples, 0.09%)</title><rect x="36.9051%" y="357" width="0.0898%" height="15" fill="rgb(230,73,7)" fg:x="3710130291" fg:w="9027081"/><text x="37.1551%" y="367.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,027,081 samples, 0.09%)</title><rect x="36.9051%" y="341" width="0.0898%" height="15" fill="rgb(243,124,40)" fg:x="3710130291" fg:w="9027081"/><text x="37.1551%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9,027,081 samples, 0.09%)</title><rect x="36.9051%" y="325" width="0.0898%" height="15" fill="rgb(244,170,11)" fg:x="3710130291" fg:w="9027081"/><text x="37.1551%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (9,027,081 samples, 0.09%)</title><rect x="36.9051%" y="309" width="0.0898%" height="15" fill="rgb(207,114,54)" fg:x="3710130291" fg:w="9027081"/><text x="37.1551%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::name::HeaderName&gt; (10,030,090 samples, 0.10%)</title><rect x="36.9949%" y="293" width="0.0998%" height="15" fill="rgb(205,42,20)" fg:x="3719157372" fg:w="10030090"/><text x="37.2449%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::name::Repr&lt;http::header::name::Custom&gt;&gt; (10,030,090 samples, 0.10%)</title><rect x="36.9949%" y="277" width="0.0998%" height="15" fill="rgb(230,30,28)" fg:x="3719157372" fg:w="10030090"/><text x="37.2449%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::name::Custom&gt; (8,024,072 samples, 0.08%)</title><rect x="37.0149%" y="261" width="0.0798%" height="15" fill="rgb(205,73,54)" fg:x="3721163390" fg:w="8024072"/><text x="37.2649%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::byte_str::ByteStr&gt; (8,024,072 samples, 0.08%)</title><rect x="37.0149%" y="245" width="0.0798%" height="15" fill="rgb(254,227,23)" fg:x="3721163390" fg:w="8024072"/><text x="37.2649%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (8,024,072 samples, 0.08%)</title><rect x="37.0149%" y="229" width="0.0798%" height="15" fill="rgb(228,202,34)" fg:x="3721163390" fg:w="8024072"/><text x="37.2649%" y="239.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (8,024,072 samples, 0.08%)</title><rect x="37.0149%" y="213" width="0.0798%" height="15" fill="rgb(222,225,37)" fg:x="3721163390" fg:w="8024072"/><text x="37.2649%" y="223.50"></text></g><g><title>bytes::bytes::shared_drop (8,024,072 samples, 0.08%)</title><rect x="37.0149%" y="197" width="0.0798%" height="15" fill="rgb(221,14,54)" fg:x="3721163390" fg:w="8024072"/><text x="37.2649%" y="207.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (8,024,072 samples, 0.08%)</title><rect x="37.0149%" y="181" width="0.0798%" height="15" fill="rgb(254,102,2)" fg:x="3721163390" fg:w="8024072"/><text x="37.2649%" y="191.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (8,024,072 samples, 0.08%)</title><rect x="37.0149%" y="165" width="0.0798%" height="15" fill="rgb(232,104,17)" fg:x="3721163390" fg:w="8024072"/><text x="37.2649%" y="175.50"></text></g><g><title>bytes::bytes::release_shared (7,021,063 samples, 0.07%)</title><rect x="37.0248%" y="149" width="0.0698%" height="15" fill="rgb(250,220,14)" fg:x="3722166399" fg:w="7021063"/><text x="37.2748%" y="159.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2,006,018 samples, 0.02%)</title><rect x="37.0747%" y="133" width="0.0200%" height="15" fill="rgb(241,158,9)" fg:x="3727181444" fg:w="2006018"/><text x="37.3247%" y="143.50"></text></g><g><title>core::sync::atomic::atomic_sub (2,006,018 samples, 0.02%)</title><rect x="37.0747%" y="117" width="0.0200%" height="15" fill="rgb(246,9,43)" fg:x="3727181444" fg:w="2006018"/><text x="37.3247%" y="127.50"></text></g><g><title>bytes::bytes::promotable_even_drop (2,006,018 samples, 0.02%)</title><rect x="37.1047%" y="245" width="0.0200%" height="15" fill="rgb(206,73,33)" fg:x="3730190471" fg:w="2006018"/><text x="37.3547%" y="255.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (2,006,018 samples, 0.02%)</title><rect x="37.1047%" y="229" width="0.0200%" height="15" fill="rgb(222,79,8)" fg:x="3730190471" fg:w="2006018"/><text x="37.3547%" y="239.50"></text></g><g><title>bytes::bytes::promotable_even_drop::{{closure}} (2,006,018 samples, 0.02%)</title><rect x="37.1047%" y="213" width="0.0200%" height="15" fill="rgb(234,8,54)" fg:x="3730190471" fg:w="2006018"/><text x="37.3547%" y="223.50"></text></g><g><title>bytes::bytes::release_shared (2,006,018 samples, 0.02%)</title><rect x="37.1047%" y="197" width="0.0200%" height="15" fill="rgb(209,134,38)" fg:x="3730190471" fg:w="2006018"/><text x="37.3547%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26,078,234 samples, 0.26%)</title><rect x="36.9949%" y="341" width="0.2594%" height="15" fill="rgb(230,127,29)" fg:x="3719157372" fg:w="26078234"/><text x="37.2449%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;[http::header::map::Bucket&lt;http::header::value::HeaderValue&gt;]&gt; (26,078,234 samples, 0.26%)</title><rect x="36.9949%" y="325" width="0.2594%" height="15" fill="rgb(242,44,41)" fg:x="3719157372" fg:w="26078234"/><text x="37.2449%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::map::Bucket&lt;http::header::value::HeaderValue&gt;&gt; (26,078,234 samples, 0.26%)</title><rect x="36.9949%" y="309" width="0.2594%" height="15" fill="rgb(222,56,43)" fg:x="3719157372" fg:w="26078234"/><text x="37.2449%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::value::HeaderValue&gt; (16,048,144 samples, 0.16%)</title><rect x="37.0947%" y="293" width="0.1596%" height="15" fill="rgb(238,39,47)" fg:x="3729187462" fg:w="16048144"/><text x="37.3447%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (16,048,144 samples, 0.16%)</title><rect x="37.0947%" y="277" width="0.1596%" height="15" fill="rgb(226,79,43)" fg:x="3729187462" fg:w="16048144"/><text x="37.3447%" y="287.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (16,048,144 samples, 0.16%)</title><rect x="37.0947%" y="261" width="0.1596%" height="15" fill="rgb(242,105,53)" fg:x="3729187462" fg:w="16048144"/><text x="37.3447%" y="271.50"></text></g><g><title>bytes::bytes::shared_drop (13,039,117 samples, 0.13%)</title><rect x="37.1246%" y="245" width="0.1297%" height="15" fill="rgb(251,132,46)" fg:x="3732196489" fg:w="13039117"/><text x="37.3746%" y="255.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (13,039,117 samples, 0.13%)</title><rect x="37.1246%" y="229" width="0.1297%" height="15" fill="rgb(231,77,14)" fg:x="3732196489" fg:w="13039117"/><text x="37.3746%" y="239.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (13,039,117 samples, 0.13%)</title><rect x="37.1246%" y="213" width="0.1297%" height="15" fill="rgb(240,135,9)" fg:x="3732196489" fg:w="13039117"/><text x="37.3746%" y="223.50"></text></g><g><title>bytes::bytes::release_shared (11,033,099 samples, 0.11%)</title><rect x="37.1446%" y="197" width="0.1097%" height="15" fill="rgb(248,109,14)" fg:x="3734202507" fg:w="11033099"/><text x="37.3946%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (42,126,378 samples, 0.42%)</title><rect x="36.8852%" y="373" width="0.4190%" height="15" fill="rgb(227,146,52)" fg:x="3708124273" fg:w="42126378"/><text x="37.1352%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;http::header::map::Bucket&lt;http::header::value::HeaderValue&gt;&gt;&gt; (31,093,279 samples, 0.31%)</title><rect x="36.9949%" y="357" width="0.3093%" height="15" fill="rgb(232,54,3)" fg:x="3719157372" fg:w="31093279"/><text x="37.2449%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;http::header::map::Bucket&lt;http::header::value::HeaderValue&gt;&gt;&gt; (5,015,045 samples, 0.05%)</title><rect x="37.2543%" y="341" width="0.0499%" height="15" fill="rgb(229,201,43)" fg:x="3745235606" fg:w="5015045"/><text x="37.5043%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,015,045 samples, 0.05%)</title><rect x="37.2543%" y="325" width="0.0499%" height="15" fill="rgb(252,161,33)" fg:x="3745235606" fg:w="5015045"/><text x="37.5043%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (5,015,045 samples, 0.05%)</title><rect x="37.2543%" y="309" width="0.0499%" height="15" fill="rgb(226,146,40)" fg:x="3745235606" fg:w="5015045"/><text x="37.5043%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5,015,045 samples, 0.05%)</title><rect x="37.2543%" y="293" width="0.0499%" height="15" fill="rgb(219,47,25)" fg:x="3745235606" fg:w="5015045"/><text x="37.5043%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (5,015,045 samples, 0.05%)</title><rect x="37.2543%" y="277" width="0.0499%" height="15" fill="rgb(250,135,13)" fg:x="3745235606" fg:w="5015045"/><text x="37.5043%" y="287.50"></text></g><g><title>__free (5,015,045 samples, 0.05%)</title><rect x="37.2543%" y="261" width="0.0499%" height="15" fill="rgb(219,229,18)" fg:x="3745235606" fg:w="5015045"/><text x="37.5043%" y="271.50"></text></g><g><title>_int_free (4,012,036 samples, 0.04%)</title><rect x="37.2643%" y="245" width="0.0399%" height="15" fill="rgb(217,152,27)" fg:x="3746238615" fg:w="4012036"/><text x="37.5143%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::uri::authority::Authority&gt; (4,012,036 samples, 0.04%)</title><rect x="37.3042%" y="357" width="0.0399%" height="15" fill="rgb(225,71,47)" fg:x="3750250651" fg:w="4012036"/><text x="37.5542%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::byte_str::ByteStr&gt; (4,012,036 samples, 0.04%)</title><rect x="37.3042%" y="341" width="0.0399%" height="15" fill="rgb(220,139,14)" fg:x="3750250651" fg:w="4012036"/><text x="37.5542%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (4,012,036 samples, 0.04%)</title><rect x="37.3042%" y="325" width="0.0399%" height="15" fill="rgb(247,54,32)" fg:x="3750250651" fg:w="4012036"/><text x="37.5542%" y="335.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (4,012,036 samples, 0.04%)</title><rect x="37.3042%" y="309" width="0.0399%" height="15" fill="rgb(252,131,39)" fg:x="3750250651" fg:w="4012036"/><text x="37.5542%" y="319.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (4,012,036 samples, 0.04%)</title><rect x="37.3042%" y="293" width="0.0399%" height="15" fill="rgb(210,108,39)" fg:x="3750250651" fg:w="4012036"/><text x="37.5542%" y="303.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (4,012,036 samples, 0.04%)</title><rect x="37.3042%" y="277" width="0.0399%" height="15" fill="rgb(205,23,29)" fg:x="3750250651" fg:w="4012036"/><text x="37.5542%" y="287.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop::{{closure}} (4,012,036 samples, 0.04%)</title><rect x="37.3042%" y="261" width="0.0399%" height="15" fill="rgb(246,139,46)" fg:x="3750250651" fg:w="4012036"/><text x="37.5542%" y="271.50"></text></g><g><title>bytes::bytes_mut::release_shared (3,009,027 samples, 0.03%)</title><rect x="37.3142%" y="245" width="0.0299%" height="15" fill="rgb(250,81,26)" fg:x="3751253660" fg:w="3009027"/><text x="37.5642%" y="255.50"></text></g><g><title>&lt;http::request::Request&lt;axum_core::body::Body&gt; as axum_core::ext_traits::request::RequestExt&gt;::into_limited_body (95,285,855 samples, 0.95%)</title><rect x="36.4063%" y="421" width="0.9478%" height="15" fill="rgb(214,104,7)" fg:x="3659979841" fg:w="95285855"/><text x="36.6563%" y="431.50"></text></g><g><title>http::request::Request&lt;T&gt;::into_body (84,252,756 samples, 0.84%)</title><rect x="36.5160%" y="405" width="0.8381%" height="15" fill="rgb(233,189,8)" fg:x="3671012940" fg:w="84252756"/><text x="36.7660%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::request::Parts&gt; (82,246,738 samples, 0.82%)</title><rect x="36.5360%" y="389" width="0.8181%" height="15" fill="rgb(228,141,17)" fg:x="3673018958" fg:w="82246738"/><text x="36.7860%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::uri::Uri&gt; (5,015,045 samples, 0.05%)</title><rect x="37.3042%" y="373" width="0.0499%" height="15" fill="rgb(247,157,1)" fg:x="3750250651" fg:w="5015045"/><text x="37.5542%" y="383.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3,009,027 samples, 0.03%)</title><rect x="37.7631%" y="245" width="0.0299%" height="15" fill="rgb(249,225,5)" fg:x="3796389065" fg:w="3009027"/><text x="38.0131%" y="255.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (3,009,027 samples, 0.03%)</title><rect x="37.7631%" y="229" width="0.0299%" height="15" fill="rgb(242,55,13)" fg:x="3796389065" fg:w="3009027"/><text x="38.0131%" y="239.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (3,009,027 samples, 0.03%)</title><rect x="37.7631%" y="213" width="0.0299%" height="15" fill="rgb(230,49,50)" fg:x="3796389065" fg:w="3009027"/><text x="38.0131%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::poison::mutex::MutexGuard&lt;h2::proto::streams::streams::Inner&gt;&gt; (11,033,099 samples, 0.11%)</title><rect x="37.7931%" y="245" width="0.1097%" height="15" fill="rgb(241,111,38)" fg:x="3799398092" fg:w="11033099"/><text x="38.0431%" y="255.50"></text></g><g><title>&lt;std::sync::poison::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11,033,099 samples, 0.11%)</title><rect x="37.7931%" y="229" width="0.1097%" height="15" fill="rgb(252,155,4)" fg:x="3799398092" fg:w="11033099"/><text x="38.0431%" y="239.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (11,033,099 samples, 0.11%)</title><rect x="37.7931%" y="213" width="0.1097%" height="15" fill="rgb(212,69,32)" fg:x="3799398092" fg:w="11033099"/><text x="38.0431%" y="223.50"></text></g><g><title>syscall (3,009,027 samples, 0.03%)</title><rect x="37.8729%" y="197" width="0.0299%" height="15" fill="rgb(243,107,47)" fg:x="3807422164" fg:w="3009027"/><text x="38.1229%" y="207.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::Deref&gt;::deref (2,006,018 samples, 0.02%)</title><rect x="37.9228%" y="229" width="0.0200%" height="15" fill="rgb(247,130,12)" fg:x="3812437209" fg:w="2006018"/><text x="38.1728%" y="239.50"></text></g><g><title>&lt;h2::proto::streams::store::Store as core::ops::index::Index&lt;h2::proto::streams::store::Key&gt;&gt;::index (2,006,018 samples, 0.02%)</title><rect x="37.9228%" y="213" width="0.0200%" height="15" fill="rgb(233,74,16)" fg:x="3812437209" fg:w="2006018"/><text x="38.1728%" y="223.50"></text></g><g><title>slab::Slab&lt;T&gt;::get (2,006,018 samples, 0.02%)</title><rect x="37.9228%" y="197" width="0.0200%" height="15" fill="rgb(208,58,18)" fg:x="3812437209" fg:w="2006018"/><text x="38.1728%" y="207.50"></text></g><g><title>h2::proto::streams::flow_control::FlowControl::assign_capacity (3,009,027 samples, 0.03%)</title><rect x="37.9527%" y="229" width="0.0299%" height="15" fill="rgb(242,225,1)" fg:x="3815446236" fg:w="3009027"/><text x="38.2027%" y="239.50"></text></g><g><title>h2::proto::streams::flow_control::Window::increase_by (3,009,027 samples, 0.03%)</title><rect x="37.9527%" y="213" width="0.0299%" height="15" fill="rgb(249,39,40)" fg:x="3815446236" fg:w="3009027"/><text x="38.2027%" y="223.50"></text></g><g><title>h2::proto::streams::flow_control::Window::add (3,009,027 samples, 0.03%)</title><rect x="37.9527%" y="197" width="0.0299%" height="15" fill="rgb(207,72,44)" fg:x="3815446236" fg:w="3009027"/><text x="38.2027%" y="207.50"></text></g><g><title>core::num::&lt;impl i32&gt;::checked_add (3,009,027 samples, 0.03%)</title><rect x="37.9527%" y="181" width="0.0299%" height="15" fill="rgb(215,193,12)" fg:x="3815446236" fg:w="3009027"/><text x="38.2027%" y="191.50"></text></g><g><title>core::num::&lt;impl i32&gt;::overflowing_add (3,009,027 samples, 0.03%)</title><rect x="37.9527%" y="165" width="0.0299%" height="15" fill="rgb(248,41,39)" fg:x="3815446236" fg:w="3009027"/><text x="38.2027%" y="175.50"></text></g><g><title>h2::proto::streams::recv::Recv::release_capacity (15,045,135 samples, 0.15%)</title><rect x="37.9028%" y="245" width="0.1497%" height="15" fill="rgb(253,85,4)" fg:x="3810431191" fg:w="15045135"/><text x="38.1528%" y="255.50"></text></g><g><title>h2::proto::streams::recv::Recv::release_connection_capacity (7,021,063 samples, 0.07%)</title><rect x="37.9826%" y="229" width="0.0698%" height="15" fill="rgb(243,70,31)" fg:x="3818455263" fg:w="7021063"/><text x="38.2326%" y="239.50"></text></g><g><title>h2::proto::streams::flow_control::FlowControl::assign_capacity (5,015,045 samples, 0.05%)</title><rect x="38.0026%" y="213" width="0.0499%" height="15" fill="rgb(253,195,26)" fg:x="3820461281" fg:w="5015045"/><text x="38.2526%" y="223.50"></text></g><g><title>h2::proto::streams::flow_control::Window::increase_by (5,015,045 samples, 0.05%)</title><rect x="38.0026%" y="197" width="0.0499%" height="15" fill="rgb(243,42,11)" fg:x="3820461281" fg:w="5015045"/><text x="38.2526%" y="207.50"></text></g><g><title>h2::proto::streams::flow_control::Window::add (5,015,045 samples, 0.05%)</title><rect x="38.0026%" y="181" width="0.0499%" height="15" fill="rgb(239,66,17)" fg:x="3820461281" fg:w="5015045"/><text x="38.2526%" y="191.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (10,030,090 samples, 0.10%)</title><rect x="38.1323%" y="197" width="0.0998%" height="15" fill="rgb(217,132,21)" fg:x="3833500398" fg:w="10030090"/><text x="38.3823%" y="207.50"></text></g><g><title>syscall (9,027,081 samples, 0.09%)</title><rect x="38.1423%" y="181" width="0.0898%" height="15" fill="rgb(252,202,21)" fg:x="3834503407" fg:w="9027081"/><text x="38.3923%" y="191.50"></text></g><g><title>h2::share::FlowControl::release_capacity (56,168,504 samples, 0.56%)</title><rect x="37.7432%" y="277" width="0.5587%" height="15" fill="rgb(233,98,36)" fg:x="3794383047" fg:w="56168504"/><text x="37.9932%" y="287.50"></text></g><g><title>h2::proto::streams::streams::OpaqueStreamRef::release_capacity (54,162,486 samples, 0.54%)</title><rect x="37.7631%" y="261" width="0.5388%" height="15" fill="rgb(216,153,54)" fg:x="3796389065" fg:w="54162486"/><text x="38.0131%" y="271.50"></text></g><g><title>std::sync::poison::mutex::Mutex&lt;T&gt;::lock (25,075,225 samples, 0.25%)</title><rect x="38.0525%" y="245" width="0.2494%" height="15" fill="rgb(250,99,7)" fg:x="3825476326" fg:w="25075225"/><text x="38.3025%" y="255.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (25,075,225 samples, 0.25%)</title><rect x="38.0525%" y="229" width="0.2494%" height="15" fill="rgb(207,56,50)" fg:x="3825476326" fg:w="25075225"/><text x="38.3025%" y="239.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (18,054,162 samples, 0.18%)</title><rect x="38.1223%" y="213" width="0.1796%" height="15" fill="rgb(244,61,34)" fg:x="3832497389" fg:w="18054162"/><text x="38.3723%" y="223.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (7,021,063 samples, 0.07%)</title><rect x="38.2321%" y="197" width="0.0698%" height="15" fill="rgb(241,50,38)" fg:x="3843530488" fg:w="7021063"/><text x="38.4821%" y="207.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (5,015,045 samples, 0.05%)</title><rect x="38.2520%" y="181" width="0.0499%" height="15" fill="rgb(212,166,30)" fg:x="3845536506" fg:w="5015045"/><text x="38.5020%" y="191.50"></text></g><g><title>core::sync::atomic::atomic_load (5,015,045 samples, 0.05%)</title><rect x="38.2520%" y="165" width="0.0499%" height="15" fill="rgb(249,127,32)" fg:x="3845536506" fg:w="5015045"/><text x="38.5020%" y="175.50"></text></g><g><title>core::task::poll::Poll&lt;core::option::Option&lt;core::result::Result&lt;T,E&gt;&gt;&gt;::map_err (2,006,018 samples, 0.02%)</title><rect x="38.3618%" y="261" width="0.0200%" height="15" fill="rgb(209,103,0)" fg:x="3856569605" fg:w="2006018"/><text x="38.6118%" y="271.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::DerefMut&gt;::deref_mut (6,018,054 samples, 0.06%)</title><rect x="38.4216%" y="245" width="0.0599%" height="15" fill="rgb(238,209,51)" fg:x="3862587659" fg:w="6018054"/><text x="38.6716%" y="255.50"></text></g><g><title>&lt;h2::proto::streams::store::Store as core::ops::index::IndexMut&lt;h2::proto::streams::store::Key&gt;&gt;::index_mut (6,018,054 samples, 0.06%)</title><rect x="38.4216%" y="229" width="0.0599%" height="15" fill="rgb(237,56,23)" fg:x="3862587659" fg:w="6018054"/><text x="38.6716%" y="239.50"></text></g><g><title>slab::Slab&lt;T&gt;::get_mut (4,012,036 samples, 0.04%)</title><rect x="38.4416%" y="213" width="0.0399%" height="15" fill="rgb(215,153,46)" fg:x="3864593677" fg:w="4012036"/><text x="38.6916%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::poison::mutex::MutexGuard&lt;h2::proto::streams::streams::Inner&gt;&gt; (20,060,180 samples, 0.20%)</title><rect x="38.4815%" y="245" width="0.1995%" height="15" fill="rgb(224,49,31)" fg:x="3868605713" fg:w="20060180"/><text x="38.7315%" y="255.50"></text></g><g><title>&lt;std::sync::poison::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (20,060,180 samples, 0.20%)</title><rect x="38.4815%" y="229" width="0.1995%" height="15" fill="rgb(250,18,42)" fg:x="3868605713" fg:w="20060180"/><text x="38.7315%" y="239.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (20,060,180 samples, 0.20%)</title><rect x="38.4815%" y="213" width="0.1995%" height="15" fill="rgb(215,176,39)" fg:x="3868605713" fg:w="20060180"/><text x="38.7315%" y="223.50"></text></g><g><title>syscall (17,051,153 samples, 0.17%)</title><rect x="38.5114%" y="197" width="0.1696%" height="15" fill="rgb(223,77,29)" fg:x="3871614740" fg:w="17051153"/><text x="38.7614%" y="207.50"></text></g><g><title>core::mem::replace (6,018,054 samples, 0.06%)</title><rect x="38.7509%" y="181" width="0.0599%" height="15" fill="rgb(234,94,52)" fg:x="3895686956" fg:w="6018054"/><text x="39.0009%" y="191.50"></text></g><g><title>core::ptr::read (6,018,054 samples, 0.06%)</title><rect x="38.7509%" y="165" width="0.0599%" height="15" fill="rgb(220,154,50)" fg:x="3895686956" fg:w="6018054"/><text x="39.0009%" y="175.50"></text></g><g><title>__memcpy_evex_unaligned_erms (2,006,018 samples, 0.02%)</title><rect x="38.7908%" y="149" width="0.0200%" height="15" fill="rgb(212,11,10)" fg:x="3899698992" fg:w="2006018"/><text x="39.0408%" y="159.50"></text></g><g><title>h2::proto::streams::buffer::Deque::pop_front (9,027,081 samples, 0.09%)</title><rect x="38.7309%" y="229" width="0.0898%" height="15" fill="rgb(205,166,19)" fg:x="3893680938" fg:w="9027081"/><text x="38.9809%" y="239.50"></text></g><g><title>slab::Slab&lt;T&gt;::remove (8,024,072 samples, 0.08%)</title><rect x="38.7409%" y="213" width="0.0798%" height="15" fill="rgb(244,198,16)" fg:x="3894683947" fg:w="8024072"/><text x="38.9909%" y="223.50"></text></g><g><title>slab::Slab&lt;T&gt;::try_remove (8,024,072 samples, 0.08%)</title><rect x="38.7409%" y="197" width="0.0798%" height="15" fill="rgb(219,69,12)" fg:x="3894683947" fg:w="8024072"/><text x="38.9909%" y="207.50"></text></g><g><title>h2::proto::streams::recv::Recv::poll_data (18,054,162 samples, 0.18%)</title><rect x="38.6810%" y="245" width="0.1796%" height="15" fill="rgb(245,30,7)" fg:x="3888665893" fg:w="18054162"/><text x="38.9310%" y="255.50"></text></g><g><title>h2::proto::streams::recv::Recv::schedule_recv (4,012,036 samples, 0.04%)</title><rect x="38.8207%" y="229" width="0.0399%" height="15" fill="rgb(218,221,48)" fg:x="3902708019" fg:w="4012036"/><text x="39.0707%" y="239.50"></text></g><g><title>h2::proto::streams::state::State::ensure_recv_open (2,006,018 samples, 0.02%)</title><rect x="38.8407%" y="213" width="0.0200%" height="15" fill="rgb(216,66,15)" fg:x="3904714037" fg:w="2006018"/><text x="39.0907%" y="223.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (20,060,180 samples, 0.20%)</title><rect x="38.9704%" y="197" width="0.1995%" height="15" fill="rgb(226,122,50)" fg:x="3917753154" fg:w="20060180"/><text x="39.2204%" y="207.50"></text></g><g><title>syscall (19,057,171 samples, 0.19%)</title><rect x="38.9803%" y="181" width="0.1896%" height="15" fill="rgb(239,156,16)" fg:x="3918756163" fg:w="19057171"/><text x="39.2303%" y="191.50"></text></g><g><title>h2::share::RecvStream::poll_data (132,397,188 samples, 1.32%)</title><rect x="38.3019%" y="277" width="1.3170%" height="15" fill="rgb(224,27,38)" fg:x="3850551551" fg:w="132397188"/><text x="38.5519%" y="287.50"></text></g><g><title>h2::proto::streams::streams::OpaqueStreamRef::poll_data (124,373,116 samples, 1.24%)</title><rect x="38.3817%" y="261" width="1.2372%" height="15" fill="rgb(224,39,27)" fg:x="3858575623" fg:w="124373116"/><text x="38.6317%" y="271.50"></text></g><g><title>std::sync::poison::mutex::Mutex&lt;T&gt;::lock (76,228,684 samples, 0.76%)</title><rect x="38.8606%" y="245" width="0.7583%" height="15" fill="rgb(215,92,29)" fg:x="3906720055" fg:w="76228684"/><text x="39.1106%" y="255.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (76,228,684 samples, 0.76%)</title><rect x="38.8606%" y="229" width="0.7583%" height="15" fill="rgb(207,159,16)" fg:x="3906720055" fg:w="76228684"/><text x="39.1106%" y="239.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (72,216,648 samples, 0.72%)</title><rect x="38.9005%" y="213" width="0.7183%" height="15" fill="rgb(238,163,47)" fg:x="3910732091" fg:w="72216648"/><text x="39.1505%" y="223.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (45,135,405 samples, 0.45%)</title><rect x="39.1699%" y="197" width="0.4490%" height="15" fill="rgb(219,91,49)" fg:x="3937813334" fg:w="45135405"/><text x="39.4199%" y="207.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (28,084,252 samples, 0.28%)</title><rect x="39.3395%" y="181" width="0.2794%" height="15" fill="rgb(227,167,31)" fg:x="3954864487" fg:w="28084252"/><text x="39.5895%" y="191.50"></text></g><g><title>core::sync::atomic::atomic_load (28,084,252 samples, 0.28%)</title><rect x="39.3395%" y="165" width="0.2794%" height="15" fill="rgb(234,80,54)" fg:x="3954864487" fg:w="28084252"/><text x="39.5895%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::poison::mutex::MutexGuard&lt;h2::proto::streams::streams::Inner&gt;&gt; (5,015,045 samples, 0.05%)</title><rect x="39.6289%" y="245" width="0.0499%" height="15" fill="rgb(212,114,2)" fg:x="3983951748" fg:w="5015045"/><text x="39.8789%" y="255.50"></text></g><g><title>&lt;std::sync::poison::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5,015,045 samples, 0.05%)</title><rect x="39.6289%" y="229" width="0.0499%" height="15" fill="rgb(234,50,24)" fg:x="3983951748" fg:w="5015045"/><text x="39.8789%" y="239.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (5,015,045 samples, 0.05%)</title><rect x="39.6289%" y="213" width="0.0499%" height="15" fill="rgb(221,68,8)" fg:x="3983951748" fg:w="5015045"/><text x="39.8789%" y="223.50"></text></g><g><title>syscall (3,009,027 samples, 0.03%)</title><rect x="39.6488%" y="197" width="0.0299%" height="15" fill="rgb(254,180,31)" fg:x="3985957766" fg:w="3009027"/><text x="39.8988%" y="207.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (4,012,036 samples, 0.04%)</title><rect x="39.7087%" y="197" width="0.0399%" height="15" fill="rgb(247,130,50)" fg:x="3991975820" fg:w="4012036"/><text x="39.9587%" y="207.50"></text></g><g><title>syscall (4,012,036 samples, 0.04%)</title><rect x="39.7087%" y="181" width="0.0399%" height="15" fill="rgb(211,109,4)" fg:x="3991975820" fg:w="4012036"/><text x="39.9587%" y="191.50"></text></g><g><title>h2::share::RecvStream::poll_trailers (18,054,162 samples, 0.18%)</title><rect x="39.6189%" y="277" width="0.1796%" height="15" fill="rgb(238,50,21)" fg:x="3982948739" fg:w="18054162"/><text x="39.8689%" y="287.50"></text></g><g><title>h2::proto::streams::streams::OpaqueStreamRef::poll_trailers (17,051,153 samples, 0.17%)</title><rect x="39.6289%" y="261" width="0.1696%" height="15" fill="rgb(225,57,45)" fg:x="3983951748" fg:w="17051153"/><text x="39.8789%" y="271.50"></text></g><g><title>std::sync::poison::mutex::Mutex&lt;T&gt;::lock (12,036,108 samples, 0.12%)</title><rect x="39.6787%" y="245" width="0.1197%" height="15" fill="rgb(209,196,50)" fg:x="3988966793" fg:w="12036108"/><text x="39.9287%" y="255.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (12,036,108 samples, 0.12%)</title><rect x="39.6787%" y="229" width="0.1197%" height="15" fill="rgb(242,140,13)" fg:x="3988966793" fg:w="12036108"/><text x="39.9287%" y="239.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (10,030,090 samples, 0.10%)</title><rect x="39.6987%" y="213" width="0.0998%" height="15" fill="rgb(217,111,7)" fg:x="3990972811" fg:w="10030090"/><text x="39.9487%" y="223.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (5,015,045 samples, 0.05%)</title><rect x="39.7486%" y="197" width="0.0499%" height="15" fill="rgb(253,193,51)" fg:x="3995987856" fg:w="5015045"/><text x="39.9986%" y="207.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (5,015,045 samples, 0.05%)</title><rect x="39.7486%" y="181" width="0.0499%" height="15" fill="rgb(252,70,29)" fg:x="3995987856" fg:w="5015045"/><text x="39.9986%" y="191.50"></text></g><g><title>core::sync::atomic::atomic_load (5,015,045 samples, 0.05%)</title><rect x="39.7486%" y="165" width="0.0499%" height="15" fill="rgb(232,127,12)" fg:x="3995987856" fg:w="5015045"/><text x="39.9986%" y="175.50"></text></g><g><title>hyper::proto::h2::ping::Recorder::record_data (2,006,018 samples, 0.02%)</title><rect x="39.7985%" y="277" width="0.0200%" height="15" fill="rgb(211,180,21)" fg:x="4001002901" fg:w="2006018"/><text x="40.0485%" y="287.50"></text></g><g><title>&lt;axum_core::body::Body as http_body::Body&gt;::poll_frame (242,728,178 samples, 2.41%)</title><rect x="37.4139%" y="405" width="2.4144%" height="15" fill="rgb(229,72,13)" fg:x="3761283750" fg:w="242728178"/><text x="37.6639%" y="415.50">&lt;a..</text></g><g><title>&lt;http_body_util::combinators::box_body::UnsyncBoxBody&lt;D,E&gt; as http_body::Body&gt;::poll_frame (242,728,178 samples, 2.41%)</title><rect x="37.4139%" y="389" width="2.4144%" height="15" fill="rgb(240,211,49)" fg:x="3761283750" fg:w="242728178"/><text x="37.6639%" y="399.50">&lt;h..</text></g><g><title>&lt;http_body_util::combinators::map_err::MapErr&lt;B,F&gt; as http_body::Body&gt;::poll_frame (242,728,178 samples, 2.41%)</title><rect x="37.4139%" y="373" width="2.4144%" height="15" fill="rgb(219,149,40)" fg:x="3761283750" fg:w="242728178"/><text x="37.6639%" y="383.50">&lt;h..</text></g><g><title>&lt;http_body_util::limited::Limited&lt;B&gt; as http_body::Body&gt;::poll_frame (235,707,115 samples, 2.34%)</title><rect x="37.4838%" y="357" width="2.3446%" height="15" fill="rgb(210,127,46)" fg:x="3768304813" fg:w="235707115"/><text x="37.7338%" y="367.50">&lt;..</text></g><g><title>&lt;axum_core::body::Body as http_body::Body&gt;::poll_frame (233,701,097 samples, 2.32%)</title><rect x="37.5037%" y="341" width="2.3247%" height="15" fill="rgb(220,106,7)" fg:x="3770310831" fg:w="233701097"/><text x="37.7537%" y="351.50">&lt;..</text></g><g><title>&lt;http_body_util::combinators::box_body::UnsyncBoxBody&lt;D,E&gt; as http_body::Body&gt;::poll_frame (233,701,097 samples, 2.32%)</title><rect x="37.5037%" y="325" width="2.3247%" height="15" fill="rgb(249,31,22)" fg:x="3770310831" fg:w="233701097"/><text x="37.7537%" y="335.50">&lt;..</text></g><g><title>&lt;http_body_util::combinators::map_err::MapErr&lt;B,F&gt; as http_body::Body&gt;::poll_frame (233,701,097 samples, 2.32%)</title><rect x="37.5037%" y="309" width="2.3247%" height="15" fill="rgb(253,1,49)" fg:x="3770310831" fg:w="233701097"/><text x="37.7537%" y="319.50">&lt;..</text></g><g><title>&lt;hyper::body::incoming::Incoming as http_body::Body&gt;::poll_frame (224,674,016 samples, 2.23%)</title><rect x="37.5935%" y="293" width="2.2349%" height="15" fill="rgb(227,144,33)" fg:x="3779337912" fg:w="224674016"/><text x="37.8435%" y="303.50">&lt;..</text></g><g><title>__GI___libc_malloc (5,015,045 samples, 0.05%)</title><rect x="39.8683%" y="277" width="0.0499%" height="15" fill="rgb(249,163,44)" fg:x="4008023964" fg:w="5015045"/><text x="40.1183%" y="287.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::grow (7,021,063 samples, 0.07%)</title><rect x="39.8583%" y="357" width="0.0698%" height="15" fill="rgb(234,15,39)" fg:x="4007020955" fg:w="7021063"/><text x="40.1083%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (7,021,063 samples, 0.07%)</title><rect x="39.8583%" y="341" width="0.0698%" height="15" fill="rgb(207,66,16)" fg:x="4007020955" fg:w="7021063"/><text x="40.1083%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (6,018,054 samples, 0.06%)</title><rect x="39.8683%" y="325" width="0.0599%" height="15" fill="rgb(233,112,24)" fg:x="4008023964" fg:w="6018054"/><text x="40.1183%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (6,018,054 samples, 0.06%)</title><rect x="39.8683%" y="309" width="0.0599%" height="15" fill="rgb(230,90,22)" fg:x="4008023964" fg:w="6018054"/><text x="40.1183%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (6,018,054 samples, 0.06%)</title><rect x="39.8683%" y="293" width="0.0599%" height="15" fill="rgb(229,61,13)" fg:x="4008023964" fg:w="6018054"/><text x="40.1183%" y="303.50"></text></g><g><title>&lt;http_body_util::combinators::collect::Collect&lt;T&gt; as core::future::future::Future&gt;::poll (259,779,331 samples, 2.58%)</title><rect x="37.3541%" y="421" width="2.5841%" height="15" fill="rgb(225,57,24)" fg:x="3755265696" fg:w="259779331"/><text x="37.6041%" y="431.50">&lt;h..</text></g><g><title>http_body_util::collected::Collected&lt;B&gt;::push_frame (9,027,081 samples, 0.09%)</title><rect x="39.8483%" y="405" width="0.0898%" height="15" fill="rgb(208,169,48)" fg:x="4006017946" fg:w="9027081"/><text x="40.0983%" y="415.50"></text></g><g><title>http_body_util::util::BufList&lt;T&gt;::push (8,024,072 samples, 0.08%)</title><rect x="39.8583%" y="389" width="0.0798%" height="15" fill="rgb(244,218,51)" fg:x="4007020955" fg:w="8024072"/><text x="40.1083%" y="399.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::push_back (8,024,072 samples, 0.08%)</title><rect x="39.8583%" y="373" width="0.0798%" height="15" fill="rgb(214,148,10)" fg:x="4007020955" fg:w="8024072"/><text x="40.1083%" y="383.50"></text></g><g><title>__free (8,024,072 samples, 0.08%)</title><rect x="39.9381%" y="421" width="0.0798%" height="15" fill="rgb(225,174,27)" fg:x="4015045027" fg:w="8024072"/><text x="40.1881%" y="431.50"></text></g><g><title>_int_free (6,018,054 samples, 0.06%)</title><rect x="39.9581%" y="405" width="0.0599%" height="15" fill="rgb(230,96,26)" fg:x="4017051045" fg:w="6018054"/><text x="40.2081%" y="415.50"></text></g><g><title>__free (8,024,072 samples, 0.08%)</title><rect x="40.0479%" y="341" width="0.0798%" height="15" fill="rgb(232,10,30)" fg:x="4026078126" fg:w="8024072"/><text x="40.2979%" y="351.50"></text></g><g><title>_int_free (3,009,027 samples, 0.03%)</title><rect x="40.0978%" y="325" width="0.0299%" height="15" fill="rgb(222,8,50)" fg:x="4031093171" fg:w="3009027"/><text x="40.3478%" y="335.50"></text></g><g><title>__rdl_dealloc (2,006,018 samples, 0.02%)</title><rect x="40.1277%" y="341" width="0.0200%" height="15" fill="rgb(213,81,27)" fg:x="4034102198" fg:w="2006018"/><text x="40.3777%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::poison::mutex::MutexGuard&lt;h2::proto::streams::streams::Inner&gt;&gt; (4,012,036 samples, 0.04%)</title><rect x="40.2275%" y="165" width="0.0399%" height="15" fill="rgb(245,50,10)" fg:x="4044132288" fg:w="4012036"/><text x="40.4775%" y="175.50"></text></g><g><title>&lt;std::sync::poison::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4,012,036 samples, 0.04%)</title><rect x="40.2275%" y="149" width="0.0399%" height="15" fill="rgb(216,100,18)" fg:x="4044132288" fg:w="4012036"/><text x="40.4775%" y="159.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (4,012,036 samples, 0.04%)</title><rect x="40.2275%" y="133" width="0.0399%" height="15" fill="rgb(236,147,54)" fg:x="4044132288" fg:w="4012036"/><text x="40.4775%" y="143.50"></text></g><g><title>h2::proto::streams::counts::Counts::transition (5,015,045 samples, 0.05%)</title><rect x="40.2674%" y="165" width="0.0499%" height="15" fill="rgb(205,143,26)" fg:x="4048144324" fg:w="5015045"/><text x="40.5174%" y="175.50"></text></g><g><title>h2::proto::streams::counts::Counts::transition_after (4,012,036 samples, 0.04%)</title><rect x="40.2774%" y="149" width="0.0399%" height="15" fill="rgb(236,26,9)" fg:x="4049147333" fg:w="4012036"/><text x="40.5274%" y="159.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::Deref&gt;::deref (3,009,027 samples, 0.03%)</title><rect x="40.2873%" y="133" width="0.0299%" height="15" fill="rgb(221,165,53)" fg:x="4050150342" fg:w="3009027"/><text x="40.5373%" y="143.50"></text></g><g><title>&lt;h2::proto::streams::store::Store as core::ops::index::Index&lt;h2::proto::streams::store::Key&gt;&gt;::index (3,009,027 samples, 0.03%)</title><rect x="40.2873%" y="117" width="0.0299%" height="15" fill="rgb(214,110,17)" fg:x="4050150342" fg:w="3009027"/><text x="40.5373%" y="127.50"></text></g><g><title>slab::Slab&lt;T&gt;::get (3,009,027 samples, 0.03%)</title><rect x="40.2873%" y="101" width="0.0299%" height="15" fill="rgb(237,197,12)" fg:x="4050150342" fg:w="3009027"/><text x="40.5373%" y="111.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (3,009,027 samples, 0.03%)</title><rect x="40.2873%" y="85" width="0.0299%" height="15" fill="rgb(205,84,17)" fg:x="4050150342" fg:w="3009027"/><text x="40.5373%" y="95.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (3,009,027 samples, 0.03%)</title><rect x="40.2873%" y="69" width="0.0299%" height="15" fill="rgb(237,18,45)" fg:x="4050150342" fg:w="3009027"/><text x="40.5373%" y="79.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (2,006,018 samples, 0.02%)</title><rect x="40.3173%" y="117" width="0.0200%" height="15" fill="rgb(221,87,14)" fg:x="4053159369" fg:w="2006018"/><text x="40.5673%" y="127.50"></text></g><g><title>syscall (2,006,018 samples, 0.02%)</title><rect x="40.3173%" y="101" width="0.0200%" height="15" fill="rgb(238,186,15)" fg:x="4053159369" fg:w="2006018"/><text x="40.5673%" y="111.50"></text></g><g><title>&lt;h2::proto::streams::streams::OpaqueStreamRef as core::ops::drop::Drop&gt;::drop (21,063,189 samples, 0.21%)</title><rect x="40.1676%" y="197" width="0.2095%" height="15" fill="rgb(208,115,11)" fg:x="4038114234" fg:w="21063189"/><text x="40.4176%" y="207.50"></text></g><g><title>h2::proto::streams::streams::drop_stream_ref (21,063,189 samples, 0.21%)</title><rect x="40.1676%" y="181" width="0.2095%" height="15" fill="rgb(254,175,0)" fg:x="4038114234" fg:w="21063189"/><text x="40.4176%" y="191.50"></text></g><g><title>std::sync::poison::mutex::Mutex&lt;T&gt;::lock (6,018,054 samples, 0.06%)</title><rect x="40.3173%" y="165" width="0.0599%" height="15" fill="rgb(227,24,42)" fg:x="4053159369" fg:w="6018054"/><text x="40.5673%" y="175.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (6,018,054 samples, 0.06%)</title><rect x="40.3173%" y="149" width="0.0599%" height="15" fill="rgb(223,211,37)" fg:x="4053159369" fg:w="6018054"/><text x="40.5673%" y="159.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (6,018,054 samples, 0.06%)</title><rect x="40.3173%" y="133" width="0.0599%" height="15" fill="rgb(235,49,27)" fg:x="4053159369" fg:w="6018054"/><text x="40.5673%" y="143.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (4,012,036 samples, 0.04%)</title><rect x="40.3372%" y="117" width="0.0399%" height="15" fill="rgb(254,97,51)" fg:x="4055165387" fg:w="4012036"/><text x="40.5872%" y="127.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (2,006,018 samples, 0.02%)</title><rect x="40.3572%" y="101" width="0.0200%" height="15" fill="rgb(249,51,40)" fg:x="4057171405" fg:w="2006018"/><text x="40.6072%" y="111.50"></text></g><g><title>core::sync::atomic::atomic_load (2,006,018 samples, 0.02%)</title><rect x="40.3572%" y="85" width="0.0200%" height="15" fill="rgb(210,128,45)" fg:x="4057171405" fg:w="2006018"/><text x="40.6072%" y="95.50"></text></g><g><title>core::ptr::drop_in_place&lt;h2::share::FlowControl&gt; (22,066,198 samples, 0.22%)</title><rect x="40.1676%" y="229" width="0.2195%" height="15" fill="rgb(224,137,50)" fg:x="4038114234" fg:w="22066198"/><text x="40.4176%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;h2::proto::streams::streams::OpaqueStreamRef&gt; (22,066,198 samples, 0.22%)</title><rect x="40.1676%" y="213" width="0.2195%" height="15" fill="rgb(242,15,9)" fg:x="4038114234" fg:w="22066198"/><text x="40.4176%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::poison::mutex::MutexGuard&lt;h2::proto::streams::streams::Inner&gt;&gt; (7,021,063 samples, 0.07%)</title><rect x="40.3871%" y="213" width="0.0698%" height="15" fill="rgb(233,187,41)" fg:x="4060180432" fg:w="7021063"/><text x="40.6371%" y="223.50"></text></g><g><title>&lt;std::sync::poison::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7,021,063 samples, 0.07%)</title><rect x="40.3871%" y="197" width="0.0698%" height="15" fill="rgb(227,2,29)" fg:x="4060180432" fg:w="7021063"/><text x="40.6371%" y="207.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (7,021,063 samples, 0.07%)</title><rect x="40.3871%" y="181" width="0.0698%" height="15" fill="rgb(222,70,3)" fg:x="4060180432" fg:w="7021063"/><text x="40.6371%" y="191.50"></text></g><g><title>syscall (3,009,027 samples, 0.03%)</title><rect x="40.4270%" y="165" width="0.0299%" height="15" fill="rgb(213,11,42)" fg:x="4064192468" fg:w="3009027"/><text x="40.6770%" y="175.50"></text></g><g><title>h2::proto::streams::recv::Recv::clear_recv_buffer (2,006,018 samples, 0.02%)</title><rect x="40.4569%" y="213" width="0.0200%" height="15" fill="rgb(225,150,9)" fg:x="4067201495" fg:w="2006018"/><text x="40.7069%" y="223.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (7,021,063 samples, 0.07%)</title><rect x="40.4969%" y="165" width="0.0698%" height="15" fill="rgb(230,162,45)" fg:x="4071213531" fg:w="7021063"/><text x="40.7469%" y="175.50"></text></g><g><title>syscall (6,018,054 samples, 0.06%)</title><rect x="40.5068%" y="149" width="0.0599%" height="15" fill="rgb(222,14,52)" fg:x="4072216540" fg:w="6018054"/><text x="40.7568%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;h2::share::RecvStream&gt; (51,153,459 samples, 0.51%)</title><rect x="40.1477%" y="245" width="0.5088%" height="15" fill="rgb(254,198,14)" fg:x="4036108216" fg:w="51153459"/><text x="40.3977%" y="255.50"></text></g><g><title>h2::proto::streams::streams::OpaqueStreamRef::clear_recv_buffer (27,081,243 samples, 0.27%)</title><rect x="40.3871%" y="229" width="0.2694%" height="15" fill="rgb(220,217,30)" fg:x="4060180432" fg:w="27081243"/><text x="40.6371%" y="239.50"></text></g><g><title>std::sync::poison::mutex::Mutex&lt;T&gt;::lock (18,054,162 samples, 0.18%)</title><rect x="40.4769%" y="213" width="0.1796%" height="15" fill="rgb(215,146,41)" fg:x="4069207513" fg:w="18054162"/><text x="40.7269%" y="223.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (18,054,162 samples, 0.18%)</title><rect x="40.4769%" y="197" width="0.1796%" height="15" fill="rgb(217,27,36)" fg:x="4069207513" fg:w="18054162"/><text x="40.7269%" y="207.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (16,048,144 samples, 0.16%)</title><rect x="40.4969%" y="181" width="0.1596%" height="15" fill="rgb(219,218,39)" fg:x="4071213531" fg:w="16048144"/><text x="40.7469%" y="191.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (9,027,081 samples, 0.09%)</title><rect x="40.5667%" y="165" width="0.0898%" height="15" fill="rgb(219,4,42)" fg:x="4078234594" fg:w="9027081"/><text x="40.8167%" y="175.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (5,015,045 samples, 0.05%)</title><rect x="40.6066%" y="149" width="0.0499%" height="15" fill="rgb(249,119,36)" fg:x="4082246630" fg:w="5015045"/><text x="40.8566%" y="159.50"></text></g><g><title>core::sync::atomic::atomic_load (5,015,045 samples, 0.05%)</title><rect x="40.6066%" y="133" width="0.0499%" height="15" fill="rgb(209,23,33)" fg:x="4082246630" fg:w="5015045"/><text x="40.8566%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;http_body_util::combinators::map_err::MapErr&lt;hyper::body::incoming::Incoming,axum_core::error::Error::new&lt;hyper::error::Error&gt;&gt;&gt; (3,009,027 samples, 0.03%)</title><rect x="40.6565%" y="245" width="0.0299%" height="15" fill="rgb(211,10,0)" fg:x="4087261675" fg:w="3009027"/><text x="40.9065%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;http_body_util::combinators::collect::Collect&lt;axum_core::body::Body&gt;&gt; (71,213,639 samples, 0.71%)</title><rect x="40.0279%" y="421" width="0.7084%" height="15" fill="rgb(208,99,37)" fg:x="4024072108" fg:w="71213639"/><text x="40.2779%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum_core::body::Body&gt; (70,210,630 samples, 0.70%)</title><rect x="40.0379%" y="405" width="0.6984%" height="15" fill="rgb(213,132,31)" fg:x="4025075117" fg:w="70210630"/><text x="40.2879%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;http_body_util::combinators::box_body::UnsyncBoxBody&lt;bytes::bytes::Bytes,axum_core::error::Error&gt;&gt; (70,210,630 samples, 0.70%)</title><rect x="40.0379%" y="389" width="0.6984%" height="15" fill="rgb(243,129,40)" fg:x="4025075117" fg:w="70210630"/><text x="40.2879%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn http_body::Body+Error = axum_core::error::Error+Data = bytes::bytes::Bytes+core::marker::Send&gt;&gt;&gt; (70,210,630 samples, 0.70%)</title><rect x="40.0379%" y="373" width="0.6984%" height="15" fill="rgb(210,66,33)" fg:x="4025075117" fg:w="70210630"/><text x="40.2879%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn http_body::Body+Error = axum_core::error::Error+Data = bytes::bytes::Bytes+core::marker::Send&gt;&gt; (70,210,630 samples, 0.70%)</title><rect x="40.0379%" y="357" width="0.6984%" height="15" fill="rgb(209,189,4)" fg:x="4025075117" fg:w="70210630"/><text x="40.2879%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;http_body_util::combinators::map_err::MapErr&lt;http_body_util::limited::Limited&lt;axum_core::body::Body&gt;,axum_core::error::Error::new&lt;alloc::boxed::Box&lt;dyn core::error::Error+core::marker::Send+core::marker::Sync&gt;&gt;&gt;&gt; (59,177,531 samples, 0.59%)</title><rect x="40.1477%" y="341" width="0.5886%" height="15" fill="rgb(214,107,37)" fg:x="4036108216" fg:w="59177531"/><text x="40.3977%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;http_body_util::limited::Limited&lt;axum_core::body::Body&gt;&gt; (59,177,531 samples, 0.59%)</title><rect x="40.1477%" y="325" width="0.5886%" height="15" fill="rgb(245,88,54)" fg:x="4036108216" fg:w="59177531"/><text x="40.3977%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum_core::body::Body&gt; (59,177,531 samples, 0.59%)</title><rect x="40.1477%" y="309" width="0.5886%" height="15" fill="rgb(205,146,20)" fg:x="4036108216" fg:w="59177531"/><text x="40.3977%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;http_body_util::combinators::box_body::UnsyncBoxBody&lt;bytes::bytes::Bytes,axum_core::error::Error&gt;&gt; (59,177,531 samples, 0.59%)</title><rect x="40.1477%" y="293" width="0.5886%" height="15" fill="rgb(220,161,25)" fg:x="4036108216" fg:w="59177531"/><text x="40.3977%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn http_body::Body+Error = axum_core::error::Error+Data = bytes::bytes::Bytes+core::marker::Send&gt;&gt;&gt; (59,177,531 samples, 0.59%)</title><rect x="40.1477%" y="277" width="0.5886%" height="15" fill="rgb(215,152,15)" fg:x="4036108216" fg:w="59177531"/><text x="40.3977%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn http_body::Body+Error = axum_core::error::Error+Data = bytes::bytes::Bytes+core::marker::Send&gt;&gt; (59,177,531 samples, 0.59%)</title><rect x="40.1477%" y="261" width="0.5886%" height="15" fill="rgb(233,192,44)" fg:x="4036108216" fg:w="59177531"/><text x="40.3977%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::body::incoming::Incoming&gt; (5,015,045 samples, 0.05%)</title><rect x="40.6864%" y="245" width="0.0499%" height="15" fill="rgb(240,170,46)" fg:x="4090270702" fg:w="5015045"/><text x="40.9364%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::body::incoming::Kind&gt; (5,015,045 samples, 0.05%)</title><rect x="40.6864%" y="229" width="0.0499%" height="15" fill="rgb(207,104,33)" fg:x="4090270702" fg:w="5015045"/><text x="40.9364%" y="239.50"></text></g><g><title>&lt;bytes::bytes::Bytes as bytes::buf::buf_impl::Buf&gt;::copy_to_bytes (4,012,036 samples, 0.04%)</title><rect x="40.7463%" y="389" width="0.0399%" height="15" fill="rgb(219,21,39)" fg:x="4096288756" fg:w="4012036"/><text x="40.9963%" y="399.50"></text></g><g><title>&lt;http_body_util::util::BufList&lt;T&gt; as bytes::buf::buf_impl::Buf&gt;::copy_to_bytes (8,024,072 samples, 0.08%)</title><rect x="40.7363%" y="405" width="0.0798%" height="15" fill="rgb(214,133,29)" fg:x="4095285747" fg:w="8024072"/><text x="40.9863%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;bytes::bytes::Bytes&gt;&gt; (3,009,027 samples, 0.03%)</title><rect x="40.7862%" y="389" width="0.0299%" height="15" fill="rgb(226,93,6)" fg:x="4100300792" fg:w="3009027"/><text x="41.0362%" y="399.50"></text></g><g><title>&lt;http_body_util::util::BufList&lt;T&gt; as bytes::buf::buf_impl::Buf&gt;::remaining (3,009,027 samples, 0.03%)</title><rect x="40.8161%" y="405" width="0.0299%" height="15" fill="rgb(252,222,34)" fg:x="4103309819" fg:w="3009027"/><text x="41.0661%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,009,027 samples, 0.03%)</title><rect x="40.8161%" y="389" width="0.0299%" height="15" fill="rgb(252,92,48)" fg:x="4103309819" fg:w="3009027"/><text x="41.0661%" y="399.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,009,027 samples, 0.03%)</title><rect x="40.8161%" y="373" width="0.0299%" height="15" fill="rgb(245,223,24)" fg:x="4103309819" fg:w="3009027"/><text x="41.0661%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,009,027 samples, 0.03%)</title><rect x="40.8161%" y="357" width="0.0299%" height="15" fill="rgb(205,176,3)" fg:x="4103309819" fg:w="3009027"/><text x="41.0661%" y="367.50"></text></g><g><title>&lt;alloc::collections::vec_deque::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,009,027 samples, 0.03%)</title><rect x="40.8161%" y="341" width="0.0299%" height="15" fill="rgb(235,151,15)" fg:x="4103309819" fg:w="3009027"/><text x="41.0661%" y="351.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,009,027 samples, 0.03%)</title><rect x="40.8161%" y="325" width="0.0299%" height="15" fill="rgb(237,209,11)" fg:x="4103309819" fg:w="3009027"/><text x="41.0661%" y="335.50"></text></g><g><title>__free (4,012,036 samples, 0.04%)</title><rect x="40.8760%" y="277" width="0.0399%" height="15" fill="rgb(243,227,24)" fg:x="4109327873" fg:w="4012036"/><text x="41.1260%" y="287.50"></text></g><g><title>_int_free (2,006,018 samples, 0.02%)</title><rect x="40.8959%" y="261" width="0.0200%" height="15" fill="rgb(239,193,16)" fg:x="4111333891" fg:w="2006018"/><text x="41.1459%" y="271.50"></text></g><g><title>axum_core::extract::request_parts::&lt;impl axum_core::extract::FromRequest&lt;S&gt; for alloc::string::String&gt;::from_request::{{closure}} (473,420,248 samples, 4.71%)</title><rect x="36.2167%" y="453" width="4.7092%" height="15" fill="rgb(231,27,9)" fg:x="3640922670" fg:w="473420248"/><text x="36.4667%" y="463.50">axum_..</text></g><g><title>axum_core::extract::request_parts::&lt;impl axum_core::extract::FromRequest&lt;S&gt; for bytes::bytes::Bytes&gt;::from_request::{{closure}} (456,369,095 samples, 4.54%)</title><rect x="36.3863%" y="437" width="4.5396%" height="15" fill="rgb(219,169,10)" fg:x="3657973823" fg:w="456369095"/><text x="36.6363%" y="447.50">axum_..</text></g><g><title>http_body_util::collected::Collected&lt;B&gt;::to_bytes (19,057,171 samples, 0.19%)</title><rect x="40.7363%" y="421" width="0.1896%" height="15" fill="rgb(244,229,43)" fg:x="4095285747" fg:w="19057171"/><text x="40.9863%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;http_body_util::collected::Collected&lt;bytes::bytes::Bytes&gt;&gt; (8,024,072 samples, 0.08%)</title><rect x="40.8461%" y="405" width="0.0798%" height="15" fill="rgb(254,38,20)" fg:x="4106318846" fg:w="8024072"/><text x="41.0961%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;http_body_util::util::BufList&lt;bytes::bytes::Bytes&gt;&gt; (5,015,045 samples, 0.05%)</title><rect x="40.8760%" y="389" width="0.0499%" height="15" fill="rgb(250,47,30)" fg:x="4109327873" fg:w="5015045"/><text x="41.1260%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;bytes::bytes::Bytes&gt;&gt; (5,015,045 samples, 0.05%)</title><rect x="40.8760%" y="373" width="0.0499%" height="15" fill="rgb(224,124,36)" fg:x="4109327873" fg:w="5015045"/><text x="41.1260%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bytes::bytes::Bytes&gt;&gt; (5,015,045 samples, 0.05%)</title><rect x="40.8760%" y="357" width="0.0499%" height="15" fill="rgb(246,68,51)" fg:x="4109327873" fg:w="5015045"/><text x="41.1260%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,015,045 samples, 0.05%)</title><rect x="40.8760%" y="341" width="0.0499%" height="15" fill="rgb(253,43,49)" fg:x="4109327873" fg:w="5015045"/><text x="41.1260%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (5,015,045 samples, 0.05%)</title><rect x="40.8760%" y="325" width="0.0499%" height="15" fill="rgb(219,54,36)" fg:x="4109327873" fg:w="5015045"/><text x="41.1260%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5,015,045 samples, 0.05%)</title><rect x="40.8760%" y="309" width="0.0499%" height="15" fill="rgb(227,133,34)" fg:x="4109327873" fg:w="5015045"/><text x="41.1260%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (5,015,045 samples, 0.05%)</title><rect x="40.8760%" y="293" width="0.0499%" height="15" fill="rgb(247,227,15)" fg:x="4109327873" fg:w="5015045"/><text x="41.1260%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;papaya::map::HashMap&lt;alloc::string::String,alloc::string::String&gt;&gt;&gt; (3,009,027 samples, 0.03%)</title><rect x="40.9358%" y="437" width="0.0299%" height="15" fill="rgb(229,96,14)" fg:x="4115345927" fg:w="3009027"/><text x="41.1858%" y="447.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,009,027 samples, 0.03%)</title><rect x="40.9358%" y="421" width="0.0299%" height="15" fill="rgb(220,79,17)" fg:x="4115345927" fg:w="3009027"/><text x="41.1858%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (3,009,027 samples, 0.03%)</title><rect x="40.9358%" y="405" width="0.0299%" height="15" fill="rgb(205,131,53)" fg:x="4115345927" fg:w="3009027"/><text x="41.1858%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_sub (3,009,027 samples, 0.03%)</title><rect x="40.9358%" y="389" width="0.0299%" height="15" fill="rgb(209,50,29)" fg:x="4115345927" fg:w="3009027"/><text x="41.1858%" y="399.50"></text></g><g><title>__free (6,018,054 samples, 0.06%)</title><rect x="41.0057%" y="325" width="0.0599%" height="15" fill="rgb(245,86,46)" fg:x="4122366990" fg:w="6018054"/><text x="41.2557%" y="335.50"></text></g><g><title>_int_free (5,015,045 samples, 0.05%)</title><rect x="41.0157%" y="309" width="0.0499%" height="15" fill="rgb(235,66,46)" fg:x="4123369999" fg:w="5015045"/><text x="41.2657%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;papaya::map::HashMapRef&lt;alloc::string::String,alloc::string::String,std::hash::random::RandomState,seize::guard::LocalGuard&gt;&gt; (30,090,270 samples, 0.30%)</title><rect x="40.9658%" y="437" width="0.2993%" height="15" fill="rgb(232,148,31)" fg:x="4118354954" fg:w="30090270"/><text x="41.2158%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;papaya::raw::utils::MapGuard&lt;seize::guard::LocalGuard&gt;&gt; (30,090,270 samples, 0.30%)</title><rect x="40.9658%" y="421" width="0.2993%" height="15" fill="rgb(217,149,8)" fg:x="4118354954" fg:w="30090270"/><text x="41.2158%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;seize::guard::LocalGuard&gt; (30,090,270 samples, 0.30%)</title><rect x="40.9658%" y="405" width="0.2993%" height="15" fill="rgb(209,183,11)" fg:x="4118354954" fg:w="30090270"/><text x="41.2158%" y="415.50"></text></g><g><title>&lt;seize::guard::LocalGuard as core::ops::drop::Drop&gt;::drop (30,090,270 samples, 0.30%)</title><rect x="40.9658%" y="389" width="0.2993%" height="15" fill="rgb(208,55,20)" fg:x="4118354954" fg:w="30090270"/><text x="41.2158%" y="399.50"></text></g><g><title>seize::raw::collector::Collector::leave (30,090,270 samples, 0.30%)</title><rect x="40.9658%" y="373" width="0.2993%" height="15" fill="rgb(218,39,14)" fg:x="4118354954" fg:w="30090270"/><text x="41.2158%" y="383.50"></text></g><g><title>seize::raw::collector::Collector::traverse (27,081,243 samples, 0.27%)</title><rect x="40.9957%" y="357" width="0.2694%" height="15" fill="rgb(216,169,33)" fg:x="4121363981" fg:w="27081243"/><text x="41.2457%" y="367.50"></text></g><g><title>seize::raw::collector::Collector::free_batch (27,081,243 samples, 0.27%)</title><rect x="40.9957%" y="341" width="0.2694%" height="15" fill="rgb(233,80,24)" fg:x="4121363981" fg:w="27081243"/><text x="41.2457%" y="351.50"></text></g><g><title>seize::reclaim::boxed (20,060,180 samples, 0.20%)</title><rect x="41.0655%" y="325" width="0.1995%" height="15" fill="rgb(213,179,31)" fg:x="4128385044" fg:w="20060180"/><text x="41.3155%" y="335.50"></text></g><g><title>core::mem::drop (20,060,180 samples, 0.20%)</title><rect x="41.0655%" y="309" width="0.1995%" height="15" fill="rgb(209,19,5)" fg:x="4128385044" fg:w="20060180"/><text x="41.3155%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;papaya::raw::Entry&lt;alloc::string::String,alloc::string::String&gt;&gt;&gt; (20,060,180 samples, 0.20%)</title><rect x="41.0655%" y="293" width="0.1995%" height="15" fill="rgb(219,18,35)" fg:x="4128385044" fg:w="20060180"/><text x="41.3155%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;papaya::raw::Entry&lt;alloc::string::String,alloc::string::String&gt;&gt; (20,060,180 samples, 0.20%)</title><rect x="41.0655%" y="277" width="0.1995%" height="15" fill="rgb(209,169,16)" fg:x="4128385044" fg:w="20060180"/><text x="41.3155%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (20,060,180 samples, 0.20%)</title><rect x="41.0655%" y="261" width="0.1995%" height="15" fill="rgb(245,90,51)" fg:x="4128385044" fg:w="20060180"/><text x="41.3155%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (20,060,180 samples, 0.20%)</title><rect x="41.0655%" y="245" width="0.1995%" height="15" fill="rgb(220,99,45)" fg:x="4128385044" fg:w="20060180"/><text x="41.3155%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (20,060,180 samples, 0.20%)</title><rect x="41.0655%" y="229" width="0.1995%" height="15" fill="rgb(249,89,25)" fg:x="4128385044" fg:w="20060180"/><text x="41.3155%" y="239.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20,060,180 samples, 0.20%)</title><rect x="41.0655%" y="213" width="0.1995%" height="15" fill="rgb(239,193,0)" fg:x="4128385044" fg:w="20060180"/><text x="41.3155%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (16,048,144 samples, 0.16%)</title><rect x="41.1055%" y="197" width="0.1596%" height="15" fill="rgb(231,126,1)" fg:x="4132397080" fg:w="16048144"/><text x="41.3555%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16,048,144 samples, 0.16%)</title><rect x="41.1055%" y="181" width="0.1596%" height="15" fill="rgb(243,166,3)" fg:x="4132397080" fg:w="16048144"/><text x="41.3555%" y="191.50"></text></g><g><title>alloc::alloc::dealloc (16,048,144 samples, 0.16%)</title><rect x="41.1055%" y="165" width="0.1596%" height="15" fill="rgb(223,22,34)" fg:x="4132397080" fg:w="16048144"/><text x="41.3555%" y="175.50"></text></g><g><title>__free (16,048,144 samples, 0.16%)</title><rect x="41.1055%" y="149" width="0.1596%" height="15" fill="rgb(251,52,51)" fg:x="4132397080" fg:w="16048144"/><text x="41.3555%" y="159.50"></text></g><g><title>_int_free (5,015,045 samples, 0.05%)</title><rect x="41.2152%" y="133" width="0.0499%" height="15" fill="rgb(221,165,28)" fg:x="4143430179" fg:w="5015045"/><text x="41.4652%" y="143.50"></text></g><g><title>papaya::map::HashMap&lt;K,V,S&gt;::pin (3,009,027 samples, 0.03%)</title><rect x="41.2651%" y="437" width="0.0299%" height="15" fill="rgb(218,121,47)" fg:x="4148445224" fg:w="3009027"/><text x="41.5151%" y="447.50"></text></g><g><title>papaya::raw::HashMap&lt;K,V,S&gt;::guard (3,009,027 samples, 0.03%)</title><rect x="41.2651%" y="421" width="0.0299%" height="15" fill="rgb(209,120,9)" fg:x="4148445224" fg:w="3009027"/><text x="41.5151%" y="431.50"></text></g><g><title>seize::collector::Collector::enter (3,009,027 samples, 0.03%)</title><rect x="41.2651%" y="405" width="0.0299%" height="15" fill="rgb(236,68,12)" fg:x="4148445224" fg:w="3009027"/><text x="41.5151%" y="415.50"></text></g><g><title>seize::guard::LocalGuard::enter (3,009,027 samples, 0.03%)</title><rect x="41.2651%" y="389" width="0.0299%" height="15" fill="rgb(225,194,26)" fg:x="4148445224" fg:w="3009027"/><text x="41.5151%" y="399.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (3,009,027 samples, 0.03%)</title><rect x="41.4048%" y="389" width="0.0299%" height="15" fill="rgb(231,84,39)" fg:x="4162487350" fg:w="3009027"/><text x="41.6548%" y="399.50"></text></g><g><title>alloc::alloc::exchange_malloc (3,009,027 samples, 0.03%)</title><rect x="41.4048%" y="373" width="0.0299%" height="15" fill="rgb(210,11,45)" fg:x="4162487350" fg:w="3009027"/><text x="41.6548%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,009,027 samples, 0.03%)</title><rect x="41.4048%" y="357" width="0.0299%" height="15" fill="rgb(224,54,52)" fg:x="4162487350" fg:w="3009027"/><text x="41.6548%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,009,027 samples, 0.03%)</title><rect x="41.4048%" y="341" width="0.0299%" height="15" fill="rgb(238,102,14)" fg:x="4162487350" fg:w="3009027"/><text x="41.6548%" y="351.50"></text></g><g><title>alloc::alloc::alloc (3,009,027 samples, 0.03%)</title><rect x="41.4048%" y="325" width="0.0299%" height="15" fill="rgb(243,160,52)" fg:x="4162487350" fg:w="3009027"/><text x="41.6548%" y="335.50"></text></g><g><title>__GI___libc_malloc (3,009,027 samples, 0.03%)</title><rect x="41.4048%" y="309" width="0.0299%" height="15" fill="rgb(216,114,19)" fg:x="4162487350" fg:w="3009027"/><text x="41.6548%" y="319.50"></text></g><g><title>core::cmp::PartialEq::ne (17,051,153 samples, 0.17%)</title><rect x="41.4347%" y="389" width="0.1696%" height="15" fill="rgb(244,166,37)" fg:x="4165496377" fg:w="17051153"/><text x="41.6847%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (17,051,153 samples, 0.17%)</title><rect x="41.4347%" y="373" width="0.1696%" height="15" fill="rgb(246,29,44)" fg:x="4165496377" fg:w="17051153"/><text x="41.6847%" y="383.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (17,051,153 samples, 0.17%)</title><rect x="41.4347%" y="357" width="0.1696%" height="15" fill="rgb(215,56,53)" fg:x="4165496377" fg:w="17051153"/><text x="41.6847%" y="367.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (17,051,153 samples, 0.17%)</title><rect x="41.4347%" y="341" width="0.1696%" height="15" fill="rgb(217,60,2)" fg:x="4165496377" fg:w="17051153"/><text x="41.6847%" y="351.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (17,051,153 samples, 0.17%)</title><rect x="41.4347%" y="325" width="0.1696%" height="15" fill="rgb(207,26,24)" fg:x="4165496377" fg:w="17051153"/><text x="41.6847%" y="335.50"></text></g><g><title>__memcmp_evex_movbe (9,027,081 samples, 0.09%)</title><rect x="41.5145%" y="309" width="0.0898%" height="15" fill="rgb(252,210,15)" fg:x="4173520449" fg:w="9027081"/><text x="41.7645%" y="319.50"></text></g><g><title>papaya::raw::HashMap&lt;K,V,S&gt;::hash (5,015,045 samples, 0.05%)</title><rect x="41.6043%" y="389" width="0.0499%" height="15" fill="rgb(253,209,26)" fg:x="4182547530" fg:w="5015045"/><text x="41.8543%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3,009,027 samples, 0.03%)</title><rect x="41.6243%" y="373" width="0.0299%" height="15" fill="rgb(238,170,14)" fg:x="4184553548" fg:w="3009027"/><text x="41.8743%" y="383.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2,006,018 samples, 0.02%)</title><rect x="41.6342%" y="357" width="0.0200%" height="15" fill="rgb(216,178,15)" fg:x="4185556557" fg:w="2006018"/><text x="41.8842%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (2,006,018 samples, 0.02%)</title><rect x="41.6342%" y="341" width="0.0200%" height="15" fill="rgb(250,197,2)" fg:x="4185556557" fg:w="2006018"/><text x="41.8842%" y="351.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2,006,018 samples, 0.02%)</title><rect x="41.6342%" y="325" width="0.0200%" height="15" fill="rgb(212,70,42)" fg:x="4185556557" fg:w="2006018"/><text x="41.8842%" y="335.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (2,006,018 samples, 0.02%)</title><rect x="41.6342%" y="309" width="0.0200%" height="15" fill="rgb(227,213,9)" fg:x="4185556557" fg:w="2006018"/><text x="41.8842%" y="319.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (2,006,018 samples, 0.02%)</title><rect x="41.6342%" y="293" width="0.0200%" height="15" fill="rgb(245,99,25)" fg:x="4185556557" fg:w="2006018"/><text x="41.8842%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (2,006,018 samples, 0.02%)</title><rect x="41.6342%" y="277" width="0.0200%" height="15" fill="rgb(250,82,29)" fg:x="4185556557" fg:w="2006018"/><text x="41.8842%" y="287.50"></text></g><g><title>core::hash::Hasher::write_u8 (2,006,018 samples, 0.02%)</title><rect x="41.6342%" y="261" width="0.0200%" height="15" fill="rgb(241,226,54)" fg:x="4185556557" fg:w="2006018"/><text x="41.8842%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2,006,018 samples, 0.02%)</title><rect x="41.6342%" y="245" width="0.0200%" height="15" fill="rgb(221,99,41)" fg:x="4185556557" fg:w="2006018"/><text x="41.8842%" y="255.50"></text></g><g><title>seize::raw::collector::Collector::add (2,006,018 samples, 0.02%)</title><rect x="41.6841%" y="309" width="0.0200%" height="15" fill="rgb(213,90,21)" fg:x="4190571602" fg:w="2006018"/><text x="41.9341%" y="319.50"></text></g><g><title>papaya::raw::HashMap&lt;K,V,S&gt;::defer_retire (4,012,036 samples, 0.04%)</title><rect x="41.6741%" y="357" width="0.0399%" height="15" fill="rgb(205,208,24)" fg:x="4189568593" fg:w="4012036"/><text x="41.9241%" y="367.50"></text></g><g><title>&lt;papaya::raw::utils::MapGuard&lt;G&gt; as seize::guard::Guard&gt;::defer_retire (3,009,027 samples, 0.03%)</title><rect x="41.6841%" y="341" width="0.0299%" height="15" fill="rgb(246,31,12)" fg:x="4190571602" fg:w="3009027"/><text x="41.9341%" y="351.50"></text></g><g><title>&lt;seize::guard::LocalGuard as seize::guard::Guard&gt;::defer_retire (3,009,027 samples, 0.03%)</title><rect x="41.6841%" y="325" width="0.0299%" height="15" fill="rgb(213,154,6)" fg:x="4190571602" fg:w="3009027"/><text x="41.9341%" y="335.50"></text></g><g><title>papaya::raw::HashMap&lt;K,V,S&gt;::insert_slow (8,024,072 samples, 0.08%)</title><rect x="41.6542%" y="389" width="0.0798%" height="15" fill="rgb(222,163,29)" fg:x="4187562575" fg:w="8024072"/><text x="41.9042%" y="399.50"></text></g><g><title>papaya::raw::HashMap&lt;K,V,S&gt;::update_at (6,018,054 samples, 0.06%)</title><rect x="41.6741%" y="373" width="0.0599%" height="15" fill="rgb(227,201,8)" fg:x="4189568593" fg:w="6018054"/><text x="41.9241%" y="383.50"></text></g><g><title>seize::guard::Guard::compare_exchange_weak (2,006,018 samples, 0.02%)</title><rect x="41.7141%" y="357" width="0.0200%" height="15" fill="rgb(233,9,32)" fg:x="4193580629" fg:w="2006018"/><text x="41.9641%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::compare_exchange_weak (2,006,018 samples, 0.02%)</title><rect x="41.7141%" y="341" width="0.0200%" height="15" fill="rgb(217,54,24)" fg:x="4193580629" fg:w="2006018"/><text x="41.9641%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2,006,018 samples, 0.02%)</title><rect x="41.7141%" y="325" width="0.0200%" height="15" fill="rgb(235,192,0)" fg:x="4193580629" fg:w="2006018"/><text x="41.9641%" y="335.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,409,227,645 samples, 14.02%)</title><rect x="27.7362%" y="485" width="14.0178%" height="15" fill="rgb(235,45,9)" fg:x="2788365020" fg:w="1409227645"/><text x="27.9862%" y="495.50">&lt;core::pin::Pin&lt;P&gt; as..</text></g><g><title>&lt;F as axum::handler::Handler&lt;(M,T1,T2,T3),S&gt;&gt;::call::{{closure}} (582,748,229 samples, 5.80%)</title><rect x="35.9573%" y="469" width="5.7967%" height="15" fill="rgb(246,42,40)" fg:x="3614844436" fg:w="582748229"/><text x="36.2073%" y="479.50">&lt;F as a..</text></g><g><title>interview::main::{{closure}}::{{closure}}::{{closure}} (82,246,738 samples, 0.82%)</title><rect x="40.9358%" y="453" width="0.8181%" height="15" fill="rgb(248,111,24)" fg:x="4115345927" fg:w="82246738"/><text x="41.1858%" y="463.50"></text></g><g><title>papaya::map::HashMapRef&lt;K,V,S,G&gt;::insert (46,138,414 samples, 0.46%)</title><rect x="41.2950%" y="437" width="0.4589%" height="15" fill="rgb(249,65,22)" fg:x="4151454251" fg:w="46138414"/><text x="41.5450%" y="447.50"></text></g><g><title>papaya::raw::HashMap&lt;K,V,S&gt;::insert (46,138,414 samples, 0.46%)</title><rect x="41.2950%" y="421" width="0.4589%" height="15" fill="rgb(238,111,51)" fg:x="4151454251" fg:w="46138414"/><text x="41.5450%" y="431.50"></text></g><g><title>papaya::raw::HashMap&lt;K,V,S&gt;::insert_inner (46,138,414 samples, 0.46%)</title><rect x="41.2950%" y="405" width="0.4589%" height="15" fill="rgb(250,118,22)" fg:x="4151454251" fg:w="46138414"/><text x="41.5450%" y="415.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22,066,198 samples, 0.22%)</title><rect x="41.8039%" y="389" width="0.2195%" height="15" fill="rgb(234,84,26)" fg:x="4202607710" fg:w="22066198"/><text x="42.0539%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (21,063,189 samples, 0.21%)</title><rect x="41.8138%" y="373" width="0.2095%" height="15" fill="rgb(243,172,12)" fg:x="4203610719" fg:w="21063189"/><text x="42.0638%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (21,063,189 samples, 0.21%)</title><rect x="41.8138%" y="357" width="0.2095%" height="15" fill="rgb(236,150,49)" fg:x="4203610719" fg:w="21063189"/><text x="42.0638%" y="367.50"></text></g><g><title>__free (20,060,180 samples, 0.20%)</title><rect x="41.8238%" y="341" width="0.1995%" height="15" fill="rgb(225,197,26)" fg:x="4204613728" fg:w="20060180"/><text x="42.0738%" y="351.50"></text></g><g><title>_int_free (9,027,081 samples, 0.09%)</title><rect x="41.9336%" y="325" width="0.0898%" height="15" fill="rgb(214,17,42)" fg:x="4215646827" fg:w="9027081"/><text x="42.1836%" y="335.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (1,453,360,041 samples, 14.46%)</title><rect x="27.5965%" y="565" width="14.4567%" height="15" fill="rgb(224,165,40)" fg:x="2774322894" fg:w="1453360041"/><text x="27.8465%" y="575.50">&lt;futures_util::future:..</text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (1,453,360,041 samples, 14.46%)</title><rect x="27.5965%" y="549" width="14.4567%" height="15" fill="rgb(246,100,4)" fg:x="2774322894" fg:w="1453360041"/><text x="27.8465%" y="559.50">&lt;F as futures_core::fu..</text></g><g><title>&lt;axum::handler::future::IntoServiceFuture&lt;F&gt; as core::future::future::Future&gt;::poll (1,453,360,041 samples, 14.46%)</title><rect x="27.5965%" y="533" width="14.4567%" height="15" fill="rgb(222,103,0)" fg:x="2774322894" fg:w="1453360041"/><text x="27.8465%" y="543.50">&lt;axum::handler::future..</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1,453,360,041 samples, 14.46%)</title><rect x="27.5965%" y="517" width="14.4567%" height="15" fill="rgb(227,189,26)" fg:x="2774322894" fg:w="1453360041"/><text x="27.8465%" y="527.50">&lt;futures_util::future:..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1,452,357,032 samples, 14.45%)</title><rect x="27.6065%" y="501" width="14.4468%" height="15" fill="rgb(214,202,17)" fg:x="2775325903" fg:w="1452357032"/><text x="27.8565%" y="511.50">&lt;futures_util::future:..</text></g><g><title>futures_util::future::future::map::_::&lt;impl futures_util::future::future::map::Map&lt;Fut,F&gt;&gt;::project_replace (30,090,270 samples, 0.30%)</title><rect x="41.7540%" y="485" width="0.2993%" height="15" fill="rgb(229,111,3)" fg:x="4197592665" fg:w="30090270"/><text x="42.0040%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;(pin_project_lite::__private::UnsafeDropInPlaceGuard&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = http::response::Response&lt;axum_core::body::Body&gt;+core::marker::Send&gt;&gt;&gt;,())&gt; (30,090,270 samples, 0.30%)</title><rect x="41.7540%" y="469" width="0.2993%" height="15" fill="rgb(229,172,15)" fg:x="4197592665" fg:w="30090270"/><text x="42.0040%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;pin_project_lite::__private::UnsafeDropInPlaceGuard&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = http::response::Response&lt;axum_core::body::Body&gt;+core::marker::Send&gt;&gt;&gt;&gt; (30,090,270 samples, 0.30%)</title><rect x="41.7540%" y="453" width="0.2993%" height="15" fill="rgb(230,224,35)" fg:x="4197592665" fg:w="30090270"/><text x="42.0040%" y="463.50"></text></g><g><title>&lt;pin_project_lite::__private::UnsafeDropInPlaceGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (30,090,270 samples, 0.30%)</title><rect x="41.7540%" y="437" width="0.2993%" height="15" fill="rgb(251,141,6)" fg:x="4197592665" fg:w="30090270"/><text x="42.0040%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = http::response::Response&lt;axum_core::body::Body&gt;+core::marker::Send&gt;&gt;&gt; (30,090,270 samples, 0.30%)</title><rect x="41.7540%" y="421" width="0.2993%" height="15" fill="rgb(225,208,6)" fg:x="4197592665" fg:w="30090270"/><text x="42.0040%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = http::response::Response&lt;axum_core::body::Body&gt;+core::marker::Send&gt;&gt; (30,090,270 samples, 0.30%)</title><rect x="41.7540%" y="405" width="0.2993%" height="15" fill="rgb(246,181,16)" fg:x="4197592665" fg:w="30090270"/><text x="42.0040%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;interview::main::{{closure}}::{{closure}} as axum::handler::Handler&lt;(axum_core::extract::private::ViaRequest,axum::extract::path::Path&lt;alloc::string::String&gt;,axum::extract::state::State&lt;interview::AppState&gt;,alloc::string::String),interview::AppState&gt;&gt;::call::{{closure}}&gt; (2,006,018 samples, 0.02%)</title><rect x="42.0333%" y="389" width="0.0200%" height="15" fill="rgb(227,129,36)" fg:x="4225676917" fg:w="2006018"/><text x="42.2833%" y="399.50"></text></g><g><title>futures_util::future::future::map::_::&lt;impl futures_util::future::future::map::Map&lt;Fut,F&gt;&gt;::project (4,012,036 samples, 0.04%)</title><rect x="42.0533%" y="565" width="0.0399%" height="15" fill="rgb(248,117,24)" fg:x="4227682935" fg:w="4012036"/><text x="42.3033%" y="575.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,470,411,194 samples, 14.63%)</title><rect x="27.4768%" y="645" width="14.6264%" height="15" fill="rgb(214,185,35)" fg:x="2762286786" fg:w="1470411194"/><text x="27.7268%" y="655.50">&lt;core::pin::Pin&lt;P&gt; as ..</text></g><g><title>&lt;tower::util::map_response::MapResponseFuture&lt;F,N&gt; as core::future::future::Future&gt;::poll (1,470,411,194 samples, 14.63%)</title><rect x="27.4768%" y="629" width="14.6264%" height="15" fill="rgb(236,150,34)" fg:x="2762286786" fg:w="1470411194"/><text x="27.7268%" y="639.50">&lt;tower::util::map_resp..</text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1,464,393,140 samples, 14.57%)</title><rect x="27.5367%" y="613" width="14.5665%" height="15" fill="rgb(243,228,27)" fg:x="2768304840" fg:w="1464393140"/><text x="27.7867%" y="623.50">&lt;futures_util::future:..</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1,464,393,140 samples, 14.57%)</title><rect x="27.5367%" y="597" width="14.5665%" height="15" fill="rgb(245,77,44)" fg:x="2768304840" fg:w="1464393140"/><text x="27.7867%" y="607.50">&lt;futures_util::future:..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1,464,393,140 samples, 14.57%)</title><rect x="27.5367%" y="581" width="14.5665%" height="15" fill="rgb(235,214,42)" fg:x="2768304840" fg:w="1464393140"/><text x="27.7867%" y="591.50">&lt;futures_util::future:..</text></g><g><title>__memcpy_evex_unaligned_erms (2,006,018 samples, 0.02%)</title><rect x="42.1131%" y="549" width="0.0200%" height="15" fill="rgb(221,74,3)" fg:x="4233700989" fg:w="2006018"/><text x="42.3631%" y="559.50"></text></g><g><title>__memcpy_evex_unaligned_erms (7,021,063 samples, 0.07%)</title><rect x="42.1331%" y="517" width="0.0698%" height="15" fill="rgb(206,121,29)" fg:x="4235707007" fg:w="7021063"/><text x="42.3831%" y="527.50"></text></g><g><title>__GI___libc_malloc (8,024,072 samples, 0.08%)</title><rect x="42.2029%" y="453" width="0.0798%" height="15" fill="rgb(249,131,53)" fg:x="4242728070" fg:w="8024072"/><text x="42.4529%" y="463.50"></text></g><g><title>&lt;F as axum::handler::Handler&lt;(M,T1,T2),S&gt;&gt;::call (19,057,171 samples, 0.19%)</title><rect x="42.1131%" y="565" width="0.1896%" height="15" fill="rgb(236,170,29)" fg:x="4233700989" fg:w="19057171"/><text x="42.3631%" y="575.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (17,051,153 samples, 0.17%)</title><rect x="42.1331%" y="549" width="0.1696%" height="15" fill="rgb(247,96,15)" fg:x="4235707007" fg:w="17051153"/><text x="42.3831%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (17,051,153 samples, 0.17%)</title><rect x="42.1331%" y="533" width="0.1696%" height="15" fill="rgb(211,210,7)" fg:x="4235707007" fg:w="17051153"/><text x="42.3831%" y="543.50"></text></g><g><title>alloc::alloc::exchange_malloc (10,030,090 samples, 0.10%)</title><rect x="42.2029%" y="517" width="0.0998%" height="15" fill="rgb(240,88,50)" fg:x="4242728070" fg:w="10030090"/><text x="42.4529%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10,030,090 samples, 0.10%)</title><rect x="42.2029%" y="501" width="0.0998%" height="15" fill="rgb(209,229,26)" fg:x="4242728070" fg:w="10030090"/><text x="42.4529%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10,030,090 samples, 0.10%)</title><rect x="42.2029%" y="485" width="0.0998%" height="15" fill="rgb(210,68,23)" fg:x="4242728070" fg:w="10030090"/><text x="42.4529%" y="495.50"></text></g><g><title>alloc::alloc::alloc (10,030,090 samples, 0.10%)</title><rect x="42.2029%" y="469" width="0.0998%" height="15" fill="rgb(229,180,13)" fg:x="4242728070" fg:w="10030090"/><text x="42.4529%" y="479.50"></text></g><g><title>__rust_alloc (2,006,018 samples, 0.02%)</title><rect x="42.2827%" y="453" width="0.0200%" height="15" fill="rgb(236,53,44)" fg:x="4250752142" fg:w="2006018"/><text x="42.5327%" y="463.50"></text></g><g><title>&lt;F as axum::handler::Handler&lt;(M,T1,T2,T3),S&gt;&gt;::call (101,303,909 samples, 1.01%)</title><rect x="42.3027%" y="565" width="1.0077%" height="15" fill="rgb(244,214,29)" fg:x="4252758160" fg:w="101303909"/><text x="42.5527%" y="575.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (100,300,900 samples, 1.00%)</title><rect x="42.3127%" y="549" width="0.9977%" height="15" fill="rgb(220,75,29)" fg:x="4253761169" fg:w="100300900"/><text x="42.5627%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (100,300,900 samples, 1.00%)</title><rect x="42.3127%" y="533" width="0.9977%" height="15" fill="rgb(214,183,37)" fg:x="4253761169" fg:w="100300900"/><text x="42.5627%" y="543.50"></text></g><g><title>alloc::alloc::exchange_malloc (99,297,891 samples, 0.99%)</title><rect x="42.3227%" y="517" width="0.9877%" height="15" fill="rgb(239,117,29)" fg:x="4254764178" fg:w="99297891"/><text x="42.5727%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (99,297,891 samples, 0.99%)</title><rect x="42.3227%" y="501" width="0.9877%" height="15" fill="rgb(237,171,35)" fg:x="4254764178" fg:w="99297891"/><text x="42.5727%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (99,297,891 samples, 0.99%)</title><rect x="42.3227%" y="485" width="0.9877%" height="15" fill="rgb(229,178,53)" fg:x="4254764178" fg:w="99297891"/><text x="42.5727%" y="495.50"></text></g><g><title>alloc::alloc::alloc (99,297,891 samples, 0.99%)</title><rect x="42.3227%" y="469" width="0.9877%" height="15" fill="rgb(210,102,19)" fg:x="4254764178" fg:w="99297891"/><text x="42.5727%" y="479.50"></text></g><g><title>__GI___libc_malloc (99,297,891 samples, 0.99%)</title><rect x="42.3227%" y="453" width="0.9877%" height="15" fill="rgb(235,127,22)" fg:x="4254764178" fg:w="99297891"/><text x="42.5727%" y="463.50"></text></g><g><title>_int_malloc (98,294,882 samples, 0.98%)</title><rect x="42.3326%" y="437" width="0.9778%" height="15" fill="rgb(244,31,31)" fg:x="4255767187" fg:w="98294882"/><text x="42.5826%" y="447.50"></text></g><g><title>malloc_consolidate (74,222,666 samples, 0.74%)</title><rect x="42.5721%" y="421" width="0.7383%" height="15" fill="rgb(231,43,21)" fg:x="4279839403" fg:w="74222666"/><text x="42.8221%" y="431.50"></text></g><g><title>unlink_chunk.constprop.0 (15,045,135 samples, 0.15%)</title><rect x="43.1607%" y="405" width="0.1497%" height="15" fill="rgb(217,131,35)" fg:x="4339016934" fg:w="15045135"/><text x="43.4107%" y="415.50"></text></g><g><title>&lt;interview::AppState as core::clone::Clone&gt;::clone (7,021,063 samples, 0.07%)</title><rect x="43.3104%" y="565" width="0.0698%" height="15" fill="rgb(221,149,4)" fg:x="4354062069" fg:w="7021063"/><text x="43.5604%" y="575.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (7,021,063 samples, 0.07%)</title><rect x="43.3104%" y="549" width="0.0698%" height="15" fill="rgb(232,170,28)" fg:x="4354062069" fg:w="7021063"/><text x="43.5604%" y="559.50"></text></g><g><title>&lt;axum::handler::service::HandlerService&lt;H,T,S&gt; as tower_service::Service&lt;http::request::Request&lt;B&gt;&gt;&gt;::call (132,397,188 samples, 1.32%)</title><rect x="42.1032%" y="581" width="1.3170%" height="15" fill="rgb(238,56,10)" fg:x="4232697980" fg:w="132397188"/><text x="42.3532%" y="591.50"></text></g><g><title>http::request::Request&lt;T&gt;::map (4,012,036 samples, 0.04%)</title><rect x="43.3802%" y="565" width="0.0399%" height="15" fill="rgb(235,196,14)" fg:x="4361083132" fg:w="4012036"/><text x="43.6302%" y="575.50"></text></g><g><title>&lt;tower::util::map_response::MapResponse&lt;S,F&gt; as tower_service::Service&lt;Request&gt;&gt;::call (133,400,197 samples, 1.33%)</title><rect x="42.1032%" y="597" width="1.3269%" height="15" fill="rgb(216,45,48)" fg:x="4232697980" fg:w="133400197"/><text x="42.3532%" y="607.50"></text></g><g><title>__GI___libc_malloc (8,024,072 samples, 0.08%)</title><rect x="43.4501%" y="485" width="0.0798%" height="15" fill="rgb(238,213,17)" fg:x="4368104195" fg:w="8024072"/><text x="43.7001%" y="495.50"></text></g><g><title>&lt;tower::util::boxed_clone_sync::BoxCloneSyncService&lt;T,U,E&gt; as tower_service::Service&lt;T&gt;&gt;::call (144,433,296 samples, 1.44%)</title><rect x="42.1032%" y="645" width="1.4367%" height="15" fill="rgb(212,13,2)" fg:x="4232697980" fg:w="144433296"/><text x="42.3532%" y="655.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;S&gt; as tower_service::Service&lt;Request&gt;&gt;::call (144,433,296 samples, 1.44%)</title><rect x="42.1032%" y="629" width="1.4367%" height="15" fill="rgb(240,114,20)" fg:x="4232697980" fg:w="144433296"/><text x="42.3532%" y="639.50"></text></g><g><title>&lt;tower::util::map_future::MapFuture&lt;S,F&gt; as tower_service::Service&lt;R&gt;&gt;::call (144,433,296 samples, 1.44%)</title><rect x="42.1032%" y="613" width="1.4367%" height="15" fill="rgb(228,41,40)" fg:x="4232697980" fg:w="144433296"/><text x="42.3532%" y="623.50"></text></g><g><title>tower::util::boxed_clone_sync::BoxCloneSyncService&lt;T,U,E&gt;::new::{{closure}} (11,033,099 samples, 0.11%)</title><rect x="43.4301%" y="597" width="0.1097%" height="15" fill="rgb(244,132,35)" fg:x="4366098177" fg:w="11033099"/><text x="43.6801%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (11,033,099 samples, 0.11%)</title><rect x="43.4301%" y="581" width="0.1097%" height="15" fill="rgb(253,189,4)" fg:x="4366098177" fg:w="11033099"/><text x="43.6801%" y="591.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (11,033,099 samples, 0.11%)</title><rect x="43.4301%" y="565" width="0.1097%" height="15" fill="rgb(224,37,19)" fg:x="4366098177" fg:w="11033099"/><text x="43.6801%" y="575.50"></text></g><g><title>alloc::alloc::exchange_malloc (9,027,081 samples, 0.09%)</title><rect x="43.4501%" y="549" width="0.0898%" height="15" fill="rgb(235,223,18)" fg:x="4368104195" fg:w="9027081"/><text x="43.7001%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9,027,081 samples, 0.09%)</title><rect x="43.4501%" y="533" width="0.0898%" height="15" fill="rgb(235,163,25)" fg:x="4368104195" fg:w="9027081"/><text x="43.7001%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9,027,081 samples, 0.09%)</title><rect x="43.4501%" y="517" width="0.0898%" height="15" fill="rgb(217,145,28)" fg:x="4368104195" fg:w="9027081"/><text x="43.7001%" y="527.50"></text></g><g><title>alloc::alloc::alloc (9,027,081 samples, 0.09%)</title><rect x="43.4501%" y="501" width="0.0898%" height="15" fill="rgb(223,223,32)" fg:x="4368104195" fg:w="9027081"/><text x="43.7001%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (4,012,036 samples, 0.04%)</title><rect x="43.5399%" y="645" width="0.0399%" height="15" fill="rgb(227,189,39)" fg:x="4377131276" fg:w="4012036"/><text x="43.7899%" y="655.50"></text></g><g><title>__memcpy_evex_unaligned_erms (4,012,036 samples, 0.04%)</title><rect x="43.5399%" y="629" width="0.0399%" height="15" fill="rgb(248,10,22)" fg:x="4377131276" fg:w="4012036"/><text x="43.7899%" y="639.50"></text></g><g><title>__free (12,036,108 samples, 0.12%)</title><rect x="43.5997%" y="629" width="0.1197%" height="15" fill="rgb(248,46,39)" fg:x="4383149330" fg:w="12036108"/><text x="43.8497%" y="639.50"></text></g><g><title>_int_free (3,009,027 samples, 0.03%)</title><rect x="43.6895%" y="613" width="0.0299%" height="15" fill="rgb(248,113,48)" fg:x="4392176411" fg:w="3009027"/><text x="43.9395%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;+core::marker::Send&gt;&gt;&gt; (7,021,063 samples, 0.07%)</title><rect x="43.7494%" y="613" width="0.0698%" height="15" fill="rgb(245,16,25)" fg:x="4398194465" fg:w="7021063"/><text x="43.9994%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;+core::marker::Send&gt;&gt; (7,021,063 samples, 0.07%)</title><rect x="43.7494%" y="597" width="0.0698%" height="15" fill="rgb(249,152,16)" fg:x="4398194465" fg:w="7021063"/><text x="43.9994%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::map_response::MapResponseFuture&lt;axum::handler::future::IntoServiceFuture&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = http::response::Response&lt;axum_core::body::Body&gt;+core::marker::Send&gt;&gt;&gt;,&lt;http::response::Response&lt;axum_core::body::Body&gt; as axum_core::response::into_response::IntoResponse&gt;::into_response&gt;&gt; (7,021,063 samples, 0.07%)</title><rect x="43.7494%" y="581" width="0.0698%" height="15" fill="rgb(250,16,1)" fg:x="4398194465" fg:w="7021063"/><text x="43.9994%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::future::try_future::MapOk&lt;axum::handler::future::IntoServiceFuture&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = http::response::Response&lt;axum_core::body::Body&gt;+core::marker::Send&gt;&gt;&gt;,&lt;http::response::Response&lt;axum_core::body::Body&gt; as axum_core::response::into_response::IntoResponse&gt;::into_response&gt;&gt; (7,021,063 samples, 0.07%)</title><rect x="43.7494%" y="565" width="0.0698%" height="15" fill="rgb(249,138,3)" fg:x="4398194465" fg:w="7021063"/><text x="43.9994%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::future::future::Map&lt;futures_util::future::try_future::into_future::IntoFuture&lt;axum::handler::future::IntoServiceFuture&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = http::response::Response&lt;axum_core::body::Body&gt;+core::marker::Send&gt;&gt;&gt;&gt;,futures_util::fns::MapOkFn&lt;&lt;http::response::Response&lt;axum_core::body::Body&gt; as axum_core::response::into_response::IntoResponse&gt;::into_response&gt;&gt;&gt; (7,021,063 samples, 0.07%)</title><rect x="43.7494%" y="549" width="0.0698%" height="15" fill="rgb(227,71,41)" fg:x="4398194465" fg:w="7021063"/><text x="43.9994%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::future::future::map::Map&lt;futures_util::future::try_future::into_future::IntoFuture&lt;axum::handler::future::IntoServiceFuture&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = http::response::Response&lt;axum_core::body::Body&gt;+core::marker::Send&gt;&gt;&gt;&gt;,futures_util::fns::MapOkFn&lt;&lt;http::response::Response&lt;axum_core::body::Body&gt; as axum_core::response::into_response::IntoResponse&gt;::into_response&gt;&gt;&gt; (7,021,063 samples, 0.07%)</title><rect x="43.7494%" y="533" width="0.0698%" height="15" fill="rgb(209,184,23)" fg:x="4398194465" fg:w="7021063"/><text x="43.9994%" y="543.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,009,027 samples, 0.03%)</title><rect x="43.8192%" y="581" width="0.0299%" height="15" fill="rgb(223,215,31)" fg:x="4405215528" fg:w="3009027"/><text x="44.0692%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,009,027 samples, 0.03%)</title><rect x="43.8192%" y="565" width="0.0299%" height="15" fill="rgb(210,146,28)" fg:x="4405215528" fg:w="3009027"/><text x="44.0692%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (3,009,027 samples, 0.03%)</title><rect x="43.8192%" y="549" width="0.0299%" height="15" fill="rgb(209,183,41)" fg:x="4405215528" fg:w="3009027"/><text x="44.0692%" y="559.50"></text></g><g><title>__free (3,009,027 samples, 0.03%)</title><rect x="43.8192%" y="533" width="0.0299%" height="15" fill="rgb(209,224,45)" fg:x="4405215528" fg:w="3009027"/><text x="44.0692%" y="543.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (1,690,070,165 samples, 16.81%)</title><rect x="27.0977%" y="725" width="16.8113%" height="15" fill="rgb(224,209,51)" fg:x="2724172444" fg:w="1690070165"/><text x="27.3477%" y="735.50">&lt;futures_util::future::try..</text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (1,690,070,165 samples, 16.81%)</title><rect x="27.0977%" y="709" width="16.8113%" height="15" fill="rgb(223,17,39)" fg:x="2724172444" fg:w="1690070165"/><text x="27.3477%" y="719.50">&lt;F as futures_core::future..</text></g><g><title>&lt;tower::limit::concurrency::future::ResponseFuture&lt;F&gt; as core::future::future::Future&gt;::poll (1,690,070,165 samples, 16.81%)</title><rect x="27.0977%" y="693" width="16.8113%" height="15" fill="rgb(234,204,37)" fg:x="2724172444" fg:w="1690070165"/><text x="27.3477%" y="703.50">&lt;tower::limit::concurrency..</text></g><g><title>&lt;axum::routing::route::RouteFuture&lt;E&gt; as core::future::future::Future&gt;::poll (1,682,046,093 samples, 16.73%)</title><rect x="27.1775%" y="677" width="16.7315%" height="15" fill="rgb(236,120,5)" fg:x="2732196516" fg:w="1682046093"/><text x="27.4275%" y="687.50">&lt;axum::routing::route::Rou..</text></g><g><title>&lt;tower::util::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (1,663,991,931 samples, 16.55%)</title><rect x="27.3571%" y="661" width="16.5519%" height="15" fill="rgb(248,97,27)" fg:x="2750250678" fg:w="1663991931"/><text x="27.6071%" y="671.50">&lt;tower::util::oneshot::One..</text></g><g><title>core::pin::Pin&lt;Ptr&gt;::set (33,099,297 samples, 0.33%)</title><rect x="43.5798%" y="645" width="0.3292%" height="15" fill="rgb(240,66,17)" fg:x="4381143312" fg:w="33099297"/><text x="43.8298%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::oneshot::State&lt;tower::util::boxed_clone_sync::BoxCloneSyncService&lt;http::request::Request&lt;axum_core::body::Body&gt;,http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;,http::request::Request&lt;axum_core::body::Body&gt;&gt;&gt; (19,057,171 samples, 0.19%)</title><rect x="43.7194%" y="629" width="0.1896%" height="15" fill="rgb(210,79,3)" fg:x="4395185438" fg:w="19057171"/><text x="43.9694%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::boxed_clone_sync::BoxCloneSyncService&lt;http::request::Request&lt;axum_core::body::Body&gt;,http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;&gt; (9,027,081 samples, 0.09%)</title><rect x="43.8192%" y="613" width="0.0898%" height="15" fill="rgb(214,176,27)" fg:x="4405215528" fg:w="9027081"/><text x="44.0692%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn tower::util::boxed_clone_sync::CloneService&lt;http::request::Request&lt;axum_core::body::Body&gt;&gt;+Response = http::response::Response&lt;axum_core::body::Body&gt;+Error = core::convert::Infallible+Future = core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;+core::marker::Send&gt;&gt;+core::marker::Send+core::marker::Sync&gt;&gt; (9,027,081 samples, 0.09%)</title><rect x="43.8192%" y="597" width="0.0898%" height="15" fill="rgb(235,185,3)" fg:x="4405215528" fg:w="9027081"/><text x="44.0692%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::map_future::MapFuture&lt;tower::util::map_response::MapResponse&lt;axum::handler::service::HandlerService&lt;interview::main::{{closure}}::{{closure}},(axum_core::extract::private::ViaParts,axum::extract::path::Path&lt;alloc::string::String&gt;,axum::extract::state::State&lt;interview::AppState&gt;),interview::AppState&gt;,&lt;http::response::Response&lt;axum_core::body::Body&gt; as axum_core::response::into_response::IntoResponse&gt;::into_response&gt;,tower::util::boxed_clone_sync::BoxCloneSyncService&lt;http::request::Request&lt;axum_core::body::Body&gt;,http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;::new&lt;tower::util::map_response::MapResponse&lt;axum::handler::service::HandlerService&lt;interview::main::{{closure}}::{{closure}},(axum_core::extract::private::ViaParts,axum::extract::path::Path&lt;alloc::string::String&gt;,axum::extract::state::State&lt;interview::AppState&gt;),interview::AppState&gt;,&lt;http::response::Response&lt;axum_core::body::Body&gt; as axum_core::response::into_response::IntoResponse&gt;::into_response&gt;&gt;::{{closure}}&gt;&gt; (6,018,054 samples, 0.06%)</title><rect x="43.8491%" y="581" width="0.0599%" height="15" fill="rgb(227,24,12)" fg:x="4408224555" fg:w="6018054"/><text x="44.0991%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::map_response::MapResponse&lt;axum::handler::service::HandlerService&lt;interview::main::{{closure}}::{{closure}},(axum_core::extract::private::ViaParts,axum::extract::path::Path&lt;alloc::string::String&gt;,axum::extract::state::State&lt;interview::AppState&gt;),interview::AppState&gt;,&lt;http::response::Response&lt;axum_core::body::Body&gt; as axum_core::response::into_response::IntoResponse&gt;::into_response&gt;&gt; (6,018,054 samples, 0.06%)</title><rect x="43.8491%" y="565" width="0.0599%" height="15" fill="rgb(252,169,48)" fg:x="4408224555" fg:w="6018054"/><text x="44.0991%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::handler::service::HandlerService&lt;interview::main::{{closure}}::{{closure}},(axum_core::extract::private::ViaParts,axum::extract::path::Path&lt;alloc::string::String&gt;,axum::extract::state::State&lt;interview::AppState&gt;),interview::AppState&gt;&gt; (6,018,054 samples, 0.06%)</title><rect x="43.8491%" y="549" width="0.0599%" height="15" fill="rgb(212,65,1)" fg:x="4408224555" fg:w="6018054"/><text x="44.0991%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;interview::AppState&gt; (6,018,054 samples, 0.06%)</title><rect x="43.8491%" y="533" width="0.0599%" height="15" fill="rgb(242,39,24)" fg:x="4408224555" fg:w="6018054"/><text x="44.0991%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;papaya::map::HashMap&lt;alloc::string::String,alloc::string::String&gt;&gt;&gt; (6,018,054 samples, 0.06%)</title><rect x="43.8491%" y="517" width="0.0599%" height="15" fill="rgb(249,32,23)" fg:x="4408224555" fg:w="6018054"/><text x="44.0991%" y="527.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,018,054 samples, 0.06%)</title><rect x="43.8491%" y="501" width="0.0599%" height="15" fill="rgb(251,195,23)" fg:x="4408224555" fg:w="6018054"/><text x="44.0991%" y="511.50"></text></g><g><title>futures_util::future::future::map::_::&lt;impl futures_util::future::future::map::Map&lt;Fut,F&gt;&gt;::project (2,006,018 samples, 0.02%)</title><rect x="43.9090%" y="725" width="0.0200%" height="15" fill="rgb(236,174,8)" fg:x="4414242609" fg:w="2006018"/><text x="44.1590%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::routing::route::RouteFuture&lt;core::convert::Infallible&gt;&gt; (9,027,081 samples, 0.09%)</title><rect x="43.9489%" y="629" width="0.0898%" height="15" fill="rgb(220,197,8)" fg:x="4418254645" fg:w="9027081"/><text x="44.1989%" y="639.50"></text></g><g><title>&lt;tokio::sync::semaphore::OwnedSemaphorePermit as core::ops::drop::Drop&gt;::drop (14,042,126 samples, 0.14%)</title><rect x="44.0487%" y="613" width="0.1397%" height="15" fill="rgb(240,108,37)" fg:x="4428284735" fg:w="14042126"/><text x="44.2987%" y="623.50"></text></g><g><title>tokio::sync::semaphore::Semaphore::add_permits (12,036,108 samples, 0.12%)</title><rect x="44.0686%" y="597" width="0.1197%" height="15" fill="rgb(232,176,24)" fg:x="4430290753" fg:w="12036108"/><text x="44.3186%" y="607.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::release (12,036,108 samples, 0.12%)</title><rect x="44.0686%" y="581" width="0.1197%" height="15" fill="rgb(243,35,29)" fg:x="4430290753" fg:w="12036108"/><text x="44.3186%" y="591.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (11,033,099 samples, 0.11%)</title><rect x="44.0786%" y="565" width="0.1097%" height="15" fill="rgb(210,37,18)" fg:x="4431293762" fg:w="11033099"/><text x="44.3286%" y="575.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (11,033,099 samples, 0.11%)</title><rect x="44.0786%" y="549" width="0.1097%" height="15" fill="rgb(224,184,40)" fg:x="4431293762" fg:w="11033099"/><text x="44.3286%" y="559.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (11,033,099 samples, 0.11%)</title><rect x="44.0786%" y="533" width="0.1097%" height="15" fill="rgb(236,39,29)" fg:x="4431293762" fg:w="11033099"/><text x="44.3286%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (2,006,018 samples, 0.02%)</title><rect x="44.1684%" y="517" width="0.0200%" height="15" fill="rgb(232,48,39)" fg:x="4440320843" fg:w="2006018"/><text x="44.4184%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2,006,018 samples, 0.02%)</title><rect x="44.1684%" y="501" width="0.0200%" height="15" fill="rgb(236,34,42)" fg:x="4440320843" fg:w="2006018"/><text x="44.4184%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::sync::semaphore::Semaphore&gt;&gt; (3,009,027 samples, 0.03%)</title><rect x="44.1884%" y="613" width="0.0299%" height="15" fill="rgb(243,106,37)" fg:x="4442326861" fg:w="3009027"/><text x="44.4384%" y="623.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,009,027 samples, 0.03%)</title><rect x="44.1884%" y="597" width="0.0299%" height="15" fill="rgb(218,96,6)" fg:x="4442326861" fg:w="3009027"/><text x="44.4384%" y="607.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (1,732,196,543 samples, 17.23%)</title><rect x="27.0777%" y="821" width="17.2304%" height="15" fill="rgb(235,130,12)" fg:x="2722166426" fg:w="1732196543"/><text x="27.3277%" y="831.50">&lt;futures_util::future::try_..</text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (1,732,196,543 samples, 17.23%)</title><rect x="27.0777%" y="805" width="17.2304%" height="15" fill="rgb(231,95,0)" fg:x="2722166426" fg:w="1732196543"/><text x="27.3277%" y="815.50">&lt;F as futures_core::future:..</text></g><g><title>&lt;tower::util::map_response::MapResponseFuture&lt;F,N&gt; as core::future::future::Future&gt;::poll (1,732,196,543 samples, 17.23%)</title><rect x="27.0777%" y="789" width="17.2304%" height="15" fill="rgb(228,12,23)" fg:x="2722166426" fg:w="1732196543"/><text x="27.3277%" y="799.50">&lt;tower::util::map_response:..</text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1,732,196,543 samples, 17.23%)</title><rect x="27.0777%" y="773" width="17.2304%" height="15" fill="rgb(216,12,1)" fg:x="2722166426" fg:w="1732196543"/><text x="27.3277%" y="783.50">&lt;futures_util::future::try_..</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1,732,196,543 samples, 17.23%)</title><rect x="27.0777%" y="757" width="17.2304%" height="15" fill="rgb(219,59,3)" fg:x="2722166426" fg:w="1732196543"/><text x="27.3277%" y="767.50">&lt;futures_util::future::futu..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1,732,196,543 samples, 17.23%)</title><rect x="27.0777%" y="741" width="17.2304%" height="15" fill="rgb(215,208,46)" fg:x="2722166426" fg:w="1732196543"/><text x="27.3277%" y="751.50">&lt;futures_util::future::futu..</text></g><g><title>futures_util::future::future::map::_::&lt;impl futures_util::future::future::map::Map&lt;Fut,F&gt;&gt;::project_replace (38,114,342 samples, 0.38%)</title><rect x="43.9290%" y="725" width="0.3791%" height="15" fill="rgb(254,224,29)" fg:x="4416248627" fg:w="38114342"/><text x="44.1790%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;(pin_project_lite::__private::UnsafeDropInPlaceGuard&lt;futures_util::future::try_future::into_future::IntoFuture&lt;tower::limit::concurrency::future::ResponseFuture&lt;axum::routing::route::RouteFuture&lt;core::convert::Infallible&gt;&gt;&gt;&gt;,())&gt; (38,114,342 samples, 0.38%)</title><rect x="43.9290%" y="709" width="0.3791%" height="15" fill="rgb(232,14,29)" fg:x="4416248627" fg:w="38114342"/><text x="44.1790%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;pin_project_lite::__private::UnsafeDropInPlaceGuard&lt;futures_util::future::try_future::into_future::IntoFuture&lt;tower::limit::concurrency::future::ResponseFuture&lt;axum::routing::route::RouteFuture&lt;core::convert::Infallible&gt;&gt;&gt;&gt;&gt; (38,114,342 samples, 0.38%)</title><rect x="43.9290%" y="693" width="0.3791%" height="15" fill="rgb(208,45,52)" fg:x="4416248627" fg:w="38114342"/><text x="44.1790%" y="703.50"></text></g><g><title>&lt;pin_project_lite::__private::UnsafeDropInPlaceGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (38,114,342 samples, 0.38%)</title><rect x="43.9290%" y="677" width="0.3791%" height="15" fill="rgb(234,191,28)" fg:x="4416248627" fg:w="38114342"/><text x="44.1790%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::future::try_future::into_future::IntoFuture&lt;tower::limit::concurrency::future::ResponseFuture&lt;axum::routing::route::RouteFuture&lt;core::convert::Infallible&gt;&gt;&gt;&gt; (38,114,342 samples, 0.38%)</title><rect x="43.9290%" y="661" width="0.3791%" height="15" fill="rgb(244,67,43)" fg:x="4416248627" fg:w="38114342"/><text x="44.1790%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::limit::concurrency::future::ResponseFuture&lt;axum::routing::route::RouteFuture&lt;core::convert::Infallible&gt;&gt;&gt; (36,108,324 samples, 0.36%)</title><rect x="43.9489%" y="645" width="0.3592%" height="15" fill="rgb(236,189,24)" fg:x="4418254645" fg:w="36108324"/><text x="44.1989%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::semaphore::OwnedSemaphorePermit&gt; (27,081,243 samples, 0.27%)</title><rect x="44.0387%" y="629" width="0.2694%" height="15" fill="rgb(239,214,33)" fg:x="4427281726" fg:w="27081243"/><text x="44.2887%" y="639.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (9,027,081 samples, 0.09%)</title><rect x="44.2183%" y="613" width="0.0898%" height="15" fill="rgb(226,176,41)" fg:x="4445335888" fg:w="9027081"/><text x="44.4683%" y="623.50"></text></g><g><title>&lt;futures_util::future::try_future::into_future::IntoFuture&lt;Fut&gt; as core::future::future::Future&gt;::poll (1,740,220,615 samples, 17.31%)</title><rect x="27.0179%" y="917" width="17.3102%" height="15" fill="rgb(248,47,8)" fg:x="2716148372" fg:w="1740220615"/><text x="27.2679%" y="927.50">&lt;futures_util::future::try_..</text></g><g><title>&lt;F as futures_core::future::TryFuture&gt;::try_poll (1,740,220,615 samples, 17.31%)</title><rect x="27.0179%" y="901" width="17.3102%" height="15" fill="rgb(218,81,44)" fg:x="2716148372" fg:w="1740220615"/><text x="27.2679%" y="911.50">&lt;F as futures_core::future:..</text></g><g><title>&lt;tower::util::map_err::MapErrFuture&lt;F,N&gt; as core::future::future::Future&gt;::poll (1,740,220,615 samples, 17.31%)</title><rect x="27.0179%" y="885" width="17.3102%" height="15" fill="rgb(213,98,6)" fg:x="2716148372" fg:w="1740220615"/><text x="27.2679%" y="895.50">&lt;tower::util::map_err::MapE..</text></g><g><title>&lt;futures_util::future::try_future::MapErr&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1,740,220,615 samples, 17.31%)</title><rect x="27.0179%" y="869" width="17.3102%" height="15" fill="rgb(222,85,22)" fg:x="2716148372" fg:w="1740220615"/><text x="27.2679%" y="879.50">&lt;futures_util::future::try_..</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1,740,220,615 samples, 17.31%)</title><rect x="27.0179%" y="853" width="17.3102%" height="15" fill="rgb(239,46,39)" fg:x="2716148372" fg:w="1740220615"/><text x="27.2679%" y="863.50">&lt;futures_util::future::futu..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1,740,220,615 samples, 17.31%)</title><rect x="27.0179%" y="837" width="17.3102%" height="15" fill="rgb(237,12,29)" fg:x="2716148372" fg:w="1740220615"/><text x="27.2679%" y="847.50">&lt;futures_util::future::futu..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,753,259,732 samples, 17.44%)</title><rect x="26.9380%" y="997" width="17.4399%" height="15" fill="rgb(214,77,8)" fg:x="2708124300" fg:w="1753259732"/><text x="27.1880%" y="1007.50">&lt;core::pin::Pin&lt;P&gt; as core:..</text></g><g><title>&lt;tower::util::map_response::MapResponseFuture&lt;F,N&gt; as core::future::future::Future&gt;::poll (1,753,259,732 samples, 17.44%)</title><rect x="26.9380%" y="981" width="17.4399%" height="15" fill="rgb(217,168,37)" fg:x="2708124300" fg:w="1753259732"/><text x="27.1880%" y="991.50">&lt;tower::util::map_response:..</text></g><g><title>&lt;futures_util::future::try_future::MapOk&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1,748,244,687 samples, 17.39%)</title><rect x="26.9879%" y="965" width="17.3900%" height="15" fill="rgb(221,217,23)" fg:x="2713139345" fg:w="1748244687"/><text x="27.2379%" y="975.50">&lt;futures_util::future::try_..</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1,748,244,687 samples, 17.39%)</title><rect x="26.9879%" y="949" width="17.3900%" height="15" fill="rgb(243,229,36)" fg:x="2713139345" fg:w="1748244687"/><text x="27.2379%" y="959.50">&lt;futures_util::future::futu..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (1,748,244,687 samples, 17.39%)</title><rect x="26.9879%" y="933" width="17.3900%" height="15" fill="rgb(251,163,40)" fg:x="2713139345" fg:w="1748244687"/><text x="27.2379%" y="943.50">&lt;futures_util::future::futu..</text></g><g><title>futures_util::future::future::map::_::&lt;impl futures_util::future::future::map::Map&lt;Fut,F&gt;&gt;::project (5,015,045 samples, 0.05%)</title><rect x="44.3280%" y="917" width="0.0499%" height="15" fill="rgb(237,222,12)" fg:x="4456368987" fg:w="5015045"/><text x="44.5780%" y="927.50"></text></g><g><title>&lt;tower::util::map_future::MapFuture&lt;S,F&gt; as core::clone::Clone&gt;::clone (6,018,054 samples, 0.06%)</title><rect x="44.4677%" y="821" width="0.0599%" height="15" fill="rgb(248,132,6)" fg:x="4470411113" fg:w="6018054"/><text x="44.7177%" y="831.50"></text></g><g><title>&lt;tower::util::map_response::MapResponse&lt;S,F&gt; as core::clone::Clone&gt;::clone (6,018,054 samples, 0.06%)</title><rect x="44.4677%" y="805" width="0.0599%" height="15" fill="rgb(227,167,50)" fg:x="4470411113" fg:w="6018054"/><text x="44.7177%" y="815.50"></text></g><g><title>&lt;axum::handler::service::HandlerService&lt;H,T,S&gt; as core::clone::Clone&gt;::clone (6,018,054 samples, 0.06%)</title><rect x="44.4677%" y="789" width="0.0599%" height="15" fill="rgb(242,84,37)" fg:x="4470411113" fg:w="6018054"/><text x="44.7177%" y="799.50"></text></g><g><title>&lt;interview::AppState as core::clone::Clone&gt;::clone (5,015,045 samples, 0.05%)</title><rect x="44.4777%" y="773" width="0.0499%" height="15" fill="rgb(212,4,50)" fg:x="4471414122" fg:w="5015045"/><text x="44.7277%" y="783.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,015,045 samples, 0.05%)</title><rect x="44.4777%" y="757" width="0.0499%" height="15" fill="rgb(230,228,32)" fg:x="4471414122" fg:w="5015045"/><text x="44.7277%" y="767.50"></text></g><g><title>__GI___libc_malloc (31,093,279 samples, 0.31%)</title><rect x="44.5276%" y="741" width="0.3093%" height="15" fill="rgb(248,217,23)" fg:x="4476429167" fg:w="31093279"/><text x="44.7776%" y="751.50"></text></g><g><title>_int_malloc (25,075,225 samples, 0.25%)</title><rect x="44.5874%" y="725" width="0.2494%" height="15" fill="rgb(238,197,32)" fg:x="4482447221" fg:w="25075225"/><text x="44.8374%" y="735.50"></text></g><g><title>unlink_chunk.constprop.0 (2,006,018 samples, 0.02%)</title><rect x="44.8169%" y="709" width="0.0200%" height="15" fill="rgb(236,106,1)" fg:x="4505516428" fg:w="2006018"/><text x="45.0669%" y="719.50"></text></g><g><title>&lt;tower::util::boxed_clone_sync::BoxCloneSyncService&lt;T,U,E&gt; as core::clone::Clone&gt;::clone (38,114,342 samples, 0.38%)</title><rect x="44.4677%" y="853" width="0.3791%" height="15" fill="rgb(219,228,13)" fg:x="4470411113" fg:w="38114342"/><text x="44.7177%" y="863.50"></text></g><g><title>&lt;T as tower::util::boxed_clone_sync::CloneService&lt;R&gt;&gt;::clone_box (38,114,342 samples, 0.38%)</title><rect x="44.4677%" y="837" width="0.3791%" height="15" fill="rgb(238,30,35)" fg:x="4470411113" fg:w="38114342"/><text x="44.7177%" y="847.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (32,096,288 samples, 0.32%)</title><rect x="44.5276%" y="821" width="0.3193%" height="15" fill="rgb(236,70,23)" fg:x="4476429167" fg:w="32096288"/><text x="44.7776%" y="831.50"></text></g><g><title>alloc::alloc::exchange_malloc (32,096,288 samples, 0.32%)</title><rect x="44.5276%" y="805" width="0.3193%" height="15" fill="rgb(249,104,48)" fg:x="4476429167" fg:w="32096288"/><text x="44.7776%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (32,096,288 samples, 0.32%)</title><rect x="44.5276%" y="789" width="0.3193%" height="15" fill="rgb(254,117,50)" fg:x="4476429167" fg:w="32096288"/><text x="44.7776%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (32,096,288 samples, 0.32%)</title><rect x="44.5276%" y="773" width="0.3193%" height="15" fill="rgb(223,152,4)" fg:x="4476429167" fg:w="32096288"/><text x="44.7776%" y="783.50"></text></g><g><title>alloc::alloc::alloc (32,096,288 samples, 0.32%)</title><rect x="44.5276%" y="757" width="0.3193%" height="15" fill="rgb(245,6,2)" fg:x="4476429167" fg:w="32096288"/><text x="44.7776%" y="767.50"></text></g><g><title>axum::routing::route::Route&lt;E&gt;::oneshot_inner (44,132,396 samples, 0.44%)</title><rect x="44.4278%" y="869" width="0.4390%" height="15" fill="rgb(249,150,24)" fg:x="4466399077" fg:w="44132396"/><text x="44.6778%" y="879.50"></text></g><g><title>&lt;axum::routing::route::Route&lt;E&gt; as tower_service::Service&lt;http::request::Request&lt;B&gt;&gt;&gt;::call (52,156,468 samples, 0.52%)</title><rect x="44.4278%" y="885" width="0.5188%" height="15" fill="rgb(228,185,42)" fg:x="4466399077" fg:w="52156468"/><text x="44.6778%" y="895.50"></text></g><g><title>axum::routing::route::RouteFuture&lt;E&gt;::not_top_level (8,024,072 samples, 0.08%)</title><rect x="44.8668%" y="869" width="0.0798%" height="15" fill="rgb(226,39,33)" fg:x="4510531473" fg:w="8024072"/><text x="45.1168%" y="879.50"></text></g><g><title>__memcpy_evex_unaligned_erms (7,021,063 samples, 0.07%)</title><rect x="44.8768%" y="853" width="0.0698%" height="15" fill="rgb(221,166,19)" fg:x="4511534482" fg:w="7021063"/><text x="45.1268%" y="863.50"></text></g><g><title>__memcpy_evex_unaligned_erms (4,012,036 samples, 0.04%)</title><rect x="44.9466%" y="885" width="0.0399%" height="15" fill="rgb(209,109,2)" fg:x="4518555545" fg:w="4012036"/><text x="45.1966%" y="895.50"></text></g><g><title>&lt;tower::util::map_response::MapResponse&lt;S,F&gt; as tower_service::Service&lt;Request&gt;&gt;::call (60,180,540 samples, 0.60%)</title><rect x="44.3979%" y="949" width="0.5986%" height="15" fill="rgb(252,216,26)" fg:x="4463390050" fg:w="60180540"/><text x="44.6479%" y="959.50"></text></g><g><title>&lt;tower::util::map_err::MapErr&lt;S,F&gt; as tower_service::Service&lt;Request&gt;&gt;::call (60,180,540 samples, 0.60%)</title><rect x="44.3979%" y="933" width="0.5986%" height="15" fill="rgb(227,173,36)" fg:x="4463390050" fg:w="60180540"/><text x="44.6479%" y="943.50"></text></g><g><title>&lt;tower::util::map_response::MapResponse&lt;S,F&gt; as tower_service::Service&lt;Request&gt;&gt;::call (60,180,540 samples, 0.60%)</title><rect x="44.3979%" y="917" width="0.5986%" height="15" fill="rgb(209,90,7)" fg:x="4463390050" fg:w="60180540"/><text x="44.6479%" y="927.50"></text></g><g><title>&lt;tower::limit::concurrency::service::ConcurrencyLimit&lt;S&gt; as tower_service::Service&lt;Request&gt;&gt;::call (60,180,540 samples, 0.60%)</title><rect x="44.3979%" y="901" width="0.5986%" height="15" fill="rgb(250,194,11)" fg:x="4463390050" fg:w="60180540"/><text x="44.6479%" y="911.50"></text></g><g><title>__memcpy_evex_unaligned_erms (4,012,036 samples, 0.04%)</title><rect x="45.0065%" y="901" width="0.0399%" height="15" fill="rgb(220,72,50)" fg:x="4524573599" fg:w="4012036"/><text x="45.2565%" y="911.50"></text></g><g><title>__GI___libc_malloc (12,036,108 samples, 0.12%)</title><rect x="45.0464%" y="837" width="0.1197%" height="15" fill="rgb(222,106,48)" fg:x="4528585635" fg:w="12036108"/><text x="45.2964%" y="847.50"></text></g><g><title>&lt;tower::util::boxed_clone_sync::BoxCloneSyncService&lt;T,U,E&gt; as tower_service::Service&lt;T&gt;&gt;::call (81,243,729 samples, 0.81%)</title><rect x="44.3779%" y="997" width="0.8081%" height="15" fill="rgb(216,220,45)" fg:x="4461384032" fg:w="81243729"/><text x="44.6279%" y="1007.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;S&gt; as tower_service::Service&lt;Request&gt;&gt;::call (81,243,729 samples, 0.81%)</title><rect x="44.3779%" y="981" width="0.8081%" height="15" fill="rgb(234,112,18)" fg:x="4461384032" fg:w="81243729"/><text x="44.6279%" y="991.50"></text></g><g><title>&lt;tower::util::map_future::MapFuture&lt;S,F&gt; as tower_service::Service&lt;R&gt;&gt;::call (81,243,729 samples, 0.81%)</title><rect x="44.3779%" y="965" width="0.8081%" height="15" fill="rgb(206,179,9)" fg:x="4461384032" fg:w="81243729"/><text x="44.6279%" y="975.50"></text></g><g><title>tower::util::boxed_clone_sync::BoxCloneSyncService&lt;T,U,E&gt;::new::{{closure}} (19,057,171 samples, 0.19%)</title><rect x="44.9965%" y="949" width="0.1896%" height="15" fill="rgb(215,115,40)" fg:x="4523570590" fg:w="19057171"/><text x="45.2465%" y="959.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (19,057,171 samples, 0.19%)</title><rect x="44.9965%" y="933" width="0.1896%" height="15" fill="rgb(222,69,34)" fg:x="4523570590" fg:w="19057171"/><text x="45.2465%" y="943.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (19,057,171 samples, 0.19%)</title><rect x="44.9965%" y="917" width="0.1896%" height="15" fill="rgb(209,161,10)" fg:x="4523570590" fg:w="19057171"/><text x="45.2465%" y="927.50"></text></g><g><title>alloc::alloc::exchange_malloc (14,042,126 samples, 0.14%)</title><rect x="45.0464%" y="901" width="0.1397%" height="15" fill="rgb(217,6,38)" fg:x="4528585635" fg:w="14042126"/><text x="45.2964%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14,042,126 samples, 0.14%)</title><rect x="45.0464%" y="885" width="0.1397%" height="15" fill="rgb(229,229,48)" fg:x="4528585635" fg:w="14042126"/><text x="45.2964%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14,042,126 samples, 0.14%)</title><rect x="45.0464%" y="869" width="0.1397%" height="15" fill="rgb(225,21,28)" fg:x="4528585635" fg:w="14042126"/><text x="45.2964%" y="879.50"></text></g><g><title>alloc::alloc::alloc (14,042,126 samples, 0.14%)</title><rect x="45.0464%" y="853" width="0.1397%" height="15" fill="rgb(206,33,13)" fg:x="4528585635" fg:w="14042126"/><text x="45.2964%" y="863.50"></text></g><g><title>__rdl_alloc (2,006,018 samples, 0.02%)</title><rect x="45.1661%" y="837" width="0.0200%" height="15" fill="rgb(242,178,17)" fg:x="4540621743" fg:w="2006018"/><text x="45.4161%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (12,036,108 samples, 0.12%)</title><rect x="45.2060%" y="949" width="0.1197%" height="15" fill="rgb(220,162,5)" fg:x="4544633779" fg:w="12036108"/><text x="45.4560%" y="959.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (12,036,108 samples, 0.12%)</title><rect x="45.2060%" y="933" width="0.1197%" height="15" fill="rgb(210,33,43)" fg:x="4544633779" fg:w="12036108"/><text x="45.4560%" y="943.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,009,027 samples, 0.03%)</title><rect x="45.4555%" y="917" width="0.0299%" height="15" fill="rgb(216,116,54)" fg:x="4569709004" fg:w="3009027"/><text x="45.7055%" y="927.50"></text></g><g><title>&lt;tower::limit::concurrency::service::ConcurrencyLimit&lt;S&gt; as tower_service::Service&lt;Request&gt;&gt;::poll_ready (50,150,450 samples, 0.50%)</title><rect x="45.1861%" y="965" width="0.4989%" height="15" fill="rgb(249,92,24)" fg:x="4542627761" fg:w="50150450"/><text x="45.4361%" y="975.50"></text></g><g><title>tokio_util::sync::poll_semaphore::PollSemaphore::poll_acquire (36,108,324 samples, 0.36%)</title><rect x="45.3258%" y="949" width="0.3592%" height="15" fill="rgb(231,189,14)" fg:x="4556669887" fg:w="36108324"/><text x="45.5758%" y="959.50"></text></g><g><title>tokio_util::sync::poll_semaphore::PollSemaphore::poll_acquire_many (30,090,270 samples, 0.30%)</title><rect x="45.3856%" y="933" width="0.2993%" height="15" fill="rgb(230,8,41)" fg:x="4562687941" fg:w="30090270"/><text x="45.6356%" y="943.50"></text></g><g><title>tokio::sync::semaphore::Semaphore::try_acquire_many_owned (20,060,180 samples, 0.20%)</title><rect x="45.4854%" y="917" width="0.1995%" height="15" fill="rgb(249,7,27)" fg:x="4572718031" fg:w="20060180"/><text x="45.7354%" y="927.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::try_acquire (14,042,126 samples, 0.14%)</title><rect x="45.5452%" y="901" width="0.1397%" height="15" fill="rgb(232,86,5)" fg:x="4578736085" fg:w="14042126"/><text x="45.7952%" y="911.50"></text></g><g><title>&lt;tower::util::boxed_clone_sync::BoxCloneSyncService&lt;T,U,E&gt; as tower_service::Service&lt;T&gt;&gt;::poll_ready (52,156,468 samples, 0.52%)</title><rect x="45.1861%" y="997" width="0.5188%" height="15" fill="rgb(224,175,18)" fg:x="4542627761" fg:w="52156468"/><text x="45.4361%" y="1007.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;S&gt; as tower_service::Service&lt;Request&gt;&gt;::poll_ready (52,156,468 samples, 0.52%)</title><rect x="45.1861%" y="981" width="0.5188%" height="15" fill="rgb(220,129,12)" fg:x="4542627761" fg:w="52156468"/><text x="45.4361%" y="991.50"></text></g><g><title>&lt;tower::util::map_future::MapFuture&lt;S,F&gt; as tower_service::Service&lt;R&gt;&gt;::poll_ready (2,006,018 samples, 0.02%)</title><rect x="45.6849%" y="965" width="0.0200%" height="15" fill="rgb(210,19,36)" fg:x="4592778211" fg:w="2006018"/><text x="45.9349%" y="975.50"></text></g><g><title>&lt;tower::util::map_response::MapResponse&lt;S,F&gt; as tower_service::Service&lt;Request&gt;&gt;::poll_ready (2,006,018 samples, 0.02%)</title><rect x="45.6849%" y="949" width="0.0200%" height="15" fill="rgb(219,96,14)" fg:x="4592778211" fg:w="2006018"/><text x="45.9349%" y="959.50"></text></g><g><title>&lt;tower::util::map_err::MapErr&lt;S,F&gt; as tower_service::Service&lt;Request&gt;&gt;::poll_ready (2,006,018 samples, 0.02%)</title><rect x="45.6849%" y="933" width="0.0200%" height="15" fill="rgb(249,106,1)" fg:x="4592778211" fg:w="2006018"/><text x="45.9349%" y="943.50"></text></g><g><title>&lt;tower::util::map_response::MapResponse&lt;S,F&gt; as tower_service::Service&lt;Request&gt;&gt;::poll_ready (2,006,018 samples, 0.02%)</title><rect x="45.6849%" y="917" width="0.0200%" height="15" fill="rgb(249,155,20)" fg:x="4592778211" fg:w="2006018"/><text x="45.9349%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (4,012,036 samples, 0.04%)</title><rect x="45.7049%" y="997" width="0.0399%" height="15" fill="rgb(244,168,9)" fg:x="4594784229" fg:w="4012036"/><text x="45.9549%" y="1007.50"></text></g><g><title>__memcpy_evex_unaligned_erms (2,006,018 samples, 0.02%)</title><rect x="45.7248%" y="981" width="0.0200%" height="15" fill="rgb(216,23,50)" fg:x="4596790247" fg:w="2006018"/><text x="45.9748%" y="991.50"></text></g><g><title>__free (10,030,090 samples, 0.10%)</title><rect x="45.7647%" y="981" width="0.0998%" height="15" fill="rgb(224,219,20)" fg:x="4600802283" fg:w="10030090"/><text x="46.0147%" y="991.50"></text></g><g><title>_int_free (2,006,018 samples, 0.02%)</title><rect x="45.8446%" y="965" width="0.0200%" height="15" fill="rgb(222,156,15)" fg:x="4608826355" fg:w="2006018"/><text x="46.0946%" y="975.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,012,036 samples, 0.04%)</title><rect x="45.9443%" y="933" width="0.0399%" height="15" fill="rgb(231,97,17)" fg:x="4618856445" fg:w="4012036"/><text x="46.1943%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;+core::marker::Send&gt;&gt;&gt; (10,030,090 samples, 0.10%)</title><rect x="45.9443%" y="965" width="0.0998%" height="15" fill="rgb(218,70,48)" fg:x="4618856445" fg:w="10030090"/><text x="46.1943%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;+core::marker::Send&gt;&gt; (10,030,090 samples, 0.10%)</title><rect x="45.9443%" y="949" width="0.0998%" height="15" fill="rgb(212,196,52)" fg:x="4618856445" fg:w="10030090"/><text x="46.1943%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::map_response::MapResponseFuture&lt;tower::util::map_err::MapErrFuture&lt;tower::util::map_response::MapResponseFuture&lt;tower::limit::concurrency::future::ResponseFuture&lt;axum::routing::route::RouteFuture&lt;core::convert::Infallible&gt;&gt;,&lt;http::response::Response&lt;axum_core::body::Body&gt; as axum_core::response::into_response::IntoResponse&gt;::into_response&gt;,&lt;core::convert::Infallible as core::convert::Into&lt;core::convert::Infallible&gt;&gt;::into&gt;,&lt;http::response::Response&lt;axum_core::body::Body&gt; as axum_core::response::into_response::IntoResponse&gt;::into_response&gt;&gt; (6,018,054 samples, 0.06%)</title><rect x="45.9842%" y="933" width="0.0599%" height="15" fill="rgb(243,203,18)" fg:x="4622868481" fg:w="6018054"/><text x="46.2342%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::future::try_future::MapOk&lt;tower::util::map_err::MapErrFuture&lt;tower::util::map_response::MapResponseFuture&lt;tower::limit::concurrency::future::ResponseFuture&lt;axum::routing::route::RouteFuture&lt;core::convert::Infallible&gt;&gt;,&lt;http::response::Response&lt;axum_core::body::Body&gt; as axum_core::response::into_response::IntoResponse&gt;::into_response&gt;,&lt;core::convert::Infallible as core::convert::Into&lt;core::convert::Infallible&gt;&gt;::into&gt;,&lt;http::response::Response&lt;axum_core::body::Body&gt; as axum_core::response::into_response::IntoResponse&gt;::into_response&gt;&gt; (5,015,045 samples, 0.05%)</title><rect x="45.9942%" y="917" width="0.0499%" height="15" fill="rgb(252,125,41)" fg:x="4623871490" fg:w="5015045"/><text x="46.2442%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::future::future::Map&lt;futures_util::future::try_future::into_future::IntoFuture&lt;tower::util::map_err::MapErrFuture&lt;tower::util::map_response::MapResponseFuture&lt;tower::limit::concurrency::future::ResponseFuture&lt;axum::routing::route::RouteFuture&lt;core::convert::Infallible&gt;&gt;,&lt;http::response::Response&lt;axum_core::body::Body&gt; as axum_core::response::into_response::IntoResponse&gt;::into_response&gt;,&lt;core::convert::Infallible as core::convert::Into&lt;core::convert::Infallible&gt;&gt;::into&gt;&gt;,futures_util::fns::MapOkFn&lt;&lt;http::response::Response&lt;axum_core::body::Body&gt; as axum_core::response::into_response::IntoResponse&gt;::into_response&gt;&gt;&gt; (5,015,045 samples, 0.05%)</title><rect x="45.9942%" y="901" width="0.0499%" height="15" fill="rgb(223,180,33)" fg:x="4623871490" fg:w="5015045"/><text x="46.2442%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::future::future::map::Map&lt;futures_util::future::try_future::into_future::IntoFuture&lt;tower::util::map_err::MapErrFuture&lt;tower::util::map_response::MapResponseFuture&lt;tower::limit::concurrency::future::ResponseFuture&lt;axum::routing::route::RouteFuture&lt;core::convert::Infallible&gt;&gt;,&lt;http::response::Response&lt;axum_core::body::Body&gt; as axum_core::response::into_response::IntoResponse&gt;::into_response&gt;,&lt;core::convert::Infallible as core::convert::Into&lt;core::convert::Infallible&gt;&gt;::into&gt;&gt;,futures_util::fns::MapOkFn&lt;&lt;http::response::Response&lt;axum_core::body::Body&gt; as axum_core::response::into_response::IntoResponse&gt;::into_response&gt;&gt;&gt; (5,015,045 samples, 0.05%)</title><rect x="45.9942%" y="885" width="0.0499%" height="15" fill="rgb(254,159,46)" fg:x="4623871490" fg:w="5015045"/><text x="46.2442%" y="895.50"></text></g><g><title>__free (8,024,072 samples, 0.08%)</title><rect x="46.0541%" y="885" width="0.0798%" height="15" fill="rgb(254,38,10)" fg:x="4629889544" fg:w="8024072"/><text x="46.3041%" y="895.50"></text></g><g><title>_int_free (2,006,018 samples, 0.02%)</title><rect x="46.1139%" y="869" width="0.0200%" height="15" fill="rgb(208,217,32)" fg:x="4635907598" fg:w="2006018"/><text x="46.3639%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10,030,090 samples, 0.10%)</title><rect x="46.0441%" y="933" width="0.0998%" height="15" fill="rgb(221,120,13)" fg:x="4628886535" fg:w="10030090"/><text x="46.2941%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9,027,081 samples, 0.09%)</title><rect x="46.0541%" y="917" width="0.0898%" height="15" fill="rgb(246,54,52)" fg:x="4629889544" fg:w="9027081"/><text x="46.3041%" y="927.50"></text></g><g><title>alloc::alloc::dealloc (9,027,081 samples, 0.09%)</title><rect x="46.0541%" y="901" width="0.0898%" height="15" fill="rgb(242,34,25)" fg:x="4629889544" fg:w="9027081"/><text x="46.3041%" y="911.50"></text></g><g><title>__free (14,042,126 samples, 0.14%)</title><rect x="46.2137%" y="757" width="0.1397%" height="15" fill="rgb(247,209,9)" fg:x="4645937688" fg:w="14042126"/><text x="46.4637%" y="767.50"></text></g><g><title>_int_free (4,012,036 samples, 0.04%)</title><rect x="46.3135%" y="741" width="0.0399%" height="15" fill="rgb(228,71,26)" fg:x="4655967778" fg:w="4012036"/><text x="46.5635%" y="751.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15,045,135 samples, 0.15%)</title><rect x="46.2137%" y="805" width="0.1497%" height="15" fill="rgb(222,145,49)" fg:x="4645937688" fg:w="15045135"/><text x="46.4637%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15,045,135 samples, 0.15%)</title><rect x="46.2137%" y="789" width="0.1497%" height="15" fill="rgb(218,121,17)" fg:x="4645937688" fg:w="15045135"/><text x="46.4637%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (15,045,135 samples, 0.15%)</title><rect x="46.2137%" y="773" width="0.1497%" height="15" fill="rgb(244,50,7)" fg:x="4645937688" fg:w="15045135"/><text x="46.4637%" y="783.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (2,006,018 samples, 0.02%)</title><rect x="46.4631%" y="709" width="0.0200%" height="15" fill="rgb(246,229,37)" fg:x="4671012913" fg:w="2006018"/><text x="46.7131%" y="719.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (2,006,018 samples, 0.02%)</title><rect x="46.4631%" y="693" width="0.0200%" height="15" fill="rgb(225,18,5)" fg:x="4671012913" fg:w="2006018"/><text x="46.7131%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::routing::route::Route&gt; (28,084,252 samples, 0.28%)</title><rect x="46.2137%" y="853" width="0.2794%" height="15" fill="rgb(213,204,8)" fg:x="4645937688" fg:w="28084252"/><text x="46.4637%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::boxed_clone_sync::BoxCloneSyncService&lt;http::request::Request&lt;axum_core::body::Body&gt;,http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;&gt; (28,084,252 samples, 0.28%)</title><rect x="46.2137%" y="837" width="0.2794%" height="15" fill="rgb(238,103,6)" fg:x="4645937688" fg:w="28084252"/><text x="46.4637%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn tower::util::boxed_clone_sync::CloneService&lt;http::request::Request&lt;axum_core::body::Body&gt;&gt;+Response = http::response::Response&lt;axum_core::body::Body&gt;+Error = core::convert::Infallible+Future = core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;+core::marker::Send&gt;&gt;+core::marker::Send+core::marker::Sync&gt;&gt; (28,084,252 samples, 0.28%)</title><rect x="46.2137%" y="821" width="0.2794%" height="15" fill="rgb(222,25,35)" fg:x="4645937688" fg:w="28084252"/><text x="46.4637%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::map_future::MapFuture&lt;tower::util::map_response::MapResponse&lt;axum::handler::service::HandlerService&lt;interview::main::{{closure}}::{{closure}},(axum_core::extract::private::ViaParts,axum::extract::path::Path&lt;alloc::string::String&gt;,axum::extract::state::State&lt;interview::AppState&gt;),interview::AppState&gt;,&lt;http::response::Response&lt;axum_core::body::Body&gt; as axum_core::response::into_response::IntoResponse&gt;::into_response&gt;,tower::util::boxed_clone_sync::BoxCloneSyncService&lt;http::request::Request&lt;axum_core::body::Body&gt;,http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;::new&lt;tower::util::map_response::MapResponse&lt;axum::handler::service::HandlerService&lt;interview::main::{{closure}}::{{closure}},(axum_core::extract::private::ViaParts,axum::extract::path::Path&lt;alloc::string::String&gt;,axum::extract::state::State&lt;interview::AppState&gt;),interview::AppState&gt;,&lt;http::response::Response&lt;axum_core::body::Body&gt; as axum_core::response::into_response::IntoResponse&gt;::into_response&gt;&gt;::{{closure}}&gt;&gt; (13,039,117 samples, 0.13%)</title><rect x="46.3634%" y="805" width="0.1297%" height="15" fill="rgb(213,203,35)" fg:x="4660982823" fg:w="13039117"/><text x="46.6134%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::map_response::MapResponse&lt;axum::handler::service::HandlerService&lt;interview::main::{{closure}}::{{closure}},(axum_core::extract::private::ViaParts,axum::extract::path::Path&lt;alloc::string::String&gt;,axum::extract::state::State&lt;interview::AppState&gt;),interview::AppState&gt;,&lt;http::response::Response&lt;axum_core::body::Body&gt; as axum_core::response::into_response::IntoResponse&gt;::into_response&gt;&gt; (13,039,117 samples, 0.13%)</title><rect x="46.3634%" y="789" width="0.1297%" height="15" fill="rgb(221,79,53)" fg:x="4660982823" fg:w="13039117"/><text x="46.6134%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::handler::service::HandlerService&lt;interview::main::{{closure}}::{{closure}},(axum_core::extract::private::ViaParts,axum::extract::path::Path&lt;alloc::string::String&gt;,axum::extract::state::State&lt;interview::AppState&gt;),interview::AppState&gt;&gt; (13,039,117 samples, 0.13%)</title><rect x="46.3634%" y="773" width="0.1297%" height="15" fill="rgb(243,200,35)" fg:x="4660982823" fg:w="13039117"/><text x="46.6134%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;interview::AppState&gt; (13,039,117 samples, 0.13%)</title><rect x="46.3634%" y="757" width="0.1297%" height="15" fill="rgb(248,60,25)" fg:x="4660982823" fg:w="13039117"/><text x="46.6134%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;papaya::map::HashMap&lt;alloc::string::String,alloc::string::String&gt;&gt;&gt; (13,039,117 samples, 0.13%)</title><rect x="46.3634%" y="741" width="0.1297%" height="15" fill="rgb(227,53,46)" fg:x="4660982823" fg:w="13039117"/><text x="46.6134%" y="751.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13,039,117 samples, 0.13%)</title><rect x="46.3634%" y="725" width="0.1297%" height="15" fill="rgb(216,120,32)" fg:x="4660982823" fg:w="13039117"/><text x="46.6134%" y="735.50"></text></g><g><title>&lt;tower::util::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (1,985,957,820 samples, 19.75%)</title><rect x="26.8083%" y="1013" width="19.7546%" height="15" fill="rgb(220,134,1)" fg:x="2695085183" fg:w="1985957820"/><text x="27.0583%" y="1023.50">&lt;tower::util::oneshot::Oneshot&lt;..</text></g><g><title>core::pin::Pin&lt;Ptr&gt;::set (82,246,738 samples, 0.82%)</title><rect x="45.7448%" y="997" width="0.8181%" height="15" fill="rgb(237,168,5)" fg:x="4598796265" fg:w="82246738"/><text x="45.9948%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::oneshot::State&lt;tower::util::boxed_clone_sync::BoxCloneSyncService&lt;http::request::Request&lt;axum_core::body::Body&gt;,http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;,http::request::Request&lt;axum_core::body::Body&gt;&gt;&gt; (70,210,630 samples, 0.70%)</title><rect x="45.8645%" y="981" width="0.6984%" height="15" fill="rgb(231,100,33)" fg:x="4610832373" fg:w="70210630"/><text x="46.1145%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::boxed_clone_sync::BoxCloneSyncService&lt;http::request::Request&lt;axum_core::body::Body&gt;,http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;&gt; (52,156,468 samples, 0.52%)</title><rect x="46.0441%" y="965" width="0.5188%" height="15" fill="rgb(236,177,47)" fg:x="4628886535" fg:w="52156468"/><text x="46.2941%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn tower::util::boxed_clone_sync::CloneService&lt;http::request::Request&lt;axum_core::body::Body&gt;&gt;+Response = http::response::Response&lt;axum_core::body::Body&gt;+Error = core::convert::Infallible+Future = core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;+core::marker::Send&gt;&gt;+core::marker::Send+core::marker::Sync&gt;&gt; (52,156,468 samples, 0.52%)</title><rect x="46.0441%" y="949" width="0.5188%" height="15" fill="rgb(235,7,49)" fg:x="4628886535" fg:w="52156468"/><text x="46.2941%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::map_future::MapFuture&lt;tower::util::map_response::MapResponse&lt;tower::util::map_err::MapErr&lt;tower::util::map_response::MapResponse&lt;tower::limit::concurrency::service::ConcurrencyLimit&lt;axum::routing::route::Route&gt;,&lt;http::response::Response&lt;axum_core::body::Body&gt; as axum_core::response::into_response::IntoResponse&gt;::into_response&gt;,&lt;core::convert::Infallible as core::convert::Into&lt;core::convert::Infallible&gt;&gt;::into&gt;,&lt;http::response::Response&lt;axum_core::body::Body&gt; as axum_core::response::into_response::IntoResponse&gt;::into_response&gt;,tower::util::boxed_clone_sync::BoxCloneSyncService&lt;http::request::Request&lt;axum_core::body::Body&gt;,http::response::Response&lt;axum_core::body::Body&gt;,core::convert::Infallible&gt;::new&lt;tower::util::map_response::MapResponse&lt;tower::util::map_err::MapErr&lt;tower::util::map_response::MapResponse&lt;tower::limit::concurrency::service::ConcurrencyLimit&lt;axum::routing::route::Route&gt;,&lt;http::response::Response&lt;axum_core::body::Body&gt; as axum_core::response::into_response::IntoResponse&gt;::into_response&gt;,&lt;core::convert::Infallible as core::convert::Into&lt;core::convert::Infallible&gt;&gt;::into&gt;,&lt;http::response::Response&lt;axum_core::body::Body&gt; as axum_core::response::into_response::IntoResponse&gt;::into_response&gt;&gt;::{{closure}}&gt;&gt; (42,126,378 samples, 0.42%)</title><rect x="46.1439%" y="933" width="0.4190%" height="15" fill="rgb(232,119,22)" fg:x="4638916625" fg:w="42126378"/><text x="46.3939%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::map_response::MapResponse&lt;tower::util::map_err::MapErr&lt;tower::util::map_response::MapResponse&lt;tower::limit::concurrency::service::ConcurrencyLimit&lt;axum::routing::route::Route&gt;,&lt;http::response::Response&lt;axum_core::body::Body&gt; as axum_core::response::into_response::IntoResponse&gt;::into_response&gt;,&lt;core::convert::Infallible as core::convert::Into&lt;core::convert::Infallible&gt;&gt;::into&gt;,&lt;http::response::Response&lt;axum_core::body::Body&gt; as axum_core::response::into_response::IntoResponse&gt;::into_response&gt;&gt; (35,105,315 samples, 0.35%)</title><rect x="46.2137%" y="917" width="0.3492%" height="15" fill="rgb(254,73,53)" fg:x="4645937688" fg:w="35105315"/><text x="46.4637%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::map_err::MapErr&lt;tower::util::map_response::MapResponse&lt;tower::limit::concurrency::service::ConcurrencyLimit&lt;axum::routing::route::Route&gt;,&lt;http::response::Response&lt;axum_core::body::Body&gt; as axum_core::response::into_response::IntoResponse&gt;::into_response&gt;,&lt;core::convert::Infallible as core::convert::Into&lt;core::convert::Infallible&gt;&gt;::into&gt;&gt; (35,105,315 samples, 0.35%)</title><rect x="46.2137%" y="901" width="0.3492%" height="15" fill="rgb(251,35,20)" fg:x="4645937688" fg:w="35105315"/><text x="46.4637%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::map_response::MapResponse&lt;tower::limit::concurrency::service::ConcurrencyLimit&lt;axum::routing::route::Route&gt;,&lt;http::response::Response&lt;axum_core::body::Body&gt; as axum_core::response::into_response::IntoResponse&gt;::into_response&gt;&gt; (35,105,315 samples, 0.35%)</title><rect x="46.2137%" y="885" width="0.3492%" height="15" fill="rgb(241,119,20)" fg:x="4645937688" fg:w="35105315"/><text x="46.4637%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::limit::concurrency::service::ConcurrencyLimit&lt;axum::routing::route::Route&gt;&gt; (35,105,315 samples, 0.35%)</title><rect x="46.2137%" y="869" width="0.3492%" height="15" fill="rgb(207,102,14)" fg:x="4645937688" fg:w="35105315"/><text x="46.4637%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio_util::sync::poll_semaphore::PollSemaphore&gt; (7,021,063 samples, 0.07%)</title><rect x="46.4931%" y="853" width="0.0698%" height="15" fill="rgb(248,201,50)" fg:x="4674021940" fg:w="7021063"/><text x="46.7431%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::sync::semaphore::Semaphore&gt;&gt; (3,009,027 samples, 0.03%)</title><rect x="46.5330%" y="837" width="0.0299%" height="15" fill="rgb(222,185,44)" fg:x="4678033976" fg:w="3009027"/><text x="46.7830%" y="847.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,009,027 samples, 0.03%)</title><rect x="46.5330%" y="821" width="0.0299%" height="15" fill="rgb(218,107,18)" fg:x="4678033976" fg:w="3009027"/><text x="46.7830%" y="831.50"></text></g><g><title>axum::routing::route::set_allow_header (3,009,027 samples, 0.03%)</title><rect x="46.5629%" y="1013" width="0.0299%" height="15" fill="rgb(237,177,39)" fg:x="4681043003" fg:w="3009027"/><text x="46.8129%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (3,009,027 samples, 0.03%)</title><rect x="46.5629%" y="997" width="0.0299%" height="15" fill="rgb(246,69,6)" fg:x="4681043003" fg:w="3009027"/><text x="46.8129%" y="1007.50"></text></g><g><title>core::mem::replace (3,009,027 samples, 0.03%)</title><rect x="46.5629%" y="981" width="0.0299%" height="15" fill="rgb(234,208,37)" fg:x="4681043003" fg:w="3009027"/><text x="46.8129%" y="991.50"></text></g><g><title>core::ptr::read (3,009,027 samples, 0.03%)</title><rect x="46.5629%" y="965" width="0.0299%" height="15" fill="rgb(225,4,6)" fg:x="4681043003" fg:w="3009027"/><text x="46.8129%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::is_empty (5,015,045 samples, 0.05%)</title><rect x="46.7724%" y="949" width="0.0499%" height="15" fill="rgb(233,45,0)" fg:x="4702106192" fg:w="5015045"/><text x="47.0224%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (5,015,045 samples, 0.05%)</title><rect x="46.7724%" y="933" width="0.0499%" height="15" fill="rgb(226,136,5)" fg:x="4702106192" fg:w="5015045"/><text x="47.0224%" y="943.50"></text></g><g><title>&lt;http::header::name::HeaderName as http::header::map::as_header_name::Sealed&gt;::find (11,033,099 samples, 0.11%)</title><rect x="46.7425%" y="981" width="0.1097%" height="15" fill="rgb(211,91,47)" fg:x="4699097165" fg:w="11033099"/><text x="46.9925%" y="991.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::find (11,033,099 samples, 0.11%)</title><rect x="46.7425%" y="965" width="0.1097%" height="15" fill="rgb(242,88,51)" fg:x="4699097165" fg:w="11033099"/><text x="46.9925%" y="975.50"></text></g><g><title>http::header::map::hash_elem_using (2,006,018 samples, 0.02%)</title><rect x="46.8323%" y="949" width="0.0200%" height="15" fill="rgb(230,91,28)" fg:x="4708124246" fg:w="2006018"/><text x="47.0823%" y="959.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::contains_key (13,039,117 samples, 0.13%)</title><rect x="46.7425%" y="997" width="0.1297%" height="15" fill="rgb(254,186,29)" fg:x="4699097165" fg:w="13039117"/><text x="46.9925%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::name::HeaderName&gt; (2,006,018 samples, 0.02%)</title><rect x="46.8522%" y="981" width="0.0200%" height="15" fill="rgb(238,6,4)" fg:x="4710130264" fg:w="2006018"/><text x="47.1022%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::name::Repr&lt;http::header::name::Custom&gt;&gt; (2,006,018 samples, 0.02%)</title><rect x="46.8522%" y="965" width="0.0200%" height="15" fill="rgb(221,151,16)" fg:x="4710130264" fg:w="2006018"/><text x="47.1022%" y="975.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (8,024,072 samples, 0.08%)</title><rect x="46.8722%" y="981" width="0.0798%" height="15" fill="rgb(251,143,52)" fg:x="4712136282" fg:w="8024072"/><text x="47.1222%" y="991.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_insert_entry (10,030,090 samples, 0.10%)</title><rect x="47.0019%" y="933" width="0.0998%" height="15" fill="rgb(206,90,15)" fg:x="4725175399" fg:w="10030090"/><text x="47.2519%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6,018,054 samples, 0.06%)</title><rect x="47.0418%" y="917" width="0.0599%" height="15" fill="rgb(218,35,8)" fg:x="4729187435" fg:w="6018054"/><text x="47.2918%" y="927.50"></text></g><g><title>core::ptr::write (5,015,045 samples, 0.05%)</title><rect x="47.0518%" y="901" width="0.0499%" height="15" fill="rgb(239,215,6)" fg:x="4730190444" fg:w="5015045"/><text x="47.3018%" y="911.50"></text></g><g><title>__GI___libc_malloc (3,009,027 samples, 0.03%)</title><rect x="47.1216%" y="789" width="0.0299%" height="15" fill="rgb(245,116,39)" fg:x="4737211507" fg:w="3009027"/><text x="47.3716%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4,012,036 samples, 0.04%)</title><rect x="47.1216%" y="917" width="0.0399%" height="15" fill="rgb(242,65,28)" fg:x="4737211507" fg:w="4012036"/><text x="47.3716%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4,012,036 samples, 0.04%)</title><rect x="47.1216%" y="901" width="0.0399%" height="15" fill="rgb(252,132,53)" fg:x="4737211507" fg:w="4012036"/><text x="47.3716%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4,012,036 samples, 0.04%)</title><rect x="47.1216%" y="885" width="0.0399%" height="15" fill="rgb(224,159,50)" fg:x="4737211507" fg:w="4012036"/><text x="47.3716%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (4,012,036 samples, 0.04%)</title><rect x="47.1216%" y="869" width="0.0399%" height="15" fill="rgb(224,93,4)" fg:x="4737211507" fg:w="4012036"/><text x="47.3716%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (4,012,036 samples, 0.04%)</title><rect x="47.1216%" y="853" width="0.0399%" height="15" fill="rgb(208,81,34)" fg:x="4737211507" fg:w="4012036"/><text x="47.3716%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4,012,036 samples, 0.04%)</title><rect x="47.1216%" y="837" width="0.0399%" height="15" fill="rgb(233,92,54)" fg:x="4737211507" fg:w="4012036"/><text x="47.3716%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4,012,036 samples, 0.04%)</title><rect x="47.1216%" y="821" width="0.0399%" height="15" fill="rgb(237,21,14)" fg:x="4737211507" fg:w="4012036"/><text x="47.3716%" y="831.50"></text></g><g><title>alloc::alloc::alloc (4,012,036 samples, 0.04%)</title><rect x="47.1216%" y="805" width="0.0399%" height="15" fill="rgb(249,128,51)" fg:x="4737211507" fg:w="4012036"/><text x="47.3716%" y="815.50"></text></g><g><title>alloc::vec::from_elem (7,021,063 samples, 0.07%)</title><rect x="47.1615%" y="917" width="0.0698%" height="15" fill="rgb(223,129,24)" fg:x="4741223543" fg:w="7021063"/><text x="47.4115%" y="927.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (7,021,063 samples, 0.07%)</title><rect x="47.1615%" y="901" width="0.0698%" height="15" fill="rgb(231,168,25)" fg:x="4741223543" fg:w="7021063"/><text x="47.4115%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7,021,063 samples, 0.07%)</title><rect x="47.1615%" y="885" width="0.0698%" height="15" fill="rgb(224,39,20)" fg:x="4741223543" fg:w="7021063"/><text x="47.4115%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7,021,063 samples, 0.07%)</title><rect x="47.1615%" y="869" width="0.0698%" height="15" fill="rgb(225,152,53)" fg:x="4741223543" fg:w="7021063"/><text x="47.4115%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (7,021,063 samples, 0.07%)</title><rect x="47.1615%" y="853" width="0.0698%" height="15" fill="rgb(252,17,24)" fg:x="4741223543" fg:w="7021063"/><text x="47.4115%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (7,021,063 samples, 0.07%)</title><rect x="47.1615%" y="837" width="0.0698%" height="15" fill="rgb(250,114,30)" fg:x="4741223543" fg:w="7021063"/><text x="47.4115%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7,021,063 samples, 0.07%)</title><rect x="47.1615%" y="821" width="0.0698%" height="15" fill="rgb(229,5,4)" fg:x="4741223543" fg:w="7021063"/><text x="47.4115%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7,021,063 samples, 0.07%)</title><rect x="47.1615%" y="805" width="0.0698%" height="15" fill="rgb(225,176,49)" fg:x="4741223543" fg:w="7021063"/><text x="47.4115%" y="815.50"></text></g><g><title>alloc::alloc::alloc (7,021,063 samples, 0.07%)</title><rect x="47.1615%" y="789" width="0.0698%" height="15" fill="rgb(224,221,49)" fg:x="4741223543" fg:w="7021063"/><text x="47.4115%" y="799.50"></text></g><g><title>__GI___libc_malloc (6,018,054 samples, 0.06%)</title><rect x="47.1715%" y="773" width="0.0599%" height="15" fill="rgb(253,169,27)" fg:x="4742226552" fg:w="6018054"/><text x="47.4215%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (3,009,027 samples, 0.03%)</title><rect x="47.2314%" y="885" width="0.0299%" height="15" fill="rgb(211,206,16)" fg:x="4748244606" fg:w="3009027"/><text x="47.4814%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (3,009,027 samples, 0.03%)</title><rect x="47.2314%" y="869" width="0.0299%" height="15" fill="rgb(244,87,35)" fg:x="4748244606" fg:w="3009027"/><text x="47.4814%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (3,009,027 samples, 0.03%)</title><rect x="47.2314%" y="853" width="0.0299%" height="15" fill="rgb(246,28,10)" fg:x="4748244606" fg:w="3009027"/><text x="47.4814%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (3,009,027 samples, 0.03%)</title><rect x="47.2314%" y="837" width="0.0299%" height="15" fill="rgb(229,12,44)" fg:x="4748244606" fg:w="3009027"/><text x="47.4814%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;http::header::map::Bucket&lt;http::header::value::HeaderValue&gt;&gt;&gt; (6,018,054 samples, 0.06%)</title><rect x="47.2314%" y="917" width="0.0599%" height="15" fill="rgb(210,145,37)" fg:x="4748244606" fg:w="6018054"/><text x="47.4814%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,018,054 samples, 0.06%)</title><rect x="47.2314%" y="901" width="0.0599%" height="15" fill="rgb(227,112,52)" fg:x="4748244606" fg:w="6018054"/><text x="47.4814%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;[http::header::map::Bucket&lt;http::header::value::HeaderValue&gt;]&gt; (3,009,027 samples, 0.03%)</title><rect x="47.2613%" y="885" width="0.0299%" height="15" fill="rgb(238,155,34)" fg:x="4751253633" fg:w="3009027"/><text x="47.5113%" y="895.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_reserve_one (20,060,180 samples, 0.20%)</title><rect x="47.1017%" y="933" width="0.1995%" height="15" fill="rgb(239,226,36)" fg:x="4735205489" fg:w="20060180"/><text x="47.3517%" y="943.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::insert (50,150,450 samples, 0.50%)</title><rect x="46.8722%" y="997" width="0.4989%" height="15" fill="rgb(230,16,23)" fg:x="4712136282" fg:w="50150450"/><text x="47.1222%" y="1007.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_insert (42,126,378 samples, 0.42%)</title><rect x="46.9520%" y="981" width="0.4190%" height="15" fill="rgb(236,171,36)" fg:x="4720160354" fg:w="42126378"/><text x="47.2020%" y="991.50"></text></g><g><title>&lt;http::header::name::HeaderName as http::header::map::into_header_name::Sealed&gt;::try_insert (42,126,378 samples, 0.42%)</title><rect x="46.9520%" y="965" width="0.4190%" height="15" fill="rgb(221,22,14)" fg:x="4720160354" fg:w="42126378"/><text x="47.2020%" y="975.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_insert2 (39,117,351 samples, 0.39%)</title><rect x="46.9819%" y="949" width="0.3891%" height="15" fill="rgb(242,43,11)" fg:x="4723169381" fg:w="39117351"/><text x="47.2319%" y="959.50"></text></g><g><title>http::header::map::hash_elem_using (6,018,054 samples, 0.06%)</title><rect x="47.3112%" y="933" width="0.0599%" height="15" fill="rgb(232,69,23)" fg:x="4756268678" fg:w="6018054"/><text x="47.5612%" y="943.50"></text></g><g><title>&lt;http::header::name::HeaderName as core::hash::Hash&gt;::hash (3,009,027 samples, 0.03%)</title><rect x="47.3411%" y="917" width="0.0299%" height="15" fill="rgb(216,180,54)" fg:x="4759277705" fg:w="3009027"/><text x="47.5911%" y="927.50"></text></g><g><title>&lt;http::header::name::Repr&lt;T&gt; as core::hash::Hash&gt;::hash (3,009,027 samples, 0.03%)</title><rect x="47.3411%" y="901" width="0.0299%" height="15" fill="rgb(216,5,24)" fg:x="4759277705" fg:w="3009027"/><text x="47.5911%" y="911.50"></text></g><g><title>&lt;http::header::name::StandardHeader as core::hash::Hash&gt;::hash (2,006,018 samples, 0.02%)</title><rect x="47.3511%" y="885" width="0.0200%" height="15" fill="rgb(225,89,9)" fg:x="4760280714" fg:w="2006018"/><text x="47.6011%" y="895.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (2,006,018 samples, 0.02%)</title><rect x="47.3511%" y="869" width="0.0200%" height="15" fill="rgb(243,75,33)" fg:x="4760280714" fg:w="2006018"/><text x="47.6011%" y="879.50"></text></g><g><title>core::hash::Hasher::write_isize (2,006,018 samples, 0.02%)</title><rect x="47.3511%" y="853" width="0.0200%" height="15" fill="rgb(247,141,45)" fg:x="4760280714" fg:w="2006018"/><text x="47.6011%" y="863.50"></text></g><g><title>core::hash::Hasher::write_usize (2,006,018 samples, 0.02%)</title><rect x="47.3511%" y="837" width="0.0200%" height="15" fill="rgb(232,177,36)" fg:x="4760280714" fg:w="2006018"/><text x="47.6011%" y="847.50"></text></g><g><title>&lt;fnv::FnvHasher as core::hash::Hasher&gt;::write (2,006,018 samples, 0.02%)</title><rect x="47.3511%" y="821" width="0.0200%" height="15" fill="rgb(219,125,36)" fg:x="4760280714" fg:w="2006018"/><text x="47.6011%" y="831.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3,009,027 samples, 0.03%)</title><rect x="47.4010%" y="933" width="0.0299%" height="15" fill="rgb(227,94,9)" fg:x="4765295759" fg:w="3009027"/><text x="47.6510%" y="943.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (3,009,027 samples, 0.03%)</title><rect x="47.4010%" y="917" width="0.0299%" height="15" fill="rgb(240,34,52)" fg:x="4765295759" fg:w="3009027"/><text x="47.6510%" y="927.50"></text></g><g><title>http::header::value::HeaderValue::from_str (8,024,072 samples, 0.08%)</title><rect x="47.3710%" y="997" width="0.0798%" height="15" fill="rgb(216,45,12)" fg:x="4762286732" fg:w="8024072"/><text x="47.6210%" y="1007.50"></text></g><g><title>http::header::value::HeaderValue::try_from_generic (8,024,072 samples, 0.08%)</title><rect x="47.3710%" y="981" width="0.0798%" height="15" fill="rgb(246,21,19)" fg:x="4762286732" fg:w="8024072"/><text x="47.6210%" y="991.50"></text></g><g><title>http::header::value::HeaderValue::from_str::{{closure}} (7,021,063 samples, 0.07%)</title><rect x="47.3810%" y="965" width="0.0698%" height="15" fill="rgb(213,98,42)" fg:x="4763289741" fg:w="7021063"/><text x="47.6310%" y="975.50"></text></g><g><title>bytes::bytes::Bytes::copy_from_slice (7,021,063 samples, 0.07%)</title><rect x="47.3810%" y="949" width="0.0698%" height="15" fill="rgb(250,136,47)" fg:x="4763289741" fg:w="7021063"/><text x="47.6310%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2,006,018 samples, 0.02%)</title><rect x="47.4309%" y="933" width="0.0200%" height="15" fill="rgb(251,124,27)" fg:x="4768304786" fg:w="2006018"/><text x="47.6809%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,006,018 samples, 0.02%)</title><rect x="47.4309%" y="917" width="0.0200%" height="15" fill="rgb(229,180,14)" fg:x="4768304786" fg:w="2006018"/><text x="47.6809%" y="927.50"></text></g><g><title>alloc::slice::hack::to_vec (2,006,018 samples, 0.02%)</title><rect x="47.4309%" y="901" width="0.0200%" height="15" fill="rgb(245,216,25)" fg:x="4768304786" fg:w="2006018"/><text x="47.6809%" y="911.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,006,018 samples, 0.02%)</title><rect x="47.4309%" y="885" width="0.0200%" height="15" fill="rgb(251,43,5)" fg:x="4768304786" fg:w="2006018"/><text x="47.6809%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,006,018 samples, 0.02%)</title><rect x="47.4309%" y="869" width="0.0200%" height="15" fill="rgb(250,128,24)" fg:x="4768304786" fg:w="2006018"/><text x="47.6809%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,006,018 samples, 0.02%)</title><rect x="47.4309%" y="853" width="0.0200%" height="15" fill="rgb(217,117,27)" fg:x="4768304786" fg:w="2006018"/><text x="47.6809%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,006,018 samples, 0.02%)</title><rect x="47.4309%" y="837" width="0.0200%" height="15" fill="rgb(245,147,4)" fg:x="4768304786" fg:w="2006018"/><text x="47.6809%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,006,018 samples, 0.02%)</title><rect x="47.4309%" y="821" width="0.0200%" height="15" fill="rgb(242,201,35)" fg:x="4768304786" fg:w="2006018"/><text x="47.6809%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,006,018 samples, 0.02%)</title><rect x="47.4309%" y="805" width="0.0200%" height="15" fill="rgb(218,181,1)" fg:x="4768304786" fg:w="2006018"/><text x="47.6809%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,006,018 samples, 0.02%)</title><rect x="47.4309%" y="789" width="0.0200%" height="15" fill="rgb(222,6,29)" fg:x="4768304786" fg:w="2006018"/><text x="47.6809%" y="799.50"></text></g><g><title>alloc::alloc::alloc (2,006,018 samples, 0.02%)</title><rect x="47.4309%" y="773" width="0.0200%" height="15" fill="rgb(208,186,3)" fg:x="4768304786" fg:w="2006018"/><text x="47.6809%" y="783.50"></text></g><g><title>__GI___libc_malloc (2,006,018 samples, 0.02%)</title><rect x="47.4309%" y="757" width="0.0200%" height="15" fill="rgb(216,36,26)" fg:x="4768304786" fg:w="2006018"/><text x="47.6809%" y="767.50"></text></g><g><title>&lt;axum::routing::route::RouteFuture&lt;E&gt; as core::future::future::Future&gt;::poll (2,097,291,819 samples, 20.86%)</title><rect x="26.6188%" y="1029" width="20.8620%" height="15" fill="rgb(248,201,23)" fg:x="2676028012" fg:w="2097291819"/><text x="26.8688%" y="1039.50">&lt;axum::routing::route::RouteFutur..</text></g><g><title>axum::routing::route::set_content_length (89,267,801 samples, 0.89%)</title><rect x="46.5928%" y="1013" width="0.8880%" height="15" fill="rgb(251,170,31)" fg:x="4684052030" fg:w="89267801"/><text x="46.8428%" y="1023.50"></text></g><g><title>itoa::Buffer::format (3,009,027 samples, 0.03%)</title><rect x="47.4509%" y="997" width="0.0299%" height="15" fill="rgb(207,110,25)" fg:x="4770310804" fg:w="3009027"/><text x="47.7009%" y="1007.50"></text></g><g><title>itoa::&lt;impl itoa::private::Sealed for u64&gt;::write (3,009,027 samples, 0.03%)</title><rect x="47.4509%" y="981" width="0.0299%" height="15" fill="rgb(250,54,15)" fg:x="4770310804" fg:w="3009027"/><text x="47.7009%" y="991.50"></text></g><g><title>__memcpy_evex_unaligned_erms (5,015,045 samples, 0.05%)</title><rect x="47.5706%" y="981" width="0.0499%" height="15" fill="rgb(227,68,33)" fg:x="4782346912" fg:w="5015045"/><text x="47.8206%" y="991.50"></text></g><g><title>bytes::bytes_mut::increment_shared (14,042,126 samples, 0.14%)</title><rect x="48.0994%" y="885" width="0.1397%" height="15" fill="rgb(238,34,41)" fg:x="4835506389" fg:w="14042126"/><text x="48.3494%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2,006,018 samples, 0.02%)</title><rect x="48.2191%" y="869" width="0.0200%" height="15" fill="rgb(220,11,15)" fg:x="4847542497" fg:w="2006018"/><text x="48.4691%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_add (2,006,018 samples, 0.02%)</title><rect x="48.2191%" y="853" width="0.0200%" height="15" fill="rgb(246,111,35)" fg:x="4847542497" fg:w="2006018"/><text x="48.4691%" y="863.50"></text></g><g><title>&lt;http::uri::authority::Authority as core::clone::Clone&gt;::clone (31,093,279 samples, 0.31%)</title><rect x="48.0096%" y="949" width="0.3093%" height="15" fill="rgb(209,88,53)" fg:x="4826479308" fg:w="31093279"/><text x="48.2596%" y="959.50"></text></g><g><title>&lt;http::byte_str::ByteStr as core::clone::Clone&gt;::clone (31,093,279 samples, 0.31%)</title><rect x="48.0096%" y="933" width="0.3093%" height="15" fill="rgb(231,185,47)" fg:x="4826479308" fg:w="31093279"/><text x="48.2596%" y="943.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (28,084,252 samples, 0.28%)</title><rect x="48.0395%" y="917" width="0.2794%" height="15" fill="rgb(233,154,1)" fg:x="4829488335" fg:w="28084252"/><text x="48.2895%" y="927.50"></text></g><g><title>bytes::bytes_mut::shared_v_clone (22,066,198 samples, 0.22%)</title><rect x="48.0994%" y="901" width="0.2195%" height="15" fill="rgb(225,15,46)" fg:x="4835506389" fg:w="22066198"/><text x="48.3494%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (8,024,072 samples, 0.08%)</title><rect x="48.2391%" y="885" width="0.0798%" height="15" fill="rgb(211,135,41)" fg:x="4849548515" fg:w="8024072"/><text x="48.4891%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_load (8,024,072 samples, 0.08%)</title><rect x="48.2391%" y="869" width="0.0798%" height="15" fill="rgb(208,54,0)" fg:x="4849548515" fg:w="8024072"/><text x="48.4891%" y="879.50"></text></g><g><title>&lt;http::uri::path::PathAndQuery as core::clone::Clone&gt;::clone (6,018,054 samples, 0.06%)</title><rect x="48.3189%" y="949" width="0.0599%" height="15" fill="rgb(244,136,14)" fg:x="4857572587" fg:w="6018054"/><text x="48.5689%" y="959.50"></text></g><g><title>&lt;http::byte_str::ByteStr as core::clone::Clone&gt;::clone (6,018,054 samples, 0.06%)</title><rect x="48.3189%" y="933" width="0.0599%" height="15" fill="rgb(241,56,14)" fg:x="4857572587" fg:w="6018054"/><text x="48.5689%" y="943.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (3,009,027 samples, 0.03%)</title><rect x="48.3488%" y="917" width="0.0299%" height="15" fill="rgb(205,80,24)" fg:x="4860581614" fg:w="3009027"/><text x="48.5988%" y="927.50"></text></g><g><title>bytes::bytes_mut::shared_v_clone (2,006,018 samples, 0.02%)</title><rect x="48.3588%" y="901" width="0.0200%" height="15" fill="rgb(220,57,4)" fg:x="4861584623" fg:w="2006018"/><text x="48.6088%" y="911.50"></text></g><g><title>&lt;http::uri::Uri as core::clone::Clone&gt;::clone (48,144,432 samples, 0.48%)</title><rect x="47.9098%" y="965" width="0.4789%" height="15" fill="rgb(226,193,50)" fg:x="4816449218" fg:w="48144432"/><text x="48.1598%" y="975.50"></text></g><g><title>__memcpy_evex_unaligned_erms (14,042,126 samples, 0.14%)</title><rect x="48.3887%" y="965" width="0.1397%" height="15" fill="rgb(231,168,22)" fg:x="4864593650" fg:w="14042126"/><text x="48.6387%" y="975.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (15,045,135 samples, 0.15%)</title><rect x="48.5783%" y="933" width="0.1497%" height="15" fill="rgb(254,215,14)" fg:x="4883650821" fg:w="15045135"/><text x="48.8283%" y="943.50"></text></g><g><title>axum::extract::matched_path::append_nested_matched_path (16,048,144 samples, 0.16%)</title><rect x="48.5783%" y="949" width="0.1596%" height="15" fill="rgb(211,115,16)" fg:x="4883650821" fg:w="16048144"/><text x="48.8283%" y="959.50"></text></g><g><title>__GI___libc_malloc (12,036,108 samples, 0.12%)</title><rect x="48.7678%" y="853" width="0.1197%" height="15" fill="rgb(236,210,16)" fg:x="4902707992" fg:w="12036108"/><text x="49.0178%" y="863.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (13,039,117 samples, 0.13%)</title><rect x="48.7678%" y="933" width="0.1297%" height="15" fill="rgb(221,94,12)" fg:x="4902707992" fg:w="13039117"/><text x="49.0178%" y="943.50"></text></g><g><title>alloc::alloc::exchange_malloc (13,039,117 samples, 0.13%)</title><rect x="48.7678%" y="917" width="0.1297%" height="15" fill="rgb(235,218,49)" fg:x="4902707992" fg:w="13039117"/><text x="49.0178%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13,039,117 samples, 0.13%)</title><rect x="48.7678%" y="901" width="0.1297%" height="15" fill="rgb(217,114,14)" fg:x="4902707992" fg:w="13039117"/><text x="49.0178%" y="911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13,039,117 samples, 0.13%)</title><rect x="48.7678%" y="885" width="0.1297%" height="15" fill="rgb(216,145,22)" fg:x="4902707992" fg:w="13039117"/><text x="49.0178%" y="895.50"></text></g><g><title>alloc::alloc::alloc (13,039,117 samples, 0.13%)</title><rect x="48.7678%" y="869" width="0.1297%" height="15" fill="rgb(217,112,39)" fg:x="4902707992" fg:w="13039117"/><text x="49.0178%" y="879.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (3,009,027 samples, 0.03%)</title><rect x="48.9175%" y="901" width="0.0299%" height="15" fill="rgb(225,85,32)" fg:x="4917753127" fg:w="3009027"/><text x="49.1675%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (3,009,027 samples, 0.03%)</title><rect x="48.9175%" y="885" width="0.0299%" height="15" fill="rgb(245,209,47)" fg:x="4917753127" fg:w="3009027"/><text x="49.1675%" y="895.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (3,009,027 samples, 0.03%)</title><rect x="48.9175%" y="869" width="0.0299%" height="15" fill="rgb(218,220,15)" fg:x="4917753127" fg:w="3009027"/><text x="49.1675%" y="879.50"></text></g><g><title>http::extensions::Extensions::insert (22,066,198 samples, 0.22%)</title><rect x="48.7379%" y="949" width="0.2195%" height="15" fill="rgb(222,202,31)" fg:x="4899698965" fg:w="22066198"/><text x="48.9879%" y="959.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (6,018,054 samples, 0.06%)</title><rect x="48.8975%" y="933" width="0.0599%" height="15" fill="rgb(243,203,4)" fg:x="4915747109" fg:w="6018054"/><text x="49.1475%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6,018,054 samples, 0.06%)</title><rect x="48.8975%" y="917" width="0.0599%" height="15" fill="rgb(237,92,17)" fg:x="4915747109" fg:w="6018054"/><text x="49.1475%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (11,033,099 samples, 0.11%)</title><rect x="48.9774%" y="933" width="0.1097%" height="15" fill="rgb(231,119,7)" fg:x="4923771181" fg:w="11033099"/><text x="49.2274%" y="943.50"></text></g><g><title>http::extensions::Extensions::remove::{{closure}} (11,033,099 samples, 0.11%)</title><rect x="48.9774%" y="917" width="0.1097%" height="15" fill="rgb(237,82,41)" fg:x="4923771181" fg:w="11033099"/><text x="49.2274%" y="927.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (11,033,099 samples, 0.11%)</title><rect x="48.9774%" y="901" width="0.1097%" height="15" fill="rgb(226,81,48)" fg:x="4923771181" fg:w="11033099"/><text x="49.2274%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (11,033,099 samples, 0.11%)</title><rect x="48.9774%" y="885" width="0.1097%" height="15" fill="rgb(234,70,51)" fg:x="4923771181" fg:w="11033099"/><text x="49.2274%" y="895.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (9,027,081 samples, 0.09%)</title><rect x="48.9973%" y="869" width="0.0898%" height="15" fill="rgb(251,86,4)" fg:x="4925777199" fg:w="9027081"/><text x="49.2473%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (9,027,081 samples, 0.09%)</title><rect x="48.9973%" y="853" width="0.0898%" height="15" fill="rgb(244,144,28)" fg:x="4925777199" fg:w="9027081"/><text x="49.2473%" y="863.50"></text></g><g><title>http::extensions::Extensions::remove (14,042,126 samples, 0.14%)</title><rect x="48.9574%" y="949" width="0.1397%" height="15" fill="rgb(232,161,39)" fg:x="4921765163" fg:w="14042126"/><text x="49.2074%" y="959.50"></text></g><g><title>hashbrown::map::make_hash (2,006,018 samples, 0.02%)</title><rect x="49.2168%" y="901" width="0.0200%" height="15" fill="rgb(247,34,51)" fg:x="4947843397" fg:w="2006018"/><text x="49.4668%" y="911.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,006,018 samples, 0.02%)</title><rect x="49.2168%" y="885" width="0.0200%" height="15" fill="rgb(225,132,2)" fg:x="4947843397" fg:w="2006018"/><text x="49.4668%" y="895.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (2,006,018 samples, 0.02%)</title><rect x="49.2168%" y="869" width="0.0200%" height="15" fill="rgb(209,159,44)" fg:x="4947843397" fg:w="2006018"/><text x="49.4668%" y="879.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2,006,018 samples, 0.02%)</title><rect x="49.2168%" y="853" width="0.0200%" height="15" fill="rgb(251,214,1)" fg:x="4947843397" fg:w="2006018"/><text x="49.4668%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2,006,018 samples, 0.02%)</title><rect x="49.2168%" y="837" width="0.0200%" height="15" fill="rgb(247,84,47)" fg:x="4947843397" fg:w="2006018"/><text x="49.4668%" y="847.50"></text></g><g><title>axum::extract::matched_path::set_matched_path_for_request (77,231,693 samples, 0.77%)</title><rect x="48.5284%" y="965" width="0.7682%" height="15" fill="rgb(240,111,43)" fg:x="4878635776" fg:w="77231693"/><text x="48.7784%" y="975.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (20,060,180 samples, 0.20%)</title><rect x="49.0971%" y="949" width="0.1995%" height="15" fill="rgb(215,214,35)" fg:x="4935807289" fg:w="20060180"/><text x="49.3471%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (20,060,180 samples, 0.20%)</title><rect x="49.0971%" y="933" width="0.1995%" height="15" fill="rgb(248,207,23)" fg:x="4935807289" fg:w="20060180"/><text x="49.3471%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (19,057,171 samples, 0.19%)</title><rect x="49.1071%" y="917" width="0.1896%" height="15" fill="rgb(214,186,4)" fg:x="4936810298" fg:w="19057171"/><text x="49.3571%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (6,018,054 samples, 0.06%)</title><rect x="49.2368%" y="901" width="0.0599%" height="15" fill="rgb(220,133,22)" fg:x="4949849415" fg:w="6018054"/><text x="49.4868%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6,018,054 samples, 0.06%)</title><rect x="49.2368%" y="885" width="0.0599%" height="15" fill="rgb(239,134,19)" fg:x="4949849415" fg:w="6018054"/><text x="49.4868%" y="895.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (6,018,054 samples, 0.06%)</title><rect x="49.2368%" y="869" width="0.0599%" height="15" fill="rgb(250,140,9)" fg:x="4949849415" fg:w="6018054"/><text x="49.4868%" y="879.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (5,015,045 samples, 0.05%)</title><rect x="49.2467%" y="853" width="0.0499%" height="15" fill="rgb(225,59,14)" fg:x="4950852424" fg:w="5015045"/><text x="49.4967%" y="863.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (5,015,045 samples, 0.05%)</title><rect x="49.2467%" y="837" width="0.0499%" height="15" fill="rgb(214,152,51)" fg:x="4950852424" fg:w="5015045"/><text x="49.4967%" y="847.50"></text></g><g><title>&lt;tower::util::map_future::MapFuture&lt;S,F&gt; as core::clone::Clone&gt;::clone (25,075,225 samples, 0.25%)</title><rect x="49.6059%" y="773" width="0.2494%" height="15" fill="rgb(251,227,43)" fg:x="4986960748" fg:w="25075225"/><text x="49.8559%" y="783.50"></text></g><g><title>&lt;tower::util::map_response::MapResponse&lt;S,F&gt; as core::clone::Clone&gt;::clone (25,075,225 samples, 0.25%)</title><rect x="49.6059%" y="757" width="0.2494%" height="15" fill="rgb(241,96,17)" fg:x="4986960748" fg:w="25075225"/><text x="49.8559%" y="767.50"></text></g><g><title>&lt;axum::handler::service::HandlerService&lt;H,T,S&gt; as core::clone::Clone&gt;::clone (25,075,225 samples, 0.25%)</title><rect x="49.6059%" y="741" width="0.2494%" height="15" fill="rgb(234,198,43)" fg:x="4986960748" fg:w="25075225"/><text x="49.8559%" y="751.50"></text></g><g><title>&lt;interview::AppState as core::clone::Clone&gt;::clone (18,054,162 samples, 0.18%)</title><rect x="49.6757%" y="725" width="0.1796%" height="15" fill="rgb(220,108,29)" fg:x="4993981811" fg:w="18054162"/><text x="49.9257%" y="735.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (18,054,162 samples, 0.18%)</title><rect x="49.6757%" y="709" width="0.1796%" height="15" fill="rgb(226,163,33)" fg:x="4993981811" fg:w="18054162"/><text x="49.9257%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (3,009,027 samples, 0.03%)</title><rect x="49.8254%" y="693" width="0.0299%" height="15" fill="rgb(205,194,45)" fg:x="5009026946" fg:w="3009027"/><text x="50.0754%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_add (3,009,027 samples, 0.03%)</title><rect x="49.8254%" y="677" width="0.0299%" height="15" fill="rgb(206,143,44)" fg:x="5009026946" fg:w="3009027"/><text x="50.0754%" y="687.50"></text></g><g><title>&lt;axum::routing::route::Route&lt;E&gt; as core::clone::Clone&gt;::clone (68,204,612 samples, 0.68%)</title><rect x="49.5760%" y="821" width="0.6784%" height="15" fill="rgb(236,136,36)" fg:x="4983951721" fg:w="68204612"/><text x="49.8260%" y="831.50"></text></g><g><title>&lt;tower::util::boxed_clone_sync::BoxCloneSyncService&lt;T,U,E&gt; as core::clone::Clone&gt;::clone (68,204,612 samples, 0.68%)</title><rect x="49.5760%" y="805" width="0.6784%" height="15" fill="rgb(249,172,42)" fg:x="4983951721" fg:w="68204612"/><text x="49.8260%" y="815.50"></text></g><g><title>&lt;T as tower::util::boxed_clone_sync::CloneService&lt;R&gt;&gt;::clone_box (65,195,585 samples, 0.65%)</title><rect x="49.6059%" y="789" width="0.6485%" height="15" fill="rgb(216,139,23)" fg:x="4986960748" fg:w="65195585"/><text x="49.8559%" y="799.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (40,120,360 samples, 0.40%)</title><rect x="49.8553%" y="773" width="0.3991%" height="15" fill="rgb(207,166,20)" fg:x="5012035973" fg:w="40120360"/><text x="50.1053%" y="783.50"></text></g><g><title>alloc::alloc::exchange_malloc (40,120,360 samples, 0.40%)</title><rect x="49.8553%" y="757" width="0.3991%" height="15" fill="rgb(210,209,22)" fg:x="5012035973" fg:w="40120360"/><text x="50.1053%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (40,120,360 samples, 0.40%)</title><rect x="49.8553%" y="741" width="0.3991%" height="15" fill="rgb(232,118,20)" fg:x="5012035973" fg:w="40120360"/><text x="50.1053%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (40,120,360 samples, 0.40%)</title><rect x="49.8553%" y="725" width="0.3991%" height="15" fill="rgb(238,113,42)" fg:x="5012035973" fg:w="40120360"/><text x="50.1053%" y="735.50"></text></g><g><title>alloc::alloc::alloc (40,120,360 samples, 0.40%)</title><rect x="49.8553%" y="709" width="0.3991%" height="15" fill="rgb(231,42,5)" fg:x="5012035973" fg:w="40120360"/><text x="50.1053%" y="719.50"></text></g><g><title>__GI___libc_malloc (40,120,360 samples, 0.40%)</title><rect x="49.8553%" y="693" width="0.3991%" height="15" fill="rgb(243,166,24)" fg:x="5012035973" fg:w="40120360"/><text x="50.1053%" y="703.50"></text></g><g><title>_int_malloc (25,075,225 samples, 0.25%)</title><rect x="50.0050%" y="677" width="0.2494%" height="15" fill="rgb(237,226,12)" fg:x="5027081108" fg:w="25075225"/><text x="50.2550%" y="687.50"></text></g><g><title>&lt;tower::util::map_future::MapFuture&lt;S,F&gt; as core::clone::Clone&gt;::clone (88,264,792 samples, 0.88%)</title><rect x="49.5161%" y="901" width="0.8780%" height="15" fill="rgb(229,133,24)" fg:x="4977933667" fg:w="88264792"/><text x="49.7661%" y="911.50"></text></g><g><title>&lt;tower::util::map_response::MapResponse&lt;S,F&gt; as core::clone::Clone&gt;::clone (88,264,792 samples, 0.88%)</title><rect x="49.5161%" y="885" width="0.8780%" height="15" fill="rgb(238,33,43)" fg:x="4977933667" fg:w="88264792"/><text x="49.7661%" y="895.50"></text></g><g><title>&lt;tower::util::map_err::MapErr&lt;S,F&gt; as core::clone::Clone&gt;::clone (88,264,792 samples, 0.88%)</title><rect x="49.5161%" y="869" width="0.8780%" height="15" fill="rgb(227,59,38)" fg:x="4977933667" fg:w="88264792"/><text x="49.7661%" y="879.50"></text></g><g><title>&lt;tower::util::map_response::MapResponse&lt;S,F&gt; as core::clone::Clone&gt;::clone (88,264,792 samples, 0.88%)</title><rect x="49.5161%" y="853" width="0.8780%" height="15" fill="rgb(230,97,0)" fg:x="4977933667" fg:w="88264792"/><text x="49.7661%" y="863.50"></text></g><g><title>&lt;tower::limit::concurrency::service::ConcurrencyLimit&lt;T&gt; as core::clone::Clone&gt;::clone (88,264,792 samples, 0.88%)</title><rect x="49.5161%" y="837" width="0.8780%" height="15" fill="rgb(250,173,50)" fg:x="4977933667" fg:w="88264792"/><text x="49.7661%" y="847.50"></text></g><g><title>&lt;tokio_util::sync::poll_semaphore::PollSemaphore as core::clone::Clone&gt;::clone (14,042,126 samples, 0.14%)</title><rect x="50.2544%" y="821" width="0.1397%" height="15" fill="rgb(240,15,50)" fg:x="5052156333" fg:w="14042126"/><text x="50.5044%" y="831.50"></text></g><g><title>tokio_util::sync::poll_semaphore::PollSemaphore::clone_inner (14,042,126 samples, 0.14%)</title><rect x="50.2544%" y="805" width="0.1397%" height="15" fill="rgb(221,93,22)" fg:x="5052156333" fg:w="14042126"/><text x="50.5044%" y="815.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (14,042,126 samples, 0.14%)</title><rect x="50.2544%" y="789" width="0.1397%" height="15" fill="rgb(245,180,53)" fg:x="5052156333" fg:w="14042126"/><text x="50.5044%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (3,009,027 samples, 0.03%)</title><rect x="50.3642%" y="773" width="0.0299%" height="15" fill="rgb(231,88,51)" fg:x="5063189432" fg:w="3009027"/><text x="50.6142%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_add (3,009,027 samples, 0.03%)</title><rect x="50.3642%" y="757" width="0.0299%" height="15" fill="rgb(240,58,21)" fg:x="5063189432" fg:w="3009027"/><text x="50.6142%" y="767.50"></text></g><g><title>__GI___libc_malloc (5,015,045 samples, 0.05%)</title><rect x="50.3941%" y="821" width="0.0499%" height="15" fill="rgb(237,21,10)" fg:x="5066198459" fg:w="5015045"/><text x="50.6441%" y="831.50"></text></g><g><title>&lt;axum::routing::route::Route&lt;E&gt; as core::clone::Clone&gt;::clone (106,318,954 samples, 1.06%)</title><rect x="49.3964%" y="949" width="1.0576%" height="15" fill="rgb(218,43,11)" fg:x="4965897559" fg:w="106318954"/><text x="49.6464%" y="959.50"></text></g><g><title>&lt;tower::util::boxed_clone_sync::BoxCloneSyncService&lt;T,U,E&gt; as core::clone::Clone&gt;::clone (106,318,954 samples, 1.06%)</title><rect x="49.3964%" y="933" width="1.0576%" height="15" fill="rgb(218,221,29)" fg:x="4965897559" fg:w="106318954"/><text x="49.6464%" y="943.50"></text></g><g><title>&lt;T as tower::util::boxed_clone_sync::CloneService&lt;R&gt;&gt;::clone_box (103,309,927 samples, 1.03%)</title><rect x="49.4263%" y="917" width="1.0276%" height="15" fill="rgb(214,118,42)" fg:x="4968906586" fg:w="103309927"/><text x="49.6763%" y="927.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (6,018,054 samples, 0.06%)</title><rect x="50.3941%" y="901" width="0.0599%" height="15" fill="rgb(251,200,26)" fg:x="5066198459" fg:w="6018054"/><text x="50.6441%" y="911.50"></text></g><g><title>alloc::alloc::exchange_malloc (6,018,054 samples, 0.06%)</title><rect x="50.3941%" y="885" width="0.0599%" height="15" fill="rgb(237,101,39)" fg:x="5066198459" fg:w="6018054"/><text x="50.6441%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6,018,054 samples, 0.06%)</title><rect x="50.3941%" y="869" width="0.0599%" height="15" fill="rgb(251,117,11)" fg:x="5066198459" fg:w="6018054"/><text x="50.6441%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6,018,054 samples, 0.06%)</title><rect x="50.3941%" y="853" width="0.0599%" height="15" fill="rgb(216,223,23)" fg:x="5066198459" fg:w="6018054"/><text x="50.6441%" y="863.50"></text></g><g><title>alloc::alloc::alloc (6,018,054 samples, 0.06%)</title><rect x="50.3941%" y="837" width="0.0599%" height="15" fill="rgb(251,54,12)" fg:x="5066198459" fg:w="6018054"/><text x="50.6441%" y="847.50"></text></g><g><title>&lt;http::method::Method as core::cmp::PartialEq&gt;::eq (3,009,027 samples, 0.03%)</title><rect x="50.4540%" y="949" width="0.0299%" height="15" fill="rgb(254,176,54)" fg:x="5072216513" fg:w="3009027"/><text x="50.7040%" y="959.50"></text></g><g><title>&lt;http::method::Inner as core::cmp::PartialEq&gt;::eq (3,009,027 samples, 0.03%)</title><rect x="50.4540%" y="933" width="0.0299%" height="15" fill="rgb(210,32,8)" fg:x="5072216513" fg:w="3009027"/><text x="50.7040%" y="943.50"></text></g><g><title>__memcpy_evex_unaligned_erms (2,006,018 samples, 0.02%)</title><rect x="50.4839%" y="949" width="0.0200%" height="15" fill="rgb(235,52,38)" fg:x="5075225540" fg:w="2006018"/><text x="50.7339%" y="959.50"></text></g><g><title>axum::routing::method_routing::MethodRouter&lt;S,E&gt;::call_with_state (133,400,197 samples, 1.33%)</title><rect x="49.2966%" y="965" width="1.3269%" height="15" fill="rgb(231,4,44)" fg:x="4955867469" fg:w="133400197"/><text x="49.5466%" y="975.50"></text></g><g><title>axum::routing::route::Route&lt;E&gt;::oneshot_inner_owned (12,036,108 samples, 0.12%)</title><rect x="50.5038%" y="949" width="0.1197%" height="15" fill="rgb(249,2,32)" fg:x="5077231558" fg:w="12036108"/><text x="50.7538%" y="959.50"></text></g><g><title>__memcpy_evex_unaligned_erms (7,021,063 samples, 0.07%)</title><rect x="50.5537%" y="933" width="0.0698%" height="15" fill="rgb(224,65,26)" fg:x="5082246603" fg:w="7021063"/><text x="50.8037%" y="943.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (5,015,045 samples, 0.05%)</title><rect x="50.9229%" y="917" width="0.0499%" height="15" fill="rgb(250,73,40)" fg:x="5119357936" fg:w="5015045"/><text x="51.1729%" y="927.50"></text></g><g><title>&lt;matchit::escape::UnescapedRoute as core::ops::deref::Deref&gt;::deref (5,015,045 samples, 0.05%)</title><rect x="50.9728%" y="917" width="0.0499%" height="15" fill="rgb(253,177,16)" fg:x="5124372981" fg:w="5015045"/><text x="51.2228%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5,015,045 samples, 0.05%)</title><rect x="50.9728%" y="901" width="0.0499%" height="15" fill="rgb(217,32,34)" fg:x="5124372981" fg:w="5015045"/><text x="51.2228%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (5,015,045 samples, 0.05%)</title><rect x="50.9728%" y="885" width="0.0499%" height="15" fill="rgb(212,7,10)" fg:x="5124372981" fg:w="5015045"/><text x="51.2228%" y="895.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::ne (18,054,162 samples, 0.18%)</title><rect x="51.0226%" y="917" width="0.1796%" height="15" fill="rgb(245,89,8)" fg:x="5129388026" fg:w="18054162"/><text x="51.2726%" y="927.50"></text></g><g><title>core::slice::cmp::SlicePartialEq::not_equal (18,054,162 samples, 0.18%)</title><rect x="51.0226%" y="901" width="0.1796%" height="15" fill="rgb(237,16,53)" fg:x="5129388026" fg:w="18054162"/><text x="51.2726%" y="911.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (18,054,162 samples, 0.18%)</title><rect x="51.0226%" y="885" width="0.1796%" height="15" fill="rgb(250,204,30)" fg:x="5129388026" fg:w="18054162"/><text x="51.2726%" y="895.50"></text></g><g><title>__memcmp_evex_movbe (17,051,153 samples, 0.17%)</title><rect x="51.0326%" y="869" width="0.1696%" height="15" fill="rgb(208,77,27)" fg:x="5130391035" fg:w="17051153"/><text x="51.2826%" y="879.50"></text></g><g><title>matchit::params::Params::for_each_key_mut (3,009,027 samples, 0.03%)</title><rect x="51.2022%" y="917" width="0.0299%" height="15" fill="rgb(250,204,28)" fg:x="5147442188" fg:w="3009027"/><text x="51.4522%" y="927.50"></text></g><g><title>axum::routing::path_router::Node::at (74,222,666 samples, 0.74%)</title><rect x="50.6236%" y="965" width="0.7383%" height="15" fill="rgb(244,63,21)" fg:x="5089267666" fg:w="74222666"/><text x="50.8736%" y="975.50"></text></g><g><title>matchit::router::Router&lt;T&gt;::at (73,219,657 samples, 0.73%)</title><rect x="50.6335%" y="949" width="0.7283%" height="15" fill="rgb(236,85,44)" fg:x="5090270675" fg:w="73219657"/><text x="50.8835%" y="959.50"></text></g><g><title>matchit::tree::Node&lt;T&gt;::at (69,207,621 samples, 0.69%)</title><rect x="50.6735%" y="933" width="0.6884%" height="15" fill="rgb(215,98,4)" fg:x="5094282711" fg:w="69207621"/><text x="50.9235%" y="943.50"></text></g><g><title>matchit::params::Params::push (13,039,117 samples, 0.13%)</title><rect x="51.2322%" y="917" width="0.1297%" height="15" fill="rgb(235,38,11)" fg:x="5150451215" fg:w="13039117"/><text x="51.4822%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4,012,036 samples, 0.04%)</title><rect x="51.5215%" y="821" width="0.0399%" height="15" fill="rgb(254,186,25)" fg:x="5179538476" fg:w="4012036"/><text x="51.7715%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (4,012,036 samples, 0.04%)</title><rect x="51.5215%" y="805" width="0.0399%" height="15" fill="rgb(225,55,31)" fg:x="5179538476" fg:w="4012036"/><text x="51.7715%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,012,036 samples, 0.04%)</title><rect x="51.5215%" y="789" width="0.0399%" height="15" fill="rgb(211,15,21)" fg:x="5179538476" fg:w="4012036"/><text x="51.7715%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (4,012,036 samples, 0.04%)</title><rect x="51.5215%" y="773" width="0.0399%" height="15" fill="rgb(215,187,41)" fg:x="5179538476" fg:w="4012036"/><text x="51.7715%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4,012,036 samples, 0.04%)</title><rect x="51.5215%" y="757" width="0.0399%" height="15" fill="rgb(248,69,32)" fg:x="5179538476" fg:w="4012036"/><text x="51.7715%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4,012,036 samples, 0.04%)</title><rect x="51.5215%" y="741" width="0.0399%" height="15" fill="rgb(252,102,52)" fg:x="5179538476" fg:w="4012036"/><text x="51.7715%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,006,018 samples, 0.02%)</title><rect x="51.5415%" y="725" width="0.0200%" height="15" fill="rgb(253,140,32)" fg:x="5181544494" fg:w="2006018"/><text x="51.7915%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,006,018 samples, 0.02%)</title><rect x="51.5415%" y="709" width="0.0200%" height="15" fill="rgb(216,56,42)" fg:x="5181544494" fg:w="2006018"/><text x="51.7915%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2,006,018 samples, 0.02%)</title><rect x="51.5415%" y="693" width="0.0200%" height="15" fill="rgb(216,184,14)" fg:x="5181544494" fg:w="2006018"/><text x="51.7915%" y="703.50"></text></g><g><title>&lt;matchit::params::ParamsIter as core::iter::traits::iterator::Iterator&gt;::next (27,081,243 samples, 0.27%)</title><rect x="51.6312%" y="709" width="0.2694%" height="15" fill="rgb(237,187,27)" fg:x="5190571575" fg:w="27081243"/><text x="51.8812%" y="719.50"></text></g><g><title>core::str::converts::from_utf8 (20,060,180 samples, 0.20%)</title><rect x="51.7011%" y="693" width="0.1995%" height="15" fill="rgb(219,65,3)" fg:x="5197592638" fg:w="20060180"/><text x="51.9511%" y="703.50"></text></g><g><title>core::str::validations::run_utf8_validation (8,024,072 samples, 0.08%)</title><rect x="51.8208%" y="677" width="0.0798%" height="15" fill="rgb(245,83,25)" fg:x="5209628746" fg:w="8024072"/><text x="52.0708%" y="687.50"></text></g><g><title>__GI___libc_malloc (17,051,153 samples, 0.17%)</title><rect x="51.9306%" y="485" width="0.1696%" height="15" fill="rgb(214,205,45)" fg:x="5220661845" fg:w="17051153"/><text x="52.1806%" y="495.50"></text></g><g><title>_int_malloc (3,009,027 samples, 0.03%)</title><rect x="52.0702%" y="469" width="0.0299%" height="15" fill="rgb(241,20,18)" fg:x="5234703971" fg:w="3009027"/><text x="52.3202%" y="479.50"></text></g><g><title>unlink_chunk.constprop.0 (2,006,018 samples, 0.02%)</title><rect x="52.0802%" y="453" width="0.0200%" height="15" fill="rgb(232,163,23)" fg:x="5235706980" fg:w="2006018"/><text x="52.3302%" y="463.50"></text></g><g><title>alloc::sync::Arc&lt;[T]&gt;::allocate_for_slice::{{closure}} (21,063,189 samples, 0.21%)</title><rect x="51.9206%" y="549" width="0.2095%" height="15" fill="rgb(214,5,46)" fg:x="5219658836" fg:w="21063189"/><text x="52.1706%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (21,063,189 samples, 0.21%)</title><rect x="51.9206%" y="533" width="0.2095%" height="15" fill="rgb(229,78,17)" fg:x="5219658836" fg:w="21063189"/><text x="52.1706%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (21,063,189 samples, 0.21%)</title><rect x="51.9206%" y="517" width="0.2095%" height="15" fill="rgb(248,89,10)" fg:x="5219658836" fg:w="21063189"/><text x="52.1706%" y="527.50"></text></g><g><title>alloc::alloc::alloc (20,060,180 samples, 0.20%)</title><rect x="51.9306%" y="501" width="0.1995%" height="15" fill="rgb(248,54,15)" fg:x="5220661845" fg:w="20060180"/><text x="52.1806%" y="511.50"></text></g><g><title>__rust_alloc (2,006,018 samples, 0.02%)</title><rect x="52.1101%" y="485" width="0.0200%" height="15" fill="rgb(223,116,6)" fg:x="5238716007" fg:w="2006018"/><text x="52.3601%" y="495.50"></text></g><g><title>core::alloc::layout::Layout::extend (2,006,018 samples, 0.02%)</title><rect x="52.1301%" y="533" width="0.0200%" height="15" fill="rgb(205,125,38)" fg:x="5240722025" fg:w="2006018"/><text x="52.3801%" y="543.50"></text></g><g><title>core::ptr::alignment::Alignment::max (2,006,018 samples, 0.02%)</title><rect x="52.1301%" y="517" width="0.0200%" height="15" fill="rgb(251,78,38)" fg:x="5240722025" fg:w="2006018"/><text x="52.3801%" y="527.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;str&gt; as core::convert::From&lt;&amp;str&gt;&gt;::from (24,072,216 samples, 0.24%)</title><rect x="51.9206%" y="645" width="0.2394%" height="15" fill="rgb(253,78,28)" fg:x="5219658836" fg:w="24072216"/><text x="52.1706%" y="655.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (24,072,216 samples, 0.24%)</title><rect x="51.9206%" y="629" width="0.2394%" height="15" fill="rgb(209,120,3)" fg:x="5219658836" fg:w="24072216"/><text x="52.1706%" y="639.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;[T]&gt; as alloc::sync::ArcFromSlice&lt;T&gt;&gt;::from_slice (24,072,216 samples, 0.24%)</title><rect x="51.9206%" y="613" width="0.2394%" height="15" fill="rgb(238,229,9)" fg:x="5219658836" fg:w="24072216"/><text x="52.1706%" y="623.50"></text></g><g><title>alloc::sync::Arc&lt;[T]&gt;::copy_from_slice (24,072,216 samples, 0.24%)</title><rect x="51.9206%" y="597" width="0.2394%" height="15" fill="rgb(253,159,18)" fg:x="5219658836" fg:w="24072216"/><text x="52.1706%" y="607.50"></text></g><g><title>alloc::sync::Arc&lt;[T]&gt;::allocate_for_slice (24,072,216 samples, 0.24%)</title><rect x="51.9206%" y="581" width="0.2394%" height="15" fill="rgb(244,42,34)" fg:x="5219658836" fg:w="24072216"/><text x="52.1706%" y="591.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::allocate_for_layout (24,072,216 samples, 0.24%)</title><rect x="51.9206%" y="565" width="0.2394%" height="15" fill="rgb(224,8,7)" fg:x="5219658836" fg:w="24072216"/><text x="52.1706%" y="575.50"></text></g><g><title>alloc::sync::arcinner_layout_for_value_layout (3,009,027 samples, 0.03%)</title><rect x="52.1301%" y="549" width="0.0299%" height="15" fill="rgb(210,201,45)" fg:x="5240722025" fg:w="3009027"/><text x="52.3801%" y="559.50"></text></g><g><title>alloc::sync::Arc&lt;[T]&gt;::allocate_for_slice::{{closure}} (21,063,189 samples, 0.21%)</title><rect x="52.2099%" y="485" width="0.2095%" height="15" fill="rgb(252,185,21)" fg:x="5248746097" fg:w="21063189"/><text x="52.4599%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (21,063,189 samples, 0.21%)</title><rect x="52.2099%" y="469" width="0.2095%" height="15" fill="rgb(223,131,1)" fg:x="5248746097" fg:w="21063189"/><text x="52.4599%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (21,063,189 samples, 0.21%)</title><rect x="52.2099%" y="453" width="0.2095%" height="15" fill="rgb(245,141,16)" fg:x="5248746097" fg:w="21063189"/><text x="52.4599%" y="463.50"></text></g><g><title>alloc::alloc::alloc (21,063,189 samples, 0.21%)</title><rect x="52.2099%" y="437" width="0.2095%" height="15" fill="rgb(229,55,45)" fg:x="5248746097" fg:w="21063189"/><text x="52.4599%" y="447.50"></text></g><g><title>__GI___libc_malloc (20,060,180 samples, 0.20%)</title><rect x="52.2199%" y="421" width="0.1995%" height="15" fill="rgb(208,92,15)" fg:x="5249749106" fg:w="20060180"/><text x="52.4699%" y="431.50"></text></g><g><title>_int_malloc (2,006,018 samples, 0.02%)</title><rect x="52.3995%" y="405" width="0.0200%" height="15" fill="rgb(234,185,47)" fg:x="5267803268" fg:w="2006018"/><text x="52.6495%" y="415.50"></text></g><g><title>alloc::sync::Arc&lt;[T]&gt;::allocate_for_slice (29,087,261 samples, 0.29%)</title><rect x="52.2099%" y="517" width="0.2893%" height="15" fill="rgb(253,104,50)" fg:x="5248746097" fg:w="29087261"/><text x="52.4599%" y="527.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::allocate_for_layout (29,087,261 samples, 0.29%)</title><rect x="52.2099%" y="501" width="0.2893%" height="15" fill="rgb(205,70,7)" fg:x="5248746097" fg:w="29087261"/><text x="52.4599%" y="511.50"></text></g><g><title>alloc::sync::arcinner_layout_for_value_layout (8,024,072 samples, 0.08%)</title><rect x="52.4194%" y="485" width="0.0798%" height="15" fill="rgb(240,178,43)" fg:x="5269809286" fg:w="8024072"/><text x="52.6694%" y="495.50"></text></g><g><title>core::alloc::layout::Layout::extend (8,024,072 samples, 0.08%)</title><rect x="52.4194%" y="469" width="0.0798%" height="15" fill="rgb(214,112,2)" fg:x="5269809286" fg:w="8024072"/><text x="52.6694%" y="479.50"></text></g><g><title>core::ptr::alignment::Alignment::max (5,015,045 samples, 0.05%)</title><rect x="52.4494%" y="453" width="0.0499%" height="15" fill="rgb(206,46,17)" fg:x="5272818313" fg:w="5015045"/><text x="52.6994%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (32,096,288 samples, 0.32%)</title><rect x="52.2099%" y="629" width="0.3193%" height="15" fill="rgb(225,220,16)" fg:x="5248746097" fg:w="32096288"/><text x="52.4599%" y="639.50"></text></g><g><title>axum::util::PercentDecodedStr::new::{{closure}} (32,096,288 samples, 0.32%)</title><rect x="52.2099%" y="613" width="0.3193%" height="15" fill="rgb(238,65,40)" fg:x="5248746097" fg:w="32096288"/><text x="52.4599%" y="623.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (32,096,288 samples, 0.32%)</title><rect x="52.2099%" y="597" width="0.3193%" height="15" fill="rgb(230,151,21)" fg:x="5248746097" fg:w="32096288"/><text x="52.4599%" y="607.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;str&gt; as core::convert::From&lt;&amp;str&gt;&gt;::from (32,096,288 samples, 0.32%)</title><rect x="52.2099%" y="581" width="0.3193%" height="15" fill="rgb(218,58,49)" fg:x="5248746097" fg:w="32096288"/><text x="52.4599%" y="591.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (32,096,288 samples, 0.32%)</title><rect x="52.2099%" y="565" width="0.3193%" height="15" fill="rgb(219,179,14)" fg:x="5248746097" fg:w="32096288"/><text x="52.4599%" y="575.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;[T]&gt; as alloc::sync::ArcFromSlice&lt;T&gt;&gt;::from_slice (32,096,288 samples, 0.32%)</title><rect x="52.2099%" y="549" width="0.3193%" height="15" fill="rgb(223,72,1)" fg:x="5248746097" fg:w="32096288"/><text x="52.4599%" y="559.50"></text></g><g><title>alloc::sync::Arc&lt;[T]&gt;::copy_from_slice (32,096,288 samples, 0.32%)</title><rect x="52.2099%" y="533" width="0.3193%" height="15" fill="rgb(238,126,10)" fg:x="5248746097" fg:w="32096288"/><text x="52.4599%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,009,027 samples, 0.03%)</title><rect x="52.4993%" y="517" width="0.0299%" height="15" fill="rgb(224,206,38)" fg:x="5277833358" fg:w="3009027"/><text x="52.7493%" y="527.50"></text></g><g><title>__memcpy_evex_unaligned_erms (3,009,027 samples, 0.03%)</title><rect x="52.4993%" y="501" width="0.0299%" height="15" fill="rgb(212,201,54)" fg:x="5277833358" fg:w="3009027"/><text x="52.7493%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,009,027 samples, 0.03%)</title><rect x="52.8584%" y="549" width="0.0299%" height="15" fill="rgb(218,154,48)" fg:x="5313941682" fg:w="3009027"/><text x="53.1084%" y="559.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (3,009,027 samples, 0.03%)</title><rect x="52.8584%" y="533" width="0.0299%" height="15" fill="rgb(232,93,24)" fg:x="5313941682" fg:w="3009027"/><text x="53.1084%" y="543.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (16,048,144 samples, 0.16%)</title><rect x="52.7487%" y="613" width="0.1596%" height="15" fill="rgb(245,30,21)" fg:x="5302908583" fg:w="16048144"/><text x="52.9987%" y="623.50"></text></g><g><title>percent_encoding::&lt;impl core::convert::From&lt;percent_encoding::PercentDecode&gt; for alloc::borrow::Cow&lt;[u8]&gt;&gt;::from (16,048,144 samples, 0.16%)</title><rect x="52.7487%" y="597" width="0.1596%" height="15" fill="rgb(242,148,29)" fg:x="5302908583" fg:w="16048144"/><text x="52.9987%" y="607.50"></text></g><g><title>percent_encoding::PercentDecode::if_any (10,030,090 samples, 0.10%)</title><rect x="52.8085%" y="581" width="0.0998%" height="15" fill="rgb(244,153,54)" fg:x="5308926637" fg:w="10030090"/><text x="53.0585%" y="591.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (10,030,090 samples, 0.10%)</title><rect x="52.8085%" y="565" width="0.0998%" height="15" fill="rgb(252,87,22)" fg:x="5308926637" fg:w="10030090"/><text x="53.0585%" y="575.50"></text></g><g><title>percent_encoding::PercentDecode::if_any::{{closure}} (2,006,018 samples, 0.02%)</title><rect x="52.8884%" y="549" width="0.0200%" height="15" fill="rgb(210,51,29)" fg:x="5316950709" fg:w="2006018"/><text x="53.1384%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (146,439,314 samples, 1.46%)</title><rect x="51.5614%" y="773" width="1.4566%" height="15" fill="rgb(242,136,47)" fg:x="5183550512" fg:w="146439314"/><text x="51.8114%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (145,436,305 samples, 1.45%)</title><rect x="51.5714%" y="757" width="1.4467%" height="15" fill="rgb(238,68,4)" fg:x="5184553521" fg:w="145436305"/><text x="51.8214%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (145,436,305 samples, 1.45%)</title><rect x="51.5714%" y="741" width="1.4467%" height="15" fill="rgb(242,161,30)" fg:x="5184553521" fg:w="145436305"/><text x="51.8214%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (145,436,305 samples, 1.45%)</title><rect x="51.5714%" y="725" width="1.4467%" height="15" fill="rgb(218,58,44)" fg:x="5184553521" fg:w="145436305"/><text x="51.8214%" y="735.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (112,337,008 samples, 1.12%)</title><rect x="51.9006%" y="709" width="1.1174%" height="15" fill="rgb(252,125,32)" fg:x="5217652818" fg:w="112337008"/><text x="52.1506%" y="719.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (112,337,008 samples, 1.12%)</title><rect x="51.9006%" y="693" width="1.1174%" height="15" fill="rgb(219,178,0)" fg:x="5217652818" fg:w="112337008"/><text x="52.1506%" y="703.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (112,337,008 samples, 1.12%)</title><rect x="51.9006%" y="677" width="1.1174%" height="15" fill="rgb(213,152,7)" fg:x="5217652818" fg:w="112337008"/><text x="52.1506%" y="687.50"></text></g><g><title>axum::routing::url_params::insert_url_params::{{closure}} (112,337,008 samples, 1.12%)</title><rect x="51.9006%" y="661" width="1.1174%" height="15" fill="rgb(249,109,34)" fg:x="5217652818" fg:w="112337008"/><text x="52.1506%" y="671.50"></text></g><g><title>axum::util::PercentDecodedStr::new (86,258,774 samples, 0.86%)</title><rect x="52.1600%" y="645" width="0.8580%" height="15" fill="rgb(232,96,21)" fg:x="5243731052" fg:w="86258774"/><text x="52.4100%" y="655.50"></text></g><g><title>percent_encoding::PercentDecode::decode_utf8 (48,144,432 samples, 0.48%)</title><rect x="52.5392%" y="629" width="0.4789%" height="15" fill="rgb(228,27,39)" fg:x="5281845394" fg:w="48144432"/><text x="52.7892%" y="639.50"></text></g><g><title>core::str::converts::from_utf8 (11,033,099 samples, 0.11%)</title><rect x="52.9083%" y="613" width="0.1097%" height="15" fill="rgb(211,182,52)" fg:x="5318956727" fg:w="11033099"/><text x="53.1583%" y="623.50"></text></g><g><title>core::str::validations::run_utf8_validation (6,018,054 samples, 0.06%)</title><rect x="52.9582%" y="597" width="0.0599%" height="15" fill="rgb(234,178,38)" fg:x="5323971772" fg:w="6018054"/><text x="53.2082%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (153,460,377 samples, 1.53%)</title><rect x="51.5614%" y="805" width="1.5265%" height="15" fill="rgb(221,111,3)" fg:x="5183550512" fg:w="153460377"/><text x="51.8114%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (153,460,377 samples, 1.53%)</title><rect x="51.5614%" y="789" width="1.5265%" height="15" fill="rgb(228,175,21)" fg:x="5183550512" fg:w="153460377"/><text x="51.8114%" y="799.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;R,&lt;R as core::ops::try_trait::Try&gt;::Output&gt;::into_try (7,021,063 samples, 0.07%)</title><rect x="53.0181%" y="773" width="0.0698%" height="15" fill="rgb(228,174,43)" fg:x="5329989826" fg:w="7021063"/><text x="53.2681%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (154,463,386 samples, 1.54%)</title><rect x="51.5614%" y="821" width="1.5365%" height="15" fill="rgb(211,191,0)" fg:x="5183550512" fg:w="154463386"/><text x="51.8114%" y="831.50"></text></g><g><title>__GI___libc_malloc (7,021,063 samples, 0.07%)</title><rect x="53.0979%" y="693" width="0.0698%" height="15" fill="rgb(253,117,3)" fg:x="5338013898" fg:w="7021063"/><text x="53.3479%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (173,520,557 samples, 1.73%)</title><rect x="51.4616%" y="949" width="1.7260%" height="15" fill="rgb(241,127,19)" fg:x="5173520422" fg:w="173520557"/><text x="51.7116%" y="959.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (173,520,557 samples, 1.73%)</title><rect x="51.4616%" y="933" width="1.7260%" height="15" fill="rgb(218,103,12)" fg:x="5173520422" fg:w="173520557"/><text x="51.7116%" y="943.50"></text></g><g><title>core::iter::adapters::try_process (173,520,557 samples, 1.73%)</title><rect x="51.4616%" y="917" width="1.7260%" height="15" fill="rgb(236,214,43)" fg:x="5173520422" fg:w="173520557"/><text x="51.7116%" y="927.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (170,511,530 samples, 1.70%)</title><rect x="51.4916%" y="901" width="1.6961%" height="15" fill="rgb(244,144,19)" fg:x="5176529449" fg:w="170511530"/><text x="51.7416%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (170,511,530 samples, 1.70%)</title><rect x="51.4916%" y="885" width="1.6961%" height="15" fill="rgb(246,188,10)" fg:x="5176529449" fg:w="170511530"/><text x="51.7416%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (170,511,530 samples, 1.70%)</title><rect x="51.4916%" y="869" width="1.6961%" height="15" fill="rgb(212,193,33)" fg:x="5176529449" fg:w="170511530"/><text x="51.7416%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (170,511,530 samples, 1.70%)</title><rect x="51.4916%" y="853" width="1.6961%" height="15" fill="rgb(241,51,29)" fg:x="5176529449" fg:w="170511530"/><text x="51.7416%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (169,508,521 samples, 1.69%)</title><rect x="51.5015%" y="837" width="1.6861%" height="15" fill="rgb(211,58,19)" fg:x="5177532458" fg:w="169508521"/><text x="51.7515%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (9,027,081 samples, 0.09%)</title><rect x="53.0979%" y="821" width="0.0898%" height="15" fill="rgb(229,111,26)" fg:x="5338013898" fg:w="9027081"/><text x="53.3479%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9,027,081 samples, 0.09%)</title><rect x="53.0979%" y="805" width="0.0898%" height="15" fill="rgb(213,115,40)" fg:x="5338013898" fg:w="9027081"/><text x="53.3479%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9,027,081 samples, 0.09%)</title><rect x="53.0979%" y="789" width="0.0898%" height="15" fill="rgb(209,56,44)" fg:x="5338013898" fg:w="9027081"/><text x="53.3479%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (9,027,081 samples, 0.09%)</title><rect x="53.0979%" y="773" width="0.0898%" height="15" fill="rgb(230,108,32)" fg:x="5338013898" fg:w="9027081"/><text x="53.3479%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (9,027,081 samples, 0.09%)</title><rect x="53.0979%" y="757" width="0.0898%" height="15" fill="rgb(216,165,31)" fg:x="5338013898" fg:w="9027081"/><text x="53.3479%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9,027,081 samples, 0.09%)</title><rect x="53.0979%" y="741" width="0.0898%" height="15" fill="rgb(218,122,21)" fg:x="5338013898" fg:w="9027081"/><text x="53.3479%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9,027,081 samples, 0.09%)</title><rect x="53.0979%" y="725" width="0.0898%" height="15" fill="rgb(223,224,47)" fg:x="5338013898" fg:w="9027081"/><text x="53.3479%" y="735.50"></text></g><g><title>alloc::alloc::alloc (9,027,081 samples, 0.09%)</title><rect x="53.0979%" y="709" width="0.0898%" height="15" fill="rgb(238,102,44)" fg:x="5338013898" fg:w="9027081"/><text x="53.3479%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::filter (2,006,018 samples, 0.02%)</title><rect x="53.1877%" y="949" width="0.0200%" height="15" fill="rgb(236,46,40)" fg:x="5347040979" fg:w="2006018"/><text x="53.4377%" y="959.50"></text></g><g><title>core::iter::adapters::filter::Filter&lt;I,P&gt;::new (2,006,018 samples, 0.02%)</title><rect x="53.1877%" y="933" width="0.0200%" height="15" fill="rgb(247,202,50)" fg:x="5347040979" fg:w="2006018"/><text x="53.4377%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;matchit::params::Params&gt; (2,006,018 samples, 0.02%)</title><rect x="53.2076%" y="949" width="0.0200%" height="15" fill="rgb(209,99,20)" fg:x="5349046997" fg:w="2006018"/><text x="53.4576%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;matchit::params::ParamsKind&gt; (2,006,018 samples, 0.02%)</title><rect x="53.2076%" y="933" width="0.0200%" height="15" fill="rgb(252,27,34)" fg:x="5349046997" fg:w="2006018"/><text x="53.4576%" y="943.50"></text></g><g><title>http::extensions::Extensions::get_mut (2,006,018 samples, 0.02%)</title><rect x="53.2276%" y="949" width="0.0200%" height="15" fill="rgb(215,206,23)" fg:x="5351053015" fg:w="2006018"/><text x="53.4776%" y="959.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (13,039,117 samples, 0.13%)</title><rect x="53.2874%" y="933" width="0.1297%" height="15" fill="rgb(212,135,36)" fg:x="5357071069" fg:w="13039117"/><text x="53.5374%" y="943.50"></text></g><g><title>alloc::alloc::exchange_malloc (12,036,108 samples, 0.12%)</title><rect x="53.2974%" y="917" width="0.1197%" height="15" fill="rgb(240,189,1)" fg:x="5358074078" fg:w="12036108"/><text x="53.5474%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12,036,108 samples, 0.12%)</title><rect x="53.2974%" y="901" width="0.1197%" height="15" fill="rgb(242,56,20)" fg:x="5358074078" fg:w="12036108"/><text x="53.5474%" y="911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12,036,108 samples, 0.12%)</title><rect x="53.2974%" y="885" width="0.1197%" height="15" fill="rgb(247,132,33)" fg:x="5358074078" fg:w="12036108"/><text x="53.5474%" y="895.50"></text></g><g><title>alloc::alloc::alloc (12,036,108 samples, 0.12%)</title><rect x="53.2974%" y="869" width="0.1197%" height="15" fill="rgb(208,149,11)" fg:x="5358074078" fg:w="12036108"/><text x="53.5474%" y="879.50"></text></g><g><title>__GI___libc_malloc (12,036,108 samples, 0.12%)</title><rect x="53.2974%" y="853" width="0.1197%" height="15" fill="rgb(211,33,11)" fg:x="5358074078" fg:w="12036108"/><text x="53.5474%" y="863.50"></text></g><g><title>_int_malloc (6,018,054 samples, 0.06%)</title><rect x="53.3573%" y="837" width="0.0599%" height="15" fill="rgb(221,29,38)" fg:x="5364092132" fg:w="6018054"/><text x="53.6073%" y="847.50"></text></g><g><title>core::intrinsics::likely (2,006,018 samples, 0.02%)</title><rect x="53.4271%" y="837" width="0.0200%" height="15" fill="rgb(206,182,49)" fg:x="5371113195" fg:w="2006018"/><text x="53.6771%" y="847.50"></text></g><g><title>http::extensions::Extensions::insert (21,063,189 samples, 0.21%)</title><rect x="53.2475%" y="949" width="0.2095%" height="15" fill="rgb(216,140,1)" fg:x="5353059033" fg:w="21063189"/><text x="53.4975%" y="959.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (4,012,036 samples, 0.04%)</title><rect x="53.4171%" y="933" width="0.0399%" height="15" fill="rgb(232,57,40)" fg:x="5370110186" fg:w="4012036"/><text x="53.6671%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4,012,036 samples, 0.04%)</title><rect x="53.4171%" y="917" width="0.0399%" height="15" fill="rgb(224,186,18)" fg:x="5370110186" fg:w="4012036"/><text x="53.6671%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (4,012,036 samples, 0.04%)</title><rect x="53.4171%" y="901" width="0.0399%" height="15" fill="rgb(215,121,11)" fg:x="5370110186" fg:w="4012036"/><text x="53.6671%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (4,012,036 samples, 0.04%)</title><rect x="53.4171%" y="885" width="0.0399%" height="15" fill="rgb(245,147,10)" fg:x="5370110186" fg:w="4012036"/><text x="53.6671%" y="895.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (4,012,036 samples, 0.04%)</title><rect x="53.4171%" y="869" width="0.0399%" height="15" fill="rgb(238,153,13)" fg:x="5370110186" fg:w="4012036"/><text x="53.6671%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot_in_group (3,009,027 samples, 0.03%)</title><rect x="53.4271%" y="853" width="0.0299%" height="15" fill="rgb(233,108,0)" fg:x="5371113195" fg:w="3009027"/><text x="53.6771%" y="863.50"></text></g><g><title>axum::routing::url_params::insert_url_params (212,637,908 samples, 2.12%)</title><rect x="51.3619%" y="965" width="2.1151%" height="15" fill="rgb(212,157,17)" fg:x="5163490332" fg:w="212637908"/><text x="51.6119%" y="975.50">a..</text></g><g><title>matchit::params::Params::iter (2,006,018 samples, 0.02%)</title><rect x="53.4570%" y="949" width="0.0200%" height="15" fill="rgb(225,213,38)" fg:x="5374122222" fg:w="2006018"/><text x="53.7070%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;axum::extract::original_uri::OriginalUri&gt;&gt; (2,006,018 samples, 0.02%)</title><rect x="53.4770%" y="965" width="0.0200%" height="15" fill="rgb(248,16,11)" fg:x="5376128240" fg:w="2006018"/><text x="53.7270%" y="975.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (10,030,090 samples, 0.10%)</title><rect x="53.4970%" y="949" width="0.0998%" height="15" fill="rgb(241,33,4)" fg:x="5378134258" fg:w="10030090"/><text x="53.7470%" y="959.50"></text></g><g><title>alloc::alloc::exchange_malloc (9,027,081 samples, 0.09%)</title><rect x="53.5069%" y="933" width="0.0898%" height="15" fill="rgb(222,26,43)" fg:x="5379137267" fg:w="9027081"/><text x="53.7569%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9,027,081 samples, 0.09%)</title><rect x="53.5069%" y="917" width="0.0898%" height="15" fill="rgb(243,29,36)" fg:x="5379137267" fg:w="9027081"/><text x="53.7569%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9,027,081 samples, 0.09%)</title><rect x="53.5069%" y="901" width="0.0898%" height="15" fill="rgb(241,9,27)" fg:x="5379137267" fg:w="9027081"/><text x="53.7569%" y="911.50"></text></g><g><title>alloc::alloc::alloc (9,027,081 samples, 0.09%)</title><rect x="53.5069%" y="885" width="0.0898%" height="15" fill="rgb(205,117,26)" fg:x="5379137267" fg:w="9027081"/><text x="53.7569%" y="895.50"></text></g><g><title>__GI___libc_malloc (9,027,081 samples, 0.09%)</title><rect x="53.5069%" y="869" width="0.0898%" height="15" fill="rgb(209,80,39)" fg:x="5379137267" fg:w="9027081"/><text x="53.7569%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (2,006,018 samples, 0.02%)</title><rect x="53.5967%" y="949" width="0.0200%" height="15" fill="rgb(239,155,6)" fg:x="5388164348" fg:w="2006018"/><text x="53.8467%" y="959.50"></text></g><g><title>__GI___libc_malloc (11,033,099 samples, 0.11%)</title><rect x="53.6267%" y="805" width="0.1097%" height="15" fill="rgb(212,104,12)" fg:x="5391173375" fg:w="11033099"/><text x="53.8767%" y="815.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (13,039,117 samples, 0.13%)</title><rect x="53.6167%" y="901" width="0.1297%" height="15" fill="rgb(234,204,3)" fg:x="5390170366" fg:w="13039117"/><text x="53.8667%" y="911.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (13,039,117 samples, 0.13%)</title><rect x="53.6167%" y="885" width="0.1297%" height="15" fill="rgb(251,218,7)" fg:x="5390170366" fg:w="13039117"/><text x="53.8667%" y="895.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (13,039,117 samples, 0.13%)</title><rect x="53.6167%" y="869" width="0.1297%" height="15" fill="rgb(221,81,32)" fg:x="5390170366" fg:w="13039117"/><text x="53.8667%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13,039,117 samples, 0.13%)</title><rect x="53.6167%" y="853" width="0.1297%" height="15" fill="rgb(214,152,26)" fg:x="5390170366" fg:w="13039117"/><text x="53.8667%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13,039,117 samples, 0.13%)</title><rect x="53.6167%" y="837" width="0.1297%" height="15" fill="rgb(223,22,3)" fg:x="5390170366" fg:w="13039117"/><text x="53.8667%" y="847.50"></text></g><g><title>alloc::alloc::alloc (13,039,117 samples, 0.13%)</title><rect x="53.6167%" y="821" width="0.1297%" height="15" fill="rgb(207,174,7)" fg:x="5390170366" fg:w="13039117"/><text x="53.8667%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (15,045,135 samples, 0.15%)</title><rect x="53.6167%" y="949" width="0.1497%" height="15" fill="rgb(224,19,52)" fg:x="5390170366" fg:w="15045135"/><text x="53.8667%" y="959.50"></text></g><g><title>core::ops::function::FnOnce::call_once (15,045,135 samples, 0.15%)</title><rect x="53.6167%" y="933" width="0.1497%" height="15" fill="rgb(228,24,14)" fg:x="5390170366" fg:w="15045135"/><text x="53.8667%" y="943.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as core::default::Default&gt;::default (15,045,135 samples, 0.15%)</title><rect x="53.6167%" y="917" width="0.1497%" height="15" fill="rgb(230,153,43)" fg:x="5390170366" fg:w="15045135"/><text x="53.8667%" y="927.50"></text></g><g><title>alloc::boxed::Box&lt;core::mem::maybe_uninit::MaybeUninit&lt;T&gt;,A&gt;::write (2,006,018 samples, 0.02%)</title><rect x="53.7464%" y="901" width="0.0200%" height="15" fill="rgb(231,106,12)" fg:x="5403209483" fg:w="2006018"/><text x="53.9964%" y="911.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (2,006,018 samples, 0.02%)</title><rect x="53.7464%" y="885" width="0.0200%" height="15" fill="rgb(215,92,2)" fg:x="5403209483" fg:w="2006018"/><text x="53.9964%" y="895.50"></text></g><g><title>hashbrown::control::tag::TagSliceExt::fill_empty (5,015,045 samples, 0.05%)</title><rect x="53.9958%" y="789" width="0.0499%" height="15" fill="rgb(249,143,25)" fg:x="5428284708" fg:w="5015045"/><text x="54.2458%" y="799.50"></text></g><g><title>&lt;[hashbrown::control::tag::Tag] as hashbrown::control::tag::TagSliceExt&gt;::fill_tag (5,015,045 samples, 0.05%)</title><rect x="53.9958%" y="773" width="0.0499%" height="15" fill="rgb(252,7,35)" fg:x="5428284708" fg:w="5015045"/><text x="54.2458%" y="783.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (5,015,045 samples, 0.05%)</title><rect x="53.9958%" y="757" width="0.0499%" height="15" fill="rgb(216,69,40)" fg:x="5428284708" fg:w="5015045"/><text x="54.2458%" y="767.50"></text></g><g><title>core::intrinsics::write_bytes (5,015,045 samples, 0.05%)</title><rect x="53.9958%" y="741" width="0.0499%" height="15" fill="rgb(240,36,33)" fg:x="5428284708" fg:w="5015045"/><text x="54.2458%" y="751.50"></text></g><g><title>__memset_evex_unaligned_erms (5,015,045 samples, 0.05%)</title><rect x="53.9958%" y="725" width="0.0499%" height="15" fill="rgb(231,128,14)" fg:x="5428284708" fg:w="5015045"/><text x="54.2458%" y="735.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (2,006,018 samples, 0.02%)</title><rect x="54.0457%" y="773" width="0.0200%" height="15" fill="rgb(245,143,14)" fg:x="5433299753" fg:w="2006018"/><text x="54.2957%" y="783.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (2,006,018 samples, 0.02%)</title><rect x="54.0457%" y="757" width="0.0200%" height="15" fill="rgb(222,130,28)" fg:x="5433299753" fg:w="2006018"/><text x="54.2957%" y="767.50"></text></g><g><title>__GI___libc_malloc (16,048,144 samples, 0.16%)</title><rect x="54.0656%" y="709" width="0.1596%" height="15" fill="rgb(212,10,48)" fg:x="5435305771" fg:w="16048144"/><text x="54.3156%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (41,123,369 samples, 0.41%)</title><rect x="53.8262%" y="885" width="0.4091%" height="15" fill="rgb(254,118,45)" fg:x="5411233555" fg:w="41123369"/><text x="54.0762%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (41,123,369 samples, 0.41%)</title><rect x="53.8262%" y="869" width="0.4091%" height="15" fill="rgb(228,6,45)" fg:x="5411233555" fg:w="41123369"/><text x="54.0762%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (30,090,270 samples, 0.30%)</title><rect x="53.9359%" y="853" width="0.2993%" height="15" fill="rgb(241,18,35)" fg:x="5422266654" fg:w="30090270"/><text x="54.1859%" y="863.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (27,081,243 samples, 0.27%)</title><rect x="53.9659%" y="837" width="0.2694%" height="15" fill="rgb(227,214,53)" fg:x="5425275681" fg:w="27081243"/><text x="54.2159%" y="847.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (24,072,216 samples, 0.24%)</title><rect x="53.9958%" y="821" width="0.2394%" height="15" fill="rgb(224,107,51)" fg:x="5428284708" fg:w="24072216"/><text x="54.2458%" y="831.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (24,072,216 samples, 0.24%)</title><rect x="53.9958%" y="805" width="0.2394%" height="15" fill="rgb(248,60,28)" fg:x="5428284708" fg:w="24072216"/><text x="54.2458%" y="815.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (19,057,171 samples, 0.19%)</title><rect x="54.0457%" y="789" width="0.1896%" height="15" fill="rgb(249,101,23)" fg:x="5433299753" fg:w="19057171"/><text x="54.2957%" y="799.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (17,051,153 samples, 0.17%)</title><rect x="54.0656%" y="773" width="0.1696%" height="15" fill="rgb(228,51,19)" fg:x="5435305771" fg:w="17051153"/><text x="54.3156%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17,051,153 samples, 0.17%)</title><rect x="54.0656%" y="757" width="0.1696%" height="15" fill="rgb(213,20,6)" fg:x="5435305771" fg:w="17051153"/><text x="54.3156%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17,051,153 samples, 0.17%)</title><rect x="54.0656%" y="741" width="0.1696%" height="15" fill="rgb(212,124,10)" fg:x="5435305771" fg:w="17051153"/><text x="54.3156%" y="751.50"></text></g><g><title>alloc::alloc::alloc (17,051,153 samples, 0.17%)</title><rect x="54.0656%" y="725" width="0.1696%" height="15" fill="rgb(248,3,40)" fg:x="5435305771" fg:w="17051153"/><text x="54.3156%" y="735.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (2,006,018 samples, 0.02%)</title><rect x="54.2353%" y="869" width="0.0200%" height="15" fill="rgb(223,178,23)" fg:x="5452356924" fg:w="2006018"/><text x="54.4853%" y="879.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2,006,018 samples, 0.02%)</title><rect x="54.2353%" y="853" width="0.0200%" height="15" fill="rgb(240,132,45)" fg:x="5452356924" fg:w="2006018"/><text x="54.4853%" y="863.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (45,135,405 samples, 0.45%)</title><rect x="53.8162%" y="917" width="0.4490%" height="15" fill="rgb(245,164,36)" fg:x="5410230546" fg:w="45135405"/><text x="54.0662%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (45,135,405 samples, 0.45%)</title><rect x="53.8162%" y="901" width="0.4490%" height="15" fill="rgb(231,188,53)" fg:x="5410230546" fg:w="45135405"/><text x="54.0662%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (3,009,027 samples, 0.03%)</title><rect x="54.2353%" y="885" width="0.0299%" height="15" fill="rgb(237,198,39)" fg:x="5452356924" fg:w="3009027"/><text x="54.4853%" y="895.50"></text></g><g><title>http::extensions::Extensions::insert (78,234,702 samples, 0.78%)</title><rect x="53.4970%" y="965" width="0.7782%" height="15" fill="rgb(223,120,35)" fg:x="5378134258" fg:w="78234702"/><text x="53.7470%" y="975.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (51,153,459 samples, 0.51%)</title><rect x="53.7663%" y="949" width="0.5088%" height="15" fill="rgb(253,107,49)" fg:x="5405215501" fg:w="51153459"/><text x="54.0163%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (51,153,459 samples, 0.51%)</title><rect x="53.7663%" y="933" width="0.5088%" height="15" fill="rgb(216,44,31)" fg:x="5405215501" fg:w="51153459"/><text x="54.0163%" y="943.50"></text></g><g><title>http::request::Request&lt;T&gt;::uri (3,009,027 samples, 0.03%)</title><rect x="54.2851%" y="965" width="0.0299%" height="15" fill="rgb(253,87,21)" fg:x="5457371969" fg:w="3009027"/><text x="54.5351%" y="975.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (6,018,054 samples, 0.06%)</title><rect x="54.3450%" y="885" width="0.0599%" height="15" fill="rgb(226,18,2)" fg:x="5463390023" fg:w="6018054"/><text x="54.5950%" y="895.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (6,018,054 samples, 0.06%)</title><rect x="54.3450%" y="869" width="0.0599%" height="15" fill="rgb(216,8,46)" fg:x="5463390023" fg:w="6018054"/><text x="54.5950%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (6,018,054 samples, 0.06%)</title><rect x="54.3450%" y="853" width="0.0599%" height="15" fill="rgb(226,140,39)" fg:x="5463390023" fg:w="6018054"/><text x="54.5950%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3,009,027 samples, 0.03%)</title><rect x="54.3749%" y="837" width="0.0299%" height="15" fill="rgb(221,194,54)" fg:x="5466399050" fg:w="3009027"/><text x="54.6249%" y="847.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (4,012,036 samples, 0.04%)</title><rect x="54.4049%" y="885" width="0.0399%" height="15" fill="rgb(213,92,11)" fg:x="5469408077" fg:w="4012036"/><text x="54.6549%" y="895.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (3,009,027 samples, 0.03%)</title><rect x="54.4148%" y="869" width="0.0299%" height="15" fill="rgb(229,162,46)" fg:x="5470411086" fg:w="3009027"/><text x="54.6648%" y="879.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (3,009,027 samples, 0.03%)</title><rect x="54.4148%" y="853" width="0.0299%" height="15" fill="rgb(214,111,36)" fg:x="5470411086" fg:w="3009027"/><text x="54.6648%" y="863.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (3,009,027 samples, 0.03%)</title><rect x="54.4148%" y="837" width="0.0299%" height="15" fill="rgb(207,6,21)" fg:x="5470411086" fg:w="3009027"/><text x="54.6648%" y="847.50"></text></g><g><title>hashbrown::map::make_hash (13,039,117 samples, 0.13%)</title><rect x="54.3350%" y="917" width="0.1297%" height="15" fill="rgb(213,127,38)" fg:x="5462387014" fg:w="13039117"/><text x="54.5850%" y="927.50"></text></g><g><title>core::hash::BuildHasher::hash_one (13,039,117 samples, 0.13%)</title><rect x="54.3350%" y="901" width="0.1297%" height="15" fill="rgb(238,118,32)" fg:x="5462387014" fg:w="13039117"/><text x="54.5850%" y="911.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2,006,018 samples, 0.02%)</title><rect x="54.4448%" y="885" width="0.0200%" height="15" fill="rgb(240,139,39)" fg:x="5473420113" fg:w="2006018"/><text x="54.6948%" y="895.50"></text></g><g><title>&lt;axum::routing::RouteId as core::hash::Hash&gt;::hash (2,006,018 samples, 0.02%)</title><rect x="54.4448%" y="869" width="0.0200%" height="15" fill="rgb(235,10,37)" fg:x="5473420113" fg:w="2006018"/><text x="54.6948%" y="879.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (2,006,018 samples, 0.02%)</title><rect x="54.4448%" y="853" width="0.0200%" height="15" fill="rgb(249,171,38)" fg:x="5473420113" fg:w="2006018"/><text x="54.6948%" y="863.50"></text></g><g><title>core::hash::Hasher::write_u32 (2,006,018 samples, 0.02%)</title><rect x="54.4448%" y="837" width="0.0200%" height="15" fill="rgb(242,144,32)" fg:x="5473420113" fg:w="2006018"/><text x="54.6948%" y="847.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2,006,018 samples, 0.02%)</title><rect x="54.4448%" y="821" width="0.0200%" height="15" fill="rgb(217,117,21)" fg:x="5473420113" fg:w="2006018"/><text x="54.6948%" y="831.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2,006,018 samples, 0.02%)</title><rect x="54.4448%" y="805" width="0.0200%" height="15" fill="rgb(249,87,1)" fg:x="5473420113" fg:w="2006018"/><text x="54.6948%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2,006,018 samples, 0.02%)</title><rect x="54.4448%" y="789" width="0.0200%" height="15" fill="rgb(248,196,48)" fg:x="5473420113" fg:w="2006018"/><text x="54.6948%" y="799.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (2,006,018 samples, 0.02%)</title><rect x="54.4747%" y="869" width="0.0200%" height="15" fill="rgb(251,206,33)" fg:x="5476429140" fg:w="2006018"/><text x="54.7247%" y="879.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2,006,018 samples, 0.02%)</title><rect x="54.4747%" y="853" width="0.0200%" height="15" fill="rgb(232,141,28)" fg:x="5476429140" fg:w="2006018"/><text x="54.7247%" y="863.50"></text></g><g><title>axum::routing::Router&lt;S&gt;::call_with_state (704,112,318 samples, 7.00%)</title><rect x="47.5007%" y="997" width="7.0039%" height="15" fill="rgb(209,167,14)" fg:x="4775325849" fg:w="704112318"/><text x="47.7507%" y="1007.50">axum::rou..</text></g><g><title>axum::routing::path_router::PathRouter&lt;S,_&gt;::call_with_state (692,076,210 samples, 6.88%)</title><rect x="47.6205%" y="981" width="6.8842%" height="15" fill="rgb(225,11,50)" fg:x="4787361957" fg:w="692076210"/><text x="47.8705%" y="991.50">axum::rou..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (18,054,162 samples, 0.18%)</title><rect x="54.3251%" y="965" width="0.1796%" height="15" fill="rgb(209,50,20)" fg:x="5461384005" fg:w="18054162"/><text x="54.5751%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (18,054,162 samples, 0.18%)</title><rect x="54.3251%" y="949" width="0.1796%" height="15" fill="rgb(212,17,46)" fg:x="5461384005" fg:w="18054162"/><text x="54.5751%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (18,054,162 samples, 0.18%)</title><rect x="54.3251%" y="933" width="0.1796%" height="15" fill="rgb(216,101,39)" fg:x="5461384005" fg:w="18054162"/><text x="54.5751%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (4,012,036 samples, 0.04%)</title><rect x="54.4647%" y="917" width="0.0399%" height="15" fill="rgb(212,228,48)" fg:x="5475426131" fg:w="4012036"/><text x="54.7147%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4,012,036 samples, 0.04%)</title><rect x="54.4647%" y="901" width="0.0399%" height="15" fill="rgb(250,6,50)" fg:x="5475426131" fg:w="4012036"/><text x="54.7147%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (4,012,036 samples, 0.04%)</title><rect x="54.4647%" y="885" width="0.0399%" height="15" fill="rgb(250,160,48)" fg:x="5475426131" fg:w="4012036"/><text x="54.7147%" y="895.50"></text></g><g><title>&lt;axum::routing::Router as tower_service::Service&lt;http::request::Request&lt;B&gt;&gt;&gt;::call (706,118,336 samples, 7.02%)</title><rect x="47.4908%" y="1013" width="7.0238%" height="15" fill="rgb(244,216,33)" fg:x="4774322840" fg:w="706118336"/><text x="47.7408%" y="1023.50">&lt;axum::ro..</text></g><g><title>axum_core::body::try_downcast (11,033,099 samples, 0.11%)</title><rect x="54.5246%" y="949" width="0.1097%" height="15" fill="rgb(207,157,5)" fg:x="5481444185" fg:w="11033099"/><text x="54.7746%" y="959.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (8,024,072 samples, 0.08%)</title><rect x="54.5545%" y="933" width="0.0798%" height="15" fill="rgb(228,199,8)" fg:x="5484453212" fg:w="8024072"/><text x="54.8045%" y="943.50"></text></g><g><title>__GI___libc_malloc (19,057,171 samples, 0.19%)</title><rect x="54.6443%" y="741" width="0.1896%" height="15" fill="rgb(227,80,20)" fg:x="5493480293" fg:w="19057171"/><text x="54.8943%" y="751.50"></text></g><g><title>__rdl_alloc (4,012,036 samples, 0.04%)</title><rect x="54.8339%" y="741" width="0.0399%" height="15" fill="rgb(222,9,33)" fg:x="5512537464" fg:w="4012036"/><text x="55.0839%" y="751.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2,006,018 samples, 0.02%)</title><rect x="54.8538%" y="725" width="0.0200%" height="15" fill="rgb(239,44,28)" fg:x="5514543482" fg:w="2006018"/><text x="55.1038%" y="735.50"></text></g><g><title>http_body_util::BodyExt::boxed_unsync (27,081,243 samples, 0.27%)</title><rect x="54.6343%" y="869" width="0.2694%" height="15" fill="rgb(249,187,43)" fg:x="5492477284" fg:w="27081243"/><text x="54.8843%" y="879.50"></text></g><g><title>http_body_util::combinators::box_body::UnsyncBoxBody&lt;D,E&gt;::new (27,081,243 samples, 0.27%)</title><rect x="54.6343%" y="853" width="0.2694%" height="15" fill="rgb(216,141,28)" fg:x="5492477284" fg:w="27081243"/><text x="54.8843%" y="863.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (27,081,243 samples, 0.27%)</title><rect x="54.6343%" y="837" width="0.2694%" height="15" fill="rgb(230,154,53)" fg:x="5492477284" fg:w="27081243"/><text x="54.8843%" y="847.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (27,081,243 samples, 0.27%)</title><rect x="54.6343%" y="821" width="0.2694%" height="15" fill="rgb(227,82,4)" fg:x="5492477284" fg:w="27081243"/><text x="54.8843%" y="831.50"></text></g><g><title>alloc::alloc::exchange_malloc (27,081,243 samples, 0.27%)</title><rect x="54.6343%" y="805" width="0.2694%" height="15" fill="rgb(220,107,16)" fg:x="5492477284" fg:w="27081243"/><text x="54.8843%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (27,081,243 samples, 0.27%)</title><rect x="54.6343%" y="789" width="0.2694%" height="15" fill="rgb(207,187,2)" fg:x="5492477284" fg:w="27081243"/><text x="54.8843%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (27,081,243 samples, 0.27%)</title><rect x="54.6343%" y="773" width="0.2694%" height="15" fill="rgb(210,162,52)" fg:x="5492477284" fg:w="27081243"/><text x="54.8843%" y="783.50"></text></g><g><title>alloc::alloc::alloc (27,081,243 samples, 0.27%)</title><rect x="54.6343%" y="757" width="0.2694%" height="15" fill="rgb(217,216,49)" fg:x="5492477284" fg:w="27081243"/><text x="54.8843%" y="767.50"></text></g><g><title>__rust_alloc (3,009,027 samples, 0.03%)</title><rect x="54.8738%" y="741" width="0.0299%" height="15" fill="rgb(218,146,49)" fg:x="5516549500" fg:w="3009027"/><text x="55.1238%" y="751.50"></text></g><g><title>&lt;axum::serve::WithGracefulShutdown&lt;L,M,S,F&gt; as core::future::into_future::IntoFuture&gt;::into_future::{{closure}}::{{closure}} (40,120,360 samples, 0.40%)</title><rect x="54.5146%" y="1013" width="0.3991%" height="15" fill="rgb(216,55,40)" fg:x="5480441176" fg:w="40120360"/><text x="54.7646%" y="1023.50"></text></g><g><title>http::request::Request&lt;T&gt;::map (40,120,360 samples, 0.40%)</title><rect x="54.5146%" y="997" width="0.3991%" height="15" fill="rgb(208,196,21)" fg:x="5480441176" fg:w="40120360"/><text x="54.7646%" y="1007.50"></text></g><g><title>core::ops::function::FnOnce::call_once (39,117,351 samples, 0.39%)</title><rect x="54.5246%" y="981" width="0.3891%" height="15" fill="rgb(242,117,42)" fg:x="5481444185" fg:w="39117351"/><text x="54.7746%" y="991.50"></text></g><g><title>axum_core::body::Body::new (39,117,351 samples, 0.39%)</title><rect x="54.5246%" y="965" width="0.3891%" height="15" fill="rgb(210,11,23)" fg:x="5481444185" fg:w="39117351"/><text x="54.7746%" y="975.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (28,084,252 samples, 0.28%)</title><rect x="54.6343%" y="949" width="0.2794%" height="15" fill="rgb(217,110,2)" fg:x="5492477284" fg:w="28084252"/><text x="54.8843%" y="959.50"></text></g><g><title>axum_core::body::Body::new::{{closure}} (28,084,252 samples, 0.28%)</title><rect x="54.6343%" y="933" width="0.2794%" height="15" fill="rgb(229,77,54)" fg:x="5492477284" fg:w="28084252"/><text x="54.8843%" y="943.50"></text></g><g><title>axum_core::body::boxed (28,084,252 samples, 0.28%)</title><rect x="54.6343%" y="917" width="0.2794%" height="15" fill="rgb(218,53,16)" fg:x="5492477284" fg:w="28084252"/><text x="54.8843%" y="927.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (28,084,252 samples, 0.28%)</title><rect x="54.6343%" y="901" width="0.2794%" height="15" fill="rgb(215,38,13)" fg:x="5492477284" fg:w="28084252"/><text x="54.8843%" y="911.50"></text></g><g><title>axum_core::body::boxed::{{closure}} (28,084,252 samples, 0.28%)</title><rect x="54.6343%" y="885" width="0.2794%" height="15" fill="rgb(235,42,18)" fg:x="5492477284" fg:w="28084252"/><text x="54.8843%" y="895.50"></text></g><g><title>&lt;tower::util::map_request::MapRequest&lt;S,F&gt; as tower_service::Service&lt;R1&gt;&gt;::call (750,250,732 samples, 7.46%)</title><rect x="47.4808%" y="1029" width="7.4628%" height="15" fill="rgb(219,66,54)" fg:x="4773319831" fg:w="750250732"/><text x="47.7308%" y="1039.50">&lt;tower::ut..</text></g><g><title>__memcpy_evex_unaligned_erms (3,009,027 samples, 0.03%)</title><rect x="54.9137%" y="1013" width="0.0299%" height="15" fill="rgb(222,205,4)" fg:x="5520561536" fg:w="3009027"/><text x="55.1637%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (15,045,135 samples, 0.15%)</title><rect x="54.9436%" y="1029" width="0.1497%" height="15" fill="rgb(227,213,46)" fg:x="5523570563" fg:w="15045135"/><text x="55.1936%" y="1039.50"></text></g><g><title>__memcpy_evex_unaligned_erms (14,042,126 samples, 0.14%)</title><rect x="54.9536%" y="1013" width="0.1397%" height="15" fill="rgb(250,145,42)" fg:x="5524573572" fg:w="14042126"/><text x="55.2036%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (5,015,045 samples, 0.05%)</title><rect x="55.0933%" y="1029" width="0.0499%" height="15" fill="rgb(219,15,2)" fg:x="5538615698" fg:w="5015045"/><text x="55.3433%" y="1039.50"></text></g><g><title>core::mem::replace (5,015,045 samples, 0.05%)</title><rect x="55.0933%" y="1013" width="0.0499%" height="15" fill="rgb(231,181,52)" fg:x="5538615698" fg:w="5015045"/><text x="55.3433%" y="1023.50"></text></g><g><title>core::ptr::write (5,015,045 samples, 0.05%)</title><rect x="55.0933%" y="997" width="0.0499%" height="15" fill="rgb(235,1,42)" fg:x="5538615698" fg:w="5015045"/><text x="55.3433%" y="1007.50"></text></g><g><title>__memcpy_evex_unaligned_erms (2,006,018 samples, 0.02%)</title><rect x="55.1631%" y="1013" width="0.0200%" height="15" fill="rgb(249,88,27)" fg:x="5545636761" fg:w="2006018"/><text x="55.4131%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::routing::route::RouteFuture&lt;core::convert::Infallible&gt;&gt; (2,006,018 samples, 0.02%)</title><rect x="55.1831%" y="1013" width="0.0200%" height="15" fill="rgb(235,145,16)" fg:x="5547642779" fg:w="2006018"/><text x="55.4331%" y="1023.50"></text></g><g><title>&lt;hyper_util::service::glue::TowerToHyperServiceFuture&lt;S,R&gt; as core::future::future::Future&gt;::poll (2,905,717,073 samples, 28.90%)</title><rect x="26.5090%" y="1061" width="28.9035%" height="15" fill="rgb(237,114,19)" fg:x="2664994913" fg:w="2905717073"/><text x="26.7590%" y="1071.50">&lt;hyper_util::service::glue::TowerToHyperServic..</text></g><g><title>&lt;hyper_util::service::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (2,905,717,073 samples, 28.90%)</title><rect x="26.5090%" y="1045" width="28.9035%" height="15" fill="rgb(238,51,50)" fg:x="2664994913" fg:w="2905717073"/><text x="26.7590%" y="1055.50">&lt;hyper_util::service::oneshot::Oneshot&lt;S,Req&gt; ..</text></g><g><title>core::pin::Pin&lt;Ptr&gt;::set (27,081,243 samples, 0.27%)</title><rect x="55.1432%" y="1029" width="0.2694%" height="15" fill="rgb(205,194,25)" fg:x="5543630743" fg:w="27081243"/><text x="55.3932%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper_util::service::oneshot::Oneshot&lt;tower::util::map_request::MapRequest&lt;axum::routing::Router,&lt;axum::serve::WithGracefulShutdown&lt;tokio::net::tcp::listener::TcpListener,axum::routing::Router,axum::routing::Router,interview::shutdown_signal::{{closure}}&gt; as core::future::into_future::IntoFuture&gt;::into_future::{{closure}}::{{closure}}&gt;,http::request::Request&lt;hyper::body::incoming::Incoming&gt;&gt;&gt; (21,063,189 samples, 0.21%)</title><rect x="55.2030%" y="1013" width="0.2095%" height="15" fill="rgb(215,203,17)" fg:x="5549648797" fg:w="21063189"/><text x="55.4530%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::map_request::MapRequest&lt;axum::routing::Router,&lt;axum::serve::WithGracefulShutdown&lt;tokio::net::tcp::listener::TcpListener,axum::routing::Router,axum::routing::Router,interview::shutdown_signal::{{closure}}&gt; as core::future::into_future::IntoFuture&gt;::into_future::{{closure}}::{{closure}}&gt;&gt; (14,042,126 samples, 0.14%)</title><rect x="55.2729%" y="997" width="0.1397%" height="15" fill="rgb(233,112,49)" fg:x="5556669860" fg:w="14042126"/><text x="55.5229%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::routing::Router&gt; (14,042,126 samples, 0.14%)</title><rect x="55.2729%" y="981" width="0.1397%" height="15" fill="rgb(241,130,26)" fg:x="5556669860" fg:w="14042126"/><text x="55.5229%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;axum::routing::RouterInner&lt;()&gt;&gt;&gt; (14,042,126 samples, 0.14%)</title><rect x="55.2729%" y="965" width="0.1397%" height="15" fill="rgb(252,223,19)" fg:x="5556669860" fg:w="14042126"/><text x="55.5229%" y="975.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14,042,126 samples, 0.14%)</title><rect x="55.2729%" y="949" width="0.1397%" height="15" fill="rgb(211,95,25)" fg:x="5556669860" fg:w="14042126"/><text x="55.5229%" y="959.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::set (5,015,045 samples, 0.05%)</title><rect x="55.4126%" y="1061" width="0.0499%" height="15" fill="rgb(251,182,27)" fg:x="5570711986" fg:w="5015045"/><text x="55.6626%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::proto::h2::server::H2StreamState&lt;hyper_util::service::glue::TowerToHyperServiceFuture&lt;tower::util::map_request::MapRequest&lt;axum::routing::Router,&lt;axum::serve::WithGracefulShutdown&lt;tokio::net::tcp::listener::TcpListener,axum::routing::Router,axum::routing::Router,interview::shutdown_signal::{{closure}}&gt; as core::future::into_future::IntoFuture&gt;::into_future::{{closure}}::{{closure}}&gt;,http::request::Request&lt;hyper::body::incoming::Incoming&gt;&gt;,axum_core::body::Body&gt;&gt; (4,012,036 samples, 0.04%)</title><rect x="55.4225%" y="1045" width="0.0399%" height="15" fill="rgb(238,24,4)" fg:x="5571714995" fg:w="4012036"/><text x="55.6725%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;h2::proto::streams::streams::SendBuffer&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt;&gt;&gt;&gt; (2,006,018 samples, 0.02%)</title><rect x="55.4824%" y="1029" width="0.0200%" height="15" fill="rgb(224,220,25)" fg:x="5577733049" fg:w="2006018"/><text x="55.7324%" y="1039.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,006,018 samples, 0.02%)</title><rect x="55.4824%" y="1013" width="0.0200%" height="15" fill="rgb(239,133,26)" fg:x="5577733049" fg:w="2006018"/><text x="55.7324%" y="1023.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::wake (2,006,018 samples, 0.02%)</title><rect x="55.5522%" y="933" width="0.0200%" height="15" fill="rgb(211,94,48)" fg:x="5584754112" fg:w="2006018"/><text x="55.8022%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::poison::mutex::MutexGuard&lt;h2::proto::streams::streams::Inner&gt;&gt; (12,036,108 samples, 0.12%)</title><rect x="55.5323%" y="981" width="0.1197%" height="15" fill="rgb(239,87,6)" fg:x="5582748094" fg:w="12036108"/><text x="55.7823%" y="991.50"></text></g><g><title>&lt;std::sync::poison::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12,036,108 samples, 0.12%)</title><rect x="55.5323%" y="965" width="0.1197%" height="15" fill="rgb(227,62,0)" fg:x="5582748094" fg:w="12036108"/><text x="55.7823%" y="975.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (12,036,108 samples, 0.12%)</title><rect x="55.5323%" y="949" width="0.1197%" height="15" fill="rgb(211,226,4)" fg:x="5582748094" fg:w="12036108"/><text x="55.7823%" y="959.50"></text></g><g><title>syscall (8,024,072 samples, 0.08%)</title><rect x="55.5722%" y="933" width="0.0798%" height="15" fill="rgb(253,38,52)" fg:x="5586760130" fg:w="8024072"/><text x="55.8222%" y="943.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::Deref&gt;::deref (2,006,018 samples, 0.02%)</title><rect x="55.6620%" y="949" width="0.0200%" height="15" fill="rgb(229,126,40)" fg:x="5595787211" fg:w="2006018"/><text x="55.9120%" y="959.50"></text></g><g><title>h2::proto::streams::counts::Counts::transition (4,012,036 samples, 0.04%)</title><rect x="55.6520%" y="981" width="0.0399%" height="15" fill="rgb(229,165,44)" fg:x="5594784202" fg:w="4012036"/><text x="55.9020%" y="991.50"></text></g><g><title>h2::proto::streams::counts::Counts::transition_after (4,012,036 samples, 0.04%)</title><rect x="55.6520%" y="965" width="0.0399%" height="15" fill="rgb(247,95,47)" fg:x="5594784202" fg:w="4012036"/><text x="55.9020%" y="975.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (9,027,081 samples, 0.09%)</title><rect x="55.7418%" y="933" width="0.0898%" height="15" fill="rgb(216,140,30)" fg:x="5603811283" fg:w="9027081"/><text x="55.9918%" y="943.50"></text></g><g><title>syscall (9,027,081 samples, 0.09%)</title><rect x="55.7418%" y="917" width="0.0898%" height="15" fill="rgb(246,214,8)" fg:x="5603811283" fg:w="9027081"/><text x="55.9918%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;h2::share::SendStream&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt;&gt;&gt; (42,126,378 samples, 0.42%)</title><rect x="55.4624%" y="1061" width="0.4190%" height="15" fill="rgb(227,224,15)" fg:x="5575727031" fg:w="42126378"/><text x="55.7124%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;h2::proto::streams::streams::StreamRef&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt;&gt;&gt; (42,126,378 samples, 0.42%)</title><rect x="55.4624%" y="1045" width="0.4190%" height="15" fill="rgb(233,175,4)" fg:x="5575727031" fg:w="42126378"/><text x="55.7124%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;h2::proto::streams::streams::OpaqueStreamRef&gt; (38,114,342 samples, 0.38%)</title><rect x="55.5023%" y="1029" width="0.3791%" height="15" fill="rgb(221,66,45)" fg:x="5579739067" fg:w="38114342"/><text x="55.7523%" y="1039.50"></text></g><g><title>&lt;h2::proto::streams::streams::OpaqueStreamRef as core::ops::drop::Drop&gt;::drop (38,114,342 samples, 0.38%)</title><rect x="55.5023%" y="1013" width="0.3791%" height="15" fill="rgb(221,178,18)" fg:x="5579739067" fg:w="38114342"/><text x="55.7523%" y="1023.50"></text></g><g><title>h2::proto::streams::streams::drop_stream_ref (36,108,324 samples, 0.36%)</title><rect x="55.5223%" y="997" width="0.3592%" height="15" fill="rgb(213,81,29)" fg:x="5581745085" fg:w="36108324"/><text x="55.7723%" y="1007.50"></text></g><g><title>std::sync::poison::mutex::Mutex&lt;T&gt;::lock (19,057,171 samples, 0.19%)</title><rect x="55.6919%" y="981" width="0.1896%" height="15" fill="rgb(220,89,49)" fg:x="5598796238" fg:w="19057171"/><text x="55.9419%" y="991.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (19,057,171 samples, 0.19%)</title><rect x="55.6919%" y="965" width="0.1896%" height="15" fill="rgb(227,60,33)" fg:x="5598796238" fg:w="19057171"/><text x="55.9419%" y="975.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (16,048,144 samples, 0.16%)</title><rect x="55.7218%" y="949" width="0.1596%" height="15" fill="rgb(205,113,12)" fg:x="5601805265" fg:w="16048144"/><text x="55.9718%" y="959.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (5,015,045 samples, 0.05%)</title><rect x="55.8316%" y="933" width="0.0499%" height="15" fill="rgb(211,32,1)" fg:x="5612838364" fg:w="5015045"/><text x="56.0816%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (2,006,018 samples, 0.02%)</title><rect x="55.8615%" y="917" width="0.0200%" height="15" fill="rgb(246,2,12)" fg:x="5615847391" fg:w="2006018"/><text x="56.1115%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_load (2,006,018 samples, 0.02%)</title><rect x="55.8615%" y="901" width="0.0200%" height="15" fill="rgb(243,37,27)" fg:x="5615847391" fg:w="2006018"/><text x="56.1115%" y="911.50"></text></g><g><title>h2::proto::streams::send::Send::poll_reset (2,006,018 samples, 0.02%)</title><rect x="55.8914%" y="1029" width="0.0200%" height="15" fill="rgb(248,211,31)" fg:x="5618856418" fg:w="2006018"/><text x="56.1414%" y="1039.50"></text></g><g><title>h2::server::SendResponse&lt;B&gt;::poll_reset (4,012,036 samples, 0.04%)</title><rect x="55.8815%" y="1061" width="0.0399%" height="15" fill="rgb(242,146,47)" fg:x="5617853409" fg:w="4012036"/><text x="56.1315%" y="1071.50"></text></g><g><title>h2::proto::streams::streams::StreamRef&lt;B&gt;::poll_reset (4,012,036 samples, 0.04%)</title><rect x="55.8815%" y="1045" width="0.0399%" height="15" fill="rgb(206,70,20)" fg:x="5617853409" fg:w="4012036"/><text x="56.1315%" y="1055.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (4,012,036 samples, 0.04%)</title><rect x="55.9413%" y="997" width="0.0399%" height="15" fill="rgb(215,10,51)" fg:x="5623871463" fg:w="4012036"/><text x="56.1913%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (4,012,036 samples, 0.04%)</title><rect x="55.9413%" y="981" width="0.0399%" height="15" fill="rgb(243,178,53)" fg:x="5623871463" fg:w="4012036"/><text x="56.1913%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_add (4,012,036 samples, 0.04%)</title><rect x="55.9413%" y="965" width="0.0399%" height="15" fill="rgb(233,221,20)" fg:x="5623871463" fg:w="4012036"/><text x="56.1913%" y="975.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (7,021,063 samples, 0.07%)</title><rect x="56.0012%" y="981" width="0.0698%" height="15" fill="rgb(218,95,35)" fg:x="5629889517" fg:w="7021063"/><text x="56.2512%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2,006,018 samples, 0.02%)</title><rect x="56.0511%" y="965" width="0.0200%" height="15" fill="rgb(229,13,5)" fg:x="5634904562" fg:w="2006018"/><text x="56.3011%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_add (2,006,018 samples, 0.02%)</title><rect x="56.0511%" y="949" width="0.0200%" height="15" fill="rgb(252,164,30)" fg:x="5634904562" fg:w="2006018"/><text x="56.3011%" y="959.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2,006,018 samples, 0.02%)</title><rect x="56.0710%" y="981" width="0.0200%" height="15" fill="rgb(232,68,36)" fg:x="5636910580" fg:w="2006018"/><text x="56.3210%" y="991.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (2,006,018 samples, 0.02%)</title><rect x="56.0710%" y="965" width="0.0200%" height="15" fill="rgb(219,59,54)" fg:x="5636910580" fg:w="2006018"/><text x="56.3210%" y="975.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (2,006,018 samples, 0.02%)</title><rect x="56.0710%" y="949" width="0.0200%" height="15" fill="rgb(250,92,33)" fg:x="5636910580" fg:w="2006018"/><text x="56.3210%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::poison::mutex::MutexGuard&lt;h2::proto::streams::streams::Inner&gt;&gt; (35,105,315 samples, 0.35%)</title><rect x="56.0910%" y="981" width="0.3492%" height="15" fill="rgb(229,162,54)" fg:x="5638916598" fg:w="35105315"/><text x="56.3410%" y="991.50"></text></g><g><title>&lt;std::sync::poison::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (35,105,315 samples, 0.35%)</title><rect x="56.0910%" y="965" width="0.3492%" height="15" fill="rgb(244,114,52)" fg:x="5638916598" fg:w="35105315"/><text x="56.3410%" y="975.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (35,105,315 samples, 0.35%)</title><rect x="56.0910%" y="949" width="0.3492%" height="15" fill="rgb(212,211,43)" fg:x="5638916598" fg:w="35105315"/><text x="56.3410%" y="959.50"></text></g><g><title>syscall (27,081,243 samples, 0.27%)</title><rect x="56.1708%" y="933" width="0.2694%" height="15" fill="rgb(226,147,8)" fg:x="5646940670" fg:w="27081243"/><text x="56.4208%" y="943.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (18,054,162 samples, 0.18%)</title><rect x="56.6198%" y="933" width="0.1796%" height="15" fill="rgb(226,23,13)" fg:x="5692076075" fg:w="18054162"/><text x="56.8698%" y="943.50"></text></g><g><title>syscall (16,048,144 samples, 0.16%)</title><rect x="56.6397%" y="917" width="0.1596%" height="15" fill="rgb(240,63,4)" fg:x="5694082093" fg:w="16048144"/><text x="56.8897%" y="927.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (113,340,017 samples, 1.13%)</title><rect x="55.9214%" y="1045" width="1.1274%" height="15" fill="rgb(221,1,32)" fg:x="5621865445" fg:w="113340017"/><text x="56.1714%" y="1055.50"></text></g><g><title>h2::server::SendResponse&lt;B&gt;::send_response::{{closure}} (112,337,008 samples, 1.12%)</title><rect x="55.9314%" y="1029" width="1.1174%" height="15" fill="rgb(242,117,10)" fg:x="5622868454" fg:w="112337008"/><text x="56.1814%" y="1039.50"></text></g><g><title>&lt;h2::proto::streams::streams::StreamRef&lt;B&gt; as core::clone::Clone&gt;::clone (112,337,008 samples, 1.12%)</title><rect x="55.9314%" y="1013" width="1.1174%" height="15" fill="rgb(249,172,44)" fg:x="5622868454" fg:w="112337008"/><text x="56.1814%" y="1023.50"></text></g><g><title>&lt;h2::proto::streams::streams::OpaqueStreamRef as core::clone::Clone&gt;::clone (107,321,963 samples, 1.07%)</title><rect x="55.9812%" y="997" width="1.0675%" height="15" fill="rgb(244,46,45)" fg:x="5627883499" fg:w="107321963"/><text x="56.2312%" y="1007.50"></text></g><g><title>std::sync::poison::mutex::Mutex&lt;T&gt;::lock (61,183,549 samples, 0.61%)</title><rect x="56.4402%" y="981" width="0.6086%" height="15" fill="rgb(206,43,17)" fg:x="5674021913" fg:w="61183549"/><text x="56.6902%" y="991.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (61,183,549 samples, 0.61%)</title><rect x="56.4402%" y="965" width="0.6086%" height="15" fill="rgb(239,218,39)" fg:x="5674021913" fg:w="61183549"/><text x="56.6902%" y="975.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (53,159,477 samples, 0.53%)</title><rect x="56.5200%" y="949" width="0.5288%" height="15" fill="rgb(208,169,54)" fg:x="5682045985" fg:w="53159477"/><text x="56.7700%" y="959.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (25,075,225 samples, 0.25%)</title><rect x="56.7994%" y="933" width="0.2494%" height="15" fill="rgb(247,25,42)" fg:x="5710130237" fg:w="25075225"/><text x="57.0494%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (16,048,144 samples, 0.16%)</title><rect x="56.8892%" y="917" width="0.1596%" height="15" fill="rgb(226,23,31)" fg:x="5719157318" fg:w="16048144"/><text x="57.1392%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_load (16,048,144 samples, 0.16%)</title><rect x="56.8892%" y="901" width="0.1596%" height="15" fill="rgb(247,16,28)" fg:x="5719157318" fg:w="16048144"/><text x="57.1392%" y="911.50"></text></g><g><title>std::sync::poison::Flag::done (2,006,018 samples, 0.02%)</title><rect x="57.0987%" y="997" width="0.0200%" height="15" fill="rgb(231,147,38)" fg:x="5740220507" fg:w="2006018"/><text x="57.3487%" y="1007.50"></text></g><g><title>std::thread::panicking (2,006,018 samples, 0.02%)</title><rect x="57.0987%" y="981" width="0.0200%" height="15" fill="rgb(253,81,48)" fg:x="5740220507" fg:w="2006018"/><text x="57.3487%" y="991.50"></text></g><g><title>std::panicking::panicking (2,006,018 samples, 0.02%)</title><rect x="57.0987%" y="965" width="0.0200%" height="15" fill="rgb(249,222,43)" fg:x="5740220507" fg:w="2006018"/><text x="57.3487%" y="975.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (2,006,018 samples, 0.02%)</title><rect x="57.0987%" y="949" width="0.0200%" height="15" fill="rgb(221,3,27)" fg:x="5740220507" fg:w="2006018"/><text x="57.3487%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::poison::mutex::MutexGuard&lt;h2::proto::streams::buffer::Buffer&lt;h2::frame::Frame&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt;&gt;&gt;&gt;&gt; (8,024,072 samples, 0.08%)</title><rect x="57.0987%" y="1029" width="0.0798%" height="15" fill="rgb(228,180,5)" fg:x="5740220507" fg:w="8024072"/><text x="57.3487%" y="1039.50"></text></g><g><title>&lt;std::sync::poison::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8,024,072 samples, 0.08%)</title><rect x="57.0987%" y="1013" width="0.0798%" height="15" fill="rgb(227,131,42)" fg:x="5740220507" fg:w="8024072"/><text x="57.3487%" y="1023.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (6,018,054 samples, 0.06%)</title><rect x="57.1186%" y="997" width="0.0599%" height="15" fill="rgb(212,3,39)" fg:x="5742226525" fg:w="6018054"/><text x="57.3686%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::poison::mutex::MutexGuard&lt;h2::proto::streams::streams::Inner&gt;&gt; (47,141,423 samples, 0.47%)</title><rect x="57.1785%" y="1029" width="0.4689%" height="15" fill="rgb(226,45,5)" fg:x="5748244579" fg:w="47141423"/><text x="57.4285%" y="1039.50"></text></g><g><title>&lt;std::sync::poison::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (47,141,423 samples, 0.47%)</title><rect x="57.1785%" y="1013" width="0.4689%" height="15" fill="rgb(215,167,45)" fg:x="5748244579" fg:w="47141423"/><text x="57.4285%" y="1023.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (47,141,423 samples, 0.47%)</title><rect x="57.1785%" y="997" width="0.4689%" height="15" fill="rgb(250,218,53)" fg:x="5748244579" fg:w="47141423"/><text x="57.4285%" y="1007.50"></text></g><g><title>syscall (39,117,351 samples, 0.39%)</title><rect x="57.2583%" y="981" width="0.3891%" height="15" fill="rgb(207,140,0)" fg:x="5756268651" fg:w="39117351"/><text x="57.5083%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2,006,018 samples, 0.02%)</title><rect x="57.6873%" y="965" width="0.0200%" height="15" fill="rgb(238,133,51)" fg:x="5799398038" fg:w="2006018"/><text x="57.9373%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (2,006,018 samples, 0.02%)</title><rect x="57.6873%" y="949" width="0.0200%" height="15" fill="rgb(218,203,53)" fg:x="5799398038" fg:w="2006018"/><text x="57.9373%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (2,006,018 samples, 0.02%)</title><rect x="57.6873%" y="933" width="0.0200%" height="15" fill="rgb(226,184,25)" fg:x="5799398038" fg:w="2006018"/><text x="57.9373%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2,006,018 samples, 0.02%)</title><rect x="57.6873%" y="917" width="0.0200%" height="15" fill="rgb(231,121,21)" fg:x="5799398038" fg:w="2006018"/><text x="57.9373%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (2,006,018 samples, 0.02%)</title><rect x="57.6873%" y="901" width="0.0200%" height="15" fill="rgb(251,14,34)" fg:x="5799398038" fg:w="2006018"/><text x="57.9373%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (2,006,018 samples, 0.02%)</title><rect x="57.6873%" y="885" width="0.0200%" height="15" fill="rgb(249,193,11)" fg:x="5799398038" fg:w="2006018"/><text x="57.9373%" y="895.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::Deref&gt;::deref (6,018,054 samples, 0.06%)</title><rect x="57.6674%" y="1013" width="0.0599%" height="15" fill="rgb(220,172,37)" fg:x="5797392020" fg:w="6018054"/><text x="57.9174%" y="1023.50"></text></g><g><title>&lt;h2::proto::streams::store::Store as core::ops::index::Index&lt;h2::proto::streams::store::Key&gt;&gt;::index (5,015,045 samples, 0.05%)</title><rect x="57.6773%" y="997" width="0.0499%" height="15" fill="rgb(231,229,43)" fg:x="5798395029" fg:w="5015045"/><text x="57.9273%" y="1007.50"></text></g><g><title>slab::Slab&lt;T&gt;::get (4,012,036 samples, 0.04%)</title><rect x="57.6873%" y="981" width="0.0399%" height="15" fill="rgb(250,161,5)" fg:x="5799398038" fg:w="4012036"/><text x="57.9373%" y="991.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (2,006,018 samples, 0.02%)</title><rect x="57.7073%" y="965" width="0.0200%" height="15" fill="rgb(218,225,18)" fg:x="5801404056" fg:w="2006018"/><text x="57.9573%" y="975.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (2,006,018 samples, 0.02%)</title><rect x="57.7073%" y="949" width="0.0200%" height="15" fill="rgb(245,45,42)" fg:x="5801404056" fg:w="2006018"/><text x="57.9573%" y="959.50"></text></g><g><title>core::slice::index::get_noubcheck (2,006,018 samples, 0.02%)</title><rect x="57.7073%" y="933" width="0.0200%" height="15" fill="rgb(211,115,1)" fg:x="5801404056" fg:w="2006018"/><text x="57.9573%" y="943.50"></text></g><g><title>h2::proto::streams::counts::Counts::transition_after (10,030,090 samples, 0.10%)</title><rect x="57.7272%" y="1013" width="0.0998%" height="15" fill="rgb(248,133,52)" fg:x="5803410074" fg:w="10030090"/><text x="57.9772%" y="1023.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (8,024,072 samples, 0.08%)</title><rect x="57.9367%" y="981" width="0.0798%" height="15" fill="rgb(238,100,21)" fg:x="5824473263" fg:w="8024072"/><text x="58.1867%" y="991.50"></text></g><g><title>h2::frame::headers::&lt;impl core::convert::From&lt;h2::frame::headers::Headers&gt; for h2::frame::Frame&lt;T&gt;&gt;::from (8,024,072 samples, 0.08%)</title><rect x="57.9367%" y="965" width="0.0798%" height="15" fill="rgb(247,144,11)" fg:x="5824473263" fg:w="8024072"/><text x="58.1867%" y="975.50"></text></g><g><title>__memcpy_evex_unaligned_erms (8,024,072 samples, 0.08%)</title><rect x="57.9367%" y="949" width="0.0798%" height="15" fill="rgb(206,164,16)" fg:x="5824473263" fg:w="8024072"/><text x="58.1867%" y="959.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::DerefMut&gt;::deref_mut (4,012,036 samples, 0.04%)</title><rect x="58.0166%" y="981" width="0.0399%" height="15" fill="rgb(222,34,3)" fg:x="5832497335" fg:w="4012036"/><text x="58.2666%" y="991.50"></text></g><g><title>&lt;h2::proto::streams::store::Store as core::ops::index::IndexMut&lt;h2::proto::streams::store::Key&gt;&gt;::index_mut (2,006,018 samples, 0.02%)</title><rect x="58.0365%" y="965" width="0.0200%" height="15" fill="rgb(248,82,4)" fg:x="5834503353" fg:w="2006018"/><text x="58.2865%" y="975.50"></text></g><g><title>h2::proto::peer::Dyn::is_local_init (3,009,027 samples, 0.03%)</title><rect x="58.0664%" y="981" width="0.0299%" height="15" fill="rgb(228,81,46)" fg:x="5837512380" fg:w="3009027"/><text x="58.3164%" y="991.50"></text></g><g><title>h2::proto::streams::counts::Counts::peer (3,009,027 samples, 0.03%)</title><rect x="58.0964%" y="981" width="0.0299%" height="15" fill="rgb(227,67,47)" fg:x="5840521407" fg:w="3009027"/><text x="58.3464%" y="991.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::Deref&gt;::deref (2,006,018 samples, 0.02%)</title><rect x="58.1662%" y="965" width="0.0200%" height="15" fill="rgb(215,93,53)" fg:x="5847542470" fg:w="2006018"/><text x="58.4162%" y="975.50"></text></g><g><title>&lt;h2::proto::streams::store::Store as core::ops::index::Index&lt;h2::proto::streams::store::Key&gt;&gt;::index (2,006,018 samples, 0.02%)</title><rect x="58.1662%" y="949" width="0.0200%" height="15" fill="rgb(248,194,39)" fg:x="5847542470" fg:w="2006018"/><text x="58.4162%" y="959.50"></text></g><g><title>slab::Slab&lt;T&gt;::get (2,006,018 samples, 0.02%)</title><rect x="58.1662%" y="933" width="0.0200%" height="15" fill="rgb(215,5,19)" fg:x="5847542470" fg:w="2006018"/><text x="58.4162%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2,006,018 samples, 0.02%)</title><rect x="58.1662%" y="917" width="0.0200%" height="15" fill="rgb(226,215,51)" fg:x="5847542470" fg:w="2006018"/><text x="58.4162%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (2,006,018 samples, 0.02%)</title><rect x="58.1662%" y="901" width="0.0200%" height="15" fill="rgb(225,56,26)" fg:x="5847542470" fg:w="2006018"/><text x="58.4162%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (2,006,018 samples, 0.02%)</title><rect x="58.1662%" y="885" width="0.0200%" height="15" fill="rgb(222,75,29)" fg:x="5847542470" fg:w="2006018"/><text x="58.4162%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2,006,018 samples, 0.02%)</title><rect x="58.1662%" y="869" width="0.0200%" height="15" fill="rgb(236,139,6)" fg:x="5847542470" fg:w="2006018"/><text x="58.4162%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (2,006,018 samples, 0.02%)</title><rect x="58.1662%" y="853" width="0.0200%" height="15" fill="rgb(223,137,36)" fg:x="5847542470" fg:w="2006018"/><text x="58.4162%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (2,006,018 samples, 0.02%)</title><rect x="58.1662%" y="837" width="0.0200%" height="15" fill="rgb(226,99,2)" fg:x="5847542470" fg:w="2006018"/><text x="58.4162%" y="847.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::DerefMut&gt;::deref_mut (3,009,027 samples, 0.03%)</title><rect x="58.1862%" y="965" width="0.0299%" height="15" fill="rgb(206,133,23)" fg:x="5849548488" fg:w="3009027"/><text x="58.4362%" y="975.50"></text></g><g><title>&lt;tracing_core::field::Iter as core::iter::traits::iterator::Iterator&gt;::next (6,018,054 samples, 0.06%)</title><rect x="58.2261%" y="965" width="0.0599%" height="15" fill="rgb(243,173,15)" fg:x="5853560524" fg:w="6018054"/><text x="58.4761%" y="975.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (6,018,054 samples, 0.06%)</title><rect x="58.2261%" y="949" width="0.0599%" height="15" fill="rgb(228,69,28)" fg:x="5853560524" fg:w="6018054"/><text x="58.4761%" y="959.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (6,018,054 samples, 0.06%)</title><rect x="58.2261%" y="933" width="0.0599%" height="15" fill="rgb(212,51,22)" fg:x="5853560524" fg:w="6018054"/><text x="58.4761%" y="943.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (6,018,054 samples, 0.06%)</title><rect x="58.2261%" y="917" width="0.0599%" height="15" fill="rgb(227,113,0)" fg:x="5853560524" fg:w="6018054"/><text x="58.4761%" y="927.50"></text></g><g><title>__memcpy_evex_unaligned_erms (7,021,063 samples, 0.07%)</title><rect x="58.2959%" y="965" width="0.0698%" height="15" fill="rgb(252,84,27)" fg:x="5860581587" fg:w="7021063"/><text x="58.5459%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (5,015,045 samples, 0.05%)</title><rect x="58.3757%" y="965" width="0.0499%" height="15" fill="rgb(223,145,39)" fg:x="5868605659" fg:w="5015045"/><text x="58.6257%" y="975.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (5,015,045 samples, 0.05%)</title><rect x="58.3757%" y="949" width="0.0499%" height="15" fill="rgb(239,219,30)" fg:x="5868605659" fg:w="5015045"/><text x="58.6257%" y="959.50"></text></g><g><title>tracing::span::Span::do_exit (5,015,045 samples, 0.05%)</title><rect x="58.3757%" y="933" width="0.0499%" height="15" fill="rgb(224,196,39)" fg:x="5868605659" fg:w="5015045"/><text x="58.6257%" y="943.50"></text></g><g><title>tracing::span::Span::log (3,009,027 samples, 0.03%)</title><rect x="58.3957%" y="917" width="0.0299%" height="15" fill="rgb(205,35,43)" fg:x="5870611677" fg:w="3009027"/><text x="58.6457%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (8,024,072 samples, 0.08%)</title><rect x="58.4256%" y="965" width="0.0798%" height="15" fill="rgb(228,201,21)" fg:x="5873620704" fg:w="8024072"/><text x="58.6756%" y="975.50"></text></g><g><title>&lt;tracing::span::Span as core::ops::drop::Drop&gt;::drop (8,024,072 samples, 0.08%)</title><rect x="58.4256%" y="949" width="0.0798%" height="15" fill="rgb(237,118,16)" fg:x="5873620704" fg:w="8024072"/><text x="58.6756%" y="959.50"></text></g><g><title>tracing::span::Span::log (5,015,045 samples, 0.05%)</title><rect x="58.4556%" y="933" width="0.0499%" height="15" fill="rgb(241,17,19)" fg:x="5876629731" fg:w="5015045"/><text x="58.7056%" y="943.50"></text></g><g><title>__memcpy_evex_unaligned_erms (6,018,054 samples, 0.06%)</title><rect x="58.5354%" y="933" width="0.0599%" height="15" fill="rgb(214,10,25)" fg:x="5884653803" fg:w="6018054"/><text x="58.7854%" y="943.50"></text></g><g><title>h2::proto::streams::buffer::Deque::push_back (23,069,207 samples, 0.23%)</title><rect x="58.5054%" y="965" width="0.2295%" height="15" fill="rgb(238,37,29)" fg:x="5881644776" fg:w="23069207"/><text x="58.7554%" y="975.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert (23,069,207 samples, 0.23%)</title><rect x="58.5054%" y="949" width="0.2295%" height="15" fill="rgb(253,83,25)" fg:x="5881644776" fg:w="23069207"/><text x="58.7554%" y="959.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert_at (14,042,126 samples, 0.14%)</title><rect x="58.5952%" y="933" width="0.1397%" height="15" fill="rgb(234,192,12)" fg:x="5890671857" fg:w="14042126"/><text x="58.8452%" y="943.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (2,006,018 samples, 0.02%)</title><rect x="58.7150%" y="917" width="0.0200%" height="15" fill="rgb(241,216,45)" fg:x="5902707965" fg:w="2006018"/><text x="58.9650%" y="927.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (2,006,018 samples, 0.02%)</title><rect x="58.7150%" y="901" width="0.0200%" height="15" fill="rgb(242,22,33)" fg:x="5902707965" fg:w="2006018"/><text x="58.9650%" y="911.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::Deref&gt;::deref (2,006,018 samples, 0.02%)</title><rect x="58.7648%" y="949" width="0.0200%" height="15" fill="rgb(231,105,49)" fg:x="5907723010" fg:w="2006018"/><text x="59.0148%" y="959.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (5,015,045 samples, 0.05%)</title><rect x="58.7848%" y="949" width="0.0499%" height="15" fill="rgb(218,204,15)" fg:x="5909729028" fg:w="5015045"/><text x="59.0348%" y="959.50"></text></g><g><title>core::mem::replace (5,015,045 samples, 0.05%)</title><rect x="58.7848%" y="933" width="0.0499%" height="15" fill="rgb(235,138,41)" fg:x="5909729028" fg:w="5015045"/><text x="59.0348%" y="943.50"></text></g><g><title>core::ptr::read (5,015,045 samples, 0.05%)</title><rect x="58.7848%" y="917" width="0.0499%" height="15" fill="rgb(246,0,9)" fg:x="5909729028" fg:w="5015045"/><text x="59.0348%" y="927.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::drop_reference (2,006,018 samples, 0.02%)</title><rect x="58.8846%" y="901" width="0.0200%" height="15" fill="rgb(210,74,4)" fg:x="5919759118" fg:w="2006018"/><text x="59.1346%" y="911.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (2,006,018 samples, 0.02%)</title><rect x="58.8846%" y="885" width="0.0200%" height="15" fill="rgb(250,60,41)" fg:x="5919759118" fg:w="2006018"/><text x="59.1346%" y="895.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (10,030,090 samples, 0.10%)</title><rect x="58.9045%" y="885" width="0.0998%" height="15" fill="rgb(220,115,12)" fg:x="5921765136" fg:w="10030090"/><text x="59.1545%" y="895.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (10,030,090 samples, 0.10%)</title><rect x="58.9045%" y="869" width="0.0998%" height="15" fill="rgb(237,100,13)" fg:x="5921765136" fg:w="10030090"/><text x="59.1545%" y="879.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (10,030,090 samples, 0.10%)</title><rect x="58.9045%" y="853" width="0.0998%" height="15" fill="rgb(213,55,26)" fg:x="5921765136" fg:w="10030090"/><text x="59.1545%" y="863.50"></text></g><g><title>tokio::runtime::context::with_scheduler (10,030,090 samples, 0.10%)</title><rect x="58.9045%" y="837" width="0.0998%" height="15" fill="rgb(216,17,4)" fg:x="5921765136" fg:w="10030090"/><text x="59.1545%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6,018,054 samples, 0.06%)</title><rect x="58.9444%" y="821" width="0.0599%" height="15" fill="rgb(220,153,47)" fg:x="5925777172" fg:w="6018054"/><text x="59.1944%" y="831.50"></text></g><g><title>tokio::runtime::context::with_scheduler::{{closure}} (6,018,054 samples, 0.06%)</title><rect x="58.9444%" y="805" width="0.0599%" height="15" fill="rgb(215,131,9)" fg:x="5925777172" fg:w="6018054"/><text x="59.1944%" y="815.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (6,018,054 samples, 0.06%)</title><rect x="58.9444%" y="789" width="0.0599%" height="15" fill="rgb(233,46,42)" fg:x="5925777172" fg:w="6018054"/><text x="59.1944%" y="799.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current::{{closure}} (6,018,054 samples, 0.06%)</title><rect x="58.9444%" y="773" width="0.0599%" height="15" fill="rgb(226,86,7)" fg:x="5925777172" fg:w="6018054"/><text x="59.1944%" y="783.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::{{closure}} (5,015,045 samples, 0.05%)</title><rect x="58.9544%" y="757" width="0.0499%" height="15" fill="rgb(239,226,21)" fg:x="5926780181" fg:w="5015045"/><text x="59.2044%" y="767.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (5,015,045 samples, 0.05%)</title><rect x="58.9544%" y="741" width="0.0499%" height="15" fill="rgb(244,137,22)" fg:x="5926780181" fg:w="5015045"/><text x="59.2044%" y="751.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::schedule (11,033,099 samples, 0.11%)</title><rect x="58.9045%" y="901" width="0.1097%" height="15" fill="rgb(211,139,35)" fg:x="5921765136" fg:w="11033099"/><text x="59.1545%" y="911.50"></text></g><g><title>core::task::wake::Waker::wake (30,090,270 samples, 0.30%)</title><rect x="58.8347%" y="949" width="0.2993%" height="15" fill="rgb(214,62,50)" fg:x="5914744073" fg:w="30090270"/><text x="59.0847%" y="959.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (30,090,270 samples, 0.30%)</title><rect x="58.8347%" y="933" width="0.2993%" height="15" fill="rgb(212,113,44)" fg:x="5914744073" fg:w="30090270"/><text x="59.0847%" y="943.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (25,075,225 samples, 0.25%)</title><rect x="58.8846%" y="917" width="0.2494%" height="15" fill="rgb(226,150,43)" fg:x="5919759118" fg:w="25075225"/><text x="59.1346%" y="927.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (12,036,108 samples, 0.12%)</title><rect x="59.0143%" y="901" width="0.1197%" height="15" fill="rgb(250,71,37)" fg:x="5932798235" fg:w="12036108"/><text x="59.2643%" y="911.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (11,033,099 samples, 0.11%)</title><rect x="59.0242%" y="885" width="0.1097%" height="15" fill="rgb(219,76,19)" fg:x="5933801244" fg:w="11033099"/><text x="59.2742%" y="895.50"></text></g><g><title>tokio::runtime::task::state::State::load (6,018,054 samples, 0.06%)</title><rect x="59.0741%" y="869" width="0.0599%" height="15" fill="rgb(250,39,11)" fg:x="5938816289" fg:w="6018054"/><text x="59.3241%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (6,018,054 samples, 0.06%)</title><rect x="59.0741%" y="853" width="0.0599%" height="15" fill="rgb(230,64,31)" fg:x="5938816289" fg:w="6018054"/><text x="59.3241%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_load (6,018,054 samples, 0.06%)</title><rect x="59.0741%" y="837" width="0.0599%" height="15" fill="rgb(208,222,23)" fg:x="5938816289" fg:w="6018054"/><text x="59.3241%" y="847.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::Deref&gt;::deref (5,015,045 samples, 0.05%)</title><rect x="59.2737%" y="933" width="0.0499%" height="15" fill="rgb(227,125,18)" fg:x="5958876469" fg:w="5015045"/><text x="59.5237%" y="943.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::DerefMut&gt;::deref_mut (4,012,036 samples, 0.04%)</title><rect x="59.3236%" y="933" width="0.0399%" height="15" fill="rgb(234,210,9)" fg:x="5963891514" fg:w="4012036"/><text x="59.5736%" y="943.50"></text></g><g><title>&lt;h2::proto::streams::store::Store as core::ops::index::IndexMut&lt;h2::proto::streams::store::Key&gt;&gt;::index_mut (4,012,036 samples, 0.04%)</title><rect x="59.3236%" y="917" width="0.0399%" height="15" fill="rgb(217,127,24)" fg:x="5963891514" fg:w="4012036"/><text x="59.5736%" y="927.50"></text></g><g><title>slab::Slab&lt;T&gt;::get_mut (4,012,036 samples, 0.04%)</title><rect x="59.3236%" y="901" width="0.0399%" height="15" fill="rgb(239,141,48)" fg:x="5963891514" fg:w="4012036"/><text x="59.5736%" y="911.50"></text></g><g><title>h2::proto::streams::prioritize::Prioritize::schedule_send (78,234,702 samples, 0.78%)</title><rect x="58.7349%" y="965" width="0.7782%" height="15" fill="rgb(227,109,8)" fg:x="5904713983" fg:w="78234702"/><text x="58.9849%" y="975.50"></text></g><g><title>h2::proto::streams::store::Queue&lt;N&gt;::push (38,114,342 samples, 0.38%)</title><rect x="59.1340%" y="949" width="0.3791%" height="15" fill="rgb(235,184,23)" fg:x="5944834343" fg:w="38114342"/><text x="59.3840%" y="959.50"></text></g><g><title>tracing_core::metadata::LevelFilter::current (12,036,108 samples, 0.12%)</title><rect x="59.3934%" y="933" width="0.1197%" height="15" fill="rgb(227,226,48)" fg:x="5970912577" fg:w="12036108"/><text x="59.6434%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (12,036,108 samples, 0.12%)</title><rect x="59.3934%" y="917" width="0.1197%" height="15" fill="rgb(206,150,11)" fg:x="5970912577" fg:w="12036108"/><text x="59.6434%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_load (12,036,108 samples, 0.12%)</title><rect x="59.3934%" y="901" width="0.1197%" height="15" fill="rgb(254,2,33)" fg:x="5970912577" fg:w="12036108"/><text x="59.6434%" y="911.50"></text></g><g><title>tracing::__macro_support::__disabled_span (3,009,027 samples, 0.03%)</title><rect x="59.5131%" y="965" width="0.0299%" height="15" fill="rgb(243,160,20)" fg:x="5982948685" fg:w="3009027"/><text x="59.7631%" y="975.50"></text></g><g><title>tracing::span::Span::new_disabled (3,009,027 samples, 0.03%)</title><rect x="59.5131%" y="949" width="0.0299%" height="15" fill="rgb(218,208,30)" fg:x="5982948685" fg:w="3009027"/><text x="59.7631%" y="959.50"></text></g><g><title>tracing::span::Span::log (3,009,027 samples, 0.03%)</title><rect x="59.5630%" y="933" width="0.0299%" height="15" fill="rgb(224,120,49)" fg:x="5987963730" fg:w="3009027"/><text x="59.8130%" y="943.50"></text></g><g><title>tracing::span::Span::enter (8,024,072 samples, 0.08%)</title><rect x="59.5431%" y="965" width="0.0798%" height="15" fill="rgb(246,12,2)" fg:x="5985957712" fg:w="8024072"/><text x="59.7931%" y="975.50"></text></g><g><title>tracing::span::Span::do_enter (8,024,072 samples, 0.08%)</title><rect x="59.5431%" y="949" width="0.0798%" height="15" fill="rgb(236,117,3)" fg:x="5985957712" fg:w="8024072"/><text x="59.7931%" y="959.50"></text></g><g><title>tracing_core::metadata::Metadata::name (3,009,027 samples, 0.03%)</title><rect x="59.5929%" y="933" width="0.0299%" height="15" fill="rgb(216,128,52)" fg:x="5990972757" fg:w="3009027"/><text x="59.8429%" y="943.50"></text></g><g><title>tracing::span::Span::log (3,009,027 samples, 0.03%)</title><rect x="59.6927%" y="949" width="0.0299%" height="15" fill="rgb(246,145,19)" fg:x="6001002847" fg:w="3009027"/><text x="59.9427%" y="959.50"></text></g><g><title>tracing_core::metadata::Metadata::name (3,009,027 samples, 0.03%)</title><rect x="59.7226%" y="949" width="0.0299%" height="15" fill="rgb(222,11,46)" fg:x="6004011874" fg:w="3009027"/><text x="59.9726%" y="959.50"></text></g><g><title>tracing::span::Span::record_all (19,057,171 samples, 0.19%)</title><rect x="59.6229%" y="965" width="0.1896%" height="15" fill="rgb(245,82,36)" fg:x="5993981784" fg:w="19057171"/><text x="59.8729%" y="975.50"></text></g><g><title>tracing_core::span::Record::is_empty (5,015,045 samples, 0.05%)</title><rect x="59.7625%" y="949" width="0.0499%" height="15" fill="rgb(250,73,51)" fg:x="6008023910" fg:w="5015045"/><text x="60.0125%" y="959.50"></text></g><g><title>h2::proto::streams::prioritize::Prioritize::queue_frame (170,511,530 samples, 1.70%)</title><rect x="58.1263%" y="981" width="1.6961%" height="15" fill="rgb(221,189,23)" fg:x="5843530434" fg:w="170511530"/><text x="58.3763%" y="991.50"></text></g><g><title>http::header::map::desired_pos (2,006,018 samples, 0.02%)</title><rect x="60.1517%" y="885" width="0.0200%" height="15" fill="rgb(210,33,7)" fg:x="6047141261" fg:w="2006018"/><text x="60.4017%" y="895.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2,006,018 samples, 0.02%)</title><rect x="60.3113%" y="789" width="0.0200%" height="15" fill="rgb(210,107,22)" fg:x="6063189405" fg:w="2006018"/><text x="60.5613%" y="799.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,009,027 samples, 0.03%)</title><rect x="60.3113%" y="805" width="0.0299%" height="15" fill="rgb(222,116,37)" fg:x="6063189405" fg:w="3009027"/><text x="60.5613%" y="815.50"></text></g><g><title>&lt;&amp;str as http::header::map::as_header_name::Sealed&gt;::find::{{closure}} (24,072,216 samples, 0.24%)</title><rect x="60.1317%" y="917" width="0.2394%" height="15" fill="rgb(254,17,48)" fg:x="6045135243" fg:w="24072216"/><text x="60.3817%" y="927.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::find (24,072,216 samples, 0.24%)</title><rect x="60.1317%" y="901" width="0.2394%" height="15" fill="rgb(224,36,32)" fg:x="6045135243" fg:w="24072216"/><text x="60.3817%" y="911.50"></text></g><g><title>http::header::map::hash_elem_using (20,060,180 samples, 0.20%)</title><rect x="60.1716%" y="885" width="0.1995%" height="15" fill="rgb(232,90,46)" fg:x="6049147279" fg:w="20060180"/><text x="60.4216%" y="895.50"></text></g><g><title>&lt;http::header::name::HdrName as core::hash::Hash&gt;::hash (16,048,144 samples, 0.16%)</title><rect x="60.2115%" y="869" width="0.1596%" height="15" fill="rgb(241,66,40)" fg:x="6053159315" fg:w="16048144"/><text x="60.4615%" y="879.50"></text></g><g><title>&lt;http::header::name::Repr&lt;T&gt; as core::hash::Hash&gt;::hash (16,048,144 samples, 0.16%)</title><rect x="60.2115%" y="853" width="0.1596%" height="15" fill="rgb(249,184,29)" fg:x="6053159315" fg:w="16048144"/><text x="60.4615%" y="863.50"></text></g><g><title>&lt;http::header::name::MaybeLower as core::hash::Hash&gt;::hash (13,039,117 samples, 0.13%)</title><rect x="60.2414%" y="837" width="0.1297%" height="15" fill="rgb(231,181,1)" fg:x="6056168342" fg:w="13039117"/><text x="60.4914%" y="847.50"></text></g><g><title>&lt;fnv::FnvHasher as core::hash::Hasher&gt;::write (13,039,117 samples, 0.13%)</title><rect x="60.2414%" y="821" width="0.1297%" height="15" fill="rgb(224,94,2)" fg:x="6056168342" fg:w="13039117"/><text x="60.4914%" y="831.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (3,009,027 samples, 0.03%)</title><rect x="60.3412%" y="805" width="0.0299%" height="15" fill="rgb(229,170,15)" fg:x="6066198432" fg:w="3009027"/><text x="60.5912%" y="815.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3,009,027 samples, 0.03%)</title><rect x="60.3711%" y="917" width="0.0299%" height="15" fill="rgb(240,127,35)" fg:x="6069207459" fg:w="3009027"/><text x="60.6211%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (11,033,099 samples, 0.11%)</title><rect x="60.5208%" y="901" width="0.1097%" height="15" fill="rgb(248,196,34)" fg:x="6084252594" fg:w="11033099"/><text x="60.7708%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11,033,099 samples, 0.11%)</title><rect x="60.5208%" y="885" width="0.1097%" height="15" fill="rgb(236,137,7)" fg:x="6084252594" fg:w="11033099"/><text x="60.7708%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (11,033,099 samples, 0.11%)</title><rect x="60.5208%" y="869" width="0.1097%" height="15" fill="rgb(235,127,16)" fg:x="6084252594" fg:w="11033099"/><text x="60.7708%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (9,027,081 samples, 0.09%)</title><rect x="60.5408%" y="853" width="0.0898%" height="15" fill="rgb(250,192,54)" fg:x="6086258612" fg:w="9027081"/><text x="60.7908%" y="863.50"></text></g><g><title>http::header::name::parse_hdr::{{closure}} (9,027,081 samples, 0.09%)</title><rect x="60.5408%" y="837" width="0.0898%" height="15" fill="rgb(218,98,20)" fg:x="6086258612" fg:w="9027081"/><text x="60.7908%" y="847.50"></text></g><g><title>core::slice::memchr::memchr_aligned (15,045,135 samples, 0.15%)</title><rect x="60.6305%" y="853" width="0.1497%" height="15" fill="rgb(230,176,47)" fg:x="6095285693" fg:w="15045135"/><text x="60.8805%" y="863.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (21,063,189 samples, 0.21%)</title><rect x="60.6305%" y="901" width="0.2095%" height="15" fill="rgb(244,2,33)" fg:x="6095285693" fg:w="21063189"/><text x="60.8805%" y="911.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceContains&gt;::slice_contains (21,063,189 samples, 0.21%)</title><rect x="60.6305%" y="885" width="0.2095%" height="15" fill="rgb(231,100,17)" fg:x="6095285693" fg:w="21063189"/><text x="60.8805%" y="895.50"></text></g><g><title>core::slice::memchr::memchr (21,063,189 samples, 0.21%)</title><rect x="60.6305%" y="869" width="0.2095%" height="15" fill="rgb(245,23,12)" fg:x="6095285693" fg:w="21063189"/><text x="60.8805%" y="879.50"></text></g><g><title>core::slice::memchr::memchr_naive (6,018,054 samples, 0.06%)</title><rect x="60.7802%" y="853" width="0.0599%" height="15" fill="rgb(249,55,22)" fg:x="6110330828" fg:w="6018054"/><text x="61.0302%" y="863.50"></text></g><g><title>&lt;&amp;str as http::header::map::as_header_name::Sealed&gt;::find (91,273,819 samples, 0.91%)</title><rect x="60.0419%" y="949" width="0.9079%" height="15" fill="rgb(207,134,9)" fg:x="6036108162" fg:w="91273819"/><text x="60.2919%" y="959.50"></text></g><g><title>http::header::name::HdrName::from_bytes (91,273,819 samples, 0.91%)</title><rect x="60.0419%" y="933" width="0.9079%" height="15" fill="rgb(218,134,0)" fg:x="6036108162" fg:w="91273819"/><text x="60.2919%" y="943.50"></text></g><g><title>http::header::name::parse_hdr (55,165,495 samples, 0.55%)</title><rect x="60.4011%" y="917" width="0.5487%" height="15" fill="rgb(213,212,33)" fg:x="6072216486" fg:w="55165495"/><text x="60.6511%" y="927.50"></text></g><g><title>http::header::name::StandardHeader::from_bytes (11,033,099 samples, 0.11%)</title><rect x="60.8401%" y="901" width="0.1097%" height="15" fill="rgb(252,106,18)" fg:x="6116348882" fg:w="11033099"/><text x="61.0901%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::is_empty (4,012,036 samples, 0.04%)</title><rect x="60.9797%" y="917" width="0.0399%" height="15" fill="rgb(208,126,42)" fg:x="6130391008" fg:w="4012036"/><text x="61.2297%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (4,012,036 samples, 0.04%)</title><rect x="60.9797%" y="901" width="0.0399%" height="15" fill="rgb(246,175,29)" fg:x="6130391008" fg:w="4012036"/><text x="61.2297%" y="911.50"></text></g><g><title>http::header::map::Pos::resolve (2,006,018 samples, 0.02%)</title><rect x="61.0197%" y="917" width="0.0200%" height="15" fill="rgb(215,13,50)" fg:x="6134403044" fg:w="2006018"/><text x="61.2697%" y="927.50"></text></g><g><title>http::header::map::Pos::is_some (2,006,018 samples, 0.02%)</title><rect x="61.0197%" y="901" width="0.0200%" height="15" fill="rgb(216,172,15)" fg:x="6134403044" fg:w="2006018"/><text x="61.2697%" y="911.50"></text></g><g><title>http::header::map::Pos::is_none (2,006,018 samples, 0.02%)</title><rect x="61.0197%" y="885" width="0.0200%" height="15" fill="rgb(212,103,13)" fg:x="6134403044" fg:w="2006018"/><text x="61.2697%" y="895.50"></text></g><g><title>&lt;http::header::name::HeaderName as http::header::map::as_header_name::Sealed&gt;::find (14,042,126 samples, 0.14%)</title><rect x="60.9498%" y="949" width="0.1397%" height="15" fill="rgb(231,171,36)" fg:x="6127381981" fg:w="14042126"/><text x="61.1998%" y="959.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::find (14,042,126 samples, 0.14%)</title><rect x="60.9498%" y="933" width="0.1397%" height="15" fill="rgb(250,123,20)" fg:x="6127381981" fg:w="14042126"/><text x="61.1998%" y="943.50"></text></g><g><title>http::header::map::hash_elem_using (4,012,036 samples, 0.04%)</title><rect x="61.0496%" y="917" width="0.0399%" height="15" fill="rgb(212,53,50)" fg:x="6137412071" fg:w="4012036"/><text x="61.2996%" y="927.50"></text></g><g><title>&lt;http::header::name::HeaderName as core::hash::Hash&gt;::hash (2,006,018 samples, 0.02%)</title><rect x="61.0695%" y="901" width="0.0200%" height="15" fill="rgb(243,54,12)" fg:x="6139418089" fg:w="2006018"/><text x="61.3195%" y="911.50"></text></g><g><title>&lt;http::header::name::Repr&lt;T&gt; as core::hash::Hash&gt;::hash (2,006,018 samples, 0.02%)</title><rect x="61.0695%" y="885" width="0.0200%" height="15" fill="rgb(234,101,34)" fg:x="6139418089" fg:w="2006018"/><text x="61.3195%" y="895.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::contains_key (108,324,972 samples, 1.08%)</title><rect x="60.0219%" y="965" width="1.0775%" height="15" fill="rgb(254,67,22)" fg:x="6034102144" fg:w="108324972"/><text x="60.2719%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::name::HeaderName&gt; (2,006,018 samples, 0.02%)</title><rect x="61.0995%" y="949" width="0.0200%" height="15" fill="rgb(250,35,47)" fg:x="6142427116" fg:w="2006018"/><text x="61.3495%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::name::Repr&lt;http::header::name::Custom&gt;&gt; (2,006,018 samples, 0.02%)</title><rect x="61.0995%" y="933" width="0.0200%" height="15" fill="rgb(226,126,38)" fg:x="6142427116" fg:w="2006018"/><text x="61.3495%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::is_empty (2,006,018 samples, 0.02%)</title><rect x="61.1294%" y="901" width="0.0200%" height="15" fill="rgb(216,138,53)" fg:x="6145436143" fg:w="2006018"/><text x="61.3794%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (2,006,018 samples, 0.02%)</title><rect x="61.1294%" y="885" width="0.0200%" height="15" fill="rgb(246,199,43)" fg:x="6145436143" fg:w="2006018"/><text x="61.3794%" y="895.50"></text></g><g><title>h2::proto::streams::send::Send::check_headers (134,403,206 samples, 1.34%)</title><rect x="59.8224%" y="981" width="1.3369%" height="15" fill="rgb(232,125,11)" fg:x="6014041964" fg:w="134403206"/><text x="60.0724%" y="991.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::get (6,018,054 samples, 0.06%)</title><rect x="61.0995%" y="965" width="0.0599%" height="15" fill="rgb(218,219,45)" fg:x="6142427116" fg:w="6018054"/><text x="61.3495%" y="975.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::get2 (4,012,036 samples, 0.04%)</title><rect x="61.1194%" y="949" width="0.0399%" height="15" fill="rgb(216,102,54)" fg:x="6144433134" fg:w="4012036"/><text x="61.3694%" y="959.50"></text></g><g><title>&lt;http::header::name::HeaderName as http::header::map::as_header_name::Sealed&gt;::find (4,012,036 samples, 0.04%)</title><rect x="61.1194%" y="933" width="0.0399%" height="15" fill="rgb(250,228,7)" fg:x="6144433134" fg:w="4012036"/><text x="61.3694%" y="943.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::find (4,012,036 samples, 0.04%)</title><rect x="61.1194%" y="917" width="0.0399%" height="15" fill="rgb(226,125,25)" fg:x="6144433134" fg:w="4012036"/><text x="61.3694%" y="927.50"></text></g><g><title>h2::proto::streams::send::Send::send_headers (347,041,114 samples, 3.45%)</title><rect x="57.8470%" y="997" width="3.4521%" height="15" fill="rgb(224,165,27)" fg:x="5815446182" fg:w="347041114"/><text x="58.0970%" y="1007.50">h2:..</text></g><g><title>h2::proto::streams::state::State::send_open (14,042,126 samples, 0.14%)</title><rect x="61.1593%" y="981" width="0.1397%" height="15" fill="rgb(233,86,3)" fg:x="6148445170" fg:w="14042126"/><text x="61.4093%" y="991.50"></text></g><g><title>__memcpy_evex_unaligned_erms (4,012,036 samples, 0.04%)</title><rect x="61.3489%" y="981" width="0.0399%" height="15" fill="rgb(228,116,20)" fg:x="6167502341" fg:w="4012036"/><text x="61.5989%" y="991.50"></text></g><g><title>__memcpy_evex_unaligned_erms (9,027,081 samples, 0.09%)</title><rect x="61.4088%" y="965" width="0.0898%" height="15" fill="rgb(209,192,17)" fg:x="6173520395" fg:w="9027081"/><text x="61.6588%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (4,012,036 samples, 0.04%)</title><rect x="61.5983%" y="869" width="0.0399%" height="15" fill="rgb(224,88,34)" fg:x="6192577566" fg:w="4012036"/><text x="61.8483%" y="879.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (4,012,036 samples, 0.04%)</title><rect x="61.5983%" y="853" width="0.0399%" height="15" fill="rgb(233,38,6)" fg:x="6192577566" fg:w="4012036"/><text x="61.8483%" y="863.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (4,012,036 samples, 0.04%)</title><rect x="61.5983%" y="837" width="0.0399%" height="15" fill="rgb(212,59,30)" fg:x="6192577566" fg:w="4012036"/><text x="61.8483%" y="847.50"></text></g><g><title>&lt;http::header::map::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10,030,090 samples, 0.10%)</title><rect x="61.5484%" y="885" width="0.0998%" height="15" fill="rgb(213,80,3)" fg:x="6187562521" fg:w="10030090"/><text x="61.7984%" y="895.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (4,012,036 samples, 0.04%)</title><rect x="61.6482%" y="869" width="0.0399%" height="15" fill="rgb(251,178,7)" fg:x="6197592611" fg:w="4012036"/><text x="61.8982%" y="879.50"></text></g><g><title>h2::frame::headers::Headers::new (42,126,378 samples, 0.42%)</title><rect x="61.3888%" y="981" width="0.4190%" height="15" fill="rgb(213,154,26)" fg:x="6171514377" fg:w="42126378"/><text x="61.6388%" y="991.50"></text></g><g><title>h2::frame::headers::calculate_headermap_size (31,093,279 samples, 0.31%)</title><rect x="61.4986%" y="965" width="0.3093%" height="15" fill="rgb(238,165,49)" fg:x="6182547476" fg:w="31093279"/><text x="61.7486%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (26,078,234 samples, 0.26%)</title><rect x="61.5484%" y="949" width="0.2594%" height="15" fill="rgb(248,91,46)" fg:x="6187562521" fg:w="26078234"/><text x="61.7984%" y="959.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (26,078,234 samples, 0.26%)</title><rect x="61.5484%" y="933" width="0.2594%" height="15" fill="rgb(244,21,52)" fg:x="6187562521" fg:w="26078234"/><text x="61.7984%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (26,078,234 samples, 0.26%)</title><rect x="61.5484%" y="917" width="0.2594%" height="15" fill="rgb(247,122,20)" fg:x="6187562521" fg:w="26078234"/><text x="61.7984%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (26,078,234 samples, 0.26%)</title><rect x="61.5484%" y="901" width="0.2594%" height="15" fill="rgb(218,27,9)" fg:x="6187562521" fg:w="26078234"/><text x="61.7984%" y="911.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (16,048,144 samples, 0.16%)</title><rect x="61.6482%" y="885" width="0.1596%" height="15" fill="rgb(246,7,6)" fg:x="6197592611" fg:w="16048144"/><text x="61.8982%" y="895.50"></text></g><g><title>h2::frame::headers::calculate_headermap_size::{{closure}} (12,036,108 samples, 0.12%)</title><rect x="61.6881%" y="869" width="0.1197%" height="15" fill="rgb(227,135,54)" fg:x="6201604647" fg:w="12036108"/><text x="61.9381%" y="879.50"></text></g><g><title>http::header::name::HeaderName::as_str (11,033,099 samples, 0.11%)</title><rect x="61.6981%" y="853" width="0.1097%" height="15" fill="rgb(247,14,11)" fg:x="6202607656" fg:w="11033099"/><text x="61.9481%" y="863.50"></text></g><g><title>http::header::name::StandardHeader::as_str (9,027,081 samples, 0.09%)</title><rect x="61.7180%" y="837" width="0.0898%" height="15" fill="rgb(206,149,34)" fg:x="6204613674" fg:w="9027081"/><text x="61.9680%" y="847.50"></text></g><g><title>h2::proto::streams::counts::Counts::transition (419,257,762 samples, 4.17%)</title><rect x="57.6474%" y="1029" width="4.1704%" height="15" fill="rgb(227,228,4)" fg:x="5795386002" fg:w="419257762"/><text x="57.8974%" y="1039.50">h2::p..</text></g><g><title>h2::proto::streams::streams::StreamRef&lt;B&gt;::send_response::{{closure}} (401,203,600 samples, 3.99%)</title><rect x="57.8270%" y="1013" width="3.9908%" height="15" fill="rgb(238,218,28)" fg:x="5813440164" fg:w="401203600"/><text x="58.0770%" y="1023.50">h2::..</text></g><g><title>h2::server::Peer::convert_send_message (52,156,468 samples, 0.52%)</title><rect x="61.2990%" y="997" width="0.5188%" height="15" fill="rgb(252,86,40)" fg:x="6162487296" fg:w="52156468"/><text x="61.5490%" y="1007.50"></text></g><g><title>std::sync::poison::mutex::MutexGuard&lt;T&gt;::new (5,015,045 samples, 0.05%)</title><rect x="61.8178%" y="1013" width="0.0499%" height="15" fill="rgb(251,225,11)" fg:x="6214643764" fg:w="5015045"/><text x="62.0678%" y="1023.50"></text></g><g><title>std::sync::poison::Flag::guard (5,015,045 samples, 0.05%)</title><rect x="61.8178%" y="997" width="0.0499%" height="15" fill="rgb(206,46,49)" fg:x="6214643764" fg:w="5015045"/><text x="62.0678%" y="1007.50"></text></g><g><title>std::thread::panicking (4,012,036 samples, 0.04%)</title><rect x="61.8278%" y="981" width="0.0399%" height="15" fill="rgb(245,128,24)" fg:x="6215646773" fg:w="4012036"/><text x="62.0778%" y="991.50"></text></g><g><title>std::panicking::panicking (4,012,036 samples, 0.04%)</title><rect x="61.8278%" y="965" width="0.0399%" height="15" fill="rgb(219,177,34)" fg:x="6215646773" fg:w="4012036"/><text x="62.0778%" y="975.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (4,012,036 samples, 0.04%)</title><rect x="61.8278%" y="949" width="0.0399%" height="15" fill="rgb(218,60,48)" fg:x="6215646773" fg:w="4012036"/><text x="62.0778%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (3,009,027 samples, 0.03%)</title><rect x="61.8378%" y="933" width="0.0299%" height="15" fill="rgb(221,11,5)" fg:x="6216649782" fg:w="3009027"/><text x="62.0878%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_load (3,009,027 samples, 0.03%)</title><rect x="61.8378%" y="917" width="0.0299%" height="15" fill="rgb(220,148,13)" fg:x="6216649782" fg:w="3009027"/><text x="62.0878%" y="927.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (52,156,468 samples, 0.52%)</title><rect x="62.1770%" y="981" width="0.5188%" height="15" fill="rgb(210,16,3)" fg:x="6250752088" fg:w="52156468"/><text x="62.4270%" y="991.50"></text></g><g><title>syscall (48,144,432 samples, 0.48%)</title><rect x="62.2169%" y="965" width="0.4789%" height="15" fill="rgb(236,80,2)" fg:x="6254764124" fg:w="48144432"/><text x="62.4669%" y="975.50"></text></g><g><title>h2::server::SendResponse&lt;B&gt;::send_response (781,344,011 samples, 7.77%)</title><rect x="55.9214%" y="1061" width="7.7721%" height="15" fill="rgb(239,129,19)" fg:x="5621865445" fg:w="781344011"/><text x="56.1714%" y="1071.50">h2::server:..</text></g><g><title>h2::proto::streams::streams::StreamRef&lt;B&gt;::send_response (668,003,994 samples, 6.64%)</title><rect x="57.0488%" y="1045" width="6.6447%" height="15" fill="rgb(220,106,35)" fg:x="5735205462" fg:w="668003994"/><text x="57.2988%" y="1055.50">h2::proto..</text></g><g><title>std::sync::poison::mutex::Mutex&lt;T&gt;::lock (188,565,692 samples, 1.88%)</title><rect x="61.8178%" y="1029" width="1.8757%" height="15" fill="rgb(252,139,45)" fg:x="6214643764" fg:w="188565692"/><text x="62.0678%" y="1039.50">s..</text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (183,550,647 samples, 1.83%)</title><rect x="61.8677%" y="1013" width="1.8258%" height="15" fill="rgb(229,8,36)" fg:x="6219658809" fg:w="183550647"/><text x="62.1177%" y="1023.50">s..</text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (161,484,449 samples, 1.61%)</title><rect x="62.0872%" y="997" width="1.6063%" height="15" fill="rgb(230,126,33)" fg:x="6241725007" fg:w="161484449"/><text x="62.3372%" y="1007.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (100,300,900 samples, 1.00%)</title><rect x="62.6958%" y="981" width="0.9977%" height="15" fill="rgb(239,140,21)" fg:x="6302908556" fg:w="100300900"/><text x="62.9458%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (63,189,567 samples, 0.63%)</title><rect x="63.0650%" y="965" width="0.6286%" height="15" fill="rgb(254,104,9)" fg:x="6340019889" fg:w="63189567"/><text x="63.3150%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_load (63,189,567 samples, 0.63%)</title><rect x="63.0650%" y="949" width="0.6286%" height="15" fill="rgb(239,52,14)" fg:x="6340019889" fg:w="63189567"/><text x="63.3150%" y="959.50"></text></g><g><title>bytes::bytes::shallow_clone_arc (8,024,072 samples, 0.08%)</title><rect x="63.7833%" y="901" width="0.0798%" height="15" fill="rgb(208,227,44)" fg:x="6412236537" fg:w="8024072"/><text x="64.0333%" y="911.50"></text></g><g><title>&lt;http::header::value::HeaderValue as core::clone::Clone&gt;::clone (12,036,108 samples, 0.12%)</title><rect x="63.7633%" y="949" width="0.1197%" height="15" fill="rgb(246,18,19)" fg:x="6410230519" fg:w="12036108"/><text x="64.0133%" y="959.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (11,033,099 samples, 0.11%)</title><rect x="63.7733%" y="933" width="0.1097%" height="15" fill="rgb(235,228,25)" fg:x="6411233528" fg:w="11033099"/><text x="64.0233%" y="943.50"></text></g><g><title>bytes::bytes::promotable_even_clone (11,033,099 samples, 0.11%)</title><rect x="63.7733%" y="917" width="0.1097%" height="15" fill="rgb(240,156,20)" fg:x="6411233528" fg:w="11033099"/><text x="64.0233%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (2,006,018 samples, 0.02%)</title><rect x="63.8631%" y="901" width="0.0200%" height="15" fill="rgb(224,8,20)" fg:x="6420260609" fg:w="2006018"/><text x="64.1131%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_load (2,006,018 samples, 0.02%)</title><rect x="63.8631%" y="885" width="0.0200%" height="15" fill="rgb(214,12,52)" fg:x="6420260609" fg:w="2006018"/><text x="64.1131%" y="895.50"></text></g><g><title>[[vdso]] (27,081,243 samples, 0.27%)</title><rect x="63.9928%" y="901" width="0.2694%" height="15" fill="rgb(211,220,47)" fg:x="6433299726" fg:w="27081243"/><text x="64.2428%" y="911.50"></text></g><g><title>[[vdso]] (24,072,216 samples, 0.24%)</title><rect x="64.0227%" y="885" width="0.2394%" height="15" fill="rgb(250,173,5)" fg:x="6436308753" fg:w="24072216"/><text x="64.2727%" y="895.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (38,114,342 samples, 0.38%)</title><rect x="63.8930%" y="933" width="0.3791%" height="15" fill="rgb(250,125,52)" fg:x="6423269636" fg:w="38114342"/><text x="64.1430%" y="943.50"></text></g><g><title>__clock_gettime_2 (35,105,315 samples, 0.35%)</title><rect x="63.9230%" y="917" width="0.3492%" height="15" fill="rgb(209,133,18)" fg:x="6426278663" fg:w="35105315"/><text x="64.1730%" y="927.50"></text></g><g><title>core::ops::function::FnOnce::call_once (62,186,558 samples, 0.62%)</title><rect x="63.7035%" y="1029" width="0.6186%" height="15" fill="rgb(216,173,22)" fg:x="6404212465" fg:w="62186558"/><text x="63.9535%" y="1039.50"></text></g><g><title>hyper::common::date::update_and_header_value (62,186,558 samples, 0.62%)</title><rect x="63.7035%" y="1013" width="0.6186%" height="15" fill="rgb(205,3,22)" fg:x="6404212465" fg:w="62186558"/><text x="63.9535%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (57,171,513 samples, 0.57%)</title><rect x="63.7534%" y="997" width="0.5687%" height="15" fill="rgb(248,22,20)" fg:x="6409227510" fg:w="57171513"/><text x="64.0034%" y="1007.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (57,171,513 samples, 0.57%)</title><rect x="63.7534%" y="981" width="0.5687%" height="15" fill="rgb(233,6,29)" fg:x="6409227510" fg:w="57171513"/><text x="64.0034%" y="991.50"></text></g><g><title>hyper::common::date::update_and_header_value::{{closure}} (56,168,504 samples, 0.56%)</title><rect x="63.7633%" y="965" width="0.5587%" height="15" fill="rgb(240,22,54)" fg:x="6410230519" fg:w="56168504"/><text x="64.0133%" y="975.50"></text></g><g><title>hyper::common::date::CachedDate::check (43,129,387 samples, 0.43%)</title><rect x="63.8930%" y="949" width="0.4290%" height="15" fill="rgb(231,133,32)" fg:x="6423269636" fg:w="43129387"/><text x="64.1430%" y="959.50"></text></g><g><title>std::time::SystemTime::now (5,015,045 samples, 0.05%)</title><rect x="64.2722%" y="933" width="0.0499%" height="15" fill="rgb(248,193,4)" fg:x="6461383978" fg:w="5015045"/><text x="64.5222%" y="943.50"></text></g><g><title>http::header::map::Entry&lt;T&gt;::or_insert_with (67,201,603 samples, 0.67%)</title><rect x="63.6935%" y="1061" width="0.6685%" height="15" fill="rgb(211,178,46)" fg:x="6403209456" fg:w="67201603"/><text x="63.9435%" y="1071.50"></text></g><g><title>http::header::map::Entry&lt;T&gt;::or_try_insert_with (67,201,603 samples, 0.67%)</title><rect x="63.6935%" y="1045" width="0.6685%" height="15" fill="rgb(224,5,42)" fg:x="6403209456" fg:w="67201603"/><text x="63.9435%" y="1055.50"></text></g><g><title>http::header::map::VacantEntry&lt;T&gt;::try_insert (4,012,036 samples, 0.04%)</title><rect x="64.3221%" y="1029" width="0.0399%" height="15" fill="rgb(239,176,25)" fg:x="6466399023" fg:w="4012036"/><text x="64.5721%" y="1039.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_insert_phase_two (4,012,036 samples, 0.04%)</title><rect x="64.3221%" y="1013" width="0.0399%" height="15" fill="rgb(245,187,50)" fg:x="6466399023" fg:w="4012036"/><text x="64.5721%" y="1023.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_insert_entry (3,009,027 samples, 0.03%)</title><rect x="64.3320%" y="997" width="0.0299%" height="15" fill="rgb(248,24,15)" fg:x="6467402032" fg:w="3009027"/><text x="64.5820%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,006,018 samples, 0.02%)</title><rect x="64.3420%" y="981" width="0.0200%" height="15" fill="rgb(205,166,13)" fg:x="6468405041" fg:w="2006018"/><text x="64.5920%" y="991.50"></text></g><g><title>core::ptr::write (2,006,018 samples, 0.02%)</title><rect x="64.3420%" y="965" width="0.0200%" height="15" fill="rgb(208,114,23)" fg:x="6468405041" fg:w="2006018"/><text x="64.5920%" y="975.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_reserve_one (5,015,045 samples, 0.05%)</title><rect x="64.4119%" y="1013" width="0.0499%" height="15" fill="rgb(239,127,18)" fg:x="6475426104" fg:w="5015045"/><text x="64.6619%" y="1023.50"></text></g><g><title>http::header::map::Pos::resolve (4,012,036 samples, 0.04%)</title><rect x="64.4617%" y="1013" width="0.0399%" height="15" fill="rgb(219,154,28)" fg:x="6480441149" fg:w="4012036"/><text x="64.7117%" y="1023.50"></text></g><g><title>http::header::map::Pos::is_some (4,012,036 samples, 0.04%)</title><rect x="64.4617%" y="997" width="0.0399%" height="15" fill="rgb(225,157,23)" fg:x="6480441149" fg:w="4012036"/><text x="64.7117%" y="1007.50"></text></g><g><title>http::header::map::Pos::is_none (4,012,036 samples, 0.04%)</title><rect x="64.4617%" y="981" width="0.0399%" height="15" fill="rgb(219,8,6)" fg:x="6480441149" fg:w="4012036"/><text x="64.7117%" y="991.50"></text></g><g><title>&lt;http::header::name::HeaderName as http::header::map::into_header_name::Sealed&gt;::try_entry (18,054,162 samples, 0.18%)</title><rect x="64.3620%" y="1045" width="0.1796%" height="15" fill="rgb(212,47,6)" fg:x="6470411059" fg:w="18054162"/><text x="64.6120%" y="1055.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_entry2 (18,054,162 samples, 0.18%)</title><rect x="64.3620%" y="1029" width="0.1796%" height="15" fill="rgb(224,190,4)" fg:x="6470411059" fg:w="18054162"/><text x="64.6120%" y="1039.50"></text></g><g><title>http::header::map::hash_elem_using (4,012,036 samples, 0.04%)</title><rect x="64.5016%" y="1013" width="0.0399%" height="15" fill="rgb(239,183,29)" fg:x="6484453185" fg:w="4012036"/><text x="64.7516%" y="1023.50"></text></g><g><title>&lt;http::header::name::HeaderName as core::hash::Hash&gt;::hash (4,012,036 samples, 0.04%)</title><rect x="64.5016%" y="997" width="0.0399%" height="15" fill="rgb(213,57,7)" fg:x="6484453185" fg:w="4012036"/><text x="64.7516%" y="1007.50"></text></g><g><title>&lt;http::header::name::Repr&lt;T&gt; as core::hash::Hash&gt;::hash (4,012,036 samples, 0.04%)</title><rect x="64.5016%" y="981" width="0.0399%" height="15" fill="rgb(216,148,1)" fg:x="6484453185" fg:w="4012036"/><text x="64.7516%" y="991.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::entry (20,060,180 samples, 0.20%)</title><rect x="64.3620%" y="1061" width="0.1995%" height="15" fill="rgb(236,182,29)" fg:x="6470411059" fg:w="20060180"/><text x="64.6120%" y="1071.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (2,006,018 samples, 0.02%)</title><rect x="64.5416%" y="1045" width="0.0200%" height="15" fill="rgb(244,120,48)" fg:x="6488465221" fg:w="2006018"/><text x="64.7916%" y="1055.50"></text></g><g><title>http::header::map::Entry&lt;T&gt;::or_insert_with (2,006,018 samples, 0.02%)</title><rect x="64.6214%" y="1045" width="0.0200%" height="15" fill="rgb(206,71,34)" fg:x="6496489293" fg:w="2006018"/><text x="64.8714%" y="1055.50"></text></g><g><title>http::header::map::Entry&lt;T&gt;::or_try_insert_with (2,006,018 samples, 0.02%)</title><rect x="64.6214%" y="1029" width="0.0200%" height="15" fill="rgb(242,32,6)" fg:x="6496489293" fg:w="2006018"/><text x="64.8714%" y="1039.50"></text></g><g><title>&lt;http::header::name::HeaderName as core::cmp::PartialEq&gt;::eq (2,006,018 samples, 0.02%)</title><rect x="64.7112%" y="997" width="0.0200%" height="15" fill="rgb(241,35,3)" fg:x="6505516374" fg:w="2006018"/><text x="64.9612%" y="1007.50"></text></g><g><title>&lt;http::header::name::Repr&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2,006,018 samples, 0.02%)</title><rect x="64.7112%" y="981" width="0.0200%" height="15" fill="rgb(222,62,19)" fg:x="6505516374" fg:w="2006018"/><text x="64.9612%" y="991.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_reserve_one (9,027,081 samples, 0.09%)</title><rect x="64.7411%" y="997" width="0.0898%" height="15" fill="rgb(223,110,41)" fg:x="6508525401" fg:w="9027081"/><text x="64.9911%" y="1007.50"></text></g><g><title>&lt;http::header::name::HeaderName as http::header::map::into_header_name::Sealed&gt;::try_entry (20,060,180 samples, 0.20%)</title><rect x="64.6413%" y="1029" width="0.1995%" height="15" fill="rgb(208,224,4)" fg:x="6498495311" fg:w="20060180"/><text x="64.8913%" y="1039.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_entry2 (19,057,171 samples, 0.19%)</title><rect x="64.6513%" y="1013" width="0.1896%" height="15" fill="rgb(241,137,19)" fg:x="6499498320" fg:w="19057171"/><text x="64.9013%" y="1023.50"></text></g><g><title>hyper::headers::set_content_length_if_missing (29,087,261 samples, 0.29%)</title><rect x="64.5615%" y="1061" width="0.2893%" height="15" fill="rgb(244,24,17)" fg:x="6490471239" fg:w="29087261"/><text x="64.8115%" y="1071.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::entry (21,063,189 samples, 0.21%)</title><rect x="64.6413%" y="1045" width="0.2095%" height="15" fill="rgb(245,178,49)" fg:x="6498495311" fg:w="21063189"/><text x="64.8913%" y="1055.50"></text></g><g><title>http::header::map::desired_pos (3,009,027 samples, 0.03%)</title><rect x="65.1801%" y="997" width="0.0299%" height="15" fill="rgb(219,160,38)" fg:x="6552657797" fg:w="3009027"/><text x="65.4301%" y="1007.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (3,009,027 samples, 0.03%)</title><rect x="65.3796%" y="901" width="0.0299%" height="15" fill="rgb(228,137,14)" fg:x="6572717977" fg:w="3009027"/><text x="65.6296%" y="911.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6,018,054 samples, 0.06%)</title><rect x="65.3696%" y="917" width="0.0599%" height="15" fill="rgb(237,134,11)" fg:x="6571714968" fg:w="6018054"/><text x="65.6196%" y="927.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (2,006,018 samples, 0.02%)</title><rect x="65.4096%" y="901" width="0.0200%" height="15" fill="rgb(211,126,44)" fg:x="6575727004" fg:w="2006018"/><text x="65.6596%" y="911.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (2,006,018 samples, 0.02%)</title><rect x="65.4096%" y="885" width="0.0200%" height="15" fill="rgb(226,171,33)" fg:x="6575727004" fg:w="2006018"/><text x="65.6596%" y="895.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (2,006,018 samples, 0.02%)</title><rect x="65.4096%" y="869" width="0.0200%" height="15" fill="rgb(253,99,13)" fg:x="6575727004" fg:w="2006018"/><text x="65.6596%" y="879.50"></text></g><g><title>&lt;&amp;http::header::name::HeaderName as http::header::map::as_header_name::Sealed&gt;::find (30,090,270 samples, 0.30%)</title><rect x="65.1502%" y="1029" width="0.2993%" height="15" fill="rgb(244,48,7)" fg:x="6549648770" fg:w="30090270"/><text x="65.4002%" y="1039.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::find (30,090,270 samples, 0.30%)</title><rect x="65.1502%" y="1013" width="0.2993%" height="15" fill="rgb(244,217,54)" fg:x="6549648770" fg:w="30090270"/><text x="65.4002%" y="1023.50"></text></g><g><title>http::header::map::hash_elem_using (24,072,216 samples, 0.24%)</title><rect x="65.2100%" y="997" width="0.2394%" height="15" fill="rgb(224,15,18)" fg:x="6555666824" fg:w="24072216"/><text x="65.4600%" y="1007.50"></text></g><g><title>&lt;http::header::name::HeaderName as core::hash::Hash&gt;::hash (20,060,180 samples, 0.20%)</title><rect x="65.2499%" y="981" width="0.1995%" height="15" fill="rgb(244,99,12)" fg:x="6559678860" fg:w="20060180"/><text x="65.4999%" y="991.50"></text></g><g><title>&lt;http::header::name::Repr&lt;T&gt; as core::hash::Hash&gt;::hash (20,060,180 samples, 0.20%)</title><rect x="65.2499%" y="965" width="0.1995%" height="15" fill="rgb(233,226,8)" fg:x="6559678860" fg:w="20060180"/><text x="65.4999%" y="975.50"></text></g><g><title>&lt;http::header::name::Custom as core::hash::Hash&gt;::hash (14,042,126 samples, 0.14%)</title><rect x="65.3098%" y="949" width="0.1397%" height="15" fill="rgb(229,211,3)" fg:x="6565696914" fg:w="14042126"/><text x="65.5598%" y="959.50"></text></g><g><title>&lt;fnv::FnvHasher as core::hash::Hasher&gt;::write (14,042,126 samples, 0.14%)</title><rect x="65.3098%" y="933" width="0.1397%" height="15" fill="rgb(216,140,21)" fg:x="6565696914" fg:w="14042126"/><text x="65.5598%" y="943.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (2,006,018 samples, 0.02%)</title><rect x="65.4295%" y="917" width="0.0200%" height="15" fill="rgb(234,122,30)" fg:x="6577733022" fg:w="2006018"/><text x="65.6795%" y="927.50"></text></g><g><title>http::header::map::desired_pos (2,006,018 samples, 0.02%)</title><rect x="65.4994%" y="997" width="0.0200%" height="15" fill="rgb(236,25,46)" fg:x="6584754085" fg:w="2006018"/><text x="65.7494%" y="1007.50"></text></g><g><title>&lt;http::header::name::HeaderName as http::header::map::as_header_name::Sealed&gt;::find (8,024,072 samples, 0.08%)</title><rect x="65.4495%" y="1029" width="0.0798%" height="15" fill="rgb(217,52,54)" fg:x="6579739040" fg:w="8024072"/><text x="65.6995%" y="1039.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::find (8,024,072 samples, 0.08%)</title><rect x="65.4495%" y="1013" width="0.0798%" height="15" fill="rgb(222,29,26)" fg:x="6579739040" fg:w="8024072"/><text x="65.6995%" y="1023.50"></text></g><g><title>&lt;hyper::proto::h2::server::H2Stream&lt;F,B&gt; as core::future::future::Future&gt;::poll (4,547,642,806 samples, 45.24%)</title><rect x="20.3033%" y="1093" width="45.2360%" height="15" fill="rgb(216,177,29)" fg:x="2041123315" fg:w="4547642806"/><text x="20.5533%" y="1103.50">&lt;hyper::proto::h2::server::H2Stream&lt;F,B&gt; as core::future::future::Future&gt;:..</text></g><g><title>hyper::proto::h2::server::H2Stream&lt;F,B&gt;::poll2 (4,540,621,743 samples, 45.17%)</title><rect x="20.3731%" y="1077" width="45.1661%" height="15" fill="rgb(247,136,51)" fg:x="2048144378" fg:w="4540621743"/><text x="20.6231%" y="1087.50">hyper::proto::h2::server::H2Stream&lt;F,B&gt;::poll2</text></g><g><title>hyper::proto::h2::strip_connection_headers (69,207,621 samples, 0.69%)</title><rect x="64.8508%" y="1061" width="0.6884%" height="15" fill="rgb(231,47,47)" fg:x="6519558500" fg:w="69207621"/><text x="65.1008%" y="1071.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::remove (52,156,468 samples, 0.52%)</title><rect x="65.0205%" y="1045" width="0.5188%" height="15" fill="rgb(211,192,36)" fg:x="6536609653" fg:w="52156468"/><text x="65.2705%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::TaskIdGuard&gt; (15,045,135 samples, 0.15%)</title><rect x="65.5393%" y="1093" width="0.1497%" height="15" fill="rgb(229,156,32)" fg:x="6588766121" fg:w="15045135"/><text x="65.7893%" y="1103.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (14,042,126 samples, 0.14%)</title><rect x="65.5492%" y="1077" width="0.1397%" height="15" fill="rgb(248,213,20)" fg:x="6589769130" fg:w="14042126"/><text x="65.7992%" y="1087.50"></text></g><g><title>tokio::runtime::context::set_current_task_id (5,015,045 samples, 0.05%)</title><rect x="65.6390%" y="1061" width="0.0499%" height="15" fill="rgb(217,64,7)" fg:x="6598796211" fg:w="5015045"/><text x="65.8890%" y="1071.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5,015,045 samples, 0.05%)</title><rect x="65.6390%" y="1045" width="0.0499%" height="15" fill="rgb(232,142,8)" fg:x="6598796211" fg:w="5015045"/><text x="65.8890%" y="1055.50"></text></g><g><title>core::ops::function::FnOnce::call_once (5,015,045 samples, 0.05%)</title><rect x="65.6390%" y="1029" width="0.0499%" height="15" fill="rgb(224,92,44)" fg:x="6598796211" fg:w="5015045"/><text x="65.8890%" y="1039.50"></text></g><g><title>tokio::runtime::context::CONTEXT::{{constant}}::{{closure}} (5,015,045 samples, 0.05%)</title><rect x="65.6390%" y="1013" width="0.0499%" height="15" fill="rgb(214,169,17)" fg:x="6598796211" fg:w="5015045"/><text x="65.8890%" y="1023.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (5,015,045 samples, 0.05%)</title><rect x="65.6390%" y="997" width="0.0499%" height="15" fill="rgb(210,59,37)" fg:x="6598796211" fg:w="5015045"/><text x="65.8890%" y="1007.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (4,012,036 samples, 0.04%)</title><rect x="65.6490%" y="981" width="0.0399%" height="15" fill="rgb(214,116,48)" fg:x="6599799220" fg:w="4012036"/><text x="65.8990%" y="991.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (4,806,419,128 samples, 47.81%)</title><rect x="17.9886%" y="1125" width="47.8100%" height="15" fill="rgb(244,191,6)" fg:x="1808425227" fg:w="4806419128"/><text x="18.2386%" y="1135.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (4,806,419,128 samples, 47.81%)</title><rect x="17.9886%" y="1109" width="47.8100%" height="15" fill="rgb(241,50,52)" fg:x="1808425227" fg:w="4806419128"/><text x="18.2386%" y="1119.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}}</text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (11,033,099 samples, 0.11%)</title><rect x="65.6889%" y="1093" width="0.1097%" height="15" fill="rgb(236,75,39)" fg:x="6603811256" fg:w="11033099"/><text x="65.9389%" y="1103.50"></text></g><g><title>tokio::runtime::context::set_current_task_id (2,006,018 samples, 0.02%)</title><rect x="65.7787%" y="1077" width="0.0200%" height="15" fill="rgb(236,99,0)" fg:x="6612838337" fg:w="2006018"/><text x="66.0287%" y="1087.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,006,018 samples, 0.02%)</title><rect x="65.7787%" y="1061" width="0.0200%" height="15" fill="rgb(207,202,15)" fg:x="6612838337" fg:w="2006018"/><text x="66.0287%" y="1071.50"></text></g><g><title>__memcpy_evex_unaligned_erms (13,039,117 samples, 0.13%)</title><rect x="65.8086%" y="1093" width="0.1297%" height="15" fill="rgb(233,207,14)" fg:x="6615847364" fg:w="13039117"/><text x="66.0586%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::TaskIdGuard&gt; (6,018,054 samples, 0.06%)</title><rect x="65.9383%" y="1093" width="0.0599%" height="15" fill="rgb(226,27,51)" fg:x="6628886481" fg:w="6018054"/><text x="66.1883%" y="1103.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (6,018,054 samples, 0.06%)</title><rect x="65.9383%" y="1077" width="0.0599%" height="15" fill="rgb(206,104,42)" fg:x="6628886481" fg:w="6018054"/><text x="66.1883%" y="1087.50"></text></g><g><title>__free (14,042,126 samples, 0.14%)</title><rect x="66.0281%" y="1061" width="0.1397%" height="15" fill="rgb(212,225,4)" fg:x="6637913562" fg:w="14042126"/><text x="66.2781%" y="1071.50"></text></g><g><title>_int_free (5,015,045 samples, 0.05%)</title><rect x="66.1179%" y="1045" width="0.0499%" height="15" fill="rgb(233,96,42)" fg:x="6646940643" fg:w="5015045"/><text x="66.3679%" y="1055.50"></text></g><g><title>__memcpy_evex_unaligned_erms (12,036,108 samples, 0.12%)</title><rect x="66.1678%" y="1061" width="0.1197%" height="15" fill="rgb(229,21,32)" fg:x="6651955688" fg:w="12036108"/><text x="66.4178%" y="1071.50"></text></g><g><title>__rdl_dealloc (2,006,018 samples, 0.02%)</title><rect x="66.2875%" y="1061" width="0.0200%" height="15" fill="rgb(226,216,24)" fg:x="6663991796" fg:w="2006018"/><text x="66.5375%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;hyper::proto::h2::server::ConnectParts&gt;&gt; (2,006,018 samples, 0.02%)</title><rect x="66.3175%" y="1061" width="0.0200%" height="15" fill="rgb(221,163,17)" fg:x="6667000823" fg:w="2006018"/><text x="66.5675%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum_core::body::Body&gt; (6,018,054 samples, 0.06%)</title><rect x="66.3474%" y="1029" width="0.0599%" height="15" fill="rgb(216,216,42)" fg:x="6670009850" fg:w="6018054"/><text x="66.5974%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;http_body_util::combinators::box_body::UnsyncBoxBody&lt;bytes::bytes::Bytes,axum_core::error::Error&gt;&gt; (6,018,054 samples, 0.06%)</title><rect x="66.3474%" y="1013" width="0.0599%" height="15" fill="rgb(240,118,7)" fg:x="6670009850" fg:w="6018054"/><text x="66.5974%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn http_body::Body+Error = axum_core::error::Error+Data = bytes::bytes::Bytes+core::marker::Send&gt;&gt;&gt; (6,018,054 samples, 0.06%)</title><rect x="66.3474%" y="997" width="0.0599%" height="15" fill="rgb(221,67,37)" fg:x="6670009850" fg:w="6018054"/><text x="66.5974%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn http_body::Body+Error = axum_core::error::Error+Data = bytes::bytes::Bytes+core::marker::Send&gt;&gt; (6,018,054 samples, 0.06%)</title><rect x="66.3474%" y="981" width="0.0599%" height="15" fill="rgb(241,32,44)" fg:x="6670009850" fg:w="6018054"/><text x="66.5974%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;http_body_util::combinators::map_err::MapErr&lt;http_body_util::full::Full&lt;bytes::bytes::Bytes&gt;,axum_core::error::Error::new&lt;core::convert::Infallible&gt;&gt;&gt; (6,018,054 samples, 0.06%)</title><rect x="66.3474%" y="965" width="0.0599%" height="15" fill="rgb(235,204,43)" fg:x="6670009850" fg:w="6018054"/><text x="66.5974%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;http_body_util::full::Full&lt;bytes::bytes::Bytes&gt;&gt; (6,018,054 samples, 0.06%)</title><rect x="66.3474%" y="949" width="0.0599%" height="15" fill="rgb(213,116,10)" fg:x="6670009850" fg:w="6018054"/><text x="66.5974%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;bytes::bytes::Bytes&gt;&gt; (6,018,054 samples, 0.06%)</title><rect x="66.3474%" y="933" width="0.0599%" height="15" fill="rgb(239,15,48)" fg:x="6670009850" fg:w="6018054"/><text x="66.5974%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::poison::mutex::MutexGuard&lt;h2::proto::streams::streams::Inner&gt;&gt; (9,027,081 samples, 0.09%)</title><rect x="66.4472%" y="949" width="0.0898%" height="15" fill="rgb(207,123,36)" fg:x="6680039940" fg:w="9027081"/><text x="66.6972%" y="959.50"></text></g><g><title>&lt;std::sync::poison::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9,027,081 samples, 0.09%)</title><rect x="66.4472%" y="933" width="0.0898%" height="15" fill="rgb(209,103,30)" fg:x="6680039940" fg:w="9027081"/><text x="66.6972%" y="943.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (9,027,081 samples, 0.09%)</title><rect x="66.4472%" y="917" width="0.0898%" height="15" fill="rgb(238,100,19)" fg:x="6680039940" fg:w="9027081"/><text x="66.6972%" y="927.50"></text></g><g><title>syscall (9,027,081 samples, 0.09%)</title><rect x="66.4472%" y="901" width="0.0898%" height="15" fill="rgb(244,30,14)" fg:x="6680039940" fg:w="9027081"/><text x="66.6972%" y="911.50"></text></g><g><title>core::task::wake::Waker::wake (4,012,036 samples, 0.04%)</title><rect x="66.5370%" y="949" width="0.0399%" height="15" fill="rgb(249,174,6)" fg:x="6689067021" fg:w="4012036"/><text x="66.7870%" y="959.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (4,012,036 samples, 0.04%)</title><rect x="66.5370%" y="933" width="0.0399%" height="15" fill="rgb(235,213,41)" fg:x="6689067021" fg:w="4012036"/><text x="66.7870%" y="943.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (3,009,027 samples, 0.03%)</title><rect x="66.5469%" y="917" width="0.0299%" height="15" fill="rgb(213,118,6)" fg:x="6690070030" fg:w="3009027"/><text x="66.7969%" y="927.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (2,006,018 samples, 0.02%)</title><rect x="66.5569%" y="901" width="0.0200%" height="15" fill="rgb(235,44,51)" fg:x="6691073039" fg:w="2006018"/><text x="66.8069%" y="911.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::Deref&gt;::deref (2,006,018 samples, 0.02%)</title><rect x="66.5869%" y="933" width="0.0200%" height="15" fill="rgb(217,9,53)" fg:x="6694082066" fg:w="2006018"/><text x="66.8369%" y="943.50"></text></g><g><title>&lt;h2::proto::streams::store::Store as core::ops::index::Index&lt;h2::proto::streams::store::Key&gt;&gt;::index (2,006,018 samples, 0.02%)</title><rect x="66.5869%" y="917" width="0.0200%" height="15" fill="rgb(237,172,34)" fg:x="6694082066" fg:w="2006018"/><text x="66.8369%" y="927.50"></text></g><g><title>slab::Slab&lt;T&gt;::get (2,006,018 samples, 0.02%)</title><rect x="66.5869%" y="901" width="0.0200%" height="15" fill="rgb(206,206,11)" fg:x="6694082066" fg:w="2006018"/><text x="66.8369%" y="911.50"></text></g><g><title>h2::proto::streams::store::Ptr::remove (2,006,018 samples, 0.02%)</title><rect x="66.6068%" y="917" width="0.0200%" height="15" fill="rgb(214,149,29)" fg:x="6696088084" fg:w="2006018"/><text x="66.8568%" y="927.50"></text></g><g><title>h2::proto::streams::store::Ptr::unlink (3,009,027 samples, 0.03%)</title><rect x="66.6268%" y="917" width="0.0299%" height="15" fill="rgb(208,123,3)" fg:x="6698094102" fg:w="3009027"/><text x="66.8768%" y="927.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::swap_remove (3,009,027 samples, 0.03%)</title><rect x="66.6268%" y="901" width="0.0299%" height="15" fill="rgb(229,126,4)" fg:x="6698094102" fg:w="3009027"/><text x="66.8768%" y="911.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::swap_remove_full (3,009,027 samples, 0.03%)</title><rect x="66.6268%" y="885" width="0.0299%" height="15" fill="rgb(222,92,36)" fg:x="6698094102" fg:w="3009027"/><text x="66.8768%" y="895.50"></text></g><g><title>h2::proto::streams::counts::Counts::transition_after (7,021,063 samples, 0.07%)</title><rect x="66.6068%" y="933" width="0.0698%" height="15" fill="rgb(216,39,41)" fg:x="6696088084" fg:w="7021063"/><text x="66.8568%" y="943.50"></text></g><g><title>h2::proto::streams::stream::Stream::is_released (2,006,018 samples, 0.02%)</title><rect x="66.6567%" y="917" width="0.0200%" height="15" fill="rgb(253,127,28)" fg:x="6701103129" fg:w="2006018"/><text x="66.9067%" y="927.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::DerefMut&gt;::deref_mut (2,006,018 samples, 0.02%)</title><rect x="66.7066%" y="917" width="0.0200%" height="15" fill="rgb(249,152,51)" fg:x="6706118174" fg:w="2006018"/><text x="66.9566%" y="927.50"></text></g><g><title>h2::proto::streams::recv::Recv::release_closed_capacity (4,012,036 samples, 0.04%)</title><rect x="66.7265%" y="917" width="0.0399%" height="15" fill="rgb(209,123,42)" fg:x="6708124192" fg:w="4012036"/><text x="66.9765%" y="927.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::Deref&gt;::deref (4,012,036 samples, 0.04%)</title><rect x="66.7265%" y="901" width="0.0399%" height="15" fill="rgb(241,118,22)" fg:x="6708124192" fg:w="4012036"/><text x="66.9765%" y="911.50"></text></g><g><title>h2::proto::streams::counts::Counts::transition (22,066,198 samples, 0.22%)</title><rect x="66.5769%" y="949" width="0.2195%" height="15" fill="rgb(208,25,7)" fg:x="6693079057" fg:w="22066198"/><text x="66.8269%" y="959.50"></text></g><g><title>h2::proto::streams::streams::drop_stream_ref::{{closure}} (12,036,108 samples, 0.12%)</title><rect x="66.6766%" y="933" width="0.1197%" height="15" fill="rgb(243,144,39)" fg:x="6703109147" fg:w="12036108"/><text x="66.9266%" y="943.50"></text></g><g><title>h2::proto::streams::store::Queue&lt;N&gt;::pop (3,009,027 samples, 0.03%)</title><rect x="66.7664%" y="917" width="0.0299%" height="15" fill="rgb(250,50,5)" fg:x="6712136228" fg:w="3009027"/><text x="67.0164%" y="927.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (9,027,081 samples, 0.09%)</title><rect x="66.8562%" y="901" width="0.0898%" height="15" fill="rgb(207,67,11)" fg:x="6721163309" fg:w="9027081"/><text x="67.1062%" y="911.50"></text></g><g><title>syscall (8,024,072 samples, 0.08%)</title><rect x="66.8662%" y="885" width="0.0798%" height="15" fill="rgb(245,204,40)" fg:x="6722166318" fg:w="8024072"/><text x="67.1162%" y="895.50"></text></g><g><title>&lt;h2::proto::streams::streams::OpaqueStreamRef as core::ops::drop::Drop&gt;::drop (66,198,594 samples, 0.66%)</title><rect x="66.4172%" y="981" width="0.6585%" height="15" fill="rgb(238,228,24)" fg:x="6677030913" fg:w="66198594"/><text x="66.6672%" y="991.50"></text></g><g><title>h2::proto::streams::streams::drop_stream_ref (65,195,585 samples, 0.65%)</title><rect x="66.4272%" y="965" width="0.6485%" height="15" fill="rgb(217,116,22)" fg:x="6678033922" fg:w="65195585"/><text x="66.6772%" y="975.50"></text></g><g><title>std::sync::poison::mutex::Mutex&lt;T&gt;::lock (28,084,252 samples, 0.28%)</title><rect x="66.7964%" y="949" width="0.2794%" height="15" fill="rgb(234,98,12)" fg:x="6715145255" fg:w="28084252"/><text x="67.0464%" y="959.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (28,084,252 samples, 0.28%)</title><rect x="66.7964%" y="933" width="0.2794%" height="15" fill="rgb(242,170,50)" fg:x="6715145255" fg:w="28084252"/><text x="67.0464%" y="943.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (23,069,207 samples, 0.23%)</title><rect x="66.8463%" y="917" width="0.2295%" height="15" fill="rgb(235,7,5)" fg:x="6720160300" fg:w="23069207"/><text x="67.0963%" y="927.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (13,039,117 samples, 0.13%)</title><rect x="66.9460%" y="901" width="0.1297%" height="15" fill="rgb(241,114,28)" fg:x="6730190390" fg:w="13039117"/><text x="67.1960%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (9,027,081 samples, 0.09%)</title><rect x="66.9859%" y="885" width="0.0898%" height="15" fill="rgb(246,112,42)" fg:x="6734202426" fg:w="9027081"/><text x="67.2359%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_load (9,027,081 samples, 0.09%)</title><rect x="66.9859%" y="869" width="0.0898%" height="15" fill="rgb(248,228,14)" fg:x="6734202426" fg:w="9027081"/><text x="67.2359%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::proto::h2::PipeToSendStream&lt;axum_core::body::Body&gt;&gt; (82,246,738 samples, 0.82%)</title><rect x="66.3374%" y="1045" width="0.8181%" height="15" fill="rgb(208,133,18)" fg:x="6669006841" fg:w="82246738"/><text x="66.5874%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;h2::share::SendStream&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt;&gt;&gt; (75,225,675 samples, 0.75%)</title><rect x="66.4073%" y="1029" width="0.7483%" height="15" fill="rgb(207,35,49)" fg:x="6676027904" fg:w="75225675"/><text x="66.6573%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;h2::proto::streams::streams::StreamRef&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt;&gt;&gt; (75,225,675 samples, 0.75%)</title><rect x="66.4073%" y="1013" width="0.7483%" height="15" fill="rgb(205,68,36)" fg:x="6676027904" fg:w="75225675"/><text x="66.6573%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;h2::proto::streams::streams::OpaqueStreamRef&gt; (74,222,666 samples, 0.74%)</title><rect x="66.4172%" y="997" width="0.7383%" height="15" fill="rgb(245,62,40)" fg:x="6677030913" fg:w="74222666"/><text x="66.6672%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::poison::mutex::Mutex&lt;h2::proto::streams::streams::Inner&gt;&gt;&gt; (8,024,072 samples, 0.08%)</title><rect x="67.0757%" y="981" width="0.0798%" height="15" fill="rgb(228,27,24)" fg:x="6743229507" fg:w="8024072"/><text x="67.3257%" y="991.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8,024,072 samples, 0.08%)</title><rect x="67.0757%" y="965" width="0.0798%" height="15" fill="rgb(253,19,12)" fg:x="6743229507" fg:w="8024072"/><text x="67.3257%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::proto::h2::server::H2StreamState&lt;hyper_util::service::glue::TowerToHyperServiceFuture&lt;tower::util::map_request::MapRequest&lt;axum::routing::Router,&lt;axum::serve::WithGracefulShutdown&lt;tokio::net::tcp::listener::TcpListener,axum::routing::Router,axum::routing::Router,interview::shutdown_signal::{{closure}}&gt; as core::future::into_future::IntoFuture&gt;::into_future::{{closure}}::{{closure}}&gt;,http::request::Request&lt;hyper::body::incoming::Incoming&gt;&gt;,axum_core::body::Body&gt;&gt; (85,255,765 samples, 0.85%)</title><rect x="66.3374%" y="1061" width="0.8480%" height="15" fill="rgb(232,28,20)" fg:x="6669006841" fg:w="85255765"/><text x="66.5874%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper_util::service::glue::TowerToHyperServiceFuture&lt;tower::util::map_request::MapRequest&lt;axum::routing::Router,&lt;axum::serve::WithGracefulShutdown&lt;tokio::net::tcp::listener::TcpListener,axum::routing::Router,axum::routing::Router,interview::shutdown_signal::{{closure}}&gt; as core::future::into_future::IntoFuture&gt;::into_future::{{closure}}::{{closure}}&gt;,http::request::Request&lt;hyper::body::incoming::Incoming&gt;&gt;&gt; (3,009,027 samples, 0.03%)</title><rect x="67.1555%" y="1045" width="0.0299%" height="15" fill="rgb(218,35,51)" fg:x="6751253579" fg:w="3009027"/><text x="67.4055%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;h2::proto::streams::streams::SendBuffer&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt;&gt;&gt;&gt; (2,006,018 samples, 0.02%)</title><rect x="67.2354%" y="997" width="0.0200%" height="15" fill="rgb(212,90,40)" fg:x="6759277651" fg:w="2006018"/><text x="67.4854%" y="1007.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,006,018 samples, 0.02%)</title><rect x="67.2354%" y="981" width="0.0200%" height="15" fill="rgb(220,172,12)" fg:x="6759277651" fg:w="2006018"/><text x="67.4854%" y="991.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::Deref&gt;::deref (2,006,018 samples, 0.02%)</title><rect x="67.3651%" y="949" width="0.0200%" height="15" fill="rgb(226,159,20)" fg:x="6772316768" fg:w="2006018"/><text x="67.6151%" y="959.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::DerefMut&gt;::deref_mut (7,021,063 samples, 0.07%)</title><rect x="67.3850%" y="949" width="0.0698%" height="15" fill="rgb(234,205,16)" fg:x="6774322786" fg:w="7021063"/><text x="67.6350%" y="959.50"></text></g><g><title>&lt;h2::proto::streams::store::Store as core::ops::index::IndexMut&lt;h2::proto::streams::store::Key&gt;&gt;::index_mut (5,015,045 samples, 0.05%)</title><rect x="67.4050%" y="933" width="0.0499%" height="15" fill="rgb(207,9,39)" fg:x="6776328804" fg:w="5015045"/><text x="67.6550%" y="943.50"></text></g><g><title>slab::Slab&lt;T&gt;::get_mut (4,012,036 samples, 0.04%)</title><rect x="67.4149%" y="917" width="0.0399%" height="15" fill="rgb(249,143,15)" fg:x="6777331813" fg:w="4012036"/><text x="67.6649%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::poison::mutex::MutexGuard&lt;h2::proto::streams::streams::Inner&gt;&gt; (25,075,225 samples, 0.25%)</title><rect x="67.4648%" y="949" width="0.2494%" height="15" fill="rgb(253,133,29)" fg:x="6782346858" fg:w="25075225"/><text x="67.7148%" y="959.50"></text></g><g><title>&lt;std::sync::poison::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (25,075,225 samples, 0.25%)</title><rect x="67.4648%" y="933" width="0.2494%" height="15" fill="rgb(221,187,0)" fg:x="6782346858" fg:w="25075225"/><text x="67.7148%" y="943.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (25,075,225 samples, 0.25%)</title><rect x="67.4648%" y="917" width="0.2494%" height="15" fill="rgb(205,204,26)" fg:x="6782346858" fg:w="25075225"/><text x="67.7148%" y="927.50"></text></g><g><title>syscall (23,069,207 samples, 0.23%)</title><rect x="67.4848%" y="901" width="0.2295%" height="15" fill="rgb(224,68,54)" fg:x="6784352876" fg:w="23069207"/><text x="67.7348%" y="911.50"></text></g><g><title>core::task::wake::Waker::wake (3,009,027 samples, 0.03%)</title><rect x="67.7143%" y="949" width="0.0299%" height="15" fill="rgb(209,67,4)" fg:x="6807422083" fg:w="3009027"/><text x="67.9643%" y="959.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (3,009,027 samples, 0.03%)</title><rect x="67.7143%" y="933" width="0.0299%" height="15" fill="rgb(228,229,18)" fg:x="6807422083" fg:w="3009027"/><text x="67.9643%" y="943.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (3,009,027 samples, 0.03%)</title><rect x="67.7143%" y="917" width="0.0299%" height="15" fill="rgb(231,89,13)" fg:x="6807422083" fg:w="3009027"/><text x="67.9643%" y="927.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (2,006,018 samples, 0.02%)</title><rect x="67.7242%" y="901" width="0.0200%" height="15" fill="rgb(210,182,18)" fg:x="6808425092" fg:w="2006018"/><text x="67.9742%" y="911.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (2,006,018 samples, 0.02%)</title><rect x="67.7242%" y="885" width="0.0200%" height="15" fill="rgb(240,105,2)" fg:x="6808425092" fg:w="2006018"/><text x="67.9742%" y="895.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::Deref&gt;::deref (5,015,045 samples, 0.05%)</title><rect x="67.7641%" y="917" width="0.0499%" height="15" fill="rgb(207,170,50)" fg:x="6812437128" fg:w="5015045"/><text x="68.0141%" y="927.50"></text></g><g><title>&lt;h2::proto::streams::store::Store as core::ops::index::Index&lt;h2::proto::streams::store::Key&gt;&gt;::index (3,009,027 samples, 0.03%)</title><rect x="67.7841%" y="901" width="0.0299%" height="15" fill="rgb(232,133,24)" fg:x="6814443146" fg:w="3009027"/><text x="68.0341%" y="911.50"></text></g><g><title>slab::Slab&lt;T&gt;::get (3,009,027 samples, 0.03%)</title><rect x="67.7841%" y="885" width="0.0299%" height="15" fill="rgb(235,166,27)" fg:x="6814443146" fg:w="3009027"/><text x="68.0341%" y="895.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (3,009,027 samples, 0.03%)</title><rect x="67.7841%" y="869" width="0.0299%" height="15" fill="rgb(209,19,13)" fg:x="6814443146" fg:w="3009027"/><text x="68.0341%" y="879.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (3,009,027 samples, 0.03%)</title><rect x="67.7841%" y="853" width="0.0299%" height="15" fill="rgb(226,79,39)" fg:x="6814443146" fg:w="3009027"/><text x="68.0341%" y="863.50"></text></g><g><title>&lt;tracing_core::metadata::Level as core::cmp::PartialOrd&lt;tracing_core::metadata::LevelFilter&gt;&gt;::le (2,006,018 samples, 0.02%)</title><rect x="67.8140%" y="917" width="0.0200%" height="15" fill="rgb(222,163,10)" fg:x="6817452173" fg:w="2006018"/><text x="68.0640%" y="927.50"></text></g><g><title>h2::proto::streams::counts::Counts::transition_after (10,030,090 samples, 0.10%)</title><rect x="67.7542%" y="933" width="0.0998%" height="15" fill="rgb(214,44,19)" fg:x="6811434119" fg:w="10030090"/><text x="68.0042%" y="943.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::Deref&gt;::deref (3,009,027 samples, 0.03%)</title><rect x="67.8539%" y="917" width="0.0299%" height="15" fill="rgb(210,217,13)" fg:x="6821464209" fg:w="3009027"/><text x="68.1039%" y="927.50"></text></g><g><title>&lt;h2::proto::streams::store::Store as core::ops::index::Index&lt;h2::proto::streams::store::Key&gt;&gt;::index (3,009,027 samples, 0.03%)</title><rect x="67.8539%" y="901" width="0.0299%" height="15" fill="rgb(237,61,54)" fg:x="6821464209" fg:w="3009027"/><text x="68.1039%" y="911.50"></text></g><g><title>slab::Slab&lt;T&gt;::get (2,006,018 samples, 0.02%)</title><rect x="67.8639%" y="885" width="0.0200%" height="15" fill="rgb(226,184,24)" fg:x="6822467218" fg:w="2006018"/><text x="68.1139%" y="895.50"></text></g><g><title>h2::proto::streams::recv::Recv::release_closed_capacity (4,012,036 samples, 0.04%)</title><rect x="67.8839%" y="917" width="0.0399%" height="15" fill="rgb(223,226,4)" fg:x="6824473236" fg:w="4012036"/><text x="68.1339%" y="927.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::Deref&gt;::deref (3,009,027 samples, 0.03%)</title><rect x="67.8938%" y="901" width="0.0299%" height="15" fill="rgb(210,26,41)" fg:x="6825476245" fg:w="3009027"/><text x="68.1438%" y="911.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::Deref&gt;::deref (2,006,018 samples, 0.02%)</title><rect x="67.9338%" y="901" width="0.0200%" height="15" fill="rgb(220,221,6)" fg:x="6829488281" fg:w="2006018"/><text x="68.1838%" y="911.50"></text></g><g><title>h2::proto::streams::counts::Counts::transition (23,069,207 samples, 0.23%)</title><rect x="67.7442%" y="949" width="0.2295%" height="15" fill="rgb(225,89,49)" fg:x="6810431110" fg:w="23069207"/><text x="67.9942%" y="959.50"></text></g><g><title>h2::proto::streams::streams::drop_stream_ref::{{closure}} (12,036,108 samples, 0.12%)</title><rect x="67.8539%" y="933" width="0.1197%" height="15" fill="rgb(218,70,45)" fg:x="6821464209" fg:w="12036108"/><text x="68.1039%" y="943.50"></text></g><g><title>h2::proto::streams::streams::maybe_cancel (5,015,045 samples, 0.05%)</title><rect x="67.9238%" y="917" width="0.0499%" height="15" fill="rgb(238,166,21)" fg:x="6828485272" fg:w="5015045"/><text x="68.1738%" y="927.50"></text></g><g><title>h2::proto::streams::stream::Stream::is_canceled_interest (2,006,018 samples, 0.02%)</title><rect x="67.9537%" y="901" width="0.0200%" height="15" fill="rgb(224,141,44)" fg:x="6831494299" fg:w="2006018"/><text x="68.2037%" y="911.50"></text></g><g><title>std::sync::poison::mutex::MutexGuard&lt;T&gt;::new (2,006,018 samples, 0.02%)</title><rect x="67.9737%" y="933" width="0.0200%" height="15" fill="rgb(230,12,49)" fg:x="6833500317" fg:w="2006018"/><text x="68.2237%" y="943.50"></text></g><g><title>std::sync::poison::Flag::guard (2,006,018 samples, 0.02%)</title><rect x="67.9737%" y="917" width="0.0200%" height="15" fill="rgb(212,174,12)" fg:x="6833500317" fg:w="2006018"/><text x="68.2237%" y="927.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (38,114,342 samples, 0.38%)</title><rect x="68.1532%" y="901" width="0.3791%" height="15" fill="rgb(246,67,9)" fg:x="6851554479" fg:w="38114342"/><text x="68.4032%" y="911.50"></text></g><g><title>syscall (36,108,324 samples, 0.36%)</title><rect x="68.1732%" y="885" width="0.3592%" height="15" fill="rgb(239,35,23)" fg:x="6853560497" fg:w="36108324"/><text x="68.4232%" y="895.50"></text></g><g><title>std::sync::poison::mutex::Mutex&lt;T&gt;::lock (95,285,855 samples, 0.95%)</title><rect x="67.9737%" y="949" width="0.9478%" height="15" fill="rgb(211,167,0)" fg:x="6833500317" fg:w="95285855"/><text x="68.2237%" y="959.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (93,279,837 samples, 0.93%)</title><rect x="67.9936%" y="933" width="0.9279%" height="15" fill="rgb(225,119,45)" fg:x="6835506335" fg:w="93279837"/><text x="68.2436%" y="943.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (82,246,738 samples, 0.82%)</title><rect x="68.1034%" y="917" width="0.8181%" height="15" fill="rgb(210,162,6)" fg:x="6846539434" fg:w="82246738"/><text x="68.3534%" y="927.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (39,117,351 samples, 0.39%)</title><rect x="68.5324%" y="901" width="0.3891%" height="15" fill="rgb(208,118,35)" fg:x="6889668821" fg:w="39117351"/><text x="68.7824%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (25,075,225 samples, 0.25%)</title><rect x="68.6721%" y="885" width="0.2494%" height="15" fill="rgb(239,4,53)" fg:x="6903710947" fg:w="25075225"/><text x="68.9221%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_load (25,075,225 samples, 0.25%)</title><rect x="68.6721%" y="869" width="0.2494%" height="15" fill="rgb(213,130,21)" fg:x="6903710947" fg:w="25075225"/><text x="68.9221%" y="879.50"></text></g><g><title>&lt;h2::proto::streams::streams::OpaqueStreamRef as core::ops::drop::Drop&gt;::drop (168,505,512 samples, 1.68%)</title><rect x="67.2553%" y="981" width="1.6761%" height="15" fill="rgb(235,148,0)" fg:x="6761283669" fg:w="168505512"/><text x="67.5053%" y="991.50"></text></g><g><title>h2::proto::streams::streams::drop_stream_ref (165,496,485 samples, 1.65%)</title><rect x="67.2852%" y="965" width="1.6462%" height="15" fill="rgb(244,224,18)" fg:x="6764292696" fg:w="165496485"/><text x="67.5352%" y="975.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (301,905,709 samples, 3.00%)</title><rect x="65.9982%" y="1093" width="3.0031%" height="15" fill="rgb(211,214,4)" fg:x="6634904535" fg:w="301905709"/><text x="66.2482%" y="1103.50">tok..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage::{{closure}} (301,905,709 samples, 3.00%)</title><rect x="65.9982%" y="1077" width="3.0031%" height="15" fill="rgb(206,119,25)" fg:x="6634904535" fg:w="301905709"/><text x="66.2482%" y="1087.50">tok..</text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Stage&lt;hyper::proto::h2::server::H2Stream&lt;hyper_util::service::glue::TowerToHyperServiceFuture&lt;tower::util::map_request::MapRequest&lt;axum::routing::Router,&lt;axum::serve::WithGracefulShutdown&lt;tokio::net::tcp::listener::TcpListener,axum::routing::Router,axum::routing::Router,interview::shutdown_signal::{{closure}}&gt; as core::future::into_future::IntoFuture&gt;::into_future::{{closure}}::{{closure}}&gt;,http::request::Request&lt;hyper::body::incoming::Incoming&gt;&gt;,axum_core::body::Body&gt;&gt;&gt; (182,547,638 samples, 1.82%)</title><rect x="67.1855%" y="1061" width="1.8158%" height="15" fill="rgb(243,93,47)" fg:x="6754262606" fg:w="182547638"/><text x="67.4355%" y="1071.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;hyper::proto::h2::server::H2Stream&lt;hyper_util::service::glue::TowerToHyperServiceFuture&lt;tower::util::map_request::MapRequest&lt;axum::routing::Router,&lt;axum::serve::WithGracefulShutdown&lt;tokio::net::tcp::listener::TcpListener,axum::routing::Router,axum::routing::Router,interview::shutdown_signal::{{closure}}&gt; as core::future::into_future::IntoFuture&gt;::into_future::{{closure}}::{{closure}}&gt;,http::request::Request&lt;hyper::body::incoming::Incoming&gt;&gt;,axum_core::body::Body&gt;&gt; (180,541,620 samples, 1.80%)</title><rect x="67.2054%" y="1045" width="1.7959%" height="15" fill="rgb(224,194,6)" fg:x="6756268624" fg:w="180541620"/><text x="67.4554%" y="1055.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;h2::server::SendResponse&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt;&gt;&gt; (180,541,620 samples, 1.80%)</title><rect x="67.2054%" y="1029" width="1.7959%" height="15" fill="rgb(243,229,6)" fg:x="6756268624" fg:w="180541620"/><text x="67.4554%" y="1039.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;h2::proto::streams::streams::StreamRef&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt;&gt;&gt; (179,538,611 samples, 1.79%)</title><rect x="67.2154%" y="1013" width="1.7859%" height="15" fill="rgb(207,23,50)" fg:x="6757271633" fg:w="179538611"/><text x="67.4654%" y="1023.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;h2::proto::streams::streams::OpaqueStreamRef&gt; (175,526,575 samples, 1.75%)</title><rect x="67.2553%" y="997" width="1.7460%" height="15" fill="rgb(253,192,32)" fg:x="6761283669" fg:w="175526575"/><text x="67.5053%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::poison::mutex::Mutex&lt;h2::proto::streams::streams::Inner&gt;&gt;&gt; (7,021,063 samples, 0.07%)</title><rect x="68.9315%" y="981" width="0.0698%" height="15" fill="rgb(213,21,6)" fg:x="6929789181" fg:w="7021063"/><text x="69.1815%" y="991.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,021,063 samples, 0.07%)</title><rect x="68.9315%" y="965" width="0.0698%" height="15" fill="rgb(243,151,13)" fg:x="6929789181" fg:w="7021063"/><text x="69.1815%" y="975.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (5,131,394,044 samples, 51.04%)</title><rect x="17.9786%" y="1141" width="51.0426%" height="15" fill="rgb(233,165,41)" fg:x="1807422218" fg:w="5131394044"/><text x="18.2286%" y="1151.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::drop_future_or_output (323,971,907 samples, 3.22%)</title><rect x="65.7987%" y="1125" width="3.2226%" height="15" fill="rgb(246,176,45)" fg:x="6614844355" fg:w="323971907"/><text x="66.0487%" y="1135.50">tok..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (322,968,898 samples, 3.21%)</title><rect x="65.8086%" y="1109" width="3.2126%" height="15" fill="rgb(217,170,52)" fg:x="6615847364" fg:w="322968898"/><text x="66.0586%" y="1119.50">tok..</text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (2,006,018 samples, 0.02%)</title><rect x="69.0013%" y="1093" width="0.0200%" height="15" fill="rgb(214,203,54)" fg:x="6936810244" fg:w="2006018"/><text x="69.2513%" y="1103.50"></text></g><g><title>__memcpy_evex_unaligned_erms (6,018,054 samples, 0.06%)</title><rect x="69.0612%" y="1109" width="0.0599%" height="15" fill="rgb(248,215,49)" fg:x="6942828298" fg:w="6018054"/><text x="69.3112%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::TaskIdGuard&gt; (3,009,027 samples, 0.03%)</title><rect x="69.1210%" y="1109" width="0.0299%" height="15" fill="rgb(208,46,10)" fg:x="6948846352" fg:w="3009027"/><text x="69.3710%" y="1119.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (3,009,027 samples, 0.03%)</title><rect x="69.1210%" y="1093" width="0.0299%" height="15" fill="rgb(254,5,31)" fg:x="6948846352" fg:w="3009027"/><text x="69.3710%" y="1103.50"></text></g><g><title>__memcpy_evex_unaligned_erms (13,039,117 samples, 0.13%)</title><rect x="69.1609%" y="1077" width="0.1297%" height="15" fill="rgb(222,104,33)" fg:x="6952858388" fg:w="13039117"/><text x="69.4109%" y="1087.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (15,045,135 samples, 0.15%)</title><rect x="69.1510%" y="1109" width="0.1497%" height="15" fill="rgb(248,49,16)" fg:x="6951855379" fg:w="15045135"/><text x="69.4010%" y="1119.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage::{{closure}} (15,045,135 samples, 0.15%)</title><rect x="69.1510%" y="1093" width="0.1497%" height="15" fill="rgb(232,198,41)" fg:x="6951855379" fg:w="15045135"/><text x="69.4010%" y="1103.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (5,177,532,458 samples, 51.50%)</title><rect x="17.8190%" y="1237" width="51.5015%" height="15" fill="rgb(214,125,3)" fg:x="1791374074" fg:w="5177532458"/><text x="18.0690%" y="1247.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (5,173,520,422 samples, 51.46%)</title><rect x="17.8589%" y="1221" width="51.4616%" height="15" fill="rgb(229,220,28)" fg:x="1795386110" fg:w="5173520422"/><text x="18.1089%" y="1231.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (5,173,520,422 samples, 51.46%)</title><rect x="17.8589%" y="1205" width="51.4616%" height="15" fill="rgb(222,64,37)" fg:x="1795386110" fg:w="5173520422"/><text x="18.1089%" y="1215.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (5,172,517,413 samples, 51.45%)</title><rect x="17.8689%" y="1189" width="51.4517%" height="15" fill="rgb(249,184,13)" fg:x="1796389119" fg:w="5172517413"/><text x="18.1189%" y="1199.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5,161,484,314 samples, 51.34%)</title><rect x="17.9786%" y="1173" width="51.3419%" height="15" fill="rgb(252,176,6)" fg:x="1807422218" fg:w="5161484314"/><text x="18.2286%" y="1183.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::c..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (5,161,484,314 samples, 51.34%)</title><rect x="17.9786%" y="1157" width="51.3419%" height="15" fill="rgb(228,153,7)" fg:x="1807422218" fg:w="5161484314"/><text x="18.2286%" y="1167.50">tokio::runtime::task::harness::poll_future::{{closure}}</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::store_output (30,090,270 samples, 0.30%)</title><rect x="69.0213%" y="1141" width="0.2993%" height="15" fill="rgb(242,193,5)" fg:x="6938816262" fg:w="30090270"/><text x="69.2713%" y="1151.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (29,087,261 samples, 0.29%)</title><rect x="69.0312%" y="1125" width="0.2893%" height="15" fill="rgb(232,140,9)" fg:x="6939819271" fg:w="29087261"/><text x="69.2812%" y="1135.50"></text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (2,006,018 samples, 0.02%)</title><rect x="69.3006%" y="1109" width="0.0200%" height="15" fill="rgb(213,222,16)" fg:x="6966900514" fg:w="2006018"/><text x="69.5506%" y="1119.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle (7,021,063 samples, 0.07%)</title><rect x="69.3206%" y="1237" width="0.0698%" height="15" fill="rgb(222,75,50)" fg:x="6968906532" fg:w="7021063"/><text x="69.5706%" y="1247.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (4,012,036 samples, 0.04%)</title><rect x="69.3505%" y="1221" width="0.0399%" height="15" fill="rgb(205,180,2)" fg:x="6971915559" fg:w="4012036"/><text x="69.6005%" y="1231.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle::{{closure}} (2,006,018 samples, 0.02%)</title><rect x="69.3704%" y="1205" width="0.0200%" height="15" fill="rgb(216,34,7)" fg:x="6973921577" fg:w="2006018"/><text x="69.6204%" y="1215.50"></text></g><g><title>tokio::runtime::task::state::State::load (3,009,027 samples, 0.03%)</title><rect x="69.5401%" y="1205" width="0.0299%" height="15" fill="rgb(253,16,32)" fg:x="6990972730" fg:w="3009027"/><text x="69.7901%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (3,009,027 samples, 0.03%)</title><rect x="69.5401%" y="1189" width="0.0299%" height="15" fill="rgb(208,97,28)" fg:x="6990972730" fg:w="3009027"/><text x="69.7901%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_load (3,009,027 samples, 0.03%)</title><rect x="69.5401%" y="1173" width="0.0299%" height="15" fill="rgb(225,92,11)" fg:x="6990972730" fg:w="3009027"/><text x="69.7901%" y="1183.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running (19,057,171 samples, 0.19%)</title><rect x="69.3904%" y="1237" width="0.1896%" height="15" fill="rgb(243,38,12)" fg:x="6975927595" fg:w="19057171"/><text x="69.6404%" y="1247.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (14,042,126 samples, 0.14%)</title><rect x="69.4403%" y="1221" width="0.1397%" height="15" fill="rgb(208,139,16)" fg:x="6980942640" fg:w="14042126"/><text x="69.6903%" y="1231.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (5,354,062,042 samples, 53.26%)</title><rect x="16.3424%" y="1269" width="53.2575%" height="15" fill="rgb(227,24,9)" fg:x="1642928742" fg:w="5354062042"/><text x="16.5924%" y="1279.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (5,213,640,782 samples, 51.86%)</title><rect x="17.7392%" y="1253" width="51.8607%" height="15" fill="rgb(206,62,11)" fg:x="1783350002" fg:w="5213640782"/><text x="17.9892%" y="1263.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::waker::waker_ref (2,006,018 samples, 0.02%)</title><rect x="69.5800%" y="1237" width="0.0200%" height="15" fill="rgb(228,134,27)" fg:x="6994984766" fg:w="2006018"/><text x="69.8300%" y="1247.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (5,372,116,204 samples, 53.44%)</title><rect x="16.2227%" y="1301" width="53.4371%" height="15" fill="rgb(205,55,33)" fg:x="1630892634" fg:w="5372116204"/><text x="16.4727%" y="1311.50">tokio::runtime::task::LocalNotified&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (5,372,116,204 samples, 53.44%)</title><rect x="16.2227%" y="1285" width="53.4371%" height="15" fill="rgb(243,75,43)" fg:x="1630892634" fg:w="5372116204"/><text x="16.4727%" y="1295.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::raw::poll (6,018,054 samples, 0.06%)</title><rect x="69.5999%" y="1269" width="0.0599%" height="15" fill="rgb(223,27,42)" fg:x="6996990784" fg:w="6018054"/><text x="69.8499%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (5,542,627,734 samples, 55.13%)</title><rect x="14.5366%" y="1365" width="55.1332%" height="15" fill="rgb(232,189,33)" fg:x="1461384113" fg:w="5542627734"/><text x="14.7866%" y="1375.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task</text></g><g><title>tokio::task::coop::budget (5,406,218,510 samples, 53.78%)</title><rect x="15.8934%" y="1349" width="53.7763%" height="15" fill="rgb(210,9,39)" fg:x="1597793337" fg:w="5406218510"/><text x="16.1434%" y="1359.50">tokio::task::coop::budget</text></g><g><title>tokio::task::coop::with_budget (5,406,218,510 samples, 53.78%)</title><rect x="15.8934%" y="1333" width="53.7763%" height="15" fill="rgb(242,85,26)" fg:x="1597793337" fg:w="5406218510"/><text x="16.1434%" y="1343.50">tokio::task::coop::with_budget</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}} (5,395,185,411 samples, 53.67%)</title><rect x="16.0032%" y="1317" width="53.6666%" height="15" fill="rgb(248,44,4)" fg:x="1608826436" fg:w="5395185411"/><text x="16.2532%" y="1327.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}}</text></g><g><title>core::option::Option&lt;T&gt;::or_else (5,015,045 samples, 0.05%)</title><rect x="69.7196%" y="1333" width="0.0499%" height="15" fill="rgb(250,96,46)" fg:x="7009026892" fg:w="5015045"/><text x="69.9696%" y="1343.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task::{{closure}} (5,015,045 samples, 0.05%)</title><rect x="69.7196%" y="1317" width="0.0499%" height="15" fill="rgb(229,116,26)" fg:x="7009026892" fg:w="5015045"/><text x="69.9696%" y="1327.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::pop (5,015,045 samples, 0.05%)</title><rect x="69.7196%" y="1301" width="0.0499%" height="15" fill="rgb(246,94,34)" fg:x="7009026892" fg:w="5015045"/><text x="69.9696%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task (7,021,063 samples, 0.07%)</title><rect x="69.7196%" y="1349" width="0.0698%" height="15" fill="rgb(251,73,21)" fg:x="7009026892" fg:w="7021063"/><text x="69.9696%" y="1359.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (2,006,018 samples, 0.02%)</title><rect x="69.7695%" y="1333" width="0.0200%" height="15" fill="rgb(254,121,25)" fg:x="7014041937" fg:w="2006018"/><text x="70.0195%" y="1343.50"></text></g><g><title>core::mem::replace (2,006,018 samples, 0.02%)</title><rect x="69.7695%" y="1317" width="0.0200%" height="15" fill="rgb(215,161,49)" fg:x="7014041937" fg:w="2006018"/><text x="70.0195%" y="1327.50"></text></g><g><title>core::ptr::read (2,006,018 samples, 0.02%)</title><rect x="69.7695%" y="1301" width="0.0200%" height="15" fill="rgb(221,43,13)" fg:x="7014041937" fg:w="2006018"/><text x="70.0195%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_task (13,039,117 samples, 0.13%)</title><rect x="69.6698%" y="1365" width="0.1297%" height="15" fill="rgb(249,5,37)" fg:x="7004011847" fg:w="13039117"/><text x="69.9198%" y="1375.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3,009,027 samples, 0.03%)</title><rect x="69.9990%" y="1333" width="0.0299%" height="15" fill="rgb(226,25,44)" fg:x="7037111144" fg:w="3009027"/><text x="70.2490%" y="1343.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (3,009,027 samples, 0.03%)</title><rect x="69.9990%" y="1317" width="0.0299%" height="15" fill="rgb(238,189,16)" fg:x="7037111144" fg:w="3009027"/><text x="70.2490%" y="1327.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (3,009,027 samples, 0.03%)</title><rect x="69.9990%" y="1301" width="0.0299%" height="15" fill="rgb(251,186,8)" fg:x="7037111144" fg:w="3009027"/><text x="70.2490%" y="1311.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (4,012,036 samples, 0.04%)</title><rect x="70.2484%" y="1317" width="0.0399%" height="15" fill="rgb(254,34,31)" fg:x="7062186369" fg:w="4012036"/><text x="70.4984%" y="1327.50"></text></g><g><title>core::sync::atomic::atomic_load (4,012,036 samples, 0.04%)</title><rect x="70.2484%" y="1301" width="0.0399%" height="15" fill="rgb(225,215,27)" fg:x="7062186369" fg:w="4012036"/><text x="70.4984%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (58,174,522 samples, 0.58%)</title><rect x="69.9391%" y="1349" width="0.5787%" height="15" fill="rgb(221,192,48)" fg:x="7031093090" fg:w="58174522"/><text x="70.1891%" y="1359.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into2 (47,141,423 samples, 0.47%)</title><rect x="70.0489%" y="1333" width="0.4689%" height="15" fill="rgb(219,137,20)" fg:x="7042126189" fg:w="47141423"/><text x="70.2989%" y="1343.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::unpack (23,069,207 samples, 0.23%)</title><rect x="70.2883%" y="1317" width="0.2295%" height="15" fill="rgb(219,84,11)" fg:x="7066198405" fg:w="23069207"/><text x="70.5383%" y="1327.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_to_searching (6,018,054 samples, 0.06%)</title><rect x="70.5178%" y="1349" width="0.0599%" height="15" fill="rgb(224,10,23)" fg:x="7089267612" fg:w="6018054"/><text x="70.7678%" y="1359.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::steal_work (81,243,729 samples, 0.81%)</title><rect x="69.7995%" y="1365" width="0.8081%" height="15" fill="rgb(248,22,39)" fg:x="7017050964" fg:w="81243729"/><text x="70.0495%" y="1375.50"></text></g><g><title>tokio::util::rand::FastRand::fastrand_n (3,009,027 samples, 0.03%)</title><rect x="70.5777%" y="1349" width="0.0299%" height="15" fill="rgb(212,154,20)" fg:x="7095285666" fg:w="3009027"/><text x="70.8277%" y="1359.50"></text></g><g><title>tokio::util::rand::FastRand::fastrand (3,009,027 samples, 0.03%)</title><rect x="70.5777%" y="1333" width="0.0299%" height="15" fill="rgb(236,199,50)" fg:x="7095285666" fg:w="3009027"/><text x="70.8277%" y="1343.50"></text></g><g><title>__clone3 (6,172,517,386 samples, 61.40%)</title><rect x="9.2188%" y="2021" width="61.3988%" height="15" fill="rgb(211,9,17)" fg:x="926780316" fg:w="6172517386"/><text x="9.4688%" y="2031.50">__clone3</text></g><g><title>start_thread (6,172,517,386 samples, 61.40%)</title><rect x="9.2188%" y="2005" width="61.3988%" height="15" fill="rgb(243,216,36)" fg:x="926780316" fg:w="6172517386"/><text x="9.4688%" y="2015.50">start_thread</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (6,172,517,386 samples, 61.40%)</title><rect x="9.2188%" y="1989" width="61.3988%" height="15" fill="rgb(250,2,10)" fg:x="926780316" fg:w="6172517386"/><text x="9.4688%" y="1999.50">std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (6,172,517,386 samples, 61.40%)</title><rect x="9.2188%" y="1973" width="61.3988%" height="15" fill="rgb(226,50,48)" fg:x="926780316" fg:w="6172517386"/><text x="9.4688%" y="1983.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (6,172,517,386 samples, 61.40%)</title><rect x="9.2188%" y="1957" width="61.3988%" height="15" fill="rgb(243,81,16)" fg:x="926780316" fg:w="6172517386"/><text x="9.4688%" y="1967.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (6,172,517,386 samples, 61.40%)</title><rect x="9.2188%" y="1941" width="61.3988%" height="15" fill="rgb(250,14,2)" fg:x="926780316" fg:w="6172517386"/><text x="9.4688%" y="1951.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (6,172,517,386 samples, 61.40%)</title><rect x="9.2188%" y="1925" width="61.3988%" height="15" fill="rgb(233,135,29)" fg:x="926780316" fg:w="6172517386"/><text x="9.4688%" y="1935.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>std::panic::catch_unwind (6,172,517,386 samples, 61.40%)</title><rect x="9.2188%" y="1909" width="61.3988%" height="15" fill="rgb(224,64,43)" fg:x="926780316" fg:w="6172517386"/><text x="9.4688%" y="1919.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (6,172,517,386 samples, 61.40%)</title><rect x="9.2188%" y="1893" width="61.3988%" height="15" fill="rgb(238,84,13)" fg:x="926780316" fg:w="6172517386"/><text x="9.4688%" y="1903.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (6,172,517,386 samples, 61.40%)</title><rect x="9.2188%" y="1877" width="61.3988%" height="15" fill="rgb(253,48,26)" fg:x="926780316" fg:w="6172517386"/><text x="9.4688%" y="1887.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6,172,517,386 samples, 61.40%)</title><rect x="9.2188%" y="1861" width="61.3988%" height="15" fill="rgb(205,223,31)" fg:x="926780316" fg:w="6172517386"/><text x="9.4688%" y="1871.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (6,172,517,386 samples, 61.40%)</title><rect x="9.2188%" y="1845" width="61.3988%" height="15" fill="rgb(221,41,32)" fg:x="926780316" fg:w="6172517386"/><text x="9.4688%" y="1855.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (6,172,517,386 samples, 61.40%)</title><rect x="9.2188%" y="1829" width="61.3988%" height="15" fill="rgb(213,158,31)" fg:x="926780316" fg:w="6172517386"/><text x="9.4688%" y="1839.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (6,172,517,386 samples, 61.40%)</title><rect x="9.2188%" y="1813" width="61.3988%" height="15" fill="rgb(245,126,43)" fg:x="926780316" fg:w="6172517386"/><text x="9.4688%" y="1823.50">tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (6,172,517,386 samples, 61.40%)</title><rect x="9.2188%" y="1797" width="61.3988%" height="15" fill="rgb(227,7,22)" fg:x="926780316" fg:w="6172517386"/><text x="9.4688%" y="1807.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::blocking::pool::Task::run (6,172,517,386 samples, 61.40%)</title><rect x="9.2188%" y="1781" width="61.3988%" height="15" fill="rgb(252,90,44)" fg:x="926780316" fg:w="6172517386"/><text x="9.4688%" y="1791.50">tokio::runtime::blocking::pool::Task::run</text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (6,172,517,386 samples, 61.40%)</title><rect x="9.2188%" y="1765" width="61.3988%" height="15" fill="rgb(253,91,0)" fg:x="926780316" fg:w="6172517386"/><text x="9.4688%" y="1775.50">tokio::runtime::task::UnownedTask&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (6,172,517,386 samples, 61.40%)</title><rect x="9.2188%" y="1749" width="61.3988%" height="15" fill="rgb(252,175,49)" fg:x="926780316" fg:w="6172517386"/><text x="9.4688%" y="1759.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (6,172,517,386 samples, 61.40%)</title><rect x="9.2188%" y="1733" width="61.3988%" height="15" fill="rgb(246,150,1)" fg:x="926780316" fg:w="6172517386"/><text x="9.4688%" y="1743.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (6,172,517,386 samples, 61.40%)</title><rect x="9.2188%" y="1717" width="61.3988%" height="15" fill="rgb(241,192,25)" fg:x="926780316" fg:w="6172517386"/><text x="9.4688%" y="1727.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::harness::poll_future (6,172,517,386 samples, 61.40%)</title><rect x="9.2188%" y="1701" width="61.3988%" height="15" fill="rgb(239,187,11)" fg:x="926780316" fg:w="6172517386"/><text x="9.4688%" y="1711.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (6,172,517,386 samples, 61.40%)</title><rect x="9.2188%" y="1685" width="61.3988%" height="15" fill="rgb(218,202,51)" fg:x="926780316" fg:w="6172517386"/><text x="9.4688%" y="1695.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (6,172,517,386 samples, 61.40%)</title><rect x="9.2188%" y="1669" width="61.3988%" height="15" fill="rgb(225,176,8)" fg:x="926780316" fg:w="6172517386"/><text x="9.4688%" y="1679.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (6,172,517,386 samples, 61.40%)</title><rect x="9.2188%" y="1653" width="61.3988%" height="15" fill="rgb(219,122,41)" fg:x="926780316" fg:w="6172517386"/><text x="9.4688%" y="1663.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6,172,517,386 samples, 61.40%)</title><rect x="9.2188%" y="1637" width="61.3988%" height="15" fill="rgb(248,140,20)" fg:x="926780316" fg:w="6172517386"/><text x="9.4688%" y="1647.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (6,172,517,386 samples, 61.40%)</title><rect x="9.2188%" y="1621" width="61.3988%" height="15" fill="rgb(245,41,37)" fg:x="926780316" fg:w="6172517386"/><text x="9.4688%" y="1631.50">tokio::runtime::task::harness::poll_future::{{closure}}</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (6,172,517,386 samples, 61.40%)</title><rect x="9.2188%" y="1605" width="61.3988%" height="15" fill="rgb(235,82,39)" fg:x="926780316" fg:w="6172517386"/><text x="9.4688%" y="1615.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (6,172,517,386 samples, 61.40%)</title><rect x="9.2188%" y="1589" width="61.3988%" height="15" fill="rgb(230,108,42)" fg:x="926780316" fg:w="6172517386"/><text x="9.4688%" y="1599.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (6,172,517,386 samples, 61.40%)</title><rect x="9.2188%" y="1573" width="61.3988%" height="15" fill="rgb(215,150,50)" fg:x="926780316" fg:w="6172517386"/><text x="9.4688%" y="1583.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}}</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (6,172,517,386 samples, 61.40%)</title><rect x="9.2188%" y="1557" width="61.3988%" height="15" fill="rgb(233,212,5)" fg:x="926780316" fg:w="6172517386"/><text x="9.4688%" y="1567.50">&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}} (6,172,517,386 samples, 61.40%)</title><rect x="9.2188%" y="1541" width="61.3988%" height="15" fill="rgb(245,80,22)" fg:x="926780316" fg:w="6172517386"/><text x="9.4688%" y="1551.50">tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}}</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (6,172,517,386 samples, 61.40%)</title><rect x="9.2188%" y="1525" width="61.3988%" height="15" fill="rgb(238,129,16)" fg:x="926780316" fg:w="6172517386"/><text x="9.4688%" y="1535.50">tokio::runtime::scheduler::multi_thread::worker::run</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (6,172,517,386 samples, 61.40%)</title><rect x="9.2188%" y="1509" width="61.3988%" height="15" fill="rgb(240,19,0)" fg:x="926780316" fg:w="6172517386"/><text x="9.4688%" y="1519.50">tokio::runtime::context::runtime::enter_runtime</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}} (6,172,517,386 samples, 61.40%)</title><rect x="9.2188%" y="1493" width="61.3988%" height="15" fill="rgb(232,42,35)" fg:x="926780316" fg:w="6172517386"/><text x="9.4688%" y="1503.50">tokio::runtime::scheduler::multi_thread::worker::run::{{closure}}</text></g><g><title>tokio::runtime::context::set_scheduler (6,172,517,386 samples, 61.40%)</title><rect x="9.2188%" y="1477" width="61.3988%" height="15" fill="rgb(223,130,24)" fg:x="926780316" fg:w="6172517386"/><text x="9.4688%" y="1487.50">tokio::runtime::context::set_scheduler</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6,172,517,386 samples, 61.40%)</title><rect x="9.2188%" y="1461" width="61.3988%" height="15" fill="rgb(237,16,22)" fg:x="926780316" fg:w="6172517386"/><text x="9.4688%" y="1471.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6,172,517,386 samples, 61.40%)</title><rect x="9.2188%" y="1445" width="61.3988%" height="15" fill="rgb(248,192,20)" fg:x="926780316" fg:w="6172517386"/><text x="9.4688%" y="1455.50">std::thread::local::LocalKey&lt;T&gt;::try_with</text></g><g><title>tokio::runtime::context::set_scheduler::{{closure}} (6,172,517,386 samples, 61.40%)</title><rect x="9.2188%" y="1429" width="61.3988%" height="15" fill="rgb(233,167,2)" fg:x="926780316" fg:w="6172517386"/><text x="9.4688%" y="1439.50">tokio::runtime::context::set_scheduler::{{closure}}</text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (6,172,517,386 samples, 61.40%)</title><rect x="9.2188%" y="1413" width="61.3988%" height="15" fill="rgb(252,71,44)" fg:x="926780316" fg:w="6172517386"/><text x="9.4688%" y="1423.50">tokio::runtime::context::scoped::Scoped&lt;T&gt;::set</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}}::{{closure}} (6,172,517,386 samples, 61.40%)</title><rect x="9.2188%" y="1397" width="61.3988%" height="15" fill="rgb(238,37,47)" fg:x="926780316" fg:w="6172517386"/><text x="9.4688%" y="1407.50">tokio::runtime::scheduler::multi_thread::worker::run::{{closure}}::{{closure}}</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (6,172,517,386 samples, 61.40%)</title><rect x="9.2188%" y="1381" width="61.3988%" height="15" fill="rgb(214,202,54)" fg:x="926780316" fg:w="6172517386"/><text x="9.4688%" y="1391.50">tokio::runtime::scheduler::multi_thread::worker::Context::run</text></g><g><title>__memcpy_evex_unaligned_erms (11,033,099 samples, 0.11%)</title><rect x="70.6874%" y="1029" width="0.1097%" height="15" fill="rgb(254,165,40)" fg:x="7106318765" fg:w="11033099"/><text x="70.9374%" y="1039.50"></text></g><g><title>h2::proto::connection::Connection&lt;T,h2::server::Peer,B&gt;::next_incoming (2,006,018 samples, 0.02%)</title><rect x="70.7972%" y="1029" width="0.0200%" height="15" fill="rgb(246,173,38)" fg:x="7117351864" fg:w="2006018"/><text x="71.0472%" y="1039.50"></text></g><g><title>h2::proto::streams::streams::Streams&lt;B,P&gt;::next_incoming (2,006,018 samples, 0.02%)</title><rect x="70.7972%" y="1013" width="0.0200%" height="15" fill="rgb(215,3,27)" fg:x="7117351864" fg:w="2006018"/><text x="71.0472%" y="1023.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (4,012,036 samples, 0.04%)</title><rect x="70.8271%" y="997" width="0.0399%" height="15" fill="rgb(239,169,51)" fg:x="7120360891" fg:w="4012036"/><text x="71.0771%" y="1007.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2,006,018 samples, 0.02%)</title><rect x="70.8670%" y="997" width="0.0200%" height="15" fill="rgb(212,5,25)" fg:x="7124372927" fg:w="2006018"/><text x="71.1170%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::poison::mutex::MutexGuard&lt;h2::proto::streams::streams::Inner&gt;&gt; (8,024,072 samples, 0.08%)</title><rect x="70.8870%" y="997" width="0.0798%" height="15" fill="rgb(243,45,17)" fg:x="7126378945" fg:w="8024072"/><text x="71.1370%" y="1007.50"></text></g><g><title>&lt;std::sync::poison::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8,024,072 samples, 0.08%)</title><rect x="70.8870%" y="981" width="0.0798%" height="15" fill="rgb(242,97,9)" fg:x="7126378945" fg:w="8024072"/><text x="71.1370%" y="991.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (8,024,072 samples, 0.08%)</title><rect x="70.8870%" y="965" width="0.0798%" height="15" fill="rgb(228,71,31)" fg:x="7126378945" fg:w="8024072"/><text x="71.1370%" y="975.50"></text></g><g><title>syscall (4,012,036 samples, 0.04%)</title><rect x="70.9269%" y="949" width="0.0399%" height="15" fill="rgb(252,184,16)" fg:x="7130390981" fg:w="4012036"/><text x="71.1769%" y="959.50"></text></g><g><title>h2::proto::streams::streams::StreamRef&lt;B&gt;::clone_to_opaque (23,069,207 samples, 0.23%)</title><rect x="70.8171%" y="1029" width="0.2295%" height="15" fill="rgb(236,169,46)" fg:x="7119357882" fg:w="23069207"/><text x="71.0671%" y="1039.50"></text></g><g><title>&lt;h2::proto::streams::streams::OpaqueStreamRef as core::clone::Clone&gt;::clone (23,069,207 samples, 0.23%)</title><rect x="70.8171%" y="1013" width="0.2295%" height="15" fill="rgb(207,17,47)" fg:x="7119357882" fg:w="23069207"/><text x="71.0671%" y="1023.50"></text></g><g><title>std::sync::poison::mutex::Mutex&lt;T&gt;::lock (8,024,072 samples, 0.08%)</title><rect x="70.9668%" y="997" width="0.0798%" height="15" fill="rgb(206,201,28)" fg:x="7134403017" fg:w="8024072"/><text x="71.2168%" y="1007.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (8,024,072 samples, 0.08%)</title><rect x="70.9668%" y="981" width="0.0798%" height="15" fill="rgb(224,184,23)" fg:x="7134403017" fg:w="8024072"/><text x="71.2168%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::poison::mutex::MutexGuard&lt;h2::proto::streams::streams::Inner&gt;&gt; (7,021,063 samples, 0.07%)</title><rect x="71.0865%" y="1013" width="0.0698%" height="15" fill="rgb(208,139,48)" fg:x="7146439125" fg:w="7021063"/><text x="71.3365%" y="1023.50"></text></g><g><title>&lt;std::sync::poison::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7,021,063 samples, 0.07%)</title><rect x="71.0865%" y="997" width="0.0698%" height="15" fill="rgb(208,130,10)" fg:x="7146439125" fg:w="7021063"/><text x="71.3365%" y="1007.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (7,021,063 samples, 0.07%)</title><rect x="71.0865%" y="981" width="0.0698%" height="15" fill="rgb(211,213,45)" fg:x="7146439125" fg:w="7021063"/><text x="71.3365%" y="991.50"></text></g><g><title>syscall (2,006,018 samples, 0.02%)</title><rect x="71.1364%" y="965" width="0.0200%" height="15" fill="rgb(235,100,30)" fg:x="7151454170" fg:w="2006018"/><text x="71.3864%" y="975.50"></text></g><g><title>h2::proto::streams::recv::Recv::take_request (4,012,036 samples, 0.04%)</title><rect x="71.1563%" y="1013" width="0.0399%" height="15" fill="rgb(206,144,31)" fg:x="7153460188" fg:w="4012036"/><text x="71.4063%" y="1023.50"></text></g><g><title>h2::proto::streams::streams::StreamRef&lt;B&gt;::take_request (19,057,171 samples, 0.19%)</title><rect x="71.0466%" y="1029" width="0.1896%" height="15" fill="rgb(224,200,26)" fg:x="7142427089" fg:w="19057171"/><text x="71.2966%" y="1039.50"></text></g><g><title>std::sync::poison::mutex::Mutex&lt;T&gt;::lock (4,012,036 samples, 0.04%)</title><rect x="71.1962%" y="1013" width="0.0399%" height="15" fill="rgb(247,104,53)" fg:x="7157472224" fg:w="4012036"/><text x="71.4462%" y="1023.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (3,009,027 samples, 0.03%)</title><rect x="71.2062%" y="997" width="0.0299%" height="15" fill="rgb(220,14,17)" fg:x="7158475233" fg:w="3009027"/><text x="71.4562%" y="1007.50"></text></g><g><title>core::task::poll::Poll&lt;core::result::Result&lt;T,E&gt;&gt;::map_err (5,015,045 samples, 0.05%)</title><rect x="71.2362%" y="1013" width="0.0499%" height="15" fill="rgb(230,140,40)" fg:x="7161484260" fg:w="5015045"/><text x="71.4862%" y="1023.50"></text></g><g><title>h2::server::Connection&lt;T,B&gt;::poll_closed (15,045,135 samples, 0.15%)</title><rect x="71.2362%" y="1029" width="0.1497%" height="15" fill="rgb(229,2,41)" fg:x="7161484260" fg:w="15045135"/><text x="71.4862%" y="1039.50"></text></g><g><title>h2::proto::connection::Connection&lt;T,P,B&gt;::poll (10,030,090 samples, 0.10%)</title><rect x="71.2860%" y="1013" width="0.0998%" height="15" fill="rgb(232,89,16)" fg:x="7166499305" fg:w="10030090"/><text x="71.5360%" y="1023.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="2021" width="0.7882%" height="15" fill="rgb(247,59,52)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="2031.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="2005" width="0.7882%" height="15" fill="rgb(226,110,21)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="2015.50"></text></g><g><title>std::panic::catch_unwind (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1989" width="0.7882%" height="15" fill="rgb(224,176,43)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1999.50"></text></g><g><title>std::panicking::try (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1973" width="0.7882%" height="15" fill="rgb(221,73,6)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1983.50"></text></g><g><title>std::panicking::try::do_call (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1957" width="0.7882%" height="15" fill="rgb(232,78,19)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1967.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1941" width="0.7882%" height="15" fill="rgb(233,112,48)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1951.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1925" width="0.7882%" height="15" fill="rgb(243,131,47)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1935.50"></text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1909" width="0.7882%" height="15" fill="rgb(226,51,1)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1919.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1893" width="0.7882%" height="15" fill="rgb(247,58,7)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1903.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1877" width="0.7882%" height="15" fill="rgb(209,7,32)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1887.50"></text></g><g><title>tokio::runtime::blocking::pool::Task::run (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1861" width="0.7882%" height="15" fill="rgb(209,39,41)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1871.50"></text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1845" width="0.7882%" height="15" fill="rgb(226,182,46)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1855.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1829" width="0.7882%" height="15" fill="rgb(230,219,10)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1839.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1813" width="0.7882%" height="15" fill="rgb(227,175,30)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1823.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1797" width="0.7882%" height="15" fill="rgb(217,2,50)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1807.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1781" width="0.7882%" height="15" fill="rgb(229,160,0)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1791.50"></text></g><g><title>std::panic::catch_unwind (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1765" width="0.7882%" height="15" fill="rgb(207,78,37)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1775.50"></text></g><g><title>std::panicking::try (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1749" width="0.7882%" height="15" fill="rgb(225,57,0)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1759.50"></text></g><g><title>std::panicking::try::do_call (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1733" width="0.7882%" height="15" fill="rgb(232,154,2)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1743.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1717" width="0.7882%" height="15" fill="rgb(241,212,25)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1727.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1701" width="0.7882%" height="15" fill="rgb(226,69,20)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1711.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1685" width="0.7882%" height="15" fill="rgb(247,184,54)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1695.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1669" width="0.7882%" height="15" fill="rgb(210,145,0)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1679.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1653" width="0.7882%" height="15" fill="rgb(253,82,12)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1663.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1637" width="0.7882%" height="15" fill="rgb(245,42,11)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1647.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}} (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1621" width="0.7882%" height="15" fill="rgb(219,147,32)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1631.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1605" width="0.7882%" height="15" fill="rgb(246,12,7)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1615.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1589" width="0.7882%" height="15" fill="rgb(243,50,9)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1599.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}} (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1573" width="0.7882%" height="15" fill="rgb(219,149,6)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1583.50"></text></g><g><title>tokio::runtime::context::set_scheduler (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1557" width="0.7882%" height="15" fill="rgb(241,51,42)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1567.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1541" width="0.7882%" height="15" fill="rgb(226,128,27)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1551.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1525" width="0.7882%" height="15" fill="rgb(244,144,4)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1535.50"></text></g><g><title>tokio::runtime::context::set_scheduler::{{closure}} (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1509" width="0.7882%" height="15" fill="rgb(221,4,13)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1519.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1493" width="0.7882%" height="15" fill="rgb(208,170,28)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1503.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}}::{{closure}} (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1477" width="0.7882%" height="15" fill="rgb(226,131,13)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1487.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1461" width="0.7882%" height="15" fill="rgb(215,72,41)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1471.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1445" width="0.7882%" height="15" fill="rgb(243,108,20)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1455.50"></text></g><g><title>tokio::task::coop::budget (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1429" width="0.7882%" height="15" fill="rgb(230,189,17)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1439.50"></text></g><g><title>tokio::task::coop::with_budget (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1413" width="0.7882%" height="15" fill="rgb(220,50,17)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1423.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}} (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1397" width="0.7882%" height="15" fill="rgb(248,152,48)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1407.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1381" width="0.7882%" height="15" fill="rgb(244,91,11)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1391.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1365" width="0.7882%" height="15" fill="rgb(220,157,5)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1375.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1349" width="0.7882%" height="15" fill="rgb(253,137,8)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1359.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1333" width="0.7882%" height="15" fill="rgb(217,137,51)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1343.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1317" width="0.7882%" height="15" fill="rgb(218,209,53)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1327.50"></text></g><g><title>std::panic::catch_unwind (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1301" width="0.7882%" height="15" fill="rgb(249,137,25)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1311.50"></text></g><g><title>std::panicking::try (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1285" width="0.7882%" height="15" fill="rgb(239,155,26)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1295.50"></text></g><g><title>std::panicking::try::do_call (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1269" width="0.7882%" height="15" fill="rgb(227,85,46)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1279.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1253" width="0.7882%" height="15" fill="rgb(251,107,43)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1263.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1237" width="0.7882%" height="15" fill="rgb(234,170,33)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1247.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1221" width="0.7882%" height="15" fill="rgb(206,29,35)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1231.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1205" width="0.7882%" height="15" fill="rgb(227,138,25)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1215.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1189" width="0.7882%" height="15" fill="rgb(249,131,35)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1199.50"></text></g><g><title>&lt;axum::serve::WithGracefulShutdown&lt;L,M,S,F&gt; as core::future::into_future::IntoFuture&gt;::into_future::{{closure}}::{{closure}} (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1173" width="0.7882%" height="15" fill="rgb(239,6,40)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1183.50"></text></g><g><title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1157" width="0.7882%" height="15" fill="rgb(246,136,47)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1167.50"></text></g><g><title>&lt;axum::serve::WithGracefulShutdown&lt;L,M,S,F&gt; as core::future::into_future::IntoFuture&gt;::into_future::{{closure}}::{{closure}}::{{closure}} (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1141" width="0.7882%" height="15" fill="rgb(253,58,26)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1151.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1125" width="0.7882%" height="15" fill="rgb(237,141,10)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1135.50"></text></g><g><title>&lt;hyper_util::server::conn::auto::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1109" width="0.7882%" height="15" fill="rgb(234,156,12)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1119.50"></text></g><g><title>&lt;hyper::server::conn::http2::Connection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1093" width="0.7882%" height="15" fill="rgb(243,224,36)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1103.50"></text></g><g><title>&lt;hyper::proto::h2::server::Server&lt;T,S,B,E&gt; as core::future::future::Future&gt;::poll (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1077" width="0.7882%" height="15" fill="rgb(205,229,51)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1087.50"></text></g><g><title>hyper::proto::h2::server::Serving&lt;T,B&gt;::poll_server (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1061" width="0.7882%" height="15" fill="rgb(223,189,4)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1071.50"></text></g><g><title>h2::server::Connection&lt;T,B&gt;::poll_accept (79,237,711 samples, 0.79%)</title><rect x="70.6176%" y="1045" width="0.7882%" height="15" fill="rgb(249,167,54)" fg:x="7099297702" fg:w="79237711"/><text x="70.8676%" y="1055.50"></text></g><g><title>http::request::Request&lt;T&gt;::into_parts (2,006,018 samples, 0.02%)</title><rect x="71.3858%" y="1029" width="0.0200%" height="15" fill="rgb(218,34,28)" fg:x="7176529395" fg:w="2006018"/><text x="71.6358%" y="1039.50"></text></g><g><title>__memcpy_evex_unaligned_erms (2,006,018 samples, 0.02%)</title><rect x="71.3858%" y="1013" width="0.0200%" height="15" fill="rgb(232,109,42)" fg:x="7176529395" fg:w="2006018"/><text x="71.6358%" y="1023.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (3,009,027 samples, 0.03%)</title><rect x="71.4157%" y="1061" width="0.0299%" height="15" fill="rgb(248,214,46)" fg:x="7179538422" fg:w="3009027"/><text x="71.6657%" y="1071.50"></text></g><g><title>syscall (3,009,027 samples, 0.03%)</title><rect x="71.4157%" y="1045" width="0.0299%" height="15" fill="rgb(244,216,40)" fg:x="7179538422" fg:w="3009027"/><text x="71.6657%" y="1055.50"></text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="2021" width="0.0499%" height="15" fill="rgb(231,226,31)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="2031.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="2005" width="0.0499%" height="15" fill="rgb(238,38,43)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="2015.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1989" width="0.0499%" height="15" fill="rgb(208,88,43)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1999.50"></text></g><g><title>tokio::runtime::blocking::pool::Task::run (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1973" width="0.0499%" height="15" fill="rgb(205,136,37)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1983.50"></text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1957" width="0.0499%" height="15" fill="rgb(237,34,14)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1967.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1941" width="0.0499%" height="15" fill="rgb(236,193,44)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1951.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1925" width="0.0499%" height="15" fill="rgb(231,48,10)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1935.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1909" width="0.0499%" height="15" fill="rgb(213,141,34)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1919.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1893" width="0.0499%" height="15" fill="rgb(249,130,34)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1903.50"></text></g><g><title>std::panic::catch_unwind (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1877" width="0.0499%" height="15" fill="rgb(219,42,41)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1887.50"></text></g><g><title>std::panicking::try (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1861" width="0.0499%" height="15" fill="rgb(224,100,54)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1871.50"></text></g><g><title>std::panicking::try::do_call (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1845" width="0.0499%" height="15" fill="rgb(229,200,27)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1855.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1829" width="0.0499%" height="15" fill="rgb(217,118,10)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1839.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1813" width="0.0499%" height="15" fill="rgb(206,22,3)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1823.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1797" width="0.0499%" height="15" fill="rgb(232,163,46)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1807.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1781" width="0.0499%" height="15" fill="rgb(206,95,13)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1791.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1765" width="0.0499%" height="15" fill="rgb(253,154,18)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1775.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1749" width="0.0499%" height="15" fill="rgb(219,32,23)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1759.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}} (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1733" width="0.0499%" height="15" fill="rgb(230,191,45)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1743.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1717" width="0.0499%" height="15" fill="rgb(229,64,36)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1727.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1701" width="0.0499%" height="15" fill="rgb(205,129,25)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1711.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}} (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1685" width="0.0499%" height="15" fill="rgb(254,112,7)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1695.50"></text></g><g><title>tokio::runtime::context::set_scheduler (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1669" width="0.0499%" height="15" fill="rgb(226,53,48)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1679.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1653" width="0.0499%" height="15" fill="rgb(214,153,38)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1663.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1637" width="0.0499%" height="15" fill="rgb(243,101,7)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1647.50"></text></g><g><title>tokio::runtime::context::set_scheduler::{{closure}} (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1621" width="0.0499%" height="15" fill="rgb(240,140,22)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1631.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1605" width="0.0499%" height="15" fill="rgb(235,114,2)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1615.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}}::{{closure}} (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1589" width="0.0499%" height="15" fill="rgb(242,59,12)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1599.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1573" width="0.0499%" height="15" fill="rgb(252,134,9)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1583.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1557" width="0.0499%" height="15" fill="rgb(236,4,44)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1567.50"></text></g><g><title>tokio::task::coop::budget (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1541" width="0.0499%" height="15" fill="rgb(254,172,41)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1551.50"></text></g><g><title>tokio::task::coop::with_budget (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1525" width="0.0499%" height="15" fill="rgb(244,63,20)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1535.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}} (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1509" width="0.0499%" height="15" fill="rgb(250,73,31)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1519.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1493" width="0.0499%" height="15" fill="rgb(241,38,36)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1503.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1477" width="0.0499%" height="15" fill="rgb(245,211,2)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1487.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1461" width="0.0499%" height="15" fill="rgb(206,120,28)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1471.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1445" width="0.0499%" height="15" fill="rgb(211,59,34)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1455.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1429" width="0.0499%" height="15" fill="rgb(233,168,5)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1439.50"></text></g><g><title>std::panic::catch_unwind (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1413" width="0.0499%" height="15" fill="rgb(234,33,13)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1423.50"></text></g><g><title>std::panicking::try (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1397" width="0.0499%" height="15" fill="rgb(231,150,26)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1407.50"></text></g><g><title>std::panicking::try::do_call (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1381" width="0.0499%" height="15" fill="rgb(217,191,4)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1391.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1365" width="0.0499%" height="15" fill="rgb(246,198,38)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1375.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1349" width="0.0499%" height="15" fill="rgb(245,64,37)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1359.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1333" width="0.0499%" height="15" fill="rgb(250,30,36)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1343.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1317" width="0.0499%" height="15" fill="rgb(217,86,53)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1327.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1301" width="0.0499%" height="15" fill="rgb(228,157,16)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1311.50"></text></g><g><title>&lt;axum::serve::WithGracefulShutdown&lt;L,M,S,F&gt; as core::future::into_future::IntoFuture&gt;::into_future::{{closure}}::{{closure}} (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1285" width="0.0499%" height="15" fill="rgb(217,59,31)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1295.50"></text></g><g><title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1269" width="0.0499%" height="15" fill="rgb(237,138,41)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1279.50"></text></g><g><title>&lt;axum::serve::WithGracefulShutdown&lt;L,M,S,F&gt; as core::future::into_future::IntoFuture&gt;::into_future::{{closure}}::{{closure}}::{{closure}} (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1253" width="0.0499%" height="15" fill="rgb(227,91,49)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1263.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1237" width="0.0499%" height="15" fill="rgb(247,21,44)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1247.50"></text></g><g><title>&lt;hyper_util::server::conn::auto::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1221" width="0.0499%" height="15" fill="rgb(219,210,51)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1231.50"></text></g><g><title>&lt;hyper::server::conn::http2::Connection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1205" width="0.0499%" height="15" fill="rgb(209,140,6)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1215.50"></text></g><g><title>&lt;hyper::proto::h2::server::Server&lt;T,S,B,E&gt; as core::future::future::Future&gt;::poll (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1189" width="0.0499%" height="15" fill="rgb(221,188,24)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1199.50"></text></g><g><title>hyper::proto::h2::server::Serving&lt;T,B&gt;::poll_server (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1173" width="0.0499%" height="15" fill="rgb(232,154,20)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1183.50"></text></g><g><title>h2::server::Connection&lt;T,B&gt;::poll_accept (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1157" width="0.0499%" height="15" fill="rgb(244,137,50)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1167.50"></text></g><g><title>h2::proto::streams::streams::StreamRef&lt;B&gt;::clone_to_opaque (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1141" width="0.0499%" height="15" fill="rgb(225,185,43)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1151.50"></text></g><g><title>&lt;h2::proto::streams::streams::OpaqueStreamRef as core::clone::Clone&gt;::clone (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1125" width="0.0499%" height="15" fill="rgb(213,205,38)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1135.50"></text></g><g><title>std::sync::poison::mutex::Mutex&lt;T&gt;::lock (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1109" width="0.0499%" height="15" fill="rgb(236,73,12)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1119.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1093" width="0.0499%" height="15" fill="rgb(235,219,13)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1103.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (5,015,045 samples, 0.05%)</title><rect x="71.4058%" y="1077" width="0.0499%" height="15" fill="rgb(218,59,36)" fg:x="7178535413" fg:w="5015045"/><text x="71.6558%" y="1087.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (7,021,063 samples, 0.07%)</title><rect x="71.4856%" y="1109" width="0.0698%" height="15" fill="rgb(205,110,39)" fg:x="7186559485" fg:w="7021063"/><text x="71.7356%" y="1119.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::Deref&gt;::deref (3,009,027 samples, 0.03%)</title><rect x="71.5554%" y="1109" width="0.0299%" height="15" fill="rgb(218,206,42)" fg:x="7193580548" fg:w="3009027"/><text x="71.8054%" y="1119.50"></text></g><g><title>&lt;h2::proto::streams::store::Store as core::ops::index::Index&lt;h2::proto::streams::store::Key&gt;&gt;::index (2,006,018 samples, 0.02%)</title><rect x="71.5654%" y="1093" width="0.0200%" height="15" fill="rgb(248,125,24)" fg:x="7194583557" fg:w="2006018"/><text x="71.8154%" y="1103.50"></text></g><g><title>slab::Slab&lt;T&gt;::get (2,006,018 samples, 0.02%)</title><rect x="71.5654%" y="1077" width="0.0200%" height="15" fill="rgb(242,28,27)" fg:x="7194583557" fg:w="2006018"/><text x="71.8154%" y="1087.50"></text></g><g><title>&lt;h2::proto::streams::store::Store as h2::proto::streams::store::Resolve&gt;::resolve (2,006,018 samples, 0.02%)</title><rect x="71.5854%" y="1109" width="0.0200%" height="15" fill="rgb(216,228,15)" fg:x="7196589575" fg:w="2006018"/><text x="71.8354%" y="1119.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (19,057,171 samples, 0.19%)</title><rect x="71.4656%" y="1141" width="0.1896%" height="15" fill="rgb(235,116,46)" fg:x="7184553467" fg:w="19057171"/><text x="71.7156%" y="1151.50"></text></g><g><title>h2::proto::streams::streams::Streams&lt;B,P&gt;::next_incoming::{{closure}} (18,054,162 samples, 0.18%)</title><rect x="71.4756%" y="1125" width="0.1796%" height="15" fill="rgb(224,18,32)" fg:x="7185556476" fg:w="18054162"/><text x="71.7256%" y="1135.50"></text></g><g><title>h2::proto::streams::streams::OpaqueStreamRef::new (4,012,036 samples, 0.04%)</title><rect x="71.6153%" y="1109" width="0.0399%" height="15" fill="rgb(252,5,12)" fg:x="7199598602" fg:w="4012036"/><text x="71.8653%" y="1119.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::wake (2,006,018 samples, 0.02%)</title><rect x="71.7151%" y="1093" width="0.0200%" height="15" fill="rgb(251,36,5)" fg:x="7209628692" fg:w="2006018"/><text x="71.9651%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::poison::mutex::MutexGuard&lt;h2::proto::streams::streams::Inner&gt;&gt; (16,048,144 samples, 0.16%)</title><rect x="71.6552%" y="1141" width="0.1596%" height="15" fill="rgb(217,53,14)" fg:x="7203610638" fg:w="16048144"/><text x="71.9052%" y="1151.50"></text></g><g><title>&lt;std::sync::poison::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16,048,144 samples, 0.16%)</title><rect x="71.6552%" y="1125" width="0.1596%" height="15" fill="rgb(215,86,45)" fg:x="7203610638" fg:w="16048144"/><text x="71.9052%" y="1135.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (15,045,135 samples, 0.15%)</title><rect x="71.6652%" y="1109" width="0.1497%" height="15" fill="rgb(242,169,11)" fg:x="7204613647" fg:w="15045135"/><text x="71.9152%" y="1119.50"></text></g><g><title>syscall (8,024,072 samples, 0.08%)</title><rect x="71.7350%" y="1093" width="0.0798%" height="15" fill="rgb(211,213,45)" fg:x="7211634710" fg:w="8024072"/><text x="71.9850%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (7,021,063 samples, 0.07%)</title><rect x="71.8647%" y="1125" width="0.0698%" height="15" fill="rgb(205,88,11)" fg:x="7224673827" fg:w="7021063"/><text x="72.1147%" y="1135.50"></text></g><g><title>h2::proto::streams::recv::Recv::next_incoming (19,057,171 samples, 0.19%)</title><rect x="71.8148%" y="1141" width="0.1896%" height="15" fill="rgb(252,69,26)" fg:x="7219658782" fg:w="19057171"/><text x="72.0648%" y="1151.50"></text></g><g><title>h2::proto::streams::store::Queue&lt;N&gt;::pop (7,021,063 samples, 0.07%)</title><rect x="71.9346%" y="1125" width="0.0698%" height="15" fill="rgb(246,123,37)" fg:x="7231694890" fg:w="7021063"/><text x="72.1846%" y="1135.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (3,009,027 samples, 0.03%)</title><rect x="72.0742%" y="1093" width="0.0299%" height="15" fill="rgb(212,205,5)" fg:x="7245737016" fg:w="3009027"/><text x="72.3242%" y="1103.50"></text></g><g><title>syscall (3,009,027 samples, 0.03%)</title><rect x="72.0742%" y="1077" width="0.0299%" height="15" fill="rgb(253,148,0)" fg:x="7245737016" fg:w="3009027"/><text x="72.3242%" y="1087.50"></text></g><g><title>h2::proto::connection::Connection&lt;T,h2::server::Peer,B&gt;::next_incoming (71,213,639 samples, 0.71%)</title><rect x="71.4557%" y="1173" width="0.7084%" height="15" fill="rgb(239,22,4)" fg:x="7183550458" fg:w="71213639"/><text x="71.7057%" y="1183.50"></text></g><g><title>h2::proto::streams::streams::Streams&lt;B,P&gt;::next_incoming (71,213,639 samples, 0.71%)</title><rect x="71.4557%" y="1157" width="0.7084%" height="15" fill="rgb(226,26,53)" fg:x="7183550458" fg:w="71213639"/><text x="71.7057%" y="1167.50"></text></g><g><title>std::sync::poison::mutex::Mutex&lt;T&gt;::lock (16,048,144 samples, 0.16%)</title><rect x="72.0044%" y="1141" width="0.1596%" height="15" fill="rgb(225,229,45)" fg:x="7238715953" fg:w="16048144"/><text x="72.2544%" y="1151.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (15,045,135 samples, 0.15%)</title><rect x="72.0144%" y="1125" width="0.1497%" height="15" fill="rgb(220,60,37)" fg:x="7239718962" fg:w="15045135"/><text x="72.2644%" y="1135.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (10,030,090 samples, 0.10%)</title><rect x="72.0643%" y="1109" width="0.0998%" height="15" fill="rgb(217,180,35)" fg:x="7244734007" fg:w="10030090"/><text x="72.3143%" y="1119.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (6,018,054 samples, 0.06%)</title><rect x="72.1042%" y="1093" width="0.0599%" height="15" fill="rgb(229,7,53)" fg:x="7248746043" fg:w="6018054"/><text x="72.3542%" y="1103.50"></text></g><g><title>__memcpy_evex_unaligned_erms (2,006,018 samples, 0.02%)</title><rect x="72.1840%" y="1141" width="0.0200%" height="15" fill="rgb(254,137,3)" fg:x="7256770115" fg:w="2006018"/><text x="72.4340%" y="1151.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (77,231,693 samples, 0.77%)</title><rect x="71.4557%" y="2021" width="0.7682%" height="15" fill="rgb(215,140,41)" fg:x="7183550458" fg:w="77231693"/><text x="71.7057%" y="2031.50"></text></g><g><title>tokio::runtime::blocking::pool::Task::run (77,231,693 samples, 0.77%)</title><rect x="71.4557%" y="2005" width="0.7682%" height="15" fill="rgb(250,80,15)" fg:x="7183550458" fg:w="77231693"/><text x="71.7057%" y="2015.50"></text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (77,231,693 samples, 0.77%)</title><rect x="71.4557%" y="1989" width="0.7682%" height="15" fill="rgb(252,191,6)" fg:x="7183550458" fg:w="77231693"/><text x="71.7057%" y="1999.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (77,231,693 samples, 0.77%)</title><rect x="71.4557%" y="1973" width="0.7682%" height="15" fill="rgb(246,217,18)" fg:x="7183550458" fg:w="77231693"/><text x="71.7057%" y="1983.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (77,231,693 samples, 0.77%)</title><rect x="71.4557%" y="1957" width="0.7682%" height="15" fill="rgb(223,93,7)" fg:x="7183550458" fg:w="77231693"/><text x="71.7057%" y="1967.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (77,231,693 samples, 0.77%)</title><rect x="71.4557%" y="1941" width="0.7682%" height="15" fill="rgb(225,55,52)" fg:x="7183550458" fg:w="77231693"/><text x="71.7057%" y="1951.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (77,231,693 samples, 0.77%)</title><rect x="71.4557%" y="1925" width="0.7682%" height="15" fill="rgb(240,31,24)" fg:x="7183550458" fg:w="77231693"/><text x="71.7057%" y="1935.50"></text></g><g><title>std::panic::catch_unwind (77,231,693 samples, 0.77%)</title><rect x="71.4557%" y="1909" width="0.7682%" height="15" fill="rgb(205,56,52)" fg:x="7183550458" fg:w="77231693"/><text x="71.7057%" y="1919.50"></text></g><g><title>std::panicking::try (77,231,693 samples, 0.77%)</title><rect x="71.4557%" y="1893" width="0.7682%" height="15" fill="rgb(246,146,12)" fg:x="7183550458" fg:w="77231693"/><text x="71.7057%" y="1903.50"></text></g><g><title>std::panicking::try::do_call (77,231,693 samples, 0.77%)</title><rect x="71.4557%" y="1877" width="0.7682%" height="15" fill="rgb(239,84,36)" fg:x="7183550458" fg:w="77231693"/><text x="71.7057%" y="1887.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (77,231,693 samples, 0.77%)</title><rect x="71.4557%" y="1861" width="0.7682%" height="15" fill="rgb(207,41,40)" fg:x="7183550458" fg:w="77231693"/><text x="71.7057%" y="1871.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (77,231,693 samples, 0.77%)</title><rect x="71.4557%" y="1845" width="0.7682%" height="15" fill="rgb(241,179,25)" fg:x="7183550458" fg:w="77231693"/><text x="71.7057%" y="1855.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (77,231,693 samples, 0.77%)</title><rect x="71.4557%" y="1829" width="0.7682%" height="15" fill="rgb(210,0,34)" fg:x="7183550458" fg:w="77231693"/><text x="71.7057%" y="1839.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (77,231,693 samples, 0.77%)</title><rect x="71.4557%" y="1813" width="0.7682%" height="15" fill="rgb(225,217,29)" fg:x="7183550458" fg:w="77231693"/><text x="71.7057%" y="1823.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (77,231,693 samples, 0.77%)</title><rect x="71.4557%" y="1797" width="0.7682%" height="15" fill="rgb(216,191,38)" fg:x="7183550458" fg:w="77231693"/><text x="71.7057%" y="1807.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (77,231,693 samples, 0.77%)</title><rect x="71.4557%" y="1781" width="0.7682%" height="15" fill="rgb(232,140,52)" fg:x="7183550458" fg:w="77231693"/><text x="71.7057%" y="1791.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}} (77,231,693 samples, 0.77%)</title><rect x="71.4557%" y="1765" width="0.7682%" height="15" fill="rgb(223,158,51)" fg:x="7183550458" fg:w="77231693"/><text x="71.7057%" y="1775.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (77,231,693 samples, 0.77%)</title><rect x="71.4557%" y="1749" width="0.7682%" height="15" fill="rgb(235,29,51)" fg:x="7183550458" fg:w="77231693"/><text x="71.7057%" y="1759.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (77,231,693 samples, 0.77%)</title><rect x="71.4557%" y="1733" width="0.7682%" height="15" fill="rgb(215,181,18)" fg:x="7183550458" fg:w="77231693"/><text x="71.7057%" y="1743.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}} (77,231,693 samples, 0.77%)</title><rect x="71.4557%" y="1717" width="0.7682%" height="15" fill="rgb(227,125,34)" fg:x="7183550458" fg:w="77231693"/><text x="71.7057%" y="1727.50"></text></g><g><title>tokio::runtime::context::set_scheduler (77,231,693 samples, 0.77%)</title><rect x="71.4557%" y="1701" width="0.7682%" height="15" fill="rgb(230,197,49)" fg:x="7183550458" fg:w="77231693"/><text x="71.7057%" y="1711.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (77,231,693 samples, 0.77%)</title><rect x="71.4557%" y="1685" width="0.7682%" height="15" fill="rgb(239,141,16)" fg:x="7183550458" fg:w="77231693"/><text x="71.7057%" y="1695.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (77,231,693 samples, 0.77%)</title><rect x="71.4557%" y="1669" width="0.7682%" height="15" fill="rgb(225,105,43)" fg:x="7183550458" fg:w="77231693"/><text x="71.7057%" y="1679.50"></text></g><g><title>tokio::runtime::context::set_scheduler::{{closure}} (77,231,693 samples, 0.77%)</title><rect x="71.4557%" y="1653" width="0.7682%" height="15" fill="rgb(214,131,14)" fg:x="7183550458" fg:w="77231693"/><text x="71.7057%" y="1663.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (77,231,693 samples, 0.77%)</title><rect x="71.4557%" y="1637" width="0.7682%" height="15" fill="rgb(229,177,11)" fg:x="7183550458" fg:w="77231693"/><text x="71.7057%" y="1647.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}}::{{closure}} (77,231,693 samples, 0.77%)</title><rect x="71.4557%" y="1621" width="0.7682%" height="15" fill="rgb(231,180,14)" fg:x="7183550458" fg:w="77231693"/><text x="71.7057%" y="1631.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (77,231,693 samples, 0.77%)</title><rect x="71.4557%" y="1605" width="0.7682%" height="15" fill="rgb(232,88,2)" fg:x="7183550458" fg:w="77231693"/><text x="71.7057%" y="1615.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (77,231,693 samples, 0.77%)</title><rect x="71.4557%" y="1589" width="0.7682%" height="15" fill="rgb(205,220,8)" fg:x="7183550458" fg:w="77231693"/><text x="71.7057%" y="1599.50"></text></g><g><title>tokio::task::coop::budget (77,231,693 samples, 0.77%)</title><rect x="71.4557%" y="1573" width="0.7682%" height="15" fill="rgb(225,23,53)" fg:x="7183550458" fg:w="77231693"/><text x="71.7057%" y="1583.50"></text></g><g><title>tokio::task::coop::with_budget (77,231,693 samples, 0.77%)</title><rect x="71.4557%" y="1557" width="0.7682%" height="15" fill="rgb(213,62,29)" fg:x="7183550458" fg:w="77231693"/><text x="71.7057%" y="1567.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}} (77,231,693 samples, 0.77%)</title><rect x="71.4557%" y="1541" width="0.7682%" height="15" fill="rgb(227,75,7)" fg:x="7183550458" fg:w="77231693"/><text x="71.7057%" y="1551.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (77,231,693 samples, 0.77%)</title><rect x="71.4557%" y="1525" width="0.7682%" height="15" fill="rgb(207,105,14)" fg:x="7183550458" fg:w="77231693"/><text x="71.7057%" y="1535.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (77,231,693 samples, 0.77%)</title><rect x="71.4557%" y="1509" width="0.7682%" height="15" fill="rgb(245,62,29)" fg:x="7183550458" fg:w="77231693"/><text x="71.7057%" y="1519.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (77,231,693 samples, 0.77%)</title><rect x="71.4557%" y="1493" width="0.7682%" height="15" fill="rgb(236,202,4)" fg:x="7183550458" fg:w="77231693"/><text x="71.7057%" y="1503.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (77,231,693 samples, 0.77%)</title><rect x="71.4557%" y="1477" width="0.7682%" height="15" fill="rgb(250,67,1)" fg:x="7183550458" fg:w="77231693"/><text x="71.7057%" y="1487.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (77,231,693 samples, 0.77%)</title><rect x="71.4557%" y="1461" width="0.7682%" height="15" fill="rgb(253,115,44)" fg:x="7183550458" fg:w="77231693"/><text x="71.7057%" y="1471.50"></text></g><g><title>std::panic::catch_unwind (77,231,693 samples, 0.77%)</title><rect x="71.4557%" y="1445" width="0.7682%" height="15" fill="rgb(251,139,18)" fg:x="7183550458" fg:w="77231693"/><text x="71.7057%" y="1455.50"></text></g><g><title>std::panicking::try (77,231,693 samples, 0.77%)</title><rect x="71.4557%" y="1429" width="0.7682%" height="15" fill="rgb(218,22,32)" fg:x="7183550458" fg:w="77231693"/><text x="71.7057%" y="1439.50"></text></g><g><title>std::panicking::try::do_call (77,231,693 samples, 0.77%)</title><rect x="71.4557%" y="1413" width="0.7682%" height="15" fill="rgb(243,53,5)" fg:x="7183550458" fg:w="77231693"/><text x="71.7057%" y="1423.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (77,231,693 samples, 0.77%)</title><rect x="71.4557%" y="1397" width="0.7682%" height="15" fill="rgb(227,56,16)" fg:x="7183550458" fg:w="77231693"/><text x="71.7057%" y="1407.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (77,231,693 samples, 0.77%)</title><rect x="71.4557%" y="1381" width="0.7682%" height="15" fill="rgb(245,53,0)" fg:x="7183550458" fg:w="77231693"/><text x="71.7057%" y="1391.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (77,231,693 samples, 0.77%)</title><rect x="71.4557%" y="1365" width="0.7682%" height="15" fill="rgb(216,170,35)" fg:x="7183550458" fg:w="77231693"/><text x="71.7057%" y="1375.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (77,231,693 samples, 0.77%)</title><rect x="71.4557%" y="1349" width="0.7682%" height="15" fill="rgb(211,200,8)" fg:x="7183550458" fg:w="77231693"/><text x="71.7057%" y="1359.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (77,231,693 samples, 0.77%)</title><rect x="71.4557%" y="1333" width="0.7682%" height="15" fill="rgb(228,204,44)" fg:x="7183550458" fg:w="77231693"/><text x="71.7057%" y="1343.50"></text></g><g><title>&lt;axum::serve::WithGracefulShutdown&lt;L,M,S,F&gt; as core::future::into_future::IntoFuture&gt;::into_future::{{closure}}::{{closure}} (77,231,693 samples, 0.77%)</title><rect x="71.4557%" y="1317" width="0.7682%" height="15" fill="rgb(214,121,17)" fg:x="7183550458" fg:w="77231693"/><text x="71.7057%" y="1327.50"></text></g><g><title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (77,231,693 samples, 0.77%)</title><rect x="71.4557%" y="1301" width="0.7682%" height="15" fill="rgb(233,64,38)" fg:x="7183550458" fg:w="77231693"/><text x="71.7057%" y="1311.50"></text></g><g><title>&lt;axum::serve::WithGracefulShutdown&lt;L,M,S,F&gt; as core::future::into_future::IntoFuture&gt;::into_future::{{closure}}::{{closure}}::{{closure}} (77,231,693 samples, 0.77%)</title><rect x="71.4557%" y="1285" width="0.7682%" height="15" fill="rgb(253,54,19)" fg:x="7183550458" fg:w="77231693"/><text x="71.7057%" y="1295.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (77,231,693 samples, 0.77%)</title><rect x="71.4557%" y="1269" width="0.7682%" height="15" fill="rgb(253,94,18)" fg:x="7183550458" fg:w="77231693"/><text x="71.7057%" y="1279.50"></text></g><g><title>&lt;hyper_util::server::conn::auto::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (77,231,693 samples, 0.77%)</title><rect x="71.4557%" y="1253" width="0.7682%" height="15" fill="rgb(227,57,52)" fg:x="7183550458" fg:w="77231693"/><text x="71.7057%" y="1263.50"></text></g><g><title>&lt;hyper::server::conn::http2::Connection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (77,231,693 samples, 0.77%)</title><rect x="71.4557%" y="1237" width="0.7682%" height="15" fill="rgb(230,228,50)" fg:x="7183550458" fg:w="77231693"/><text x="71.7057%" y="1247.50"></text></g><g><title>&lt;hyper::proto::h2::server::Server&lt;T,S,B,E&gt; as core::future::future::Future&gt;::poll (77,231,693 samples, 0.77%)</title><rect x="71.4557%" y="1221" width="0.7682%" height="15" fill="rgb(217,205,27)" fg:x="7183550458" fg:w="77231693"/><text x="71.7057%" y="1231.50"></text></g><g><title>hyper::proto::h2::server::Serving&lt;T,B&gt;::poll_server (77,231,693 samples, 0.77%)</title><rect x="71.4557%" y="1205" width="0.7682%" height="15" fill="rgb(252,71,50)" fg:x="7183550458" fg:w="77231693"/><text x="71.7057%" y="1215.50"></text></g><g><title>h2::server::Connection&lt;T,B&gt;::poll_accept (77,231,693 samples, 0.77%)</title><rect x="71.4557%" y="1189" width="0.7682%" height="15" fill="rgb(209,86,4)" fg:x="7183550458" fg:w="77231693"/><text x="71.7057%" y="1199.50"></text></g><g><title>h2::proto::streams::streams::StreamRef&lt;B&gt;::take_request (6,018,054 samples, 0.06%)</title><rect x="72.1640%" y="1173" width="0.0599%" height="15" fill="rgb(229,94,0)" fg:x="7254764097" fg:w="6018054"/><text x="72.4140%" y="1183.50"></text></g><g><title>h2::proto::streams::recv::Recv::take_request (6,018,054 samples, 0.06%)</title><rect x="72.1640%" y="1157" width="0.0599%" height="15" fill="rgb(252,223,21)" fg:x="7254764097" fg:w="6018054"/><text x="72.4140%" y="1167.50"></text></g><g><title>h2::proto::streams::buffer::Deque::pop_front (2,006,018 samples, 0.02%)</title><rect x="72.2039%" y="1141" width="0.0200%" height="15" fill="rgb(230,210,4)" fg:x="7258776133" fg:w="2006018"/><text x="72.4539%" y="1151.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (27,081,243 samples, 0.27%)</title><rect x="72.4035%" y="1109" width="0.2694%" height="15" fill="rgb(240,149,38)" fg:x="7278836313" fg:w="27081243"/><text x="72.6535%" y="1119.50"></text></g><g><title>syscall (25,075,225 samples, 0.25%)</title><rect x="72.4234%" y="1093" width="0.2494%" height="15" fill="rgb(254,105,20)" fg:x="7280842331" fg:w="25075225"/><text x="72.6734%" y="1103.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (3,009,027 samples, 0.03%)</title><rect x="72.6729%" y="1093" width="0.0299%" height="15" fill="rgb(253,87,46)" fg:x="7305917556" fg:w="3009027"/><text x="72.9229%" y="1103.50"></text></g><g><title>__clock_gettime_2 (3,009,027 samples, 0.03%)</title><rect x="72.6729%" y="1077" width="0.0299%" height="15" fill="rgb(253,116,33)" fg:x="7305917556" fg:w="3009027"/><text x="72.9229%" y="1087.50"></text></g><g><title>[[vdso]] (2,006,018 samples, 0.02%)</title><rect x="72.6828%" y="1061" width="0.0200%" height="15" fill="rgb(229,198,5)" fg:x="7306920565" fg:w="2006018"/><text x="72.9328%" y="1071.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (5,015,045 samples, 0.05%)</title><rect x="72.6729%" y="1109" width="0.0499%" height="15" fill="rgb(242,38,37)" fg:x="7305917556" fg:w="5015045"/><text x="72.9229%" y="1119.50"></text></g><g><title>std::time::Instant::now (2,006,018 samples, 0.02%)</title><rect x="72.7028%" y="1093" width="0.0200%" height="15" fill="rgb(242,69,53)" fg:x="7308926583" fg:w="2006018"/><text x="72.9528%" y="1103.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (8,024,072 samples, 0.08%)</title><rect x="72.7227%" y="1109" width="0.0798%" height="15" fill="rgb(249,80,16)" fg:x="7310932601" fg:w="8024072"/><text x="72.9727%" y="1119.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (4,012,036 samples, 0.04%)</title><rect x="72.7626%" y="1093" width="0.0399%" height="15" fill="rgb(206,128,11)" fg:x="7314944637" fg:w="4012036"/><text x="73.0126%" y="1103.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (44,132,396 samples, 0.44%)</title><rect x="72.3735%" y="1141" width="0.4390%" height="15" fill="rgb(212,35,20)" fg:x="7275827286" fg:w="44132396"/><text x="72.6235%" y="1151.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (43,129,387 samples, 0.43%)</title><rect x="72.3835%" y="1125" width="0.4290%" height="15" fill="rgb(236,79,13)" fg:x="7276830295" fg:w="43129387"/><text x="72.6335%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (5,015,045 samples, 0.05%)</title><rect x="72.8125%" y="1141" width="0.0499%" height="15" fill="rgb(233,123,3)" fg:x="7319959682" fg:w="5015045"/><text x="73.0625%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (5,015,045 samples, 0.05%)</title><rect x="72.8125%" y="1125" width="0.0499%" height="15" fill="rgb(214,93,52)" fg:x="7319959682" fg:w="5015045"/><text x="73.0625%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark_condvar (2,006,018 samples, 0.02%)</title><rect x="72.8425%" y="1109" width="0.0200%" height="15" fill="rgb(251,37,40)" fg:x="7322968709" fg:w="2006018"/><text x="73.0925%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (2,006,018 samples, 0.02%)</title><rect x="72.8923%" y="1109" width="0.0200%" height="15" fill="rgb(227,80,54)" fg:x="7327983754" fg:w="2006018"/><text x="73.1423%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (2,006,018 samples, 0.02%)</title><rect x="72.9123%" y="1109" width="0.0200%" height="15" fill="rgb(254,48,11)" fg:x="7329989772" fg:w="2006018"/><text x="73.1623%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (2,006,018 samples, 0.02%)</title><rect x="72.9123%" y="1093" width="0.0200%" height="15" fill="rgb(235,193,26)" fg:x="7329989772" fg:w="2006018"/><text x="73.1623%" y="1103.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (2,006,018 samples, 0.02%)</title><rect x="72.9123%" y="1077" width="0.0200%" height="15" fill="rgb(229,99,21)" fg:x="7329989772" fg:w="2006018"/><text x="73.1623%" y="1087.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (2,006,018 samples, 0.02%)</title><rect x="72.9123%" y="1061" width="0.0200%" height="15" fill="rgb(211,140,41)" fg:x="7329989772" fg:w="2006018"/><text x="73.1623%" y="1071.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (14,042,126 samples, 0.14%)</title><rect x="72.8624%" y="1141" width="0.1397%" height="15" fill="rgb(240,227,30)" fg:x="7324974727" fg:w="14042126"/><text x="73.1124%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (11,033,099 samples, 0.11%)</title><rect x="72.8923%" y="1125" width="0.1097%" height="15" fill="rgb(215,224,45)" fg:x="7327983754" fg:w="11033099"/><text x="73.1423%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (7,021,063 samples, 0.07%)</title><rect x="72.9323%" y="1109" width="0.0698%" height="15" fill="rgb(206,123,31)" fg:x="7331995790" fg:w="7021063"/><text x="73.1823%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (3,009,027 samples, 0.03%)</title><rect x="72.9722%" y="1093" width="0.0299%" height="15" fill="rgb(210,138,16)" fg:x="7336007826" fg:w="3009027"/><text x="73.2222%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_add (3,009,027 samples, 0.03%)</title><rect x="72.9722%" y="1077" width="0.0299%" height="15" fill="rgb(228,57,28)" fg:x="7336007826" fg:w="3009027"/><text x="73.2222%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::ptr_eq (4,012,036 samples, 0.04%)</title><rect x="73.0021%" y="1141" width="0.0399%" height="15" fill="rgb(242,170,10)" fg:x="7339016853" fg:w="4012036"/><text x="73.2521%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_option_task_without_yield (84,252,756 samples, 0.84%)</title><rect x="72.2239%" y="1285" width="0.8381%" height="15" fill="rgb(228,214,39)" fg:x="7260782151" fg:w="84252756"/><text x="72.4739%" y="1295.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (79,237,711 samples, 0.79%)</title><rect x="72.2738%" y="1269" width="0.7882%" height="15" fill="rgb(218,179,33)" fg:x="7265797196" fg:w="79237711"/><text x="72.5238%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (79,237,711 samples, 0.79%)</title><rect x="72.2738%" y="1253" width="0.7882%" height="15" fill="rgb(235,193,39)" fg:x="7265797196" fg:w="79237711"/><text x="72.5238%" y="1263.50"></text></g><g><title>tokio::runtime::context::with_scheduler (77,231,693 samples, 0.77%)</title><rect x="72.2937%" y="1237" width="0.7682%" height="15" fill="rgb(219,221,36)" fg:x="7267803214" fg:w="77231693"/><text x="72.5437%" y="1247.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (74,222,666 samples, 0.74%)</title><rect x="72.3237%" y="1221" width="0.7383%" height="15" fill="rgb(248,218,19)" fg:x="7270812241" fg:w="74222666"/><text x="72.5737%" y="1231.50"></text></g><g><title>tokio::runtime::context::with_scheduler::{{closure}} (74,222,666 samples, 0.74%)</title><rect x="72.3237%" y="1205" width="0.7383%" height="15" fill="rgb(205,50,9)" fg:x="7270812241" fg:w="74222666"/><text x="72.5737%" y="1215.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (73,219,657 samples, 0.73%)</title><rect x="72.3336%" y="1189" width="0.7283%" height="15" fill="rgb(238,81,28)" fg:x="7271815250" fg:w="73219657"/><text x="72.5836%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current::{{closure}} (73,219,657 samples, 0.73%)</title><rect x="72.3336%" y="1173" width="0.7283%" height="15" fill="rgb(235,110,19)" fg:x="7271815250" fg:w="73219657"/><text x="72.5836%" y="1183.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::{{closure}} (69,207,621 samples, 0.69%)</title><rect x="72.3735%" y="1157" width="0.6884%" height="15" fill="rgb(214,7,14)" fg:x="7275827286" fg:w="69207621"/><text x="72.6235%" y="1167.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (2,006,018 samples, 0.02%)</title><rect x="73.0420%" y="1141" width="0.0200%" height="15" fill="rgb(211,77,3)" fg:x="7343028889" fg:w="2006018"/><text x="73.2920%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::push_back_or_overflow (2,006,018 samples, 0.02%)</title><rect x="73.0420%" y="1125" width="0.0200%" height="15" fill="rgb(229,5,9)" fg:x="7343028889" fg:w="2006018"/><text x="73.2920%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::unpack (2,006,018 samples, 0.02%)</title><rect x="73.0420%" y="1109" width="0.0200%" height="15" fill="rgb(225,90,11)" fg:x="7343028889" fg:w="2006018"/><text x="73.2920%" y="1119.50"></text></g><g><title>tokio::util::sharded_list::ShardGuard&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push (9,027,081 samples, 0.09%)</title><rect x="73.0620%" y="1253" width="0.0898%" height="15" fill="rgb(242,56,8)" fg:x="7345034907" fg:w="9027081"/><text x="73.3120%" y="1263.50"></text></g><g><title>tokio::util::metric_atomics::MetricAtomicU64::add (8,024,072 samples, 0.08%)</title><rect x="73.0719%" y="1237" width="0.0798%" height="15" fill="rgb(249,212,39)" fg:x="7346037916" fg:w="8024072"/><text x="73.3219%" y="1247.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (29,087,261 samples, 0.29%)</title><rect x="73.0620%" y="1285" width="0.2893%" height="15" fill="rgb(236,90,9)" fg:x="7345034907" fg:w="29087261"/><text x="73.3120%" y="1295.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind_inner (29,087,261 samples, 0.29%)</title><rect x="73.0620%" y="1269" width="0.2893%" height="15" fill="rgb(206,88,35)" fg:x="7345034907" fg:w="29087261"/><text x="73.3120%" y="1279.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::lock_shard (20,060,180 samples, 0.20%)</title><rect x="73.1518%" y="1253" width="0.1995%" height="15" fill="rgb(205,126,30)" fg:x="7354061988" fg:w="20060180"/><text x="73.4018%" y="1263.50"></text></g><g><title>tokio::util::sharded_list::ShardedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::shard_inner (20,060,180 samples, 0.20%)</title><rect x="73.1518%" y="1237" width="0.1995%" height="15" fill="rgb(230,176,12)" fg:x="7354061988" fg:w="20060180"/><text x="73.4018%" y="1247.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (19,057,171 samples, 0.19%)</title><rect x="73.1617%" y="1221" width="0.1896%" height="15" fill="rgb(243,19,9)" fg:x="7355064997" fg:w="19057171"/><text x="73.4117%" y="1231.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (19,057,171 samples, 0.19%)</title><rect x="73.1617%" y="1205" width="0.1896%" height="15" fill="rgb(245,171,17)" fg:x="7355064997" fg:w="19057171"/><text x="73.4117%" y="1215.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (19,057,171 samples, 0.19%)</title><rect x="73.1617%" y="1189" width="0.1896%" height="15" fill="rgb(227,52,21)" fg:x="7355064997" fg:w="19057171"/><text x="73.4117%" y="1199.50"></text></g><g><title>&lt;E as hyper::rt::bounds::h2::Http2ServerConnExec&lt;F,B&gt;&gt;::execute_h2stream (118,355,062 samples, 1.18%)</title><rect x="72.2239%" y="1477" width="1.1773%" height="15" fill="rgb(238,69,14)" fg:x="7260782151" fg:w="118355062"/><text x="72.4739%" y="1487.50"></text></g><g><title>&lt;hyper_util::rt::tokio::TokioExecutor as hyper::rt::Executor&lt;Fut&gt;&gt;::execute (118,355,062 samples, 1.18%)</title><rect x="72.2239%" y="1461" width="1.1773%" height="15" fill="rgb(241,156,39)" fg:x="7260782151" fg:w="118355062"/><text x="72.4739%" y="1471.50"></text></g><g><title>tokio::task::spawn::spawn (118,355,062 samples, 1.18%)</title><rect x="72.2239%" y="1445" width="1.1773%" height="15" fill="rgb(212,227,28)" fg:x="7260782151" fg:w="118355062"/><text x="72.4739%" y="1455.50"></text></g><g><title>tokio::task::spawn::spawn_inner (118,355,062 samples, 1.18%)</title><rect x="72.2239%" y="1429" width="1.1773%" height="15" fill="rgb(209,118,27)" fg:x="7260782151" fg:w="118355062"/><text x="72.4739%" y="1439.50"></text></g><g><title>tokio::runtime::context::current::with_current (118,355,062 samples, 1.18%)</title><rect x="72.2239%" y="1413" width="1.1773%" height="15" fill="rgb(226,102,5)" fg:x="7260782151" fg:w="118355062"/><text x="72.4739%" y="1423.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (118,355,062 samples, 1.18%)</title><rect x="72.2239%" y="1397" width="1.1773%" height="15" fill="rgb(223,34,3)" fg:x="7260782151" fg:w="118355062"/><text x="72.4739%" y="1407.50"></text></g><g><title>tokio::runtime::context::current::with_current::{{closure}} (118,355,062 samples, 1.18%)</title><rect x="72.2239%" y="1381" width="1.1773%" height="15" fill="rgb(221,81,38)" fg:x="7260782151" fg:w="118355062"/><text x="72.4739%" y="1391.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (118,355,062 samples, 1.18%)</title><rect x="72.2239%" y="1365" width="1.1773%" height="15" fill="rgb(236,219,28)" fg:x="7260782151" fg:w="118355062"/><text x="72.4739%" y="1375.50"></text></g><g><title>tokio::task::spawn::spawn_inner::{{closure}} (118,355,062 samples, 1.18%)</title><rect x="72.2239%" y="1349" width="1.1773%" height="15" fill="rgb(213,200,14)" fg:x="7260782151" fg:w="118355062"/><text x="72.4739%" y="1359.50"></text></g><g><title>tokio::runtime::scheduler::Handle::spawn (118,355,062 samples, 1.18%)</title><rect x="72.2239%" y="1333" width="1.1773%" height="15" fill="rgb(240,33,19)" fg:x="7260782151" fg:w="118355062"/><text x="72.4739%" y="1343.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::spawn (118,355,062 samples, 1.18%)</title><rect x="72.2239%" y="1317" width="1.1773%" height="15" fill="rgb(233,113,27)" fg:x="7260782151" fg:w="118355062"/><text x="72.4739%" y="1327.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::bind_new_task (118,355,062 samples, 1.18%)</title><rect x="72.2239%" y="1301" width="1.1773%" height="15" fill="rgb(220,221,18)" fg:x="7260782151" fg:w="118355062"/><text x="72.4739%" y="1311.50"></text></g><g><title>tokio::runtime::task_hooks::TaskHooks::spawn (5,015,045 samples, 0.05%)</title><rect x="73.3513%" y="1285" width="0.0499%" height="15" fill="rgb(238,92,8)" fg:x="7374122168" fg:w="5015045"/><text x="73.6013%" y="1295.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (5,015,045 samples, 0.05%)</title><rect x="73.3513%" y="1269" width="0.0499%" height="15" fill="rgb(222,164,16)" fg:x="7374122168" fg:w="5015045"/><text x="73.6013%" y="1279.50"></text></g><g><title>__memcpy_evex_unaligned_erms (2,006,018 samples, 0.02%)</title><rect x="73.4112%" y="1413" width="0.0200%" height="15" fill="rgb(241,119,3)" fg:x="7380140222" fg:w="2006018"/><text x="73.6612%" y="1423.50"></text></g><g><title>__memcpy_evex_unaligned_erms (2,006,018 samples, 0.02%)</title><rect x="73.4411%" y="1381" width="0.0200%" height="15" fill="rgb(241,44,8)" fg:x="7383149249" fg:w="2006018"/><text x="73.6911%" y="1391.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (130,391,170 samples, 1.30%)</title><rect x="72.2239%" y="2021" width="1.2970%" height="15" fill="rgb(230,36,40)" fg:x="7260782151" fg:w="130391170"/><text x="72.4739%" y="2031.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}} (130,391,170 samples, 1.30%)</title><rect x="72.2239%" y="2005" width="1.2970%" height="15" fill="rgb(243,16,36)" fg:x="7260782151" fg:w="130391170"/><text x="72.4739%" y="2015.50"></text></g><g><title>tokio::runtime::context::set_scheduler (130,391,170 samples, 1.30%)</title><rect x="72.2239%" y="1989" width="1.2970%" height="15" fill="rgb(231,4,26)" fg:x="7260782151" fg:w="130391170"/><text x="72.4739%" y="1999.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (130,391,170 samples, 1.30%)</title><rect x="72.2239%" y="1973" width="1.2970%" height="15" fill="rgb(240,9,31)" fg:x="7260782151" fg:w="130391170"/><text x="72.4739%" y="1983.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (130,391,170 samples, 1.30%)</title><rect x="72.2239%" y="1957" width="1.2970%" height="15" fill="rgb(207,173,15)" fg:x="7260782151" fg:w="130391170"/><text x="72.4739%" y="1967.50"></text></g><g><title>tokio::runtime::context::set_scheduler::{{closure}} (130,391,170 samples, 1.30%)</title><rect x="72.2239%" y="1941" width="1.2970%" height="15" fill="rgb(224,192,53)" fg:x="7260782151" fg:w="130391170"/><text x="72.4739%" y="1951.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (130,391,170 samples, 1.30%)</title><rect x="72.2239%" y="1925" width="1.2970%" height="15" fill="rgb(223,67,28)" fg:x="7260782151" fg:w="130391170"/><text x="72.4739%" y="1935.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}}::{{closure}} (130,391,170 samples, 1.30%)</title><rect x="72.2239%" y="1909" width="1.2970%" height="15" fill="rgb(211,20,47)" fg:x="7260782151" fg:w="130391170"/><text x="72.4739%" y="1919.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (130,391,170 samples, 1.30%)</title><rect x="72.2239%" y="1893" width="1.2970%" height="15" fill="rgb(240,228,2)" fg:x="7260782151" fg:w="130391170"/><text x="72.4739%" y="1903.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (130,391,170 samples, 1.30%)</title><rect x="72.2239%" y="1877" width="1.2970%" height="15" fill="rgb(248,151,12)" fg:x="7260782151" fg:w="130391170"/><text x="72.4739%" y="1887.50"></text></g><g><title>tokio::task::coop::budget (130,391,170 samples, 1.30%)</title><rect x="72.2239%" y="1861" width="1.2970%" height="15" fill="rgb(244,8,39)" fg:x="7260782151" fg:w="130391170"/><text x="72.4739%" y="1871.50"></text></g><g><title>tokio::task::coop::with_budget (130,391,170 samples, 1.30%)</title><rect x="72.2239%" y="1845" width="1.2970%" height="15" fill="rgb(222,26,8)" fg:x="7260782151" fg:w="130391170"/><text x="72.4739%" y="1855.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}} (130,391,170 samples, 1.30%)</title><rect x="72.2239%" y="1829" width="1.2970%" height="15" fill="rgb(213,106,44)" fg:x="7260782151" fg:w="130391170"/><text x="72.4739%" y="1839.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (130,391,170 samples, 1.30%)</title><rect x="72.2239%" y="1813" width="1.2970%" height="15" fill="rgb(214,129,20)" fg:x="7260782151" fg:w="130391170"/><text x="72.4739%" y="1823.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (130,391,170 samples, 1.30%)</title><rect x="72.2239%" y="1797" width="1.2970%" height="15" fill="rgb(212,32,13)" fg:x="7260782151" fg:w="130391170"/><text x="72.4739%" y="1807.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (130,391,170 samples, 1.30%)</title><rect x="72.2239%" y="1781" width="1.2970%" height="15" fill="rgb(208,168,33)" fg:x="7260782151" fg:w="130391170"/><text x="72.4739%" y="1791.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (130,391,170 samples, 1.30%)</title><rect x="72.2239%" y="1765" width="1.2970%" height="15" fill="rgb(231,207,8)" fg:x="7260782151" fg:w="130391170"/><text x="72.4739%" y="1775.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (130,391,170 samples, 1.30%)</title><rect x="72.2239%" y="1749" width="1.2970%" height="15" fill="rgb(235,219,23)" fg:x="7260782151" fg:w="130391170"/><text x="72.4739%" y="1759.50"></text></g><g><title>std::panic::catch_unwind (130,391,170 samples, 1.30%)</title><rect x="72.2239%" y="1733" width="1.2970%" height="15" fill="rgb(226,216,26)" fg:x="7260782151" fg:w="130391170"/><text x="72.4739%" y="1743.50"></text></g><g><title>std::panicking::try (130,391,170 samples, 1.30%)</title><rect x="72.2239%" y="1717" width="1.2970%" height="15" fill="rgb(239,137,16)" fg:x="7260782151" fg:w="130391170"/><text x="72.4739%" y="1727.50"></text></g><g><title>std::panicking::try::do_call (130,391,170 samples, 1.30%)</title><rect x="72.2239%" y="1701" width="1.2970%" height="15" fill="rgb(207,12,36)" fg:x="7260782151" fg:w="130391170"/><text x="72.4739%" y="1711.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (130,391,170 samples, 1.30%)</title><rect x="72.2239%" y="1685" width="1.2970%" height="15" fill="rgb(210,214,24)" fg:x="7260782151" fg:w="130391170"/><text x="72.4739%" y="1695.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (130,391,170 samples, 1.30%)</title><rect x="72.2239%" y="1669" width="1.2970%" height="15" fill="rgb(206,56,30)" fg:x="7260782151" fg:w="130391170"/><text x="72.4739%" y="1679.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (130,391,170 samples, 1.30%)</title><rect x="72.2239%" y="1653" width="1.2970%" height="15" fill="rgb(228,143,26)" fg:x="7260782151" fg:w="130391170"/><text x="72.4739%" y="1663.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (130,391,170 samples, 1.30%)</title><rect x="72.2239%" y="1637" width="1.2970%" height="15" fill="rgb(216,218,46)" fg:x="7260782151" fg:w="130391170"/><text x="72.4739%" y="1647.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (130,391,170 samples, 1.30%)</title><rect x="72.2239%" y="1621" width="1.2970%" height="15" fill="rgb(206,6,19)" fg:x="7260782151" fg:w="130391170"/><text x="72.4739%" y="1631.50"></text></g><g><title>&lt;axum::serve::WithGracefulShutdown&lt;L,M,S,F&gt; as core::future::into_future::IntoFuture&gt;::into_future::{{closure}}::{{closure}} (130,391,170 samples, 1.30%)</title><rect x="72.2239%" y="1605" width="1.2970%" height="15" fill="rgb(239,177,51)" fg:x="7260782151" fg:w="130391170"/><text x="72.4739%" y="1615.50"></text></g><g><title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (130,391,170 samples, 1.30%)</title><rect x="72.2239%" y="1589" width="1.2970%" height="15" fill="rgb(216,55,25)" fg:x="7260782151" fg:w="130391170"/><text x="72.4739%" y="1599.50"></text></g><g><title>&lt;axum::serve::WithGracefulShutdown&lt;L,M,S,F&gt; as core::future::into_future::IntoFuture&gt;::into_future::{{closure}}::{{closure}}::{{closure}} (130,391,170 samples, 1.30%)</title><rect x="72.2239%" y="1573" width="1.2970%" height="15" fill="rgb(231,163,29)" fg:x="7260782151" fg:w="130391170"/><text x="72.4739%" y="1583.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (130,391,170 samples, 1.30%)</title><rect x="72.2239%" y="1557" width="1.2970%" height="15" fill="rgb(232,149,50)" fg:x="7260782151" fg:w="130391170"/><text x="72.4739%" y="1567.50"></text></g><g><title>&lt;hyper_util::server::conn::auto::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (130,391,170 samples, 1.30%)</title><rect x="72.2239%" y="1541" width="1.2970%" height="15" fill="rgb(223,142,48)" fg:x="7260782151" fg:w="130391170"/><text x="72.4739%" y="1551.50"></text></g><g><title>&lt;hyper::server::conn::http2::Connection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (130,391,170 samples, 1.30%)</title><rect x="72.2239%" y="1525" width="1.2970%" height="15" fill="rgb(245,83,23)" fg:x="7260782151" fg:w="130391170"/><text x="72.4739%" y="1535.50"></text></g><g><title>&lt;hyper::proto::h2::server::Server&lt;T,S,B,E&gt; as core::future::future::Future&gt;::poll (130,391,170 samples, 1.30%)</title><rect x="72.2239%" y="1509" width="1.2970%" height="15" fill="rgb(224,63,2)" fg:x="7260782151" fg:w="130391170"/><text x="72.4739%" y="1519.50"></text></g><g><title>hyper::proto::h2::server::Serving&lt;T,B&gt;::poll_server (130,391,170 samples, 1.30%)</title><rect x="72.2239%" y="1493" width="1.2970%" height="15" fill="rgb(218,65,53)" fg:x="7260782151" fg:w="130391170"/><text x="72.4739%" y="1503.50"></text></g><g><title>h2::server::Connection&lt;T,B&gt;::poll_accept (12,036,108 samples, 0.12%)</title><rect x="73.4012%" y="1477" width="0.1197%" height="15" fill="rgb(221,84,29)" fg:x="7379137213" fg:w="12036108"/><text x="73.6512%" y="1487.50"></text></g><g><title>h2::proto::streams::streams::StreamRef&lt;B&gt;::take_request (12,036,108 samples, 0.12%)</title><rect x="73.4012%" y="1461" width="0.1197%" height="15" fill="rgb(234,0,32)" fg:x="7379137213" fg:w="12036108"/><text x="73.6512%" y="1471.50"></text></g><g><title>h2::proto::streams::recv::Recv::take_request (12,036,108 samples, 0.12%)</title><rect x="73.4012%" y="1445" width="0.1197%" height="15" fill="rgb(206,20,16)" fg:x="7379137213" fg:w="12036108"/><text x="73.6512%" y="1455.50"></text></g><g><title>h2::proto::streams::buffer::Deque::pop_front (12,036,108 samples, 0.12%)</title><rect x="73.4012%" y="1429" width="0.1197%" height="15" fill="rgb(244,172,18)" fg:x="7379137213" fg:w="12036108"/><text x="73.6512%" y="1439.50"></text></g><g><title>slab::Slab&lt;T&gt;::remove (8,024,072 samples, 0.08%)</title><rect x="73.4411%" y="1413" width="0.0798%" height="15" fill="rgb(254,133,1)" fg:x="7383149249" fg:w="8024072"/><text x="73.6911%" y="1423.50"></text></g><g><title>slab::Slab&lt;T&gt;::try_remove (8,024,072 samples, 0.08%)</title><rect x="73.4411%" y="1397" width="0.0798%" height="15" fill="rgb(222,206,41)" fg:x="7383149249" fg:w="8024072"/><text x="73.6911%" y="1407.50"></text></g><g><title>core::mem::replace (6,018,054 samples, 0.06%)</title><rect x="73.4610%" y="1381" width="0.0599%" height="15" fill="rgb(212,3,42)" fg:x="7385155267" fg:w="6018054"/><text x="73.7110%" y="1391.50"></text></g><g><title>core::ptr::read (6,018,054 samples, 0.06%)</title><rect x="73.4610%" y="1365" width="0.0599%" height="15" fill="rgb(241,11,4)" fg:x="7385155267" fg:w="6018054"/><text x="73.7110%" y="1375.50"></text></g><g><title>__memcpy_evex_unaligned_erms (4,012,036 samples, 0.04%)</title><rect x="73.4810%" y="1349" width="0.0399%" height="15" fill="rgb(205,19,26)" fg:x="7387161285" fg:w="4012036"/><text x="73.7310%" y="1359.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (3,009,027 samples, 0.03%)</title><rect x="73.5209%" y="1269" width="0.0299%" height="15" fill="rgb(210,179,32)" fg:x="7391173321" fg:w="3009027"/><text x="73.7709%" y="1279.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (3,009,027 samples, 0.03%)</title><rect x="73.5209%" y="1253" width="0.0299%" height="15" fill="rgb(227,116,49)" fg:x="7391173321" fg:w="3009027"/><text x="73.7709%" y="1263.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (3,009,027 samples, 0.03%)</title><rect x="73.5209%" y="1237" width="0.0299%" height="15" fill="rgb(211,146,6)" fg:x="7391173321" fg:w="3009027"/><text x="73.7709%" y="1247.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (3,009,027 samples, 0.03%)</title><rect x="73.5209%" y="1221" width="0.0299%" height="15" fill="rgb(219,44,39)" fg:x="7391173321" fg:w="3009027"/><text x="73.7709%" y="1231.50"></text></g><g><title>__clock_gettime_2 (3,009,027 samples, 0.03%)</title><rect x="73.5209%" y="1205" width="0.0299%" height="15" fill="rgb(234,128,11)" fg:x="7391173321" fg:w="3009027"/><text x="73.7709%" y="1215.50"></text></g><g><title>[[vdso]] (3,009,027 samples, 0.03%)</title><rect x="73.5209%" y="1189" width="0.0299%" height="15" fill="rgb(220,183,53)" fg:x="7391173321" fg:w="3009027"/><text x="73.7709%" y="1199.50"></text></g><g><title>[[vdso]] (2,006,018 samples, 0.02%)</title><rect x="73.5309%" y="1173" width="0.0200%" height="15" fill="rgb(213,219,32)" fg:x="7392176330" fg:w="2006018"/><text x="73.7809%" y="1183.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (5,015,045 samples, 0.05%)</title><rect x="73.5209%" y="2021" width="0.0499%" height="15" fill="rgb(232,156,16)" fg:x="7391173321" fg:w="5015045"/><text x="73.7709%" y="2031.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (5,015,045 samples, 0.05%)</title><rect x="73.5209%" y="2005" width="0.0499%" height="15" fill="rgb(246,135,34)" fg:x="7391173321" fg:w="5015045"/><text x="73.7709%" y="2015.50"></text></g><g><title>tokio::task::coop::budget (5,015,045 samples, 0.05%)</title><rect x="73.5209%" y="1989" width="0.0499%" height="15" fill="rgb(241,99,0)" fg:x="7391173321" fg:w="5015045"/><text x="73.7709%" y="1999.50"></text></g><g><title>tokio::task::coop::with_budget (5,015,045 samples, 0.05%)</title><rect x="73.5209%" y="1973" width="0.0499%" height="15" fill="rgb(222,103,45)" fg:x="7391173321" fg:w="5015045"/><text x="73.7709%" y="1983.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}} (5,015,045 samples, 0.05%)</title><rect x="73.5209%" y="1957" width="0.0499%" height="15" fill="rgb(212,57,4)" fg:x="7391173321" fg:w="5015045"/><text x="73.7709%" y="1967.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (5,015,045 samples, 0.05%)</title><rect x="73.5209%" y="1941" width="0.0499%" height="15" fill="rgb(215,68,47)" fg:x="7391173321" fg:w="5015045"/><text x="73.7709%" y="1951.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (5,015,045 samples, 0.05%)</title><rect x="73.5209%" y="1925" width="0.0499%" height="15" fill="rgb(230,84,2)" fg:x="7391173321" fg:w="5015045"/><text x="73.7709%" y="1935.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (5,015,045 samples, 0.05%)</title><rect x="73.5209%" y="1909" width="0.0499%" height="15" fill="rgb(220,102,14)" fg:x="7391173321" fg:w="5015045"/><text x="73.7709%" y="1919.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (5,015,045 samples, 0.05%)</title><rect x="73.5209%" y="1893" width="0.0499%" height="15" fill="rgb(240,10,32)" fg:x="7391173321" fg:w="5015045"/><text x="73.7709%" y="1903.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (5,015,045 samples, 0.05%)</title><rect x="73.5209%" y="1877" width="0.0499%" height="15" fill="rgb(215,47,27)" fg:x="7391173321" fg:w="5015045"/><text x="73.7709%" y="1887.50"></text></g><g><title>std::panic::catch_unwind (5,015,045 samples, 0.05%)</title><rect x="73.5209%" y="1861" width="0.0499%" height="15" fill="rgb(233,188,43)" fg:x="7391173321" fg:w="5015045"/><text x="73.7709%" y="1871.50"></text></g><g><title>std::panicking::try (5,015,045 samples, 0.05%)</title><rect x="73.5209%" y="1845" width="0.0499%" height="15" fill="rgb(253,190,1)" fg:x="7391173321" fg:w="5015045"/><text x="73.7709%" y="1855.50"></text></g><g><title>std::panicking::try::do_call (5,015,045 samples, 0.05%)</title><rect x="73.5209%" y="1829" width="0.0499%" height="15" fill="rgb(206,114,52)" fg:x="7391173321" fg:w="5015045"/><text x="73.7709%" y="1839.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5,015,045 samples, 0.05%)</title><rect x="73.5209%" y="1813" width="0.0499%" height="15" fill="rgb(233,120,37)" fg:x="7391173321" fg:w="5015045"/><text x="73.7709%" y="1823.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (5,015,045 samples, 0.05%)</title><rect x="73.5209%" y="1797" width="0.0499%" height="15" fill="rgb(214,52,39)" fg:x="7391173321" fg:w="5015045"/><text x="73.7709%" y="1807.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (5,015,045 samples, 0.05%)</title><rect x="73.5209%" y="1781" width="0.0499%" height="15" fill="rgb(223,80,29)" fg:x="7391173321" fg:w="5015045"/><text x="73.7709%" y="1791.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (5,015,045 samples, 0.05%)</title><rect x="73.5209%" y="1765" width="0.0499%" height="15" fill="rgb(230,101,40)" fg:x="7391173321" fg:w="5015045"/><text x="73.7709%" y="1775.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (5,015,045 samples, 0.05%)</title><rect x="73.5209%" y="1749" width="0.0499%" height="15" fill="rgb(219,211,8)" fg:x="7391173321" fg:w="5015045"/><text x="73.7709%" y="1759.50"></text></g><g><title>&lt;axum::serve::WithGracefulShutdown&lt;L,M,S,F&gt; as core::future::into_future::IntoFuture&gt;::into_future::{{closure}}::{{closure}} (5,015,045 samples, 0.05%)</title><rect x="73.5209%" y="1733" width="0.0499%" height="15" fill="rgb(252,126,28)" fg:x="7391173321" fg:w="5015045"/><text x="73.7709%" y="1743.50"></text></g><g><title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (5,015,045 samples, 0.05%)</title><rect x="73.5209%" y="1717" width="0.0499%" height="15" fill="rgb(215,56,38)" fg:x="7391173321" fg:w="5015045"/><text x="73.7709%" y="1727.50"></text></g><g><title>&lt;axum::serve::WithGracefulShutdown&lt;L,M,S,F&gt; as core::future::into_future::IntoFuture&gt;::into_future::{{closure}}::{{closure}}::{{closure}} (5,015,045 samples, 0.05%)</title><rect x="73.5209%" y="1701" width="0.0499%" height="15" fill="rgb(249,55,44)" fg:x="7391173321" fg:w="5015045"/><text x="73.7709%" y="1711.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (5,015,045 samples, 0.05%)</title><rect x="73.5209%" y="1685" width="0.0499%" height="15" fill="rgb(220,221,32)" fg:x="7391173321" fg:w="5015045"/><text x="73.7709%" y="1695.50"></text></g><g><title>&lt;hyper_util::server::conn::auto::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (5,015,045 samples, 0.05%)</title><rect x="73.5209%" y="1669" width="0.0499%" height="15" fill="rgb(212,216,41)" fg:x="7391173321" fg:w="5015045"/><text x="73.7709%" y="1679.50"></text></g><g><title>&lt;hyper::server::conn::http2::Connection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (5,015,045 samples, 0.05%)</title><rect x="73.5209%" y="1653" width="0.0499%" height="15" fill="rgb(228,213,43)" fg:x="7391173321" fg:w="5015045"/><text x="73.7709%" y="1663.50"></text></g><g><title>&lt;hyper::proto::h2::server::Server&lt;T,S,B,E&gt; as core::future::future::Future&gt;::poll (5,015,045 samples, 0.05%)</title><rect x="73.5209%" y="1637" width="0.0499%" height="15" fill="rgb(211,31,26)" fg:x="7391173321" fg:w="5015045"/><text x="73.7709%" y="1647.50"></text></g><g><title>hyper::proto::h2::server::Serving&lt;T,B&gt;::poll_server (5,015,045 samples, 0.05%)</title><rect x="73.5209%" y="1621" width="0.0499%" height="15" fill="rgb(229,202,19)" fg:x="7391173321" fg:w="5015045"/><text x="73.7709%" y="1631.50"></text></g><g><title>&lt;E as hyper::rt::bounds::h2::Http2ServerConnExec&lt;F,B&gt;&gt;::execute_h2stream (5,015,045 samples, 0.05%)</title><rect x="73.5209%" y="1605" width="0.0499%" height="15" fill="rgb(229,105,46)" fg:x="7391173321" fg:w="5015045"/><text x="73.7709%" y="1615.50"></text></g><g><title>&lt;hyper_util::rt::tokio::TokioExecutor as hyper::rt::Executor&lt;Fut&gt;&gt;::execute (5,015,045 samples, 0.05%)</title><rect x="73.5209%" y="1589" width="0.0499%" height="15" fill="rgb(235,108,1)" fg:x="7391173321" fg:w="5015045"/><text x="73.7709%" y="1599.50"></text></g><g><title>tokio::task::spawn::spawn (5,015,045 samples, 0.05%)</title><rect x="73.5209%" y="1573" width="0.0499%" height="15" fill="rgb(245,111,35)" fg:x="7391173321" fg:w="5015045"/><text x="73.7709%" y="1583.50"></text></g><g><title>tokio::task::spawn::spawn_inner (5,015,045 samples, 0.05%)</title><rect x="73.5209%" y="1557" width="0.0499%" height="15" fill="rgb(219,185,31)" fg:x="7391173321" fg:w="5015045"/><text x="73.7709%" y="1567.50"></text></g><g><title>tokio::runtime::context::current::with_current (5,015,045 samples, 0.05%)</title><rect x="73.5209%" y="1541" width="0.0499%" height="15" fill="rgb(214,4,43)" fg:x="7391173321" fg:w="5015045"/><text x="73.7709%" y="1551.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5,015,045 samples, 0.05%)</title><rect x="73.5209%" y="1525" width="0.0499%" height="15" fill="rgb(235,227,40)" fg:x="7391173321" fg:w="5015045"/><text x="73.7709%" y="1535.50"></text></g><g><title>tokio::runtime::context::current::with_current::{{closure}} (5,015,045 samples, 0.05%)</title><rect x="73.5209%" y="1509" width="0.0499%" height="15" fill="rgb(230,88,30)" fg:x="7391173321" fg:w="5015045"/><text x="73.7709%" y="1519.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5,015,045 samples, 0.05%)</title><rect x="73.5209%" y="1493" width="0.0499%" height="15" fill="rgb(216,217,1)" fg:x="7391173321" fg:w="5015045"/><text x="73.7709%" y="1503.50"></text></g><g><title>tokio::task::spawn::spawn_inner::{{closure}} (5,015,045 samples, 0.05%)</title><rect x="73.5209%" y="1477" width="0.0499%" height="15" fill="rgb(248,139,50)" fg:x="7391173321" fg:w="5015045"/><text x="73.7709%" y="1487.50"></text></g><g><title>tokio::runtime::scheduler::Handle::spawn (5,015,045 samples, 0.05%)</title><rect x="73.5209%" y="1461" width="0.0499%" height="15" fill="rgb(233,1,21)" fg:x="7391173321" fg:w="5015045"/><text x="73.7709%" y="1471.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::spawn (5,015,045 samples, 0.05%)</title><rect x="73.5209%" y="1445" width="0.0499%" height="15" fill="rgb(215,183,12)" fg:x="7391173321" fg:w="5015045"/><text x="73.7709%" y="1455.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::bind_new_task (5,015,045 samples, 0.05%)</title><rect x="73.5209%" y="1429" width="0.0499%" height="15" fill="rgb(229,104,42)" fg:x="7391173321" fg:w="5015045"/><text x="73.7709%" y="1439.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_option_task_without_yield (5,015,045 samples, 0.05%)</title><rect x="73.5209%" y="1413" width="0.0499%" height="15" fill="rgb(243,34,48)" fg:x="7391173321" fg:w="5015045"/><text x="73.7709%" y="1423.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (5,015,045 samples, 0.05%)</title><rect x="73.5209%" y="1397" width="0.0499%" height="15" fill="rgb(239,11,44)" fg:x="7391173321" fg:w="5015045"/><text x="73.7709%" y="1407.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (5,015,045 samples, 0.05%)</title><rect x="73.5209%" y="1381" width="0.0499%" height="15" fill="rgb(231,98,35)" fg:x="7391173321" fg:w="5015045"/><text x="73.7709%" y="1391.50"></text></g><g><title>tokio::runtime::context::with_scheduler (5,015,045 samples, 0.05%)</title><rect x="73.5209%" y="1365" width="0.0499%" height="15" fill="rgb(233,28,25)" fg:x="7391173321" fg:w="5015045"/><text x="73.7709%" y="1375.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5,015,045 samples, 0.05%)</title><rect x="73.5209%" y="1349" width="0.0499%" height="15" fill="rgb(234,123,11)" fg:x="7391173321" fg:w="5015045"/><text x="73.7709%" y="1359.50"></text></g><g><title>tokio::runtime::context::with_scheduler::{{closure}} (5,015,045 samples, 0.05%)</title><rect x="73.5209%" y="1333" width="0.0499%" height="15" fill="rgb(220,69,3)" fg:x="7391173321" fg:w="5015045"/><text x="73.7709%" y="1343.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (5,015,045 samples, 0.05%)</title><rect x="73.5209%" y="1317" width="0.0499%" height="15" fill="rgb(214,64,36)" fg:x="7391173321" fg:w="5015045"/><text x="73.7709%" y="1327.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current::{{closure}} (5,015,045 samples, 0.05%)</title><rect x="73.5209%" y="1301" width="0.0499%" height="15" fill="rgb(211,138,32)" fg:x="7391173321" fg:w="5015045"/><text x="73.7709%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::{{closure}} (5,015,045 samples, 0.05%)</title><rect x="73.5209%" y="1285" width="0.0499%" height="15" fill="rgb(213,118,47)" fg:x="7391173321" fg:w="5015045"/><text x="73.7709%" y="1295.50"></text></g><g><title>tokio::runtime::driver::Handle::unpark (2,006,018 samples, 0.02%)</title><rect x="73.5508%" y="1269" width="0.0200%" height="15" fill="rgb(243,124,49)" fg:x="7394182348" fg:w="2006018"/><text x="73.8008%" y="1279.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (2,006,018 samples, 0.02%)</title><rect x="73.5508%" y="1253" width="0.0200%" height="15" fill="rgb(221,30,28)" fg:x="7394182348" fg:w="2006018"/><text x="73.8008%" y="1263.50"></text></g><g><title>tokio::runtime::io::driver::Handle::unpark (2,006,018 samples, 0.02%)</title><rect x="73.5508%" y="1237" width="0.0200%" height="15" fill="rgb(246,37,13)" fg:x="7394182348" fg:w="2006018"/><text x="73.8008%" y="1247.50"></text></g><g><title>mio::sys::unix::waker::Waker::wake (2,006,018 samples, 0.02%)</title><rect x="73.5508%" y="1221" width="0.0200%" height="15" fill="rgb(249,66,14)" fg:x="7394182348" fg:w="2006018"/><text x="73.8008%" y="1231.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (2,006,018 samples, 0.02%)</title><rect x="73.5508%" y="1205" width="0.0200%" height="15" fill="rgb(213,166,5)" fg:x="7394182348" fg:w="2006018"/><text x="73.8008%" y="1215.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (2,006,018 samples, 0.02%)</title><rect x="73.5508%" y="1189" width="0.0200%" height="15" fill="rgb(221,66,24)" fg:x="7394182348" fg:w="2006018"/><text x="73.8008%" y="1199.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (2,006,018 samples, 0.02%)</title><rect x="73.5508%" y="1173" width="0.0200%" height="15" fill="rgb(210,132,17)" fg:x="7394182348" fg:w="2006018"/><text x="73.8008%" y="1183.50"></text></g><g><title>__GI___write (2,006,018 samples, 0.02%)</title><rect x="73.5508%" y="1157" width="0.0200%" height="15" fill="rgb(243,202,5)" fg:x="7394182348" fg:w="2006018"/><text x="73.8008%" y="1167.50"></text></g><g><title>__memcpy_evex_unaligned_erms (8,024,072 samples, 0.08%)</title><rect x="73.5708%" y="1413" width="0.0798%" height="15" fill="rgb(233,70,48)" fg:x="7396188366" fg:w="8024072"/><text x="73.8208%" y="1423.50"></text></g><g><title>__memcpy_evex_unaligned_erms (6,018,054 samples, 0.06%)</title><rect x="73.6606%" y="1365" width="0.0599%" height="15" fill="rgb(238,41,26)" fg:x="7405215447" fg:w="6018054"/><text x="73.9106%" y="1375.50"></text></g><g><title>__memcpy_evex_unaligned_erms (3,009,027 samples, 0.03%)</title><rect x="73.7204%" y="1349" width="0.0299%" height="15" fill="rgb(241,19,31)" fg:x="7411233501" fg:w="3009027"/><text x="73.9704%" y="1359.50"></text></g><g><title>__memcpy_evex_unaligned_erms (3,009,027 samples, 0.03%)</title><rect x="73.7504%" y="1333" width="0.0299%" height="15" fill="rgb(214,76,10)" fg:x="7414242528" fg:w="3009027"/><text x="74.0004%" y="1343.50"></text></g><g><title>tokio::runtime::context::current::with_current (20,060,180 samples, 0.20%)</title><rect x="73.6606%" y="1397" width="0.1995%" height="15" fill="rgb(254,202,22)" fg:x="7405215447" fg:w="20060180"/><text x="73.9106%" y="1407.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (20,060,180 samples, 0.20%)</title><rect x="73.6606%" y="1381" width="0.1995%" height="15" fill="rgb(214,72,24)" fg:x="7405215447" fg:w="20060180"/><text x="73.9106%" y="1391.50"></text></g><g><title>tokio::runtime::context::current::with_current::{{closure}} (14,042,126 samples, 0.14%)</title><rect x="73.7204%" y="1365" width="0.1397%" height="15" fill="rgb(221,92,46)" fg:x="7411233501" fg:w="14042126"/><text x="73.9704%" y="1375.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (11,033,099 samples, 0.11%)</title><rect x="73.7504%" y="1349" width="0.1097%" height="15" fill="rgb(246,13,50)" fg:x="7414242528" fg:w="11033099"/><text x="74.0004%" y="1359.50"></text></g><g><title>tokio::task::spawn::spawn_inner::{{closure}} (8,024,072 samples, 0.08%)</title><rect x="73.7803%" y="1333" width="0.0798%" height="15" fill="rgb(240,165,38)" fg:x="7417251555" fg:w="8024072"/><text x="74.0303%" y="1343.50"></text></g><g><title>tokio::runtime::scheduler::Handle::spawn (8,024,072 samples, 0.08%)</title><rect x="73.7803%" y="1317" width="0.0798%" height="15" fill="rgb(241,24,51)" fg:x="7417251555" fg:w="8024072"/><text x="74.0303%" y="1327.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::spawn (8,024,072 samples, 0.08%)</title><rect x="73.7803%" y="1301" width="0.0798%" height="15" fill="rgb(227,51,44)" fg:x="7417251555" fg:w="8024072"/><text x="74.0303%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::bind_new_task (8,024,072 samples, 0.08%)</title><rect x="73.7803%" y="1285" width="0.0798%" height="15" fill="rgb(231,121,3)" fg:x="7417251555" fg:w="8024072"/><text x="74.0303%" y="1295.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (7,021,063 samples, 0.07%)</title><rect x="73.7903%" y="1269" width="0.0698%" height="15" fill="rgb(245,3,41)" fg:x="7418254564" fg:w="7021063"/><text x="74.0403%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (34,102,306 samples, 0.34%)</title><rect x="73.5708%" y="2021" width="0.3392%" height="15" fill="rgb(214,13,26)" fg:x="7396188366" fg:w="34102306"/><text x="73.8208%" y="2031.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (34,102,306 samples, 0.34%)</title><rect x="73.5708%" y="2005" width="0.3392%" height="15" fill="rgb(252,75,11)" fg:x="7396188366" fg:w="34102306"/><text x="73.8208%" y="2015.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}} (34,102,306 samples, 0.34%)</title><rect x="73.5708%" y="1989" width="0.3392%" height="15" fill="rgb(218,226,17)" fg:x="7396188366" fg:w="34102306"/><text x="73.8208%" y="1999.50"></text></g><g><title>tokio::runtime::context::set_scheduler (34,102,306 samples, 0.34%)</title><rect x="73.5708%" y="1973" width="0.3392%" height="15" fill="rgb(248,89,38)" fg:x="7396188366" fg:w="34102306"/><text x="73.8208%" y="1983.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (34,102,306 samples, 0.34%)</title><rect x="73.5708%" y="1957" width="0.3392%" height="15" fill="rgb(237,73,46)" fg:x="7396188366" fg:w="34102306"/><text x="73.8208%" y="1967.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (34,102,306 samples, 0.34%)</title><rect x="73.5708%" y="1941" width="0.3392%" height="15" fill="rgb(242,78,33)" fg:x="7396188366" fg:w="34102306"/><text x="73.8208%" y="1951.50"></text></g><g><title>tokio::runtime::context::set_scheduler::{{closure}} (34,102,306 samples, 0.34%)</title><rect x="73.5708%" y="1925" width="0.3392%" height="15" fill="rgb(235,60,3)" fg:x="7396188366" fg:w="34102306"/><text x="73.8208%" y="1935.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (34,102,306 samples, 0.34%)</title><rect x="73.5708%" y="1909" width="0.3392%" height="15" fill="rgb(216,172,19)" fg:x="7396188366" fg:w="34102306"/><text x="73.8208%" y="1919.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}}::{{closure}} (34,102,306 samples, 0.34%)</title><rect x="73.5708%" y="1893" width="0.3392%" height="15" fill="rgb(227,6,42)" fg:x="7396188366" fg:w="34102306"/><text x="73.8208%" y="1903.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (34,102,306 samples, 0.34%)</title><rect x="73.5708%" y="1877" width="0.3392%" height="15" fill="rgb(223,207,42)" fg:x="7396188366" fg:w="34102306"/><text x="73.8208%" y="1887.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (34,102,306 samples, 0.34%)</title><rect x="73.5708%" y="1861" width="0.3392%" height="15" fill="rgb(246,138,30)" fg:x="7396188366" fg:w="34102306"/><text x="73.8208%" y="1871.50"></text></g><g><title>tokio::task::coop::budget (34,102,306 samples, 0.34%)</title><rect x="73.5708%" y="1845" width="0.3392%" height="15" fill="rgb(251,199,47)" fg:x="7396188366" fg:w="34102306"/><text x="73.8208%" y="1855.50"></text></g><g><title>tokio::task::coop::with_budget (34,102,306 samples, 0.34%)</title><rect x="73.5708%" y="1829" width="0.3392%" height="15" fill="rgb(228,218,44)" fg:x="7396188366" fg:w="34102306"/><text x="73.8208%" y="1839.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}} (34,102,306 samples, 0.34%)</title><rect x="73.5708%" y="1813" width="0.3392%" height="15" fill="rgb(220,68,6)" fg:x="7396188366" fg:w="34102306"/><text x="73.8208%" y="1823.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (34,102,306 samples, 0.34%)</title><rect x="73.5708%" y="1797" width="0.3392%" height="15" fill="rgb(240,60,26)" fg:x="7396188366" fg:w="34102306"/><text x="73.8208%" y="1807.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (34,102,306 samples, 0.34%)</title><rect x="73.5708%" y="1781" width="0.3392%" height="15" fill="rgb(211,200,19)" fg:x="7396188366" fg:w="34102306"/><text x="73.8208%" y="1791.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (34,102,306 samples, 0.34%)</title><rect x="73.5708%" y="1765" width="0.3392%" height="15" fill="rgb(242,145,30)" fg:x="7396188366" fg:w="34102306"/><text x="73.8208%" y="1775.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (34,102,306 samples, 0.34%)</title><rect x="73.5708%" y="1749" width="0.3392%" height="15" fill="rgb(225,64,13)" fg:x="7396188366" fg:w="34102306"/><text x="73.8208%" y="1759.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (34,102,306 samples, 0.34%)</title><rect x="73.5708%" y="1733" width="0.3392%" height="15" fill="rgb(218,103,35)" fg:x="7396188366" fg:w="34102306"/><text x="73.8208%" y="1743.50"></text></g><g><title>std::panic::catch_unwind (34,102,306 samples, 0.34%)</title><rect x="73.5708%" y="1717" width="0.3392%" height="15" fill="rgb(216,93,46)" fg:x="7396188366" fg:w="34102306"/><text x="73.8208%" y="1727.50"></text></g><g><title>std::panicking::try (34,102,306 samples, 0.34%)</title><rect x="73.5708%" y="1701" width="0.3392%" height="15" fill="rgb(225,159,27)" fg:x="7396188366" fg:w="34102306"/><text x="73.8208%" y="1711.50"></text></g><g><title>std::panicking::try::do_call (34,102,306 samples, 0.34%)</title><rect x="73.5708%" y="1685" width="0.3392%" height="15" fill="rgb(225,204,11)" fg:x="7396188366" fg:w="34102306"/><text x="73.8208%" y="1695.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (34,102,306 samples, 0.34%)</title><rect x="73.5708%" y="1669" width="0.3392%" height="15" fill="rgb(205,56,4)" fg:x="7396188366" fg:w="34102306"/><text x="73.8208%" y="1679.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (34,102,306 samples, 0.34%)</title><rect x="73.5708%" y="1653" width="0.3392%" height="15" fill="rgb(206,6,35)" fg:x="7396188366" fg:w="34102306"/><text x="73.8208%" y="1663.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (34,102,306 samples, 0.34%)</title><rect x="73.5708%" y="1637" width="0.3392%" height="15" fill="rgb(247,73,52)" fg:x="7396188366" fg:w="34102306"/><text x="73.8208%" y="1647.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (34,102,306 samples, 0.34%)</title><rect x="73.5708%" y="1621" width="0.3392%" height="15" fill="rgb(246,97,4)" fg:x="7396188366" fg:w="34102306"/><text x="73.8208%" y="1631.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (34,102,306 samples, 0.34%)</title><rect x="73.5708%" y="1605" width="0.3392%" height="15" fill="rgb(212,37,15)" fg:x="7396188366" fg:w="34102306"/><text x="73.8208%" y="1615.50"></text></g><g><title>&lt;axum::serve::WithGracefulShutdown&lt;L,M,S,F&gt; as core::future::into_future::IntoFuture&gt;::into_future::{{closure}}::{{closure}} (34,102,306 samples, 0.34%)</title><rect x="73.5708%" y="1589" width="0.3392%" height="15" fill="rgb(208,130,40)" fg:x="7396188366" fg:w="34102306"/><text x="73.8208%" y="1599.50"></text></g><g><title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (34,102,306 samples, 0.34%)</title><rect x="73.5708%" y="1573" width="0.3392%" height="15" fill="rgb(236,55,29)" fg:x="7396188366" fg:w="34102306"/><text x="73.8208%" y="1583.50"></text></g><g><title>&lt;axum::serve::WithGracefulShutdown&lt;L,M,S,F&gt; as core::future::into_future::IntoFuture&gt;::into_future::{{closure}}::{{closure}}::{{closure}} (34,102,306 samples, 0.34%)</title><rect x="73.5708%" y="1557" width="0.3392%" height="15" fill="rgb(209,156,45)" fg:x="7396188366" fg:w="34102306"/><text x="73.8208%" y="1567.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (34,102,306 samples, 0.34%)</title><rect x="73.5708%" y="1541" width="0.3392%" height="15" fill="rgb(249,107,4)" fg:x="7396188366" fg:w="34102306"/><text x="73.8208%" y="1551.50"></text></g><g><title>&lt;hyper_util::server::conn::auto::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (34,102,306 samples, 0.34%)</title><rect x="73.5708%" y="1525" width="0.3392%" height="15" fill="rgb(227,7,13)" fg:x="7396188366" fg:w="34102306"/><text x="73.8208%" y="1535.50"></text></g><g><title>&lt;hyper::server::conn::http2::Connection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (34,102,306 samples, 0.34%)</title><rect x="73.5708%" y="1509" width="0.3392%" height="15" fill="rgb(250,129,14)" fg:x="7396188366" fg:w="34102306"/><text x="73.8208%" y="1519.50"></text></g><g><title>&lt;hyper::proto::h2::server::Server&lt;T,S,B,E&gt; as core::future::future::Future&gt;::poll (34,102,306 samples, 0.34%)</title><rect x="73.5708%" y="1493" width="0.3392%" height="15" fill="rgb(229,92,13)" fg:x="7396188366" fg:w="34102306"/><text x="73.8208%" y="1503.50"></text></g><g><title>hyper::proto::h2::server::Serving&lt;T,B&gt;::poll_server (34,102,306 samples, 0.34%)</title><rect x="73.5708%" y="1477" width="0.3392%" height="15" fill="rgb(245,98,39)" fg:x="7396188366" fg:w="34102306"/><text x="73.8208%" y="1487.50"></text></g><g><title>&lt;E as hyper::rt::bounds::h2::Http2ServerConnExec&lt;F,B&gt;&gt;::execute_h2stream (34,102,306 samples, 0.34%)</title><rect x="73.5708%" y="1461" width="0.3392%" height="15" fill="rgb(234,135,48)" fg:x="7396188366" fg:w="34102306"/><text x="73.8208%" y="1471.50"></text></g><g><title>&lt;hyper_util::rt::tokio::TokioExecutor as hyper::rt::Executor&lt;Fut&gt;&gt;::execute (34,102,306 samples, 0.34%)</title><rect x="73.5708%" y="1445" width="0.3392%" height="15" fill="rgb(230,98,28)" fg:x="7396188366" fg:w="34102306"/><text x="73.8208%" y="1455.50"></text></g><g><title>tokio::task::spawn::spawn (34,102,306 samples, 0.34%)</title><rect x="73.5708%" y="1429" width="0.3392%" height="15" fill="rgb(223,121,0)" fg:x="7396188366" fg:w="34102306"/><text x="73.8208%" y="1439.50"></text></g><g><title>tokio::task::spawn::spawn_inner (26,078,234 samples, 0.26%)</title><rect x="73.6506%" y="1413" width="0.2594%" height="15" fill="rgb(234,173,33)" fg:x="7404212438" fg:w="26078234"/><text x="73.9006%" y="1423.50"></text></g><g><title>tokio::runtime::task::id::Id::next (5,015,045 samples, 0.05%)</title><rect x="73.8601%" y="1397" width="0.0499%" height="15" fill="rgb(245,47,8)" fg:x="7425275627" fg:w="5015045"/><text x="74.1101%" y="1407.50"></text></g><g><title>core::sync::atomic::AtomicU64::fetch_add (2,006,018 samples, 0.02%)</title><rect x="73.8901%" y="1381" width="0.0200%" height="15" fill="rgb(205,17,20)" fg:x="7428284654" fg:w="2006018"/><text x="74.1401%" y="1391.50"></text></g><g><title>core::sync::atomic::atomic_add (2,006,018 samples, 0.02%)</title><rect x="73.8901%" y="1365" width="0.0200%" height="15" fill="rgb(232,151,16)" fg:x="7428284654" fg:w="2006018"/><text x="74.1401%" y="1375.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_impl::Buf&gt;::advance (3,009,027 samples, 0.03%)</title><rect x="74.2492%" y="1733" width="0.0299%" height="15" fill="rgb(208,30,32)" fg:x="7464392978" fg:w="3009027"/><text x="74.4992%" y="1743.50"></text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (3,009,027 samples, 0.03%)</title><rect x="74.2492%" y="1717" width="0.0299%" height="15" fill="rgb(254,26,3)" fg:x="7464392978" fg:w="3009027"/><text x="74.4992%" y="1727.50"></text></g><g><title>&lt;tracing_core::field::Iter as core::iter::traits::iterator::Iterator&gt;::next (2,006,018 samples, 0.02%)</title><rect x="74.2891%" y="1733" width="0.0200%" height="15" fill="rgb(240,177,30)" fg:x="7468405014" fg:w="2006018"/><text x="74.5391%" y="1743.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2,006,018 samples, 0.02%)</title><rect x="74.2891%" y="1717" width="0.0200%" height="15" fill="rgb(248,76,44)" fg:x="7468405014" fg:w="2006018"/><text x="74.5391%" y="1727.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2,006,018 samples, 0.02%)</title><rect x="74.2891%" y="1701" width="0.0200%" height="15" fill="rgb(241,186,54)" fg:x="7468405014" fg:w="2006018"/><text x="74.5391%" y="1711.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2,006,018 samples, 0.02%)</title><rect x="74.2891%" y="1685" width="0.0200%" height="15" fill="rgb(249,171,29)" fg:x="7468405014" fg:w="2006018"/><text x="74.5391%" y="1695.50"></text></g><g><title>__memcpy_evex_unaligned_erms (12,036,108 samples, 0.12%)</title><rect x="74.3091%" y="1733" width="0.1197%" height="15" fill="rgb(237,151,44)" fg:x="7470411032" fg:w="12036108"/><text x="74.5591%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::BytesMut&gt; (7,021,063 samples, 0.07%)</title><rect x="74.4288%" y="1733" width="0.0698%" height="15" fill="rgb(228,174,30)" fg:x="7482447140" fg:w="7021063"/><text x="74.6788%" y="1743.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (7,021,063 samples, 0.07%)</title><rect x="74.4288%" y="1717" width="0.0698%" height="15" fill="rgb(252,14,37)" fg:x="7482447140" fg:w="7021063"/><text x="74.6788%" y="1727.50"></text></g><g><title>bytes::bytes_mut::release_shared (6,018,054 samples, 0.06%)</title><rect x="74.4388%" y="1701" width="0.0599%" height="15" fill="rgb(207,111,40)" fg:x="7483450149" fg:w="6018054"/><text x="74.6888%" y="1711.50"></text></g><g><title>tracing::span::Span::log (2,006,018 samples, 0.02%)</title><rect x="74.5086%" y="1685" width="0.0200%" height="15" fill="rgb(248,171,54)" fg:x="7490471212" fg:w="2006018"/><text x="74.7586%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (4,012,036 samples, 0.04%)</title><rect x="74.4987%" y="1733" width="0.0399%" height="15" fill="rgb(211,127,2)" fg:x="7489468203" fg:w="4012036"/><text x="74.7487%" y="1743.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (4,012,036 samples, 0.04%)</title><rect x="74.4987%" y="1717" width="0.0399%" height="15" fill="rgb(236,87,47)" fg:x="7489468203" fg:w="4012036"/><text x="74.7487%" y="1727.50"></text></g><g><title>tracing::span::Span::do_exit (4,012,036 samples, 0.04%)</title><rect x="74.4987%" y="1701" width="0.0399%" height="15" fill="rgb(223,190,45)" fg:x="7489468203" fg:w="4012036"/><text x="74.7487%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (4,012,036 samples, 0.04%)</title><rect x="74.5386%" y="1733" width="0.0399%" height="15" fill="rgb(215,5,16)" fg:x="7493480239" fg:w="4012036"/><text x="74.7886%" y="1743.50"></text></g><g><title>&lt;tracing::span::Span as core::ops::drop::Drop&gt;::drop (4,012,036 samples, 0.04%)</title><rect x="74.5386%" y="1717" width="0.0399%" height="15" fill="rgb(252,82,33)" fg:x="7493480239" fg:w="4012036"/><text x="74.7886%" y="1727.50"></text></g><g><title>tracing::span::Span::log (3,009,027 samples, 0.03%)</title><rect x="74.5485%" y="1701" width="0.0299%" height="15" fill="rgb(247,213,44)" fg:x="7494483248" fg:w="3009027"/><text x="74.7985%" y="1711.50"></text></g><g><title>h2::frame::head::Head::parse (5,015,045 samples, 0.05%)</title><rect x="74.5984%" y="1733" width="0.0499%" height="15" fill="rgb(205,196,44)" fg:x="7499498293" fg:w="5015045"/><text x="74.8484%" y="1743.50"></text></g><g><title>h2::frame::head::Kind::new (4,012,036 samples, 0.04%)</title><rect x="74.6084%" y="1717" width="0.0399%" height="15" fill="rgb(237,96,54)" fg:x="7500501302" fg:w="4012036"/><text x="74.8584%" y="1727.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (2,006,018 samples, 0.02%)</title><rect x="74.7880%" y="1701" width="0.0200%" height="15" fill="rgb(230,113,34)" fg:x="7518555464" fg:w="2006018"/><text x="75.0380%" y="1711.50"></text></g><g><title>h2::frame::headers::Headers::load (17,051,153 samples, 0.17%)</title><rect x="74.6483%" y="1733" width="0.1696%" height="15" fill="rgb(221,224,12)" fg:x="7504513338" fg:w="17051153"/><text x="74.8983%" y="1743.50"></text></g><g><title>http::header::map::HeaderMap::new (8,024,072 samples, 0.08%)</title><rect x="74.7381%" y="1717" width="0.0798%" height="15" fill="rgb(219,112,44)" fg:x="7513540419" fg:w="8024072"/><text x="74.9881%" y="1727.50"></text></g><g><title>h2::frame::headers::HeaderBlock::calculate_header_list_size (4,012,036 samples, 0.04%)</title><rect x="74.8678%" y="1701" width="0.0399%" height="15" fill="rgb(210,31,13)" fg:x="7526579536" fg:w="4012036"/><text x="75.1178%" y="1711.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3,009,027 samples, 0.03%)</title><rect x="74.8778%" y="1685" width="0.0299%" height="15" fill="rgb(230,25,16)" fg:x="7527582545" fg:w="3009027"/><text x="75.1278%" y="1695.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (12,036,108 samples, 0.12%)</title><rect x="75.0474%" y="1685" width="0.1197%" height="15" fill="rgb(246,108,53)" fg:x="7544633698" fg:w="12036108"/><text x="75.2974%" y="1695.50"></text></g><g><title>bytes::bytes_mut::increment_shared (4,012,036 samples, 0.04%)</title><rect x="75.1970%" y="1621" width="0.0399%" height="15" fill="rgb(241,172,50)" fg:x="7559678833" fg:w="4012036"/><text x="75.4470%" y="1631.50"></text></g><g><title>&lt;h2::hpack::header::BytesStr as core::clone::Clone&gt;::clone (7,021,063 samples, 0.07%)</title><rect x="75.1771%" y="1669" width="0.0698%" height="15" fill="rgb(235,141,10)" fg:x="7557672815" fg:w="7021063"/><text x="75.4271%" y="1679.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (7,021,063 samples, 0.07%)</title><rect x="75.1771%" y="1653" width="0.0698%" height="15" fill="rgb(220,174,43)" fg:x="7557672815" fg:w="7021063"/><text x="75.4271%" y="1663.50"></text></g><g><title>bytes::bytes_mut::shared_v_clone (5,015,045 samples, 0.05%)</title><rect x="75.1970%" y="1637" width="0.0499%" height="15" fill="rgb(215,181,40)" fg:x="7559678833" fg:w="5015045"/><text x="75.4470%" y="1647.50"></text></g><g><title>&lt;http::header::name::HeaderName as core::clone::Clone&gt;::clone (6,018,054 samples, 0.06%)</title><rect x="75.2469%" y="1669" width="0.0599%" height="15" fill="rgb(230,97,2)" fg:x="7564693878" fg:w="6018054"/><text x="75.4969%" y="1679.50"></text></g><g><title>&lt;http::header::name::Repr&lt;T&gt; as core::clone::Clone&gt;::clone (4,012,036 samples, 0.04%)</title><rect x="75.2669%" y="1653" width="0.0399%" height="15" fill="rgb(211,25,27)" fg:x="7566699896" fg:w="4012036"/><text x="75.5169%" y="1663.50"></text></g><g><title>&lt;http::header::name::Custom as core::clone::Clone&gt;::clone (2,006,018 samples, 0.02%)</title><rect x="75.2868%" y="1637" width="0.0200%" height="15" fill="rgb(230,87,26)" fg:x="7568705914" fg:w="2006018"/><text x="75.5368%" y="1647.50"></text></g><g><title>&lt;http::byte_str::ByteStr as core::clone::Clone&gt;::clone (2,006,018 samples, 0.02%)</title><rect x="75.2868%" y="1621" width="0.0200%" height="15" fill="rgb(227,160,17)" fg:x="7568705914" fg:w="2006018"/><text x="75.5368%" y="1631.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (2,006,018 samples, 0.02%)</title><rect x="75.2868%" y="1605" width="0.0200%" height="15" fill="rgb(244,85,34)" fg:x="7568705914" fg:w="2006018"/><text x="75.5368%" y="1615.50"></text></g><g><title>bytes::bytes::shared_clone (2,006,018 samples, 0.02%)</title><rect x="75.2868%" y="1589" width="0.0200%" height="15" fill="rgb(207,70,0)" fg:x="7568705914" fg:w="2006018"/><text x="75.5368%" y="1599.50"></text></g><g><title>bytes::bytes::shallow_clone_arc (2,006,018 samples, 0.02%)</title><rect x="75.2868%" y="1573" width="0.0200%" height="15" fill="rgb(223,129,7)" fg:x="7568705914" fg:w="2006018"/><text x="75.5368%" y="1583.50"></text></g><g><title>&lt;h2::hpack::header::Header&lt;T&gt; as core::clone::Clone&gt;::clone (35,105,315 samples, 0.35%)</title><rect x="75.1671%" y="1685" width="0.3492%" height="15" fill="rgb(246,105,7)" fg:x="7556669806" fg:w="35105315"/><text x="75.4171%" y="1695.50"></text></g><g><title>&lt;http::header::value::HeaderValue as core::clone::Clone&gt;::clone (21,063,189 samples, 0.21%)</title><rect x="75.3068%" y="1669" width="0.2095%" height="15" fill="rgb(215,154,42)" fg:x="7570711932" fg:w="21063189"/><text x="75.5568%" y="1679.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (20,060,180 samples, 0.20%)</title><rect x="75.3168%" y="1653" width="0.1995%" height="15" fill="rgb(220,215,30)" fg:x="7571714941" fg:w="20060180"/><text x="75.5668%" y="1663.50"></text></g><g><title>bytes::bytes::promotable_even_clone (20,060,180 samples, 0.20%)</title><rect x="75.3168%" y="1637" width="0.1995%" height="15" fill="rgb(228,81,51)" fg:x="7571714941" fg:w="20060180"/><text x="75.5668%" y="1647.50"></text></g><g><title>bytes::bytes::shallow_clone_vec (19,057,171 samples, 0.19%)</title><rect x="75.3267%" y="1621" width="0.1896%" height="15" fill="rgb(247,71,54)" fg:x="7572717950" fg:w="19057171"/><text x="75.5767%" y="1631.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (6,018,054 samples, 0.06%)</title><rect x="75.4565%" y="1605" width="0.0599%" height="15" fill="rgb(234,176,34)" fg:x="7585757067" fg:w="6018054"/><text x="75.7065%" y="1615.50"></text></g><g><title>alloc::alloc::exchange_malloc (6,018,054 samples, 0.06%)</title><rect x="75.4565%" y="1589" width="0.0599%" height="15" fill="rgb(241,103,54)" fg:x="7585757067" fg:w="6018054"/><text x="75.7065%" y="1599.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6,018,054 samples, 0.06%)</title><rect x="75.4565%" y="1573" width="0.0599%" height="15" fill="rgb(228,22,34)" fg:x="7585757067" fg:w="6018054"/><text x="75.7065%" y="1583.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6,018,054 samples, 0.06%)</title><rect x="75.4565%" y="1557" width="0.0599%" height="15" fill="rgb(241,179,48)" fg:x="7585757067" fg:w="6018054"/><text x="75.7065%" y="1567.50"></text></g><g><title>alloc::alloc::alloc (6,018,054 samples, 0.06%)</title><rect x="75.4565%" y="1541" width="0.0599%" height="15" fill="rgb(235,167,37)" fg:x="7585757067" fg:w="6018054"/><text x="75.7065%" y="1551.50"></text></g><g><title>__GI___libc_malloc (5,015,045 samples, 0.05%)</title><rect x="75.4664%" y="1525" width="0.0499%" height="15" fill="rgb(213,109,30)" fg:x="7586760076" fg:w="5015045"/><text x="75.7164%" y="1535.50"></text></g><g><title>&lt;tracing_core::metadata::Level as core::cmp::PartialOrd&lt;tracing_core::metadata::LevelFilter&gt;&gt;::le (2,006,018 samples, 0.02%)</title><rect x="75.5163%" y="1685" width="0.0200%" height="15" fill="rgb(222,172,16)" fg:x="7591775121" fg:w="2006018"/><text x="75.7663%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (2,006,018 samples, 0.02%)</title><rect x="75.5462%" y="1685" width="0.0200%" height="15" fill="rgb(233,192,5)" fg:x="7594784148" fg:w="2006018"/><text x="75.7962%" y="1695.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (2,006,018 samples, 0.02%)</title><rect x="75.5462%" y="1669" width="0.0200%" height="15" fill="rgb(247,189,41)" fg:x="7594784148" fg:w="2006018"/><text x="75.7962%" y="1679.50"></text></g><g><title>tracing::span::Span::do_exit (2,006,018 samples, 0.02%)</title><rect x="75.5462%" y="1653" width="0.0200%" height="15" fill="rgb(218,134,47)" fg:x="7594784148" fg:w="2006018"/><text x="75.7962%" y="1663.50"></text></g><g><title>tracing::span::Span::log (3,009,027 samples, 0.03%)</title><rect x="75.5762%" y="1653" width="0.0299%" height="15" fill="rgb(216,29,3)" fg:x="7597793175" fg:w="3009027"/><text x="75.8262%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (5,015,045 samples, 0.05%)</title><rect x="75.5662%" y="1685" width="0.0499%" height="15" fill="rgb(246,140,12)" fg:x="7596790166" fg:w="5015045"/><text x="75.8162%" y="1695.50"></text></g><g><title>&lt;tracing::span::Span as core::ops::drop::Drop&gt;::drop (5,015,045 samples, 0.05%)</title><rect x="75.5662%" y="1669" width="0.0499%" height="15" fill="rgb(230,136,11)" fg:x="7596790166" fg:w="5015045"/><text x="75.8162%" y="1679.50"></text></g><g><title>h2::frame::headers::HeaderBlock::load::{{closure}} (8,024,072 samples, 0.08%)</title><rect x="75.6161%" y="1685" width="0.0798%" height="15" fill="rgb(247,22,47)" fg:x="7601805211" fg:w="8024072"/><text x="75.8661%" y="1695.50"></text></g><g><title>bytes::bytes_mut::increment_shared (2,006,018 samples, 0.02%)</title><rect x="75.9254%" y="1605" width="0.0200%" height="15" fill="rgb(218,84,22)" fg:x="7632898490" fg:w="2006018"/><text x="76.1754%" y="1615.50"></text></g><g><title>&lt;h2::hpack::header::BytesStr as core::clone::Clone&gt;::clone (10,030,090 samples, 0.10%)</title><rect x="75.8755%" y="1653" width="0.0998%" height="15" fill="rgb(216,87,39)" fg:x="7627883445" fg:w="10030090"/><text x="76.1255%" y="1663.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (10,030,090 samples, 0.10%)</title><rect x="75.8755%" y="1637" width="0.0998%" height="15" fill="rgb(221,178,8)" fg:x="7627883445" fg:w="10030090"/><text x="76.1255%" y="1647.50"></text></g><g><title>bytes::bytes_mut::shared_v_clone (6,018,054 samples, 0.06%)</title><rect x="75.9154%" y="1621" width="0.0599%" height="15" fill="rgb(230,42,11)" fg:x="7631895481" fg:w="6018054"/><text x="76.1654%" y="1631.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (3,009,027 samples, 0.03%)</title><rect x="75.9453%" y="1605" width="0.0299%" height="15" fill="rgb(237,229,4)" fg:x="7634904508" fg:w="3009027"/><text x="76.1953%" y="1615.50"></text></g><g><title>core::sync::atomic::atomic_load (3,009,027 samples, 0.03%)</title><rect x="75.9453%" y="1589" width="0.0299%" height="15" fill="rgb(222,31,33)" fg:x="7634904508" fg:w="3009027"/><text x="76.1953%" y="1599.50"></text></g><g><title>bytes::bytes::shallow_clone_arc (27,081,243 samples, 0.27%)</title><rect x="76.0451%" y="1605" width="0.2694%" height="15" fill="rgb(210,17,39)" fg:x="7644934598" fg:w="27081243"/><text x="76.2951%" y="1615.50"></text></g><g><title>&lt;h2::hpack::header::Header&lt;T&gt; as core::clone::Clone&gt;::clone (60,180,540 samples, 0.60%)</title><rect x="75.7258%" y="1669" width="0.5986%" height="15" fill="rgb(244,93,20)" fg:x="7612838310" fg:w="60180540"/><text x="75.9758%" y="1679.50"></text></g><g><title>&lt;http::header::value::HeaderValue as core::clone::Clone&gt;::clone (34,102,306 samples, 0.34%)</title><rect x="75.9852%" y="1653" width="0.3392%" height="15" fill="rgb(210,40,47)" fg:x="7638916544" fg:w="34102306"/><text x="76.2352%" y="1663.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (30,090,270 samples, 0.30%)</title><rect x="76.0251%" y="1637" width="0.2993%" height="15" fill="rgb(239,211,47)" fg:x="7642928580" fg:w="30090270"/><text x="76.2751%" y="1647.50"></text></g><g><title>bytes::bytes::shared_clone (29,087,261 samples, 0.29%)</title><rect x="76.0351%" y="1621" width="0.2893%" height="15" fill="rgb(251,223,49)" fg:x="7643931589" fg:w="29087261"/><text x="76.2851%" y="1631.50"></text></g><g><title>alloc::collections::vec_deque::wrap_index (3,009,027 samples, 0.03%)</title><rect x="76.3544%" y="1605" width="0.0299%" height="15" fill="rgb(221,149,5)" fg:x="7676027877" fg:w="3009027"/><text x="76.6044%" y="1615.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::to_physical_idx (4,012,036 samples, 0.04%)</title><rect x="76.3544%" y="1637" width="0.0399%" height="15" fill="rgb(219,224,51)" fg:x="7676027877" fg:w="4012036"/><text x="76.6044%" y="1647.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::wrap_add (4,012,036 samples, 0.04%)</title><rect x="76.3544%" y="1621" width="0.0399%" height="15" fill="rgb(223,7,8)" fg:x="7676027877" fg:w="4012036"/><text x="76.6044%" y="1631.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::get (5,015,045 samples, 0.05%)</title><rect x="76.3544%" y="1653" width="0.0499%" height="15" fill="rgb(241,217,22)" fg:x="7676027877" fg:w="5015045"/><text x="76.6044%" y="1663.50"></text></g><g><title>h2::hpack::decoder::Table::get (15,045,135 samples, 0.15%)</title><rect x="76.3245%" y="1669" width="0.1497%" height="15" fill="rgb(248,209,0)" fg:x="7673018850" fg:w="15045135"/><text x="76.5745%" y="1679.50"></text></g><g><title>h2::hpack::decoder::get_static (7,021,063 samples, 0.07%)</title><rect x="76.4043%" y="1653" width="0.0698%" height="15" fill="rgb(217,205,4)" fg:x="7681042922" fg:w="7021063"/><text x="76.6543%" y="1663.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_impl::Buf&gt;::has_remaining (3,009,027 samples, 0.03%)</title><rect x="76.5140%" y="1653" width="0.0299%" height="15" fill="rgb(228,124,39)" fg:x="7692076021" fg:w="3009027"/><text x="76.7640%" y="1663.50"></text></g><g><title>bytes::buf::buf_impl::Buf::has_remaining (3,009,027 samples, 0.03%)</title><rect x="76.5140%" y="1637" width="0.0299%" height="15" fill="rgb(250,116,42)" fg:x="7692076021" fg:w="3009027"/><text x="76.7640%" y="1647.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u8 (2,006,018 samples, 0.02%)</title><rect x="76.5439%" y="1653" width="0.0200%" height="15" fill="rgb(223,202,9)" fg:x="7695085048" fg:w="2006018"/><text x="76.7939%" y="1663.50"></text></g><g><title>h2::hpack::decoder::Decoder::decode_indexed (89,267,801 samples, 0.89%)</title><rect x="75.6959%" y="1685" width="0.8880%" height="15" fill="rgb(242,222,40)" fg:x="7609829283" fg:w="89267801"/><text x="75.9459%" y="1695.50"></text></g><g><title>h2::hpack::decoder::decode_int (11,033,099 samples, 0.11%)</title><rect x="76.4741%" y="1669" width="0.1097%" height="15" fill="rgb(229,99,46)" fg:x="7688063985" fg:w="11033099"/><text x="76.7241%" y="1679.50"></text></g><g><title>core::num::&lt;impl u8&gt;::wrapping_sub (2,006,018 samples, 0.02%)</title><rect x="76.5639%" y="1653" width="0.0200%" height="15" fill="rgb(225,56,46)" fg:x="7697091066" fg:w="2006018"/><text x="76.8139%" y="1663.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (8,024,072 samples, 0.08%)</title><rect x="76.6836%" y="1669" width="0.0798%" height="15" fill="rgb(227,94,5)" fg:x="7709127174" fg:w="8024072"/><text x="76.9336%" y="1679.50"></text></g><g><title>bytes::bytes::shallow_clone_arc (4,012,036 samples, 0.04%)</title><rect x="76.8532%" y="1557" width="0.0399%" height="15" fill="rgb(205,112,38)" fg:x="7726178327" fg:w="4012036"/><text x="77.1032%" y="1567.50"></text></g><g><title>&lt;http::header::name::HeaderName as core::clone::Clone&gt;::clone (11,033,099 samples, 0.11%)</title><rect x="76.7934%" y="1653" width="0.1097%" height="15" fill="rgb(231,133,46)" fg:x="7720160273" fg:w="11033099"/><text x="77.0434%" y="1663.50"></text></g><g><title>&lt;http::header::name::Repr&lt;T&gt; as core::clone::Clone&gt;::clone (6,018,054 samples, 0.06%)</title><rect x="76.8433%" y="1637" width="0.0599%" height="15" fill="rgb(217,16,9)" fg:x="7725175318" fg:w="6018054"/><text x="77.0933%" y="1647.50"></text></g><g><title>&lt;http::header::name::Custom as core::clone::Clone&gt;::clone (6,018,054 samples, 0.06%)</title><rect x="76.8433%" y="1621" width="0.0599%" height="15" fill="rgb(249,173,9)" fg:x="7725175318" fg:w="6018054"/><text x="77.0933%" y="1631.50"></text></g><g><title>&lt;http::byte_str::ByteStr as core::clone::Clone&gt;::clone (6,018,054 samples, 0.06%)</title><rect x="76.8433%" y="1605" width="0.0599%" height="15" fill="rgb(205,163,53)" fg:x="7725175318" fg:w="6018054"/><text x="77.0933%" y="1615.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (6,018,054 samples, 0.06%)</title><rect x="76.8433%" y="1589" width="0.0599%" height="15" fill="rgb(217,54,41)" fg:x="7725175318" fg:w="6018054"/><text x="77.0933%" y="1599.50"></text></g><g><title>bytes::bytes::shared_clone (5,015,045 samples, 0.05%)</title><rect x="76.8532%" y="1573" width="0.0499%" height="15" fill="rgb(228,216,12)" fg:x="7726178327" fg:w="5015045"/><text x="77.1032%" y="1583.50"></text></g><g><title>&lt;h2::hpack::header::Header&lt;T&gt; as core::clone::Clone&gt;::clone (21,063,189 samples, 0.21%)</title><rect x="76.7634%" y="1669" width="0.2095%" height="15" fill="rgb(244,228,15)" fg:x="7717151246" fg:w="21063189"/><text x="77.0134%" y="1679.50"></text></g><g><title>&lt;http::header::value::HeaderValue as core::clone::Clone&gt;::clone (7,021,063 samples, 0.07%)</title><rect x="76.9031%" y="1653" width="0.0698%" height="15" fill="rgb(221,176,53)" fg:x="7731193372" fg:w="7021063"/><text x="77.1531%" y="1663.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (2,006,018 samples, 0.02%)</title><rect x="76.9530%" y="1637" width="0.0200%" height="15" fill="rgb(205,94,34)" fg:x="7736208417" fg:w="2006018"/><text x="77.2030%" y="1647.50"></text></g><g><title>bytes::bytes::shared_clone (2,006,018 samples, 0.02%)</title><rect x="76.9530%" y="1621" width="0.0200%" height="15" fill="rgb(213,110,48)" fg:x="7736208417" fg:w="2006018"/><text x="77.2030%" y="1631.50"></text></g><g><title>bytes::bytes::shallow_clone_arc (2,006,018 samples, 0.02%)</title><rect x="76.9530%" y="1605" width="0.0200%" height="15" fill="rgb(236,142,28)" fg:x="7736208417" fg:w="2006018"/><text x="77.2030%" y="1615.50"></text></g><g><title>bytes::bytes::static_drop (3,009,027 samples, 0.03%)</title><rect x="76.9730%" y="1669" width="0.0299%" height="15" fill="rgb(225,135,29)" fg:x="7738214435" fg:w="3009027"/><text x="77.2230%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;h2::hpack::header::Header&gt; (6,018,054 samples, 0.06%)</title><rect x="77.0029%" y="1669" width="0.0599%" height="15" fill="rgb(252,45,31)" fg:x="7741223462" fg:w="6018054"/><text x="77.2529%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::name::HeaderName&gt; (3,009,027 samples, 0.03%)</title><rect x="77.0328%" y="1653" width="0.0299%" height="15" fill="rgb(211,187,50)" fg:x="7744232489" fg:w="3009027"/><text x="77.2828%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::name::Repr&lt;http::header::name::Custom&gt;&gt; (3,009,027 samples, 0.03%)</title><rect x="77.0328%" y="1637" width="0.0299%" height="15" fill="rgb(229,109,7)" fg:x="7744232489" fg:w="3009027"/><text x="77.2828%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::name::Custom&gt; (3,009,027 samples, 0.03%)</title><rect x="77.0328%" y="1621" width="0.0299%" height="15" fill="rgb(251,131,51)" fg:x="7744232489" fg:w="3009027"/><text x="77.2828%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::byte_str::ByteStr&gt; (3,009,027 samples, 0.03%)</title><rect x="77.0328%" y="1605" width="0.0299%" height="15" fill="rgb(251,180,35)" fg:x="7744232489" fg:w="3009027"/><text x="77.2828%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (3,009,027 samples, 0.03%)</title><rect x="77.0328%" y="1589" width="0.0299%" height="15" fill="rgb(211,46,32)" fg:x="7744232489" fg:w="3009027"/><text x="77.2828%" y="1599.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (3,009,027 samples, 0.03%)</title><rect x="77.0328%" y="1573" width="0.0299%" height="15" fill="rgb(248,123,17)" fg:x="7744232489" fg:w="3009027"/><text x="77.2828%" y="1583.50"></text></g><g><title>bytes::bytes::shared_drop (3,009,027 samples, 0.03%)</title><rect x="77.0328%" y="1557" width="0.0299%" height="15" fill="rgb(227,141,18)" fg:x="7744232489" fg:w="3009027"/><text x="77.2828%" y="1567.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (3,009,027 samples, 0.03%)</title><rect x="77.0328%" y="1541" width="0.0299%" height="15" fill="rgb(216,102,9)" fg:x="7744232489" fg:w="3009027"/><text x="77.2828%" y="1551.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (3,009,027 samples, 0.03%)</title><rect x="77.0328%" y="1525" width="0.0299%" height="15" fill="rgb(253,47,13)" fg:x="7744232489" fg:w="3009027"/><text x="77.2828%" y="1535.50"></text></g><g><title>bytes::bytes::release_shared (2,006,018 samples, 0.02%)</title><rect x="77.0428%" y="1509" width="0.0200%" height="15" fill="rgb(226,93,23)" fg:x="7745235498" fg:w="2006018"/><text x="77.2928%" y="1519.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3,009,027 samples, 0.03%)</title><rect x="77.0628%" y="1653" width="0.0299%" height="15" fill="rgb(247,104,17)" fg:x="7747241516" fg:w="3009027"/><text x="77.3128%" y="1663.50"></text></g><g><title>h2::hpack::decoder::Decoder::try_decode_string (3,009,027 samples, 0.03%)</title><rect x="77.0927%" y="1653" width="0.0299%" height="15" fill="rgb(233,203,26)" fg:x="7750250543" fg:w="3009027"/><text x="77.3427%" y="1663.50"></text></g><g><title>h2::hpack::decoder::StringMarker::consume (4,012,036 samples, 0.04%)</title><rect x="77.1226%" y="1653" width="0.0399%" height="15" fill="rgb(244,98,49)" fg:x="7753259570" fg:w="4012036"/><text x="77.3726%" y="1663.50"></text></g><g><title>h2::hpack::decoder::Decoder::decode_string (11,033,099 samples, 0.11%)</title><rect x="77.0628%" y="1669" width="0.1097%" height="15" fill="rgb(235,134,22)" fg:x="7747241516" fg:w="11033099"/><text x="77.3128%" y="1679.50"></text></g><g><title>h2::hpack::decoder::Table::get (3,009,027 samples, 0.03%)</title><rect x="77.1725%" y="1669" width="0.0299%" height="15" fill="rgb(221,70,32)" fg:x="7758274615" fg:w="3009027"/><text x="77.4225%" y="1679.50"></text></g><g><title>h2::hpack::decoder::get_static (2,006,018 samples, 0.02%)</title><rect x="77.1825%" y="1653" width="0.0200%" height="15" fill="rgb(238,15,50)" fg:x="7759277624" fg:w="2006018"/><text x="77.4325%" y="1663.50"></text></g><g><title>h2::hpack::decoder::decode_int (3,009,027 samples, 0.03%)</title><rect x="77.2024%" y="1669" width="0.0299%" height="15" fill="rgb(215,221,48)" fg:x="7761283642" fg:w="3009027"/><text x="77.4524%" y="1679.50"></text></g><g><title>h2::hpack::header::Header::name (2,006,018 samples, 0.02%)</title><rect x="77.2324%" y="1669" width="0.0200%" height="15" fill="rgb(236,73,3)" fg:x="7764292669" fg:w="2006018"/><text x="77.4824%" y="1679.50"></text></g><g><title>h2::hpack::decoder::Decoder::decode_literal (69,207,621 samples, 0.69%)</title><rect x="76.5839%" y="1685" width="0.6884%" height="15" fill="rgb(250,107,11)" fg:x="7699097084" fg:w="69207621"/><text x="76.8339%" y="1695.50"></text></g><g><title>h2::hpack::header::Name::into_entry (2,006,018 samples, 0.02%)</title><rect x="77.2523%" y="1669" width="0.0200%" height="15" fill="rgb(242,39,14)" fg:x="7766298687" fg:w="2006018"/><text x="77.5023%" y="1679.50"></text></g><g><title>h2::hpack::decoder::Representation::load (5,015,045 samples, 0.05%)</title><rect x="77.2723%" y="1685" width="0.0499%" height="15" fill="rgb(248,164,37)" fg:x="7768304705" fg:w="5015045"/><text x="77.5223%" y="1695.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::push_front (2,006,018 samples, 0.02%)</title><rect x="77.3421%" y="1669" width="0.0200%" height="15" fill="rgb(217,60,12)" fg:x="7775325768" fg:w="2006018"/><text x="77.5921%" y="1679.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_write (2,006,018 samples, 0.02%)</title><rect x="77.3421%" y="1653" width="0.0200%" height="15" fill="rgb(240,125,29)" fg:x="7775325768" fg:w="2006018"/><text x="77.5921%" y="1663.50"></text></g><g><title>core::ptr::write (2,006,018 samples, 0.02%)</title><rect x="77.3421%" y="1637" width="0.0200%" height="15" fill="rgb(208,207,28)" fg:x="7775325768" fg:w="2006018"/><text x="77.5921%" y="1647.50"></text></g><g><title>__free (3,009,027 samples, 0.03%)</title><rect x="77.4219%" y="1653" width="0.0299%" height="15" fill="rgb(209,159,27)" fg:x="7783349840" fg:w="3009027"/><text x="77.6719%" y="1663.50"></text></g><g><title>_int_free (2,006,018 samples, 0.02%)</title><rect x="77.4319%" y="1637" width="0.0200%" height="15" fill="rgb(251,176,53)" fg:x="7784352849" fg:w="2006018"/><text x="77.6819%" y="1647.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_read (15,045,135 samples, 0.15%)</title><rect x="77.4618%" y="1637" width="0.1497%" height="15" fill="rgb(211,85,7)" fg:x="7787361876" fg:w="15045135"/><text x="77.7118%" y="1647.50"></text></g><g><title>core::ptr::read (15,045,135 samples, 0.15%)</title><rect x="77.4618%" y="1621" width="0.1497%" height="15" fill="rgb(216,64,54)" fg:x="7787361876" fg:w="15045135"/><text x="77.7118%" y="1631.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_back (17,051,153 samples, 0.17%)</title><rect x="77.4519%" y="1653" width="0.1696%" height="15" fill="rgb(217,54,24)" fg:x="7786358867" fg:w="17051153"/><text x="77.7019%" y="1663.50"></text></g><g><title>alloc::alloc::dealloc (26,078,234 samples, 0.26%)</title><rect x="77.7911%" y="1525" width="0.2594%" height="15" fill="rgb(208,206,53)" fg:x="7820461173" fg:w="26078234"/><text x="78.0411%" y="1535.50"></text></g><g><title>__free (26,078,234 samples, 0.26%)</title><rect x="77.7911%" y="1509" width="0.2594%" height="15" fill="rgb(251,74,39)" fg:x="7820461173" fg:w="26078234"/><text x="78.0411%" y="1519.50"></text></g><g><title>_int_free (6,018,054 samples, 0.06%)</title><rect x="77.9906%" y="1493" width="0.0599%" height="15" fill="rgb(226,47,5)" fg:x="7840521353" fg:w="6018054"/><text x="78.2406%" y="1503.50"></text></g><g><title>bytes::bytes::shared_drop (44,132,396 samples, 0.44%)</title><rect x="77.6215%" y="1653" width="0.4390%" height="15" fill="rgb(234,111,33)" fg:x="7803410020" fg:w="44132396"/><text x="77.8715%" y="1663.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (44,132,396 samples, 0.44%)</title><rect x="77.6215%" y="1637" width="0.4390%" height="15" fill="rgb(251,14,10)" fg:x="7803410020" fg:w="44132396"/><text x="77.8715%" y="1647.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (44,132,396 samples, 0.44%)</title><rect x="77.6215%" y="1621" width="0.4390%" height="15" fill="rgb(232,43,0)" fg:x="7803410020" fg:w="44132396"/><text x="77.8715%" y="1631.50"></text></g><g><title>bytes::bytes::release_shared (44,132,396 samples, 0.44%)</title><rect x="77.6215%" y="1605" width="0.4390%" height="15" fill="rgb(222,68,43)" fg:x="7803410020" fg:w="44132396"/><text x="77.8715%" y="1615.50"></text></g><g><title>core::mem::drop (30,090,270 samples, 0.30%)</title><rect x="77.7611%" y="1589" width="0.2993%" height="15" fill="rgb(217,24,23)" fg:x="7817452146" fg:w="30090270"/><text x="78.0111%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes::Shared&gt;&gt; (30,090,270 samples, 0.30%)</title><rect x="77.7611%" y="1573" width="0.2993%" height="15" fill="rgb(229,209,14)" fg:x="7817452146" fg:w="30090270"/><text x="78.0111%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Shared&gt; (27,081,243 samples, 0.27%)</title><rect x="77.7911%" y="1557" width="0.2694%" height="15" fill="rgb(250,149,48)" fg:x="7820461173" fg:w="27081243"/><text x="78.0411%" y="1567.50"></text></g><g><title>&lt;bytes::bytes::Shared as core::ops::drop::Drop&gt;::drop (27,081,243 samples, 0.27%)</title><rect x="77.7911%" y="1541" width="0.2694%" height="15" fill="rgb(210,120,37)" fg:x="7820461173" fg:w="27081243"/><text x="78.0411%" y="1551.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (2,006,018 samples, 0.02%)</title><rect x="78.0605%" y="1653" width="0.0200%" height="15" fill="rgb(210,21,8)" fg:x="7847542416" fg:w="2006018"/><text x="78.3105%" y="1663.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (2,006,018 samples, 0.02%)</title><rect x="78.0605%" y="1637" width="0.0200%" height="15" fill="rgb(243,145,7)" fg:x="7847542416" fg:w="2006018"/><text x="78.3105%" y="1647.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop::{{closure}} (2,006,018 samples, 0.02%)</title><rect x="78.0605%" y="1621" width="0.0200%" height="15" fill="rgb(238,178,32)" fg:x="7847542416" fg:w="2006018"/><text x="78.3105%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;h2::hpack::header::Header&gt; (7,021,063 samples, 0.07%)</title><rect x="78.0804%" y="1653" width="0.0698%" height="15" fill="rgb(222,4,10)" fg:x="7849548434" fg:w="7021063"/><text x="78.3304%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::name::HeaderName&gt; (7,021,063 samples, 0.07%)</title><rect x="78.0804%" y="1637" width="0.0698%" height="15" fill="rgb(239,7,37)" fg:x="7849548434" fg:w="7021063"/><text x="78.3304%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::name::Repr&lt;http::header::name::Custom&gt;&gt; (7,021,063 samples, 0.07%)</title><rect x="78.0804%" y="1621" width="0.0698%" height="15" fill="rgb(215,31,37)" fg:x="7849548434" fg:w="7021063"/><text x="78.3304%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::name::Custom&gt; (7,021,063 samples, 0.07%)</title><rect x="78.0804%" y="1605" width="0.0698%" height="15" fill="rgb(224,83,33)" fg:x="7849548434" fg:w="7021063"/><text x="78.3304%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::byte_str::ByteStr&gt; (7,021,063 samples, 0.07%)</title><rect x="78.0804%" y="1589" width="0.0698%" height="15" fill="rgb(239,55,3)" fg:x="7849548434" fg:w="7021063"/><text x="78.3304%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (7,021,063 samples, 0.07%)</title><rect x="78.0804%" y="1573" width="0.0698%" height="15" fill="rgb(247,92,11)" fg:x="7849548434" fg:w="7021063"/><text x="78.3304%" y="1583.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (7,021,063 samples, 0.07%)</title><rect x="78.0804%" y="1557" width="0.0698%" height="15" fill="rgb(239,200,7)" fg:x="7849548434" fg:w="7021063"/><text x="78.3304%" y="1567.50"></text></g><g><title>bytes::bytes::shared_drop (7,021,063 samples, 0.07%)</title><rect x="78.0804%" y="1541" width="0.0698%" height="15" fill="rgb(227,115,8)" fg:x="7849548434" fg:w="7021063"/><text x="78.3304%" y="1551.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (7,021,063 samples, 0.07%)</title><rect x="78.0804%" y="1525" width="0.0698%" height="15" fill="rgb(215,189,27)" fg:x="7849548434" fg:w="7021063"/><text x="78.3304%" y="1535.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (7,021,063 samples, 0.07%)</title><rect x="78.0804%" y="1509" width="0.0698%" height="15" fill="rgb(251,216,39)" fg:x="7849548434" fg:w="7021063"/><text x="78.3304%" y="1519.50"></text></g><g><title>bytes::bytes::release_shared (7,021,063 samples, 0.07%)</title><rect x="78.0804%" y="1493" width="0.0698%" height="15" fill="rgb(207,29,47)" fg:x="7849548434" fg:w="7021063"/><text x="78.3304%" y="1503.50"></text></g><g><title>h2::hpack::decoder::Table::reserve (83,249,747 samples, 0.83%)</title><rect x="77.3621%" y="1669" width="0.8281%" height="15" fill="rgb(210,71,34)" fg:x="7777331786" fg:w="83249747"/><text x="77.6121%" y="1679.50"></text></g><g><title>h2::hpack::header::Header::len (4,012,036 samples, 0.04%)</title><rect x="78.1503%" y="1653" width="0.0399%" height="15" fill="rgb(253,217,51)" fg:x="7856569497" fg:w="4012036"/><text x="78.4003%" y="1663.50"></text></g><g><title>h2::hpack::header::len (4,012,036 samples, 0.04%)</title><rect x="78.1503%" y="1637" width="0.0399%" height="15" fill="rgb(222,117,46)" fg:x="7856569497" fg:w="4012036"/><text x="78.4003%" y="1647.50"></text></g><g><title>&lt;http::header::name::HeaderName as core::borrow::Borrow&lt;str&gt;&gt;::borrow (4,012,036 samples, 0.04%)</title><rect x="78.1503%" y="1621" width="0.0399%" height="15" fill="rgb(226,132,6)" fg:x="7856569497" fg:w="4012036"/><text x="78.4003%" y="1631.50"></text></g><g><title>http::header::name::HeaderName::as_str (4,012,036 samples, 0.04%)</title><rect x="78.1503%" y="1605" width="0.0399%" height="15" fill="rgb(254,145,51)" fg:x="7856569497" fg:w="4012036"/><text x="78.4003%" y="1615.50"></text></g><g><title>h2::hpack::decoder::Table::insert (89,267,801 samples, 0.89%)</title><rect x="77.3222%" y="1685" width="0.8880%" height="15" fill="rgb(231,199,27)" fg:x="7773319750" fg:w="89267801"/><text x="77.5722%" y="1695.50"></text></g><g><title>h2::hpack::header::Header::len (2,006,018 samples, 0.02%)</title><rect x="78.1902%" y="1669" width="0.0200%" height="15" fill="rgb(245,158,14)" fg:x="7860581533" fg:w="2006018"/><text x="78.4402%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (30,090,270 samples, 0.30%)</title><rect x="78.2101%" y="1669" width="0.2993%" height="15" fill="rgb(240,113,14)" fg:x="7862587551" fg:w="30090270"/><text x="78.4601%" y="1679.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (30,090,270 samples, 0.30%)</title><rect x="78.2101%" y="1653" width="0.2993%" height="15" fill="rgb(210,20,13)" fg:x="7862587551" fg:w="30090270"/><text x="78.4601%" y="1663.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (28,084,252 samples, 0.28%)</title><rect x="78.2301%" y="1637" width="0.2794%" height="15" fill="rgb(241,144,13)" fg:x="7864593569" fg:w="28084252"/><text x="78.4801%" y="1647.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (27,081,243 samples, 0.27%)</title><rect x="78.2400%" y="1621" width="0.2694%" height="15" fill="rgb(235,43,34)" fg:x="7865596578" fg:w="27081243"/><text x="78.4900%" y="1631.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop::{{closure}} (27,081,243 samples, 0.27%)</title><rect x="78.2400%" y="1605" width="0.2694%" height="15" fill="rgb(208,36,20)" fg:x="7865596578" fg:w="27081243"/><text x="78.4900%" y="1615.50"></text></g><g><title>bytes::bytes_mut::release_shared (27,081,243 samples, 0.27%)</title><rect x="78.2400%" y="1589" width="0.2694%" height="15" fill="rgb(239,204,10)" fg:x="7865596578" fg:w="27081243"/><text x="78.4900%" y="1599.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_impl::Buf&gt;::advance (9,027,081 samples, 0.09%)</title><rect x="78.5593%" y="1653" width="0.0898%" height="15" fill="rgb(217,84,43)" fg:x="7897692866" fg:w="9027081"/><text x="78.8093%" y="1663.50"></text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (7,021,063 samples, 0.07%)</title><rect x="78.5793%" y="1637" width="0.0698%" height="15" fill="rgb(241,170,50)" fg:x="7899698884" fg:w="7021063"/><text x="78.8293%" y="1647.50"></text></g><g><title>bytes::bytes_mut::BytesMut::freeze (3,009,027 samples, 0.03%)</title><rect x="78.6491%" y="1653" width="0.0299%" height="15" fill="rgb(226,205,29)" fg:x="7906719947" fg:w="3009027"/><text x="78.8991%" y="1663.50"></text></g><g><title>bytes::bytes::Bytes::with_vtable (2,006,018 samples, 0.02%)</title><rect x="78.6591%" y="1637" width="0.0200%" height="15" fill="rgb(233,113,1)" fg:x="7907722956" fg:w="2006018"/><text x="78.9091%" y="1647.50"></text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (9,027,081 samples, 0.09%)</title><rect x="78.7289%" y="1637" width="0.0898%" height="15" fill="rgb(253,98,13)" fg:x="7914744019" fg:w="9027081"/><text x="78.9789%" y="1647.50"></text></g><g><title>h2::hpack::decoder::consume (110,330,990 samples, 1.10%)</title><rect x="78.2101%" y="1685" width="1.0975%" height="15" fill="rgb(211,115,12)" fg:x="7862587551" fg:w="110330990"/><text x="78.4601%" y="1695.50"></text></g><g><title>h2::hpack::decoder::take (80,240,720 samples, 0.80%)</title><rect x="78.5094%" y="1669" width="0.7982%" height="15" fill="rgb(208,12,16)" fg:x="7892677821" fg:w="80240720"/><text x="78.7594%" y="1679.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (63,189,567 samples, 0.63%)</title><rect x="78.6790%" y="1653" width="0.6286%" height="15" fill="rgb(237,193,54)" fg:x="7909728974" fg:w="63189567"/><text x="78.9290%" y="1663.50"></text></g><g><title>bytes::bytes_mut::BytesMut::shallow_clone (49,147,441 samples, 0.49%)</title><rect x="78.8187%" y="1637" width="0.4889%" height="15" fill="rgb(243,22,42)" fg:x="7923771100" fg:w="49147441"/><text x="79.0687%" y="1647.50"></text></g><g><title>bytes::bytes_mut::increment_shared (49,147,441 samples, 0.49%)</title><rect x="78.8187%" y="1621" width="0.4889%" height="15" fill="rgb(233,151,36)" fg:x="7923771100" fg:w="49147441"/><text x="79.0687%" y="1631.50"></text></g><g><title>h2::hpack::decoder::peek_u8 (6,018,054 samples, 0.06%)</title><rect x="79.3076%" y="1685" width="0.0599%" height="15" fill="rgb(237,57,45)" fg:x="7972918541" fg:w="6018054"/><text x="79.5576%" y="1695.50"></text></g><g><title>bytes::buf::buf_impl::Buf::has_remaining (2,006,018 samples, 0.02%)</title><rect x="79.3475%" y="1669" width="0.0200%" height="15" fill="rgb(221,88,17)" fg:x="7976930577" fg:w="2006018"/><text x="79.5975%" y="1679.50"></text></g><g><title>tracing::span::Span::enter (7,021,063 samples, 0.07%)</title><rect x="79.3774%" y="1685" width="0.0698%" height="15" fill="rgb(230,79,15)" fg:x="7979939604" fg:w="7021063"/><text x="79.6274%" y="1695.50"></text></g><g><title>tracing::span::Span::do_enter (7,021,063 samples, 0.07%)</title><rect x="79.3774%" y="1669" width="0.0698%" height="15" fill="rgb(213,57,13)" fg:x="7979939604" fg:w="7021063"/><text x="79.6274%" y="1679.50"></text></g><g><title>tracing::span::Span::log (6,018,054 samples, 0.06%)</title><rect x="79.3874%" y="1653" width="0.0599%" height="15" fill="rgb(222,116,39)" fg:x="7980942613" fg:w="6018054"/><text x="79.6374%" y="1663.50"></text></g><g><title>tracing::span::Span::record_all (4,012,036 samples, 0.04%)</title><rect x="79.4473%" y="1685" width="0.0399%" height="15" fill="rgb(245,107,2)" fg:x="7986960667" fg:w="4012036"/><text x="79.6973%" y="1695.50"></text></g><g><title>h2::hpack::decoder::Decoder::decode (463,390,158 samples, 4.61%)</title><rect x="74.9077%" y="1701" width="4.6094%" height="15" fill="rgb(238,1,10)" fg:x="7530591572" fg:w="463390158"/><text x="75.1577%" y="1711.50">h2::h..</text></g><g><title>tracing_core::metadata::LevelFilter::current (2,006,018 samples, 0.02%)</title><rect x="79.4972%" y="1685" width="0.0200%" height="15" fill="rgb(249,4,48)" fg:x="7991975712" fg:w="2006018"/><text x="79.7472%" y="1695.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2,006,018 samples, 0.02%)</title><rect x="79.4972%" y="1669" width="0.0200%" height="15" fill="rgb(223,151,18)" fg:x="7991975712" fg:w="2006018"/><text x="79.7472%" y="1679.50"></text></g><g><title>core::sync::atomic::atomic_load (2,006,018 samples, 0.02%)</title><rect x="79.4972%" y="1653" width="0.0200%" height="15" fill="rgb(227,65,43)" fg:x="7991975712" fg:w="2006018"/><text x="79.7472%" y="1663.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::is_empty (3,009,027 samples, 0.03%)</title><rect x="79.5171%" y="1701" width="0.0299%" height="15" fill="rgb(218,40,45)" fg:x="7993981730" fg:w="3009027"/><text x="79.7671%" y="1711.50"></text></g><g><title>h2::frame::headers::Headers::load_hpack (476,429,275 samples, 4.74%)</title><rect x="74.8179%" y="1733" width="4.7391%" height="15" fill="rgb(252,121,31)" fg:x="7521564491" fg:w="476429275"/><text x="75.0679%" y="1743.50">h2::fr..</text></g><g><title>h2::frame::headers::HeaderBlock::load (476,429,275 samples, 4.74%)</title><rect x="74.8179%" y="1717" width="4.7391%" height="15" fill="rgb(219,158,43)" fg:x="7521564491" fg:w="476429275"/><text x="75.0679%" y="1727.50">h2::fr..</text></g><g><title>tracing::__macro_support::__disabled_span (2,006,018 samples, 0.02%)</title><rect x="79.5570%" y="1733" width="0.0200%" height="15" fill="rgb(231,162,42)" fg:x="7997993766" fg:w="2006018"/><text x="79.8070%" y="1743.50"></text></g><g><title>tracing::span::Span::new_disabled (2,006,018 samples, 0.02%)</title><rect x="79.5570%" y="1717" width="0.0200%" height="15" fill="rgb(217,179,25)" fg:x="7997993766" fg:w="2006018"/><text x="79.8070%" y="1727.50"></text></g><g><title>tracing::span::Span::log (2,006,018 samples, 0.02%)</title><rect x="79.5870%" y="1701" width="0.0200%" height="15" fill="rgb(206,212,31)" fg:x="8001002793" fg:w="2006018"/><text x="79.8370%" y="1711.50"></text></g><g><title>tracing::span::Span::enter (4,012,036 samples, 0.04%)</title><rect x="79.5770%" y="1733" width="0.0399%" height="15" fill="rgb(235,144,12)" fg:x="7999999784" fg:w="4012036"/><text x="79.8270%" y="1743.50"></text></g><g><title>tracing::span::Span::do_enter (4,012,036 samples, 0.04%)</title><rect x="79.5770%" y="1717" width="0.0399%" height="15" fill="rgb(213,51,10)" fg:x="7999999784" fg:w="4012036"/><text x="79.8270%" y="1727.50"></text></g><g><title>tracing::span::Span::record_all (4,012,036 samples, 0.04%)</title><rect x="79.6169%" y="1733" width="0.0399%" height="15" fill="rgb(231,145,14)" fg:x="8004011820" fg:w="4012036"/><text x="79.8669%" y="1743.50"></text></g><g><title>tracing::span::Span::log (2,006,018 samples, 0.02%)</title><rect x="79.6368%" y="1717" width="0.0200%" height="15" fill="rgb(235,15,28)" fg:x="8006017838" fg:w="2006018"/><text x="79.8868%" y="1727.50"></text></g><g><title>&lt;h2::codec::Codec&lt;T,B&gt; as futures_core::stream::Stream&gt;::poll_next (579,739,202 samples, 5.77%)</title><rect x="73.9100%" y="1781" width="5.7667%" height="15" fill="rgb(237,206,10)" fg:x="7430290672" fg:w="579739202"/><text x="74.1600%" y="1791.50">&lt;h2::co..</text></g><g><title>&lt;h2::codec::framed_read::FramedRead&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (579,739,202 samples, 5.77%)</title><rect x="73.9100%" y="1765" width="5.7667%" height="15" fill="rgb(236,227,27)" fg:x="7430290672" fg:w="579739202"/><text x="74.1600%" y="1775.50">&lt;h2::co..</text></g><g><title>h2::codec::framed_read::decode_frame (579,739,202 samples, 5.77%)</title><rect x="73.9100%" y="1749" width="5.7667%" height="15" fill="rgb(246,83,35)" fg:x="7430290672" fg:w="579739202"/><text x="74.1600%" y="1759.50">h2::cod..</text></g><g><title>tracing_core::dispatcher::has_been_set (2,006,018 samples, 0.02%)</title><rect x="79.6568%" y="1733" width="0.0200%" height="15" fill="rgb(220,136,24)" fg:x="8008023856" fg:w="2006018"/><text x="79.9068%" y="1743.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (2,006,018 samples, 0.02%)</title><rect x="79.6568%" y="1717" width="0.0200%" height="15" fill="rgb(217,3,25)" fg:x="8008023856" fg:w="2006018"/><text x="79.9068%" y="1727.50"></text></g><g><title>core::sync::atomic::atomic_load (2,006,018 samples, 0.02%)</title><rect x="79.6568%" y="1701" width="0.0200%" height="15" fill="rgb(239,24,14)" fg:x="8008023856" fg:w="2006018"/><text x="79.9068%" y="1711.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3,009,027 samples, 0.03%)</title><rect x="79.7167%" y="1685" width="0.0299%" height="15" fill="rgb(244,16,53)" fg:x="8014041910" fg:w="3009027"/><text x="79.9667%" y="1695.50"></text></g><g><title>__memcpy_evex_unaligned_erms (2,006,018 samples, 0.02%)</title><rect x="79.7266%" y="1669" width="0.0200%" height="15" fill="rgb(208,175,44)" fg:x="8015044919" fg:w="2006018"/><text x="79.9766%" y="1679.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::Deref&gt;::deref (2,006,018 samples, 0.02%)</title><rect x="79.7466%" y="1685" width="0.0200%" height="15" fill="rgb(252,18,48)" fg:x="8017050937" fg:w="2006018"/><text x="79.9966%" y="1695.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::DerefMut&gt;::deref_mut (4,012,036 samples, 0.04%)</title><rect x="79.7665%" y="1685" width="0.0399%" height="15" fill="rgb(234,199,32)" fg:x="8019056955" fg:w="4012036"/><text x="80.0165%" y="1695.50"></text></g><g><title>__memcpy_evex_unaligned_erms (6,018,054 samples, 0.06%)</title><rect x="79.8064%" y="1685" width="0.0599%" height="15" fill="rgb(225,77,54)" fg:x="8023068991" fg:w="6018054"/><text x="80.0564%" y="1695.50"></text></g><g><title>__memcpy_evex_unaligned_erms (3,009,027 samples, 0.03%)</title><rect x="79.9162%" y="1669" width="0.0299%" height="15" fill="rgb(225,42,25)" fg:x="8034102090" fg:w="3009027"/><text x="80.1662%" y="1679.50"></text></g><g><title>h2::proto::peer::Dyn::convert_poll_message (9,027,081 samples, 0.09%)</title><rect x="79.8863%" y="1685" width="0.0898%" height="15" fill="rgb(242,227,46)" fg:x="8031093063" fg:w="9027081"/><text x="80.1363%" y="1695.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (3,009,027 samples, 0.03%)</title><rect x="79.9461%" y="1669" width="0.0299%" height="15" fill="rgb(246,197,35)" fg:x="8037111117" fg:w="3009027"/><text x="80.1961%" y="1679.50"></text></g><g><title>__memcpy_evex_unaligned_erms (3,009,027 samples, 0.03%)</title><rect x="79.9461%" y="1653" width="0.0299%" height="15" fill="rgb(215,159,26)" fg:x="8037111117" fg:w="3009027"/><text x="80.1961%" y="1663.50"></text></g><g><title>h2::proto::streams::buffer::Deque::push_back (9,027,081 samples, 0.09%)</title><rect x="79.9761%" y="1685" width="0.0898%" height="15" fill="rgb(212,194,50)" fg:x="8040120144" fg:w="9027081"/><text x="80.2261%" y="1695.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert (9,027,081 samples, 0.09%)</title><rect x="79.9761%" y="1669" width="0.0898%" height="15" fill="rgb(246,132,1)" fg:x="8040120144" fg:w="9027081"/><text x="80.2261%" y="1679.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert_at (8,024,072 samples, 0.08%)</title><rect x="79.9860%" y="1653" width="0.0798%" height="15" fill="rgb(217,71,7)" fg:x="8041123153" fg:w="8024072"/><text x="80.2360%" y="1663.50"></text></g><g><title>h2::proto::streams::counts::Counts::inc_num_recv_streams (5,015,045 samples, 0.05%)</title><rect x="80.0658%" y="1685" width="0.0499%" height="15" fill="rgb(252,59,32)" fg:x="8049147225" fg:w="5015045"/><text x="80.3158%" y="1695.50"></text></g><g><title>h2::proto::streams::state::State::recv_open (12,036,108 samples, 0.12%)</title><rect x="80.1157%" y="1685" width="0.1197%" height="15" fill="rgb(253,204,25)" fg:x="8054162270" fg:w="12036108"/><text x="80.3657%" y="1695.50"></text></g><g><title>h2::frame::headers::Headers::is_informational (2,006,018 samples, 0.02%)</title><rect x="80.2155%" y="1669" width="0.0200%" height="15" fill="rgb(232,21,16)" fg:x="8064192360" fg:w="2006018"/><text x="80.4655%" y="1679.50"></text></g><g><title>h2::frame::headers::Pseudo::is_informational (2,006,018 samples, 0.02%)</title><rect x="80.2155%" y="1653" width="0.0200%" height="15" fill="rgb(248,90,29)" fg:x="8064192360" fg:w="2006018"/><text x="80.4655%" y="1663.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (2,006,018 samples, 0.02%)</title><rect x="80.2155%" y="1637" width="0.0200%" height="15" fill="rgb(249,223,7)" fg:x="8064192360" fg:w="2006018"/><text x="80.4655%" y="1647.50"></text></g><g><title>h2::proto::streams::store::Queue&lt;N&gt;::push (5,015,045 samples, 0.05%)</title><rect x="80.2355%" y="1685" width="0.0499%" height="15" fill="rgb(231,119,42)" fg:x="8066198378" fg:w="5015045"/><text x="80.4855%" y="1695.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::Deref&gt;::deref (3,009,027 samples, 0.03%)</title><rect x="80.2554%" y="1669" width="0.0299%" height="15" fill="rgb(215,41,35)" fg:x="8068204396" fg:w="3009027"/><text x="80.5054%" y="1679.50"></text></g><g><title>h2::proto::connection::Connection&lt;T,P,B&gt;::poll2 (643,931,778 samples, 6.41%)</title><rect x="73.9100%" y="1797" width="6.4053%" height="15" fill="rgb(220,44,45)" fg:x="7430290672" fg:w="643931778"/><text x="74.1600%" y="1807.50">h2::prot..</text></g><g><title>h2::proto::connection::DynConnection&lt;B&gt;::recv_frame (64,192,576 samples, 0.64%)</title><rect x="79.6767%" y="1781" width="0.6385%" height="15" fill="rgb(253,197,36)" fg:x="8010029874" fg:w="64192576"/><text x="79.9267%" y="1791.50"></text></g><g><title>h2::proto::streams::streams::DynStreams&lt;B&gt;::recv_headers (64,192,576 samples, 0.64%)</title><rect x="79.6767%" y="1765" width="0.6385%" height="15" fill="rgb(245,225,54)" fg:x="8010029874" fg:w="64192576"/><text x="79.9267%" y="1775.50"></text></g><g><title>h2::proto::streams::streams::Inner::recv_headers (64,192,576 samples, 0.64%)</title><rect x="79.6767%" y="1749" width="0.6385%" height="15" fill="rgb(239,94,37)" fg:x="8010029874" fg:w="64192576"/><text x="79.9267%" y="1759.50"></text></g><g><title>h2::proto::streams::counts::Counts::transition (64,192,576 samples, 0.64%)</title><rect x="79.6767%" y="1733" width="0.6385%" height="15" fill="rgb(242,217,10)" fg:x="8010029874" fg:w="64192576"/><text x="79.9267%" y="1743.50"></text></g><g><title>h2::proto::streams::streams::Inner::recv_headers::{{closure}} (64,192,576 samples, 0.64%)</title><rect x="79.6767%" y="1717" width="0.6385%" height="15" fill="rgb(250,193,7)" fg:x="8010029874" fg:w="64192576"/><text x="79.9267%" y="1727.50"></text></g><g><title>h2::proto::streams::recv::Recv::recv_headers (64,192,576 samples, 0.64%)</title><rect x="79.6767%" y="1701" width="0.6385%" height="15" fill="rgb(230,104,19)" fg:x="8010029874" fg:w="64192576"/><text x="79.9267%" y="1711.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::get (3,009,027 samples, 0.03%)</title><rect x="80.2853%" y="1685" width="0.0299%" height="15" fill="rgb(230,181,4)" fg:x="8071213423" fg:w="3009027"/><text x="80.5353%" y="1695.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::get2 (2,006,018 samples, 0.02%)</title><rect x="80.2953%" y="1669" width="0.0200%" height="15" fill="rgb(216,219,49)" fg:x="8072216432" fg:w="2006018"/><text x="80.5453%" y="1679.50"></text></g><g><title>&lt;http::header::name::HeaderName as http::header::map::as_header_name::Sealed&gt;::find (2,006,018 samples, 0.02%)</title><rect x="80.2953%" y="1653" width="0.0200%" height="15" fill="rgb(254,144,0)" fg:x="8072216432" fg:w="2006018"/><text x="80.5453%" y="1663.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::find (2,006,018 samples, 0.02%)</title><rect x="80.2953%" y="1637" width="0.0200%" height="15" fill="rgb(205,209,38)" fg:x="8072216432" fg:w="2006018"/><text x="80.5453%" y="1647.50"></text></g><g><title>&lt;hyper::proto::h2::SendBuf&lt;B&gt; as bytes::buf::buf_impl::Buf&gt;::remaining (2,006,018 samples, 0.02%)</title><rect x="80.4749%" y="1653" width="0.0200%" height="15" fill="rgb(240,21,42)" fg:x="8090270594" fg:w="2006018"/><text x="80.7249%" y="1663.50"></text></g><g><title>&lt;h2::proto::streams::prioritize::Prioritized&lt;B&gt; as bytes::buf::buf_impl::Buf&gt;::remaining (5,015,045 samples, 0.05%)</title><rect x="80.4550%" y="1685" width="0.0499%" height="15" fill="rgb(241,132,3)" fg:x="8088264576" fg:w="5015045"/><text x="80.7050%" y="1695.50"></text></g><g><title>&lt;bytes::buf::take::Take&lt;T&gt; as bytes::buf::buf_impl::Buf&gt;::remaining (5,015,045 samples, 0.05%)</title><rect x="80.4550%" y="1669" width="0.0499%" height="15" fill="rgb(225,14,2)" fg:x="8088264576" fg:w="5015045"/><text x="80.7050%" y="1679.50"></text></g><g><title>&lt;tracing_core::field::Iter as core::iter::traits::iterator::Iterator&gt;::next (2,006,018 samples, 0.02%)</title><rect x="80.5048%" y="1685" width="0.0200%" height="15" fill="rgb(210,141,35)" fg:x="8093279621" fg:w="2006018"/><text x="80.7548%" y="1695.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2,006,018 samples, 0.02%)</title><rect x="80.5048%" y="1669" width="0.0200%" height="15" fill="rgb(251,14,44)" fg:x="8093279621" fg:w="2006018"/><text x="80.7548%" y="1679.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2,006,018 samples, 0.02%)</title><rect x="80.5048%" y="1653" width="0.0200%" height="15" fill="rgb(247,48,18)" fg:x="8093279621" fg:w="2006018"/><text x="80.7548%" y="1663.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2,006,018 samples, 0.02%)</title><rect x="80.5048%" y="1637" width="0.0200%" height="15" fill="rgb(225,0,40)" fg:x="8093279621" fg:w="2006018"/><text x="80.7548%" y="1647.50"></text></g><g><title>__memcpy_evex_unaligned_erms (3,009,027 samples, 0.03%)</title><rect x="80.5248%" y="1685" width="0.0299%" height="15" fill="rgb(221,31,33)" fg:x="8095285639" fg:w="3009027"/><text x="80.7748%" y="1695.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::limit (2,006,018 samples, 0.02%)</title><rect x="80.5547%" y="1685" width="0.0200%" height="15" fill="rgb(237,42,40)" fg:x="8098294666" fg:w="2006018"/><text x="80.8047%" y="1695.50"></text></g><g><title>bytes::buf::limit::new (2,006,018 samples, 0.02%)</title><rect x="80.5547%" y="1669" width="0.0200%" height="15" fill="rgb(233,51,29)" fg:x="8098294666" fg:w="2006018"/><text x="80.8047%" y="1679.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (2,006,018 samples, 0.02%)</title><rect x="80.6146%" y="1637" width="0.0200%" height="15" fill="rgb(226,58,20)" fg:x="8104312720" fg:w="2006018"/><text x="80.8646%" y="1647.50"></text></g><g><title>tracing::span::Span::log (3,009,027 samples, 0.03%)</title><rect x="80.6345%" y="1637" width="0.0299%" height="15" fill="rgb(208,98,7)" fg:x="8106318738" fg:w="3009027"/><text x="80.8845%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (10,030,090 samples, 0.10%)</title><rect x="80.5847%" y="1685" width="0.0998%" height="15" fill="rgb(228,143,44)" fg:x="8101303693" fg:w="10030090"/><text x="80.8347%" y="1695.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (10,030,090 samples, 0.10%)</title><rect x="80.5847%" y="1669" width="0.0998%" height="15" fill="rgb(246,55,38)" fg:x="8101303693" fg:w="10030090"/><text x="80.8347%" y="1679.50"></text></g><g><title>tracing::span::Span::do_exit (10,030,090 samples, 0.10%)</title><rect x="80.5847%" y="1653" width="0.0998%" height="15" fill="rgb(247,87,16)" fg:x="8101303693" fg:w="10030090"/><text x="80.8347%" y="1663.50"></text></g><g><title>core::fmt::Arguments::new_v1 (2,006,018 samples, 0.02%)</title><rect x="80.7443%" y="1653" width="0.0200%" height="15" fill="rgb(234,129,42)" fg:x="8117351837" fg:w="2006018"/><text x="80.9943%" y="1663.50"></text></g><g><title>tracing::span::Span::log (2,006,018 samples, 0.02%)</title><rect x="80.7642%" y="1653" width="0.0200%" height="15" fill="rgb(220,82,16)" fg:x="8119357855" fg:w="2006018"/><text x="81.0142%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (11,033,099 samples, 0.11%)</title><rect x="80.6844%" y="1685" width="0.1097%" height="15" fill="rgb(211,88,4)" fg:x="8111333783" fg:w="11033099"/><text x="80.9344%" y="1695.50"></text></g><g><title>&lt;tracing::span::Span as core::ops::drop::Drop&gt;::drop (6,018,054 samples, 0.06%)</title><rect x="80.7343%" y="1669" width="0.0599%" height="15" fill="rgb(248,151,21)" fg:x="8116348828" fg:w="6018054"/><text x="80.9843%" y="1679.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put (8,024,072 samples, 0.08%)</title><rect x="80.8141%" y="1669" width="0.0798%" height="15" fill="rgb(238,163,6)" fg:x="8124372900" fg:w="8024072"/><text x="81.0641%" y="1679.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (6,018,054 samples, 0.06%)</title><rect x="80.8341%" y="1653" width="0.0599%" height="15" fill="rgb(209,183,11)" fg:x="8126378918" fg:w="6018054"/><text x="81.0841%" y="1663.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6,018,054 samples, 0.06%)</title><rect x="80.8341%" y="1637" width="0.0599%" height="15" fill="rgb(219,37,20)" fg:x="8126378918" fg:w="6018054"/><text x="81.0841%" y="1647.50"></text></g><g><title>__memcpy_evex_unaligned_erms (6,018,054 samples, 0.06%)</title><rect x="80.8341%" y="1621" width="0.0599%" height="15" fill="rgb(210,158,4)" fg:x="8126378918" fg:w="6018054"/><text x="81.0841%" y="1631.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_u32 (3,009,027 samples, 0.03%)</title><rect x="80.9039%" y="1653" width="0.0299%" height="15" fill="rgb(221,167,53)" fg:x="8133399981" fg:w="3009027"/><text x="81.1539%" y="1663.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (3,009,027 samples, 0.03%)</title><rect x="80.9039%" y="1637" width="0.0299%" height="15" fill="rgb(237,151,45)" fg:x="8133399981" fg:w="3009027"/><text x="81.1539%" y="1647.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_u8 (6,018,054 samples, 0.06%)</title><rect x="80.9339%" y="1653" width="0.0599%" height="15" fill="rgb(231,39,3)" fg:x="8136409008" fg:w="6018054"/><text x="81.1839%" y="1663.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (5,015,045 samples, 0.05%)</title><rect x="80.9438%" y="1637" width="0.0499%" height="15" fill="rgb(212,167,28)" fg:x="8137412017" fg:w="5015045"/><text x="81.1938%" y="1647.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (4,012,036 samples, 0.04%)</title><rect x="80.9538%" y="1621" width="0.0399%" height="15" fill="rgb(232,178,8)" fg:x="8138415026" fg:w="4012036"/><text x="81.2038%" y="1631.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4,012,036 samples, 0.04%)</title><rect x="80.9538%" y="1605" width="0.0399%" height="15" fill="rgb(225,151,20)" fg:x="8138415026" fg:w="4012036"/><text x="81.2038%" y="1615.50"></text></g><g><title>__memcpy_evex_unaligned_erms (4,012,036 samples, 0.04%)</title><rect x="80.9538%" y="1589" width="0.0399%" height="15" fill="rgb(238,3,37)" fg:x="8138415026" fg:w="4012036"/><text x="81.2038%" y="1599.50"></text></g><g><title>h2::frame::data::Data&lt;T&gt;::encode_chunk (27,081,243 samples, 0.27%)</title><rect x="80.8042%" y="1685" width="0.2694%" height="15" fill="rgb(251,147,42)" fg:x="8123369891" fg:w="27081243"/><text x="81.0542%" y="1695.50"></text></g><g><title>h2::frame::head::Head::encode (17,051,153 samples, 0.17%)</title><rect x="80.9039%" y="1669" width="0.1696%" height="15" fill="rgb(208,173,10)" fg:x="8133399981" fg:w="17051153"/><text x="81.1539%" y="1679.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_uint (8,024,072 samples, 0.08%)</title><rect x="80.9937%" y="1653" width="0.0798%" height="15" fill="rgb(246,225,4)" fg:x="8142427062" fg:w="8024072"/><text x="81.2437%" y="1663.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (7,021,063 samples, 0.07%)</title><rect x="81.0037%" y="1637" width="0.0698%" height="15" fill="rgb(248,102,6)" fg:x="8143430071" fg:w="7021063"/><text x="81.2537%" y="1647.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (6,018,054 samples, 0.06%)</title><rect x="81.0137%" y="1621" width="0.0599%" height="15" fill="rgb(232,6,21)" fg:x="8144433080" fg:w="6018054"/><text x="81.2637%" y="1631.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6,018,054 samples, 0.06%)</title><rect x="81.0137%" y="1605" width="0.0599%" height="15" fill="rgb(221,179,22)" fg:x="8144433080" fg:w="6018054"/><text x="81.2637%" y="1615.50"></text></g><g><title>__memcpy_evex_unaligned_erms (6,018,054 samples, 0.06%)</title><rect x="81.0137%" y="1589" width="0.0599%" height="15" fill="rgb(252,50,20)" fg:x="8144433080" fg:w="6018054"/><text x="81.2637%" y="1599.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_slice (3,009,027 samples, 0.03%)</title><rect x="81.1234%" y="1653" width="0.0299%" height="15" fill="rgb(222,56,38)" fg:x="8155466179" fg:w="3009027"/><text x="81.3734%" y="1663.50"></text></g><g><title>&lt;bytes::buf::limit::Limit&lt;T&gt; as bytes::buf::buf_mut::BufMut&gt;::chunk_mut (3,009,027 samples, 0.03%)</title><rect x="81.1234%" y="1637" width="0.0299%" height="15" fill="rgb(206,193,29)" fg:x="8155466179" fg:w="3009027"/><text x="81.3734%" y="1647.50"></text></g><g><title>core::cmp::min (2,006,018 samples, 0.02%)</title><rect x="81.1334%" y="1621" width="0.0200%" height="15" fill="rgb(239,192,45)" fg:x="8156469188" fg:w="2006018"/><text x="81.3834%" y="1631.50"></text></g><g><title>core::cmp::Ord::min (2,006,018 samples, 0.02%)</title><rect x="81.1334%" y="1605" width="0.0200%" height="15" fill="rgb(254,18,36)" fg:x="8156469188" fg:w="2006018"/><text x="81.3834%" y="1615.50"></text></g><g><title>core::cmp::min_by (2,006,018 samples, 0.02%)</title><rect x="81.1334%" y="1589" width="0.0200%" height="15" fill="rgb(221,127,11)" fg:x="8156469188" fg:w="2006018"/><text x="81.3834%" y="1599.50"></text></g><g><title>bytes::bytes_mut::BytesMut::len (2,006,018 samples, 0.02%)</title><rect x="81.1533%" y="1653" width="0.0200%" height="15" fill="rgb(234,146,35)" fg:x="8158475206" fg:w="2006018"/><text x="81.4033%" y="1663.50"></text></g><g><title>__free (4,012,036 samples, 0.04%)</title><rect x="81.1733%" y="1605" width="0.0399%" height="15" fill="rgb(254,201,37)" fg:x="8160481224" fg:w="4012036"/><text x="81.4233%" y="1615.50"></text></g><g><title>_int_free (3,009,027 samples, 0.03%)</title><rect x="81.1833%" y="1589" width="0.0299%" height="15" fill="rgb(211,202,23)" fg:x="8161484233" fg:w="3009027"/><text x="81.4333%" y="1599.50"></text></g><g><title>__free (4,012,036 samples, 0.04%)</title><rect x="81.2631%" y="1461" width="0.0399%" height="15" fill="rgb(237,91,2)" fg:x="8169508305" fg:w="4012036"/><text x="81.5131%" y="1471.50"></text></g><g><title>alloc::alloc::dealloc (6,018,054 samples, 0.06%)</title><rect x="81.2631%" y="1477" width="0.0599%" height="15" fill="rgb(226,228,36)" fg:x="8169508305" fg:w="6018054"/><text x="81.5131%" y="1487.50"></text></g><g><title>__rdl_dealloc (2,006,018 samples, 0.02%)</title><rect x="81.3030%" y="1461" width="0.0200%" height="15" fill="rgb(213,63,50)" fg:x="8173520341" fg:w="2006018"/><text x="81.5530%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;h2::frame::headers::EncodingHeaderBlock&gt; (17,051,153 samples, 0.17%)</title><rect x="81.1733%" y="1653" width="0.1696%" height="15" fill="rgb(235,194,19)" fg:x="8160481224" fg:w="17051153"/><text x="81.4233%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (17,051,153 samples, 0.17%)</title><rect x="81.1733%" y="1637" width="0.1696%" height="15" fill="rgb(207,204,18)" fg:x="8160481224" fg:w="17051153"/><text x="81.4233%" y="1647.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (17,051,153 samples, 0.17%)</title><rect x="81.1733%" y="1621" width="0.1696%" height="15" fill="rgb(248,8,7)" fg:x="8160481224" fg:w="17051153"/><text x="81.4233%" y="1631.50"></text></g><g><title>bytes::bytes::shared_drop (13,039,117 samples, 0.13%)</title><rect x="81.2132%" y="1605" width="0.1297%" height="15" fill="rgb(223,145,47)" fg:x="8164493260" fg:w="13039117"/><text x="81.4632%" y="1615.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (13,039,117 samples, 0.13%)</title><rect x="81.2132%" y="1589" width="0.1297%" height="15" fill="rgb(228,84,11)" fg:x="8164493260" fg:w="13039117"/><text x="81.4632%" y="1599.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (13,039,117 samples, 0.13%)</title><rect x="81.2132%" y="1573" width="0.1297%" height="15" fill="rgb(218,76,45)" fg:x="8164493260" fg:w="13039117"/><text x="81.4632%" y="1583.50"></text></g><g><title>bytes::bytes::release_shared (11,033,099 samples, 0.11%)</title><rect x="81.2332%" y="1557" width="0.1097%" height="15" fill="rgb(223,80,15)" fg:x="8166499278" fg:w="11033099"/><text x="81.4832%" y="1567.50"></text></g><g><title>core::mem::drop (10,030,090 samples, 0.10%)</title><rect x="81.2431%" y="1541" width="0.0998%" height="15" fill="rgb(219,218,33)" fg:x="8167502287" fg:w="10030090"/><text x="81.4931%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes::Shared&gt;&gt; (10,030,090 samples, 0.10%)</title><rect x="81.2431%" y="1525" width="0.0998%" height="15" fill="rgb(208,51,11)" fg:x="8167502287" fg:w="10030090"/><text x="81.4931%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Shared&gt; (8,024,072 samples, 0.08%)</title><rect x="81.2631%" y="1509" width="0.0798%" height="15" fill="rgb(229,165,39)" fg:x="8169508305" fg:w="8024072"/><text x="81.5131%" y="1519.50"></text></g><g><title>&lt;bytes::bytes::Shared as core::ops::drop::Drop&gt;::drop (8,024,072 samples, 0.08%)</title><rect x="81.2631%" y="1493" width="0.0798%" height="15" fill="rgb(241,100,24)" fg:x="8169508305" fg:w="8024072"/><text x="81.5131%" y="1503.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align (2,006,018 samples, 0.02%)</title><rect x="81.3230%" y="1477" width="0.0200%" height="15" fill="rgb(228,14,23)" fg:x="8175526359" fg:w="2006018"/><text x="81.5730%" y="1487.50"></text></g><g><title>core::alloc::layout::Layout::is_size_align_valid (2,006,018 samples, 0.02%)</title><rect x="81.3230%" y="1461" width="0.0200%" height="15" fill="rgb(247,116,52)" fg:x="8175526359" fg:w="2006018"/><text x="81.5730%" y="1471.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_u32 (4,012,036 samples, 0.04%)</title><rect x="81.3728%" y="1637" width="0.0399%" height="15" fill="rgb(216,149,33)" fg:x="8180541404" fg:w="4012036"/><text x="81.6228%" y="1647.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_slice (4,012,036 samples, 0.04%)</title><rect x="81.3728%" y="1621" width="0.0399%" height="15" fill="rgb(238,142,29)" fg:x="8180541404" fg:w="4012036"/><text x="81.6228%" y="1631.50"></text></g><g><title>&lt;bytes::buf::limit::Limit&lt;T&gt; as bytes::buf::buf_mut::BufMut&gt;::chunk_mut (3,009,027 samples, 0.03%)</title><rect x="81.4227%" y="1605" width="0.0299%" height="15" fill="rgb(224,83,40)" fg:x="8185556449" fg:w="3009027"/><text x="81.6727%" y="1615.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_mut::BufMut&gt;::chunk_mut (3,009,027 samples, 0.03%)</title><rect x="81.4227%" y="1589" width="0.0299%" height="15" fill="rgb(234,165,11)" fg:x="8185556449" fg:w="3009027"/><text x="81.6727%" y="1599.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::chunk_mut (3,009,027 samples, 0.03%)</title><rect x="81.4227%" y="1573" width="0.0299%" height="15" fill="rgb(215,96,23)" fg:x="8185556449" fg:w="3009027"/><text x="81.6727%" y="1583.50"></text></g><g><title>bytes::buf::uninit_slice::UninitSlice::copy_from_slice (6,018,054 samples, 0.06%)</title><rect x="81.4527%" y="1605" width="0.0599%" height="15" fill="rgb(233,179,26)" fg:x="8188565476" fg:w="6018054"/><text x="81.7027%" y="1615.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6,018,054 samples, 0.06%)</title><rect x="81.4527%" y="1589" width="0.0599%" height="15" fill="rgb(225,129,33)" fg:x="8188565476" fg:w="6018054"/><text x="81.7027%" y="1599.50"></text></g><g><title>__memcpy_evex_unaligned_erms (6,018,054 samples, 0.06%)</title><rect x="81.4527%" y="1573" width="0.0599%" height="15" fill="rgb(237,49,13)" fg:x="8188565476" fg:w="6018054"/><text x="81.7027%" y="1583.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_u8 (11,033,099 samples, 0.11%)</title><rect x="81.4128%" y="1637" width="0.1097%" height="15" fill="rgb(211,3,31)" fg:x="8184553440" fg:w="11033099"/><text x="81.6628%" y="1647.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_slice (11,033,099 samples, 0.11%)</title><rect x="81.4128%" y="1621" width="0.1097%" height="15" fill="rgb(216,152,19)" fg:x="8184553440" fg:w="11033099"/><text x="81.6628%" y="1631.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_slice (3,009,027 samples, 0.03%)</title><rect x="81.5225%" y="1621" width="0.0299%" height="15" fill="rgb(251,121,35)" fg:x="8195586539" fg:w="3009027"/><text x="81.7725%" y="1631.50"></text></g><g><title>bytes::buf::uninit_slice::UninitSlice::copy_from_slice (2,006,018 samples, 0.02%)</title><rect x="81.5325%" y="1605" width="0.0200%" height="15" fill="rgb(210,217,47)" fg:x="8196589548" fg:w="2006018"/><text x="81.7825%" y="1615.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,006,018 samples, 0.02%)</title><rect x="81.5325%" y="1589" width="0.0200%" height="15" fill="rgb(244,116,22)" fg:x="8196589548" fg:w="2006018"/><text x="81.7825%" y="1599.50"></text></g><g><title>__memcpy_evex_unaligned_erms (2,006,018 samples, 0.02%)</title><rect x="81.5325%" y="1573" width="0.0200%" height="15" fill="rgb(228,17,21)" fg:x="8196589548" fg:w="2006018"/><text x="81.7825%" y="1583.50"></text></g><g><title>h2::frame::headers::EncodingHeaderBlock::encode (47,141,423 samples, 0.47%)</title><rect x="81.0935%" y="1669" width="0.4689%" height="15" fill="rgb(240,149,34)" fg:x="8152457152" fg:w="47141423"/><text x="81.3435%" y="1679.50"></text></g><g><title>h2::frame::head::Head::encode (20,060,180 samples, 0.20%)</title><rect x="81.3629%" y="1653" width="0.1995%" height="15" fill="rgb(208,125,47)" fg:x="8179538395" fg:w="20060180"/><text x="81.6129%" y="1663.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_uint (4,012,036 samples, 0.04%)</title><rect x="81.5225%" y="1637" width="0.0399%" height="15" fill="rgb(249,186,39)" fg:x="8195586539" fg:w="4012036"/><text x="81.7725%" y="1647.50"></text></g><g><title>__free (29,087,261 samples, 0.29%)</title><rect x="81.6123%" y="1573" width="0.2893%" height="15" fill="rgb(240,220,33)" fg:x="8204613620" fg:w="29087261"/><text x="81.8623%" y="1583.50"></text></g><g><title>_int_free (15,045,135 samples, 0.15%)</title><rect x="81.7520%" y="1557" width="0.1497%" height="15" fill="rgb(243,110,23)" fg:x="8218655746" fg:w="15045135"/><text x="82.0020%" y="1567.50"></text></g><g><title>&lt;http::header::map::HeaderMap&lt;T&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (30,090,270 samples, 0.30%)</title><rect x="81.6123%" y="1653" width="0.2993%" height="15" fill="rgb(219,163,46)" fg:x="8204613620" fg:w="30090270"/><text x="81.8623%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[http::header::map::Pos]&gt;&gt; (30,090,270 samples, 0.30%)</title><rect x="81.6123%" y="1637" width="0.2993%" height="15" fill="rgb(216,126,30)" fg:x="8204613620" fg:w="30090270"/><text x="81.8623%" y="1647.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30,090,270 samples, 0.30%)</title><rect x="81.6123%" y="1621" width="0.2993%" height="15" fill="rgb(208,139,11)" fg:x="8204613620" fg:w="30090270"/><text x="81.8623%" y="1631.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (30,090,270 samples, 0.30%)</title><rect x="81.6123%" y="1605" width="0.2993%" height="15" fill="rgb(213,118,36)" fg:x="8204613620" fg:w="30090270"/><text x="81.8623%" y="1615.50"></text></g><g><title>alloc::alloc::dealloc (30,090,270 samples, 0.30%)</title><rect x="81.6123%" y="1589" width="0.2993%" height="15" fill="rgb(226,43,17)" fg:x="8204613620" fg:w="30090270"/><text x="81.8623%" y="1599.50"></text></g><g><title>__GI___libc_malloc (3,009,027 samples, 0.03%)</title><rect x="81.9216%" y="1525" width="0.0299%" height="15" fill="rgb(254,217,4)" fg:x="8235706899" fg:w="3009027"/><text x="82.1716%" y="1535.50"></text></g><g><title>__rdl_alloc (2,006,018 samples, 0.02%)</title><rect x="81.9515%" y="1525" width="0.0200%" height="15" fill="rgb(210,134,47)" fg:x="8238715926" fg:w="2006018"/><text x="82.2015%" y="1535.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (6,018,054 samples, 0.06%)</title><rect x="81.9216%" y="1637" width="0.0599%" height="15" fill="rgb(237,24,49)" fg:x="8235706899" fg:w="6018054"/><text x="82.1716%" y="1647.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (6,018,054 samples, 0.06%)</title><rect x="81.9216%" y="1621" width="0.0599%" height="15" fill="rgb(251,39,46)" fg:x="8235706899" fg:w="6018054"/><text x="82.1716%" y="1631.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (6,018,054 samples, 0.06%)</title><rect x="81.9216%" y="1605" width="0.0599%" height="15" fill="rgb(251,220,3)" fg:x="8235706899" fg:w="6018054"/><text x="82.1716%" y="1615.50"></text></g><g><title>alloc::alloc::exchange_malloc (6,018,054 samples, 0.06%)</title><rect x="81.9216%" y="1589" width="0.0599%" height="15" fill="rgb(228,105,12)" fg:x="8235706899" fg:w="6018054"/><text x="82.1716%" y="1599.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6,018,054 samples, 0.06%)</title><rect x="81.9216%" y="1573" width="0.0599%" height="15" fill="rgb(215,196,1)" fg:x="8235706899" fg:w="6018054"/><text x="82.1716%" y="1583.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6,018,054 samples, 0.06%)</title><rect x="81.9216%" y="1557" width="0.0599%" height="15" fill="rgb(214,33,39)" fg:x="8235706899" fg:w="6018054"/><text x="82.1716%" y="1567.50"></text></g><g><title>alloc::alloc::alloc (6,018,054 samples, 0.06%)</title><rect x="81.9216%" y="1541" width="0.0599%" height="15" fill="rgb(220,19,52)" fg:x="8235706899" fg:w="6018054"/><text x="82.1716%" y="1551.50"></text></g><g><title>bytes::bytes_mut::BytesMut::freeze (7,021,063 samples, 0.07%)</title><rect x="81.9216%" y="1653" width="0.0698%" height="15" fill="rgb(221,78,38)" fg:x="8235706899" fg:w="7021063"/><text x="82.1716%" y="1663.50"></text></g><g><title>h2::frame::headers::HeaderBlock::into_encoding (45,135,405 samples, 0.45%)</title><rect x="81.5624%" y="1669" width="0.4490%" height="15" fill="rgb(253,30,16)" fg:x="8199598575" fg:w="45135405"/><text x="81.8124%" y="1679.50"></text></g><g><title>h2::hpack::encoder::Encoder::encode (2,006,018 samples, 0.02%)</title><rect x="81.9914%" y="1653" width="0.0200%" height="15" fill="rgb(242,65,0)" fg:x="8242727962" fg:w="2006018"/><text x="82.2414%" y="1663.50"></text></g><g><title>h2::frame::headers::Headers::encode (95,285,855 samples, 0.95%)</title><rect x="81.0735%" y="1685" width="0.9478%" height="15" fill="rgb(235,201,12)" fg:x="8150451134" fg:w="95285855"/><text x="81.3235%" y="1695.50"></text></g><g><title>tracing::__macro_support::__disabled_span (3,009,027 samples, 0.03%)</title><rect x="82.0214%" y="1685" width="0.0299%" height="15" fill="rgb(233,161,9)" fg:x="8245736989" fg:w="3009027"/><text x="82.2714%" y="1695.50"></text></g><g><title>tracing::span::Span::new_disabled (3,009,027 samples, 0.03%)</title><rect x="82.0214%" y="1669" width="0.0299%" height="15" fill="rgb(241,207,41)" fg:x="8245736989" fg:w="3009027"/><text x="82.2714%" y="1679.50"></text></g><g><title>tracing::span::Span::log (3,009,027 samples, 0.03%)</title><rect x="82.0712%" y="1653" width="0.0299%" height="15" fill="rgb(212,69,46)" fg:x="8250752034" fg:w="3009027"/><text x="82.3212%" y="1663.50"></text></g><g><title>tracing::span::Span::enter (6,018,054 samples, 0.06%)</title><rect x="82.0513%" y="1685" width="0.0599%" height="15" fill="rgb(239,69,45)" fg:x="8248746016" fg:w="6018054"/><text x="82.3013%" y="1695.50"></text></g><g><title>tracing::span::Span::do_enter (6,018,054 samples, 0.06%)</title><rect x="82.0513%" y="1669" width="0.0599%" height="15" fill="rgb(242,117,48)" fg:x="8248746016" fg:w="6018054"/><text x="82.3013%" y="1679.50"></text></g><g><title>core::fmt::Arguments::new_v1 (2,006,018 samples, 0.02%)</title><rect x="82.1111%" y="1669" width="0.0200%" height="15" fill="rgb(228,41,36)" fg:x="8254764070" fg:w="2006018"/><text x="82.3611%" y="1679.50"></text></g><g><title>tracing::span::Span::log (2,006,018 samples, 0.02%)</title><rect x="82.1311%" y="1669" width="0.0200%" height="15" fill="rgb(212,3,32)" fg:x="8256770088" fg:w="2006018"/><text x="82.3811%" y="1679.50"></text></g><g><title>tracing::span::Span::record_all (5,015,045 samples, 0.05%)</title><rect x="82.1111%" y="1685" width="0.0499%" height="15" fill="rgb(233,41,49)" fg:x="8254764070" fg:w="5015045"/><text x="82.3611%" y="1695.50"></text></g><g><title>h2::codec::Codec&lt;T,B&gt;::buffer (187,562,683 samples, 1.87%)</title><rect x="80.3153%" y="1733" width="1.8657%" height="15" fill="rgb(252,170,49)" fg:x="8074222450" fg:w="187562683"/><text x="80.5653%" y="1743.50">h..</text></g><g><title>h2::codec::framed_write::FramedWrite&lt;T,B&gt;::buffer (187,562,683 samples, 1.87%)</title><rect x="80.3153%" y="1717" width="1.8657%" height="15" fill="rgb(229,53,26)" fg:x="8074222450" fg:w="187562683"/><text x="80.5653%" y="1727.50">h..</text></g><g><title>h2::codec::framed_write::Encoder&lt;B&gt;::buffer (187,562,683 samples, 1.87%)</title><rect x="80.3153%" y="1701" width="1.8657%" height="15" fill="rgb(217,157,12)" fg:x="8074222450" fg:w="187562683"/><text x="80.5653%" y="1711.50">h..</text></g><g><title>tracing_core::field::FieldSet::value_set (2,006,018 samples, 0.02%)</title><rect x="82.1610%" y="1685" width="0.0200%" height="15" fill="rgb(227,17,9)" fg:x="8259779115" fg:w="2006018"/><text x="82.4110%" y="1695.50"></text></g><g><title>core::fmt::Arguments::new_v1 (2,006,018 samples, 0.02%)</title><rect x="82.2708%" y="1653" width="0.0200%" height="15" fill="rgb(218,84,12)" fg:x="8270812214" fg:w="2006018"/><text x="82.5208%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (7,021,063 samples, 0.07%)</title><rect x="82.2508%" y="1701" width="0.0698%" height="15" fill="rgb(212,79,24)" fg:x="8268806196" fg:w="7021063"/><text x="82.5008%" y="1711.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (7,021,063 samples, 0.07%)</title><rect x="82.2508%" y="1685" width="0.0698%" height="15" fill="rgb(217,222,37)" fg:x="8268806196" fg:w="7021063"/><text x="82.5008%" y="1695.50"></text></g><g><title>tracing::span::Span::do_exit (7,021,063 samples, 0.07%)</title><rect x="82.2508%" y="1669" width="0.0698%" height="15" fill="rgb(246,208,8)" fg:x="8268806196" fg:w="7021063"/><text x="82.5008%" y="1679.50"></text></g><g><title>tracing::span::Span::log (3,009,027 samples, 0.03%)</title><rect x="82.2907%" y="1653" width="0.0299%" height="15" fill="rgb(244,133,10)" fg:x="8272818232" fg:w="3009027"/><text x="82.5407%" y="1663.50"></text></g><g><title>tracing::span::Span::log (3,009,027 samples, 0.03%)</title><rect x="82.3705%" y="1669" width="0.0299%" height="15" fill="rgb(209,219,41)" fg:x="8280842304" fg:w="3009027"/><text x="82.6205%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (10,030,090 samples, 0.10%)</title><rect x="82.3207%" y="1701" width="0.0998%" height="15" fill="rgb(253,175,45)" fg:x="8275827259" fg:w="10030090"/><text x="82.5707%" y="1711.50"></text></g><g><title>&lt;tracing::span::Span as core::ops::drop::Drop&gt;::drop (8,024,072 samples, 0.08%)</title><rect x="82.3406%" y="1685" width="0.0798%" height="15" fill="rgb(235,100,37)" fg:x="8277833277" fg:w="8024072"/><text x="82.5906%" y="1695.50"></text></g><g><title>__GI___pthread_disable_asynccancel (3,009,027 samples, 0.03%)</title><rect x="83.1986%" y="1413" width="0.0299%" height="15" fill="rgb(225,87,19)" fg:x="8364092051" fg:w="3009027"/><text x="83.4486%" y="1423.50"></text></g><g><title>__GI___writev (65,195,585 samples, 0.65%)</title><rect x="82.6499%" y="1429" width="0.6485%" height="15" fill="rgb(217,152,17)" fg:x="8308926556" fg:w="65195585"/><text x="82.8999%" y="1439.50"></text></g><g><title>__GI___pthread_enable_asynccancel (7,021,063 samples, 0.07%)</title><rect x="83.2286%" y="1413" width="0.0698%" height="15" fill="rgb(235,72,13)" fg:x="8367101078" fg:w="7021063"/><text x="83.4786%" y="1423.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored (72,216,648 samples, 0.72%)</title><rect x="82.6000%" y="1541" width="0.7183%" height="15" fill="rgb(233,140,18)" fg:x="8303911511" fg:w="72216648"/><text x="82.8500%" y="1551.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (72,216,648 samples, 0.72%)</title><rect x="82.6000%" y="1525" width="0.7183%" height="15" fill="rgb(207,212,28)" fg:x="8303911511" fg:w="72216648"/><text x="82.8500%" y="1535.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (72,216,648 samples, 0.72%)</title><rect x="82.6000%" y="1509" width="0.7183%" height="15" fill="rgb(220,130,25)" fg:x="8303911511" fg:w="72216648"/><text x="82.8500%" y="1519.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored::{{closure}} (72,216,648 samples, 0.72%)</title><rect x="82.6000%" y="1493" width="0.7183%" height="15" fill="rgb(205,55,34)" fg:x="8303911511" fg:w="72216648"/><text x="82.8500%" y="1503.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write_vectored (72,216,648 samples, 0.72%)</title><rect x="82.6000%" y="1477" width="0.7183%" height="15" fill="rgb(237,54,35)" fg:x="8303911511" fg:w="72216648"/><text x="82.8500%" y="1487.50"></text></g><g><title>std::sys::pal::unix::fs::File::write_vectored (67,201,603 samples, 0.67%)</title><rect x="82.6499%" y="1461" width="0.6685%" height="15" fill="rgb(208,67,23)" fg:x="8308926556" fg:w="67201603"/><text x="82.8999%" y="1471.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write_vectored (67,201,603 samples, 0.67%)</title><rect x="82.6499%" y="1445" width="0.6685%" height="15" fill="rgb(206,207,50)" fg:x="8308926556" fg:w="67201603"/><text x="82.8999%" y="1455.50"></text></g><g><title>std::sys::pal::unix::cvt (2,006,018 samples, 0.02%)</title><rect x="83.2984%" y="1429" width="0.0200%" height="15" fill="rgb(213,211,42)" fg:x="8374122141" fg:w="2006018"/><text x="83.5484%" y="1439.50"></text></g><g><title>&lt;isize as std::sys::pal::unix::IsMinusOne&gt;::is_minus_one (2,006,018 samples, 0.02%)</title><rect x="83.2984%" y="1413" width="0.0200%" height="15" fill="rgb(252,197,50)" fg:x="8374122141" fg:w="2006018"/><text x="83.5484%" y="1423.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_vectored::{{closure}} (74,222,666 samples, 0.74%)</title><rect x="82.5900%" y="1557" width="0.7383%" height="15" fill="rgb(251,211,41)" fg:x="8302908502" fg:w="74222666"/><text x="82.8400%" y="1567.50"></text></g><g><title>tokio_util::util::poll_buf::poll_write_buf (96,288,864 samples, 0.96%)</title><rect x="82.4304%" y="1701" width="0.9578%" height="15" fill="rgb(229,211,5)" fg:x="8286860358" fg:w="96288864"/><text x="82.6804%" y="1711.50"></text></g><g><title>&lt;hyper::common::io::compat::Compat&lt;T&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (84,252,756 samples, 0.84%)</title><rect x="82.5501%" y="1685" width="0.8381%" height="15" fill="rgb(239,36,31)" fg:x="8298896466" fg:w="84252756"/><text x="82.8001%" y="1695.50"></text></g><g><title>&lt;hyper_util::common::rewind::Rewind&lt;T&gt; as hyper::rt::io::Write&gt;::poll_write_vectored (84,252,756 samples, 0.84%)</title><rect x="82.5501%" y="1669" width="0.8381%" height="15" fill="rgb(248,67,31)" fg:x="8298896466" fg:w="84252756"/><text x="82.8001%" y="1679.50"></text></g><g><title>&lt;hyper_util::rt::tokio::TokioIo&lt;T&gt; as hyper::rt::io::Write&gt;::poll_write_vectored (84,252,756 samples, 0.84%)</title><rect x="82.5501%" y="1653" width="0.8381%" height="15" fill="rgb(249,55,44)" fg:x="8298896466" fg:w="84252756"/><text x="82.8001%" y="1663.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (84,252,756 samples, 0.84%)</title><rect x="82.5501%" y="1637" width="0.8381%" height="15" fill="rgb(216,82,12)" fg:x="8298896466" fg:w="84252756"/><text x="82.8001%" y="1647.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_vectored_priv (83,249,747 samples, 0.83%)</title><rect x="82.5601%" y="1621" width="0.8281%" height="15" fill="rgb(242,174,1)" fg:x="8299899475" fg:w="83249747"/><text x="82.8101%" y="1631.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_vectored (83,249,747 samples, 0.83%)</title><rect x="82.5601%" y="1605" width="0.8281%" height="15" fill="rgb(208,120,29)" fg:x="8299899475" fg:w="83249747"/><text x="82.8101%" y="1615.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_io (82,246,738 samples, 0.82%)</title><rect x="82.5701%" y="1589" width="0.8181%" height="15" fill="rgb(221,105,43)" fg:x="8300902484" fg:w="82246738"/><text x="82.8201%" y="1599.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_io (82,246,738 samples, 0.82%)</title><rect x="82.5701%" y="1573" width="0.8181%" height="15" fill="rgb(234,124,22)" fg:x="8300902484" fg:w="82246738"/><text x="82.8201%" y="1583.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (6,018,054 samples, 0.06%)</title><rect x="83.3283%" y="1557" width="0.0599%" height="15" fill="rgb(212,23,30)" fg:x="8377131168" fg:w="6018054"/><text x="83.5783%" y="1567.50"></text></g><g><title>tracing::span::Span::log (5,015,045 samples, 0.05%)</title><rect x="83.3982%" y="1669" width="0.0499%" height="15" fill="rgb(219,122,53)" fg:x="8384152231" fg:w="5015045"/><text x="83.6482%" y="1679.50"></text></g><g><title>log::max_level (2,006,018 samples, 0.02%)</title><rect x="83.4281%" y="1653" width="0.0200%" height="15" fill="rgb(248,84,24)" fg:x="8387161258" fg:w="2006018"/><text x="83.6781%" y="1663.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2,006,018 samples, 0.02%)</title><rect x="83.4281%" y="1637" width="0.0200%" height="15" fill="rgb(245,115,18)" fg:x="8387161258" fg:w="2006018"/><text x="83.6781%" y="1647.50"></text></g><g><title>core::sync::atomic::atomic_load (2,006,018 samples, 0.02%)</title><rect x="83.4281%" y="1621" width="0.0200%" height="15" fill="rgb(227,176,51)" fg:x="8387161258" fg:w="2006018"/><text x="83.6781%" y="1631.50"></text></g><g><title>tracing::span::Span::enter (7,021,063 samples, 0.07%)</title><rect x="83.3882%" y="1701" width="0.0698%" height="15" fill="rgb(229,63,42)" fg:x="8383149222" fg:w="7021063"/><text x="83.6382%" y="1711.50"></text></g><g><title>tracing::span::Span::do_enter (7,021,063 samples, 0.07%)</title><rect x="83.3882%" y="1685" width="0.0698%" height="15" fill="rgb(247,202,24)" fg:x="8383149222" fg:w="7021063"/><text x="83.6382%" y="1695.50"></text></g><g><title>h2::codec::Codec&lt;T,B&gt;::flush (132,397,188 samples, 1.32%)</title><rect x="82.1810%" y="1733" width="1.3170%" height="15" fill="rgb(244,173,20)" fg:x="8261785133" fg:w="132397188"/><text x="82.4310%" y="1743.50"></text></g><g><title>h2::codec::framed_write::FramedWrite&lt;T,B&gt;::flush (132,397,188 samples, 1.32%)</title><rect x="82.1810%" y="1717" width="1.3170%" height="15" fill="rgb(242,81,47)" fg:x="8261785133" fg:w="132397188"/><text x="82.4310%" y="1727.50"></text></g><g><title>tracing::span::Span::record_all (4,012,036 samples, 0.04%)</title><rect x="83.4580%" y="1701" width="0.0399%" height="15" fill="rgb(231,185,54)" fg:x="8390170285" fg:w="4012036"/><text x="83.7080%" y="1711.50"></text></g><g><title>__memcpy_evex_unaligned_erms (20,060,180 samples, 0.20%)</title><rect x="83.5279%" y="1701" width="0.1995%" height="15" fill="rgb(243,55,32)" fg:x="8397191348" fg:w="20060180"/><text x="83.7779%" y="1711.50"></text></g><g><title>__memcpy_evex_unaligned_erms (4,012,036 samples, 0.04%)</title><rect x="83.7374%" y="1669" width="0.0399%" height="15" fill="rgb(208,167,19)" fg:x="8418254537" fg:w="4012036"/><text x="83.9874%" y="1679.50"></text></g><g><title>core::mem::replace (20,060,180 samples, 0.20%)</title><rect x="83.7773%" y="1669" width="0.1995%" height="15" fill="rgb(231,72,35)" fg:x="8422266573" fg:w="20060180"/><text x="84.0273%" y="1679.50"></text></g><g><title>core::ptr::read (20,060,180 samples, 0.20%)</title><rect x="83.7773%" y="1653" width="0.1995%" height="15" fill="rgb(250,173,51)" fg:x="8422266573" fg:w="20060180"/><text x="84.0273%" y="1663.50"></text></g><g><title>__memcpy_evex_unaligned_erms (11,033,099 samples, 0.11%)</title><rect x="83.8671%" y="1637" width="0.1097%" height="15" fill="rgb(209,5,22)" fg:x="8431293654" fg:w="11033099"/><text x="84.1171%" y="1647.50"></text></g><g><title>h2::proto::streams::buffer::Deque::pop_front (49,147,441 samples, 0.49%)</title><rect x="83.4980%" y="1717" width="0.4889%" height="15" fill="rgb(250,174,19)" fg:x="8394182321" fg:w="49147441"/><text x="83.7480%" y="1727.50"></text></g><g><title>slab::Slab&lt;T&gt;::remove (26,078,234 samples, 0.26%)</title><rect x="83.7274%" y="1701" width="0.2594%" height="15" fill="rgb(217,3,49)" fg:x="8417251528" fg:w="26078234"/><text x="83.9774%" y="1711.50"></text></g><g><title>slab::Slab&lt;T&gt;::try_remove (26,078,234 samples, 0.26%)</title><rect x="83.7274%" y="1685" width="0.2594%" height="15" fill="rgb(218,225,5)" fg:x="8417251528" fg:w="26078234"/><text x="83.9774%" y="1695.50"></text></g><g><title>__free (25,075,225 samples, 0.25%)</title><rect x="84.0168%" y="1621" width="0.2494%" height="15" fill="rgb(236,89,11)" fg:x="8446338789" fg:w="25075225"/><text x="84.2668%" y="1631.50"></text></g><g><title>_int_free (22,066,198 samples, 0.22%)</title><rect x="84.0467%" y="1605" width="0.2195%" height="15" fill="rgb(206,33,28)" fg:x="8449347816" fg:w="22066198"/><text x="84.2967%" y="1615.50"></text></g><g><title>unlink_chunk.constprop.0 (3,009,027 samples, 0.03%)</title><rect x="84.2363%" y="1589" width="0.0299%" height="15" fill="rgb(241,56,42)" fg:x="8468404987" fg:w="3009027"/><text x="84.4863%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt; (6,018,054 samples, 0.06%)</title><rect x="84.3360%" y="1541" width="0.0599%" height="15" fill="rgb(222,44,11)" fg:x="8478435077" fg:w="6018054"/><text x="84.5860%" y="1551.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,018,054 samples, 0.06%)</title><rect x="84.3360%" y="1525" width="0.0599%" height="15" fill="rgb(234,111,20)" fg:x="8478435077" fg:w="6018054"/><text x="84.5860%" y="1535.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::dealloc (13,039,117 samples, 0.13%)</title><rect x="84.2861%" y="1621" width="0.1297%" height="15" fill="rgb(237,77,6)" fg:x="8473420032" fg:w="13039117"/><text x="84.5361%" y="1631.50"></text></g><g><title>core::mem::drop (8,024,072 samples, 0.08%)</title><rect x="84.3360%" y="1605" width="0.0798%" height="15" fill="rgb(235,111,23)" fg:x="8478435077" fg:w="8024072"/><text x="84.5860%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tokio::runtime::task::core::Cell&lt;hyper::proto::h2::server::H2Stream&lt;hyper_util::service::glue::TowerToHyperServiceFuture&lt;tower::util::map_request::MapRequest&lt;axum::routing::Router,&lt;axum::serve::WithGracefulShutdown&lt;tokio::net::tcp::listener::TcpListener,axum::routing::Router,axum::routing::Router,interview::shutdown_signal::{{closure}}&gt; as core::future::into_future::IntoFuture&gt;::into_future::{{closure}}::{{closure}}&gt;,http::request::Request&lt;hyper::body::incoming::Incoming&gt;&gt;,axum_core::body::Body&gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;&gt;&gt; (8,024,072 samples, 0.08%)</title><rect x="84.3360%" y="1589" width="0.0798%" height="15" fill="rgb(251,135,29)" fg:x="8478435077" fg:w="8024072"/><text x="84.5860%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Cell&lt;hyper::proto::h2::server::H2Stream&lt;hyper_util::service::glue::TowerToHyperServiceFuture&lt;tower::util::map_request::MapRequest&lt;axum::routing::Router,&lt;axum::serve::WithGracefulShutdown&lt;tokio::net::tcp::listener::TcpListener,axum::routing::Router,axum::routing::Router,interview::shutdown_signal::{{closure}}&gt; as core::future::into_future::IntoFuture&gt;::into_future::{{closure}}::{{closure}}&gt;,http::request::Request&lt;hyper::body::incoming::Incoming&gt;&gt;,axum_core::body::Body&gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;&gt; (8,024,072 samples, 0.08%)</title><rect x="84.3360%" y="1573" width="0.0798%" height="15" fill="rgb(217,57,1)" fg:x="8478435077" fg:w="8024072"/><text x="84.5860%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Core&lt;hyper::proto::h2::server::H2Stream&lt;hyper_util::service::glue::TowerToHyperServiceFuture&lt;tower::util::map_request::MapRequest&lt;axum::routing::Router,&lt;axum::serve::WithGracefulShutdown&lt;tokio::net::tcp::listener::TcpListener,axum::routing::Router,axum::routing::Router,interview::shutdown_signal::{{closure}}&gt; as core::future::into_future::IntoFuture&gt;::into_future::{{closure}}::{{closure}}&gt;,http::request::Request&lt;hyper::body::incoming::Incoming&gt;&gt;,axum_core::body::Body&gt;,alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;&gt; (8,024,072 samples, 0.08%)</title><rect x="84.3360%" y="1557" width="0.0798%" height="15" fill="rgb(249,119,31)" fg:x="8478435077" fg:w="8024072"/><text x="84.5860%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::CoreStage&lt;hyper::proto::h2::server::H2Stream&lt;hyper_util::service::glue::TowerToHyperServiceFuture&lt;tower::util::map_request::MapRequest&lt;axum::routing::Router,&lt;axum::serve::WithGracefulShutdown&lt;tokio::net::tcp::listener::TcpListener,axum::routing::Router,axum::routing::Router,interview::shutdown_signal::{{closure}}&gt; as core::future::into_future::IntoFuture&gt;::into_future::{{closure}}::{{closure}}&gt;,http::request::Request&lt;hyper::body::incoming::Incoming&gt;&gt;,axum_core::body::Body&gt;&gt;&gt; (2,006,018 samples, 0.02%)</title><rect x="84.3959%" y="1541" width="0.0200%" height="15" fill="rgb(233,164,33)" fg:x="8484453131" fg:w="2006018"/><text x="84.6459%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::unsafe_cell::UnsafeCell&lt;tokio::runtime::task::core::Stage&lt;hyper::proto::h2::server::H2Stream&lt;hyper_util::service::glue::TowerToHyperServiceFuture&lt;tower::util::map_request::MapRequest&lt;axum::routing::Router,&lt;axum::serve::WithGracefulShutdown&lt;tokio::net::tcp::listener::TcpListener,axum::routing::Router,axum::routing::Router,interview::shutdown_signal::{{closure}}&gt; as core::future::into_future::IntoFuture&gt;::into_future::{{closure}}::{{closure}}&gt;,http::request::Request&lt;hyper::body::incoming::Incoming&gt;&gt;,axum_core::body::Body&gt;&gt;&gt;&gt; (2,006,018 samples, 0.02%)</title><rect x="84.3959%" y="1525" width="0.0200%" height="15" fill="rgb(250,217,43)" fg:x="8484453131" fg:w="2006018"/><text x="84.6459%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;tokio::runtime::task::core::Stage&lt;hyper::proto::h2::server::H2Stream&lt;hyper_util::service::glue::TowerToHyperServiceFuture&lt;tower::util::map_request::MapRequest&lt;axum::routing::Router,&lt;axum::serve::WithGracefulShutdown&lt;tokio::net::tcp::listener::TcpListener,axum::routing::Router,axum::routing::Router,interview::shutdown_signal::{{closure}}&gt; as core::future::into_future::IntoFuture&gt;::into_future::{{closure}}::{{closure}}&gt;,http::request::Request&lt;hyper::body::incoming::Incoming&gt;&gt;,axum_core::body::Body&gt;&gt;&gt;&gt; (2,006,018 samples, 0.02%)</title><rect x="84.3959%" y="1509" width="0.0200%" height="15" fill="rgb(232,154,50)" fg:x="8484453131" fg:w="2006018"/><text x="84.6459%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Stage&lt;hyper::proto::h2::server::H2Stream&lt;hyper_util::service::glue::TowerToHyperServiceFuture&lt;tower::util::map_request::MapRequest&lt;axum::routing::Router,&lt;axum::serve::WithGracefulShutdown&lt;tokio::net::tcp::listener::TcpListener,axum::routing::Router,axum::routing::Router,interview::shutdown_signal::{{closure}}&gt; as core::future::into_future::IntoFuture&gt;::into_future::{{closure}}::{{closure}}&gt;,http::request::Request&lt;hyper::body::incoming::Incoming&gt;&gt;,axum_core::body::Body&gt;&gt;&gt; (2,006,018 samples, 0.02%)</title><rect x="84.3959%" y="1493" width="0.0200%" height="15" fill="rgb(227,190,8)" fg:x="8484453131" fg:w="2006018"/><text x="84.6459%" y="1503.50"></text></g><g><title>tokio::runtime::task::raw::dealloc (3,009,027 samples, 0.03%)</title><rect x="84.4158%" y="1621" width="0.0299%" height="15" fill="rgb(209,217,32)" fg:x="8486459149" fg:w="3009027"/><text x="84.6658%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;h2::proto::streams::stream::Stream&gt; (50,150,450 samples, 0.50%)</title><rect x="83.9868%" y="1685" width="0.4989%" height="15" fill="rgb(243,203,50)" fg:x="8443329762" fg:w="50150450"/><text x="84.2368%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (49,147,441 samples, 0.49%)</title><rect x="83.9968%" y="1669" width="0.4889%" height="15" fill="rgb(232,152,27)" fg:x="8444332771" fg:w="49147441"/><text x="84.2468%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (47,141,423 samples, 0.47%)</title><rect x="84.0168%" y="1653" width="0.4689%" height="15" fill="rgb(240,34,29)" fg:x="8446338789" fg:w="47141423"/><text x="84.2668%" y="1663.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (47,141,423 samples, 0.47%)</title><rect x="84.0168%" y="1637" width="0.4689%" height="15" fill="rgb(215,185,52)" fg:x="8446338789" fg:w="47141423"/><text x="84.2668%" y="1647.50"></text></g><g><title>tokio::runtime::task::waker::drop_waker (4,012,036 samples, 0.04%)</title><rect x="84.4458%" y="1621" width="0.0399%" height="15" fill="rgb(240,89,49)" fg:x="8489468176" fg:w="4012036"/><text x="84.6958%" y="1631.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::drop_reference (4,012,036 samples, 0.04%)</title><rect x="84.4458%" y="1605" width="0.0399%" height="15" fill="rgb(225,12,52)" fg:x="8489468176" fg:w="4012036"/><text x="84.6958%" y="1615.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (4,012,036 samples, 0.04%)</title><rect x="84.4458%" y="1589" width="0.0399%" height="15" fill="rgb(239,128,45)" fg:x="8489468176" fg:w="4012036"/><text x="84.6958%" y="1599.50"></text></g><g><title>__memcpy_evex_unaligned_erms (2,006,018 samples, 0.02%)</title><rect x="84.4957%" y="1653" width="0.0200%" height="15" fill="rgb(211,78,47)" fg:x="8494483221" fg:w="2006018"/><text x="84.7457%" y="1663.50"></text></g><g><title>h2::proto::streams::counts::Counts::transition_after (62,186,558 samples, 0.62%)</title><rect x="83.9868%" y="1717" width="0.6186%" height="15" fill="rgb(232,31,21)" fg:x="8443329762" fg:w="62186558"/><text x="84.2368%" y="1727.50"></text></g><g><title>h2::proto::streams::store::Ptr::remove (62,186,558 samples, 0.62%)</title><rect x="83.9868%" y="1701" width="0.6186%" height="15" fill="rgb(222,168,14)" fg:x="8443329762" fg:w="62186558"/><text x="84.2368%" y="1711.50"></text></g><g><title>slab::Slab&lt;T&gt;::remove (12,036,108 samples, 0.12%)</title><rect x="84.4857%" y="1685" width="0.1197%" height="15" fill="rgb(209,128,24)" fg:x="8493480212" fg:w="12036108"/><text x="84.7357%" y="1695.50"></text></g><g><title>slab::Slab&lt;T&gt;::try_remove (12,036,108 samples, 0.12%)</title><rect x="84.4857%" y="1669" width="0.1197%" height="15" fill="rgb(249,35,13)" fg:x="8493480212" fg:w="12036108"/><text x="84.7357%" y="1679.50"></text></g><g><title>core::mem::replace (9,027,081 samples, 0.09%)</title><rect x="84.5156%" y="1653" width="0.0898%" height="15" fill="rgb(218,7,2)" fg:x="8496489239" fg:w="9027081"/><text x="84.7656%" y="1663.50"></text></g><g><title>core::ptr::read (9,027,081 samples, 0.09%)</title><rect x="84.5156%" y="1637" width="0.0898%" height="15" fill="rgb(238,107,27)" fg:x="8496489239" fg:w="9027081"/><text x="84.7656%" y="1647.50"></text></g><g><title>__memcpy_evex_unaligned_erms (7,021,063 samples, 0.07%)</title><rect x="84.5356%" y="1621" width="0.0698%" height="15" fill="rgb(217,88,38)" fg:x="8498495257" fg:w="7021063"/><text x="84.7856%" y="1631.50"></text></g><g><title>h2::proto::streams::prioritize::Prioritize::pop_frame (113,340,017 samples, 1.13%)</title><rect x="83.4980%" y="1733" width="1.1274%" height="15" fill="rgb(230,207,0)" fg:x="8394182321" fg:w="113340017"/><text x="83.7480%" y="1743.50"></text></g><g><title>tracing::span::Span::in_scope (2,006,018 samples, 0.02%)</title><rect x="84.6054%" y="1717" width="0.0200%" height="15" fill="rgb(249,64,54)" fg:x="8505516320" fg:w="2006018"/><text x="84.8554%" y="1727.50"></text></g><g><title>h2::proto::streams::prioritize::Prioritize::pop_frame::{{closure}} (2,006,018 samples, 0.02%)</title><rect x="84.6054%" y="1701" width="0.0200%" height="15" fill="rgb(231,7,11)" fg:x="8505516320" fg:w="2006018"/><text x="84.8554%" y="1711.50"></text></g><g><title>h2::proto::streams::stream::Stream::send_data (2,006,018 samples, 0.02%)</title><rect x="84.6054%" y="1685" width="0.0200%" height="15" fill="rgb(205,149,21)" fg:x="8505516320" fg:w="2006018"/><text x="84.8554%" y="1695.50"></text></g><g><title>h2::proto::streams::flow_control::FlowControl::send_data (2,006,018 samples, 0.02%)</title><rect x="84.6054%" y="1669" width="0.0200%" height="15" fill="rgb(215,126,34)" fg:x="8505516320" fg:w="2006018"/><text x="84.8554%" y="1679.50"></text></g><g><title>tracing::span::Span::log (3,009,027 samples, 0.03%)</title><rect x="84.7850%" y="1669" width="0.0299%" height="15" fill="rgb(241,132,45)" fg:x="8523570482" fg:w="3009027"/><text x="85.0350%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (8,024,072 samples, 0.08%)</title><rect x="84.7451%" y="1717" width="0.0798%" height="15" fill="rgb(252,69,32)" fg:x="8519558446" fg:w="8024072"/><text x="84.9951%" y="1727.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (8,024,072 samples, 0.08%)</title><rect x="84.7451%" y="1701" width="0.0798%" height="15" fill="rgb(232,204,19)" fg:x="8519558446" fg:w="8024072"/><text x="84.9951%" y="1711.50"></text></g><g><title>tracing::span::Span::do_exit (8,024,072 samples, 0.08%)</title><rect x="84.7451%" y="1685" width="0.0798%" height="15" fill="rgb(249,15,47)" fg:x="8519558446" fg:w="8024072"/><text x="84.9951%" y="1695.50"></text></g><g><title>core::fmt::Arguments::new_v1 (3,009,027 samples, 0.03%)</title><rect x="84.9047%" y="1685" width="0.0299%" height="15" fill="rgb(209,227,23)" fg:x="8535606590" fg:w="3009027"/><text x="85.1547%" y="1695.50"></text></g><g><title>tracing::span::Span::log (7,021,063 samples, 0.07%)</title><rect x="84.9347%" y="1685" width="0.0698%" height="15" fill="rgb(248,92,24)" fg:x="8538615617" fg:w="7021063"/><text x="85.1847%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (19,057,171 samples, 0.19%)</title><rect x="84.8249%" y="1717" width="0.1896%" height="15" fill="rgb(247,59,2)" fg:x="8527582518" fg:w="19057171"/><text x="85.0749%" y="1727.50"></text></g><g><title>&lt;tracing::span::Span as core::ops::drop::Drop&gt;::drop (16,048,144 samples, 0.16%)</title><rect x="84.8548%" y="1701" width="0.1596%" height="15" fill="rgb(221,30,5)" fg:x="8530591545" fg:w="16048144"/><text x="85.1048%" y="1711.50"></text></g><g><title>h2::codec::Codec&lt;T,B&gt;::take_last_data_frame (8,024,072 samples, 0.08%)</title><rect x="85.0145%" y="1717" width="0.0798%" height="15" fill="rgb(208,108,53)" fg:x="8546639689" fg:w="8024072"/><text x="85.2645%" y="1727.50"></text></g><g><title>h2::codec::framed_write::FramedWrite&lt;T,B&gt;::take_last_data_frame (8,024,072 samples, 0.08%)</title><rect x="85.0145%" y="1701" width="0.0798%" height="15" fill="rgb(211,183,26)" fg:x="8546639689" fg:w="8024072"/><text x="85.2645%" y="1711.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (8,024,072 samples, 0.08%)</title><rect x="85.0145%" y="1685" width="0.0798%" height="15" fill="rgb(232,132,4)" fg:x="8546639689" fg:w="8024072"/><text x="85.2645%" y="1695.50"></text></g><g><title>core::mem::replace (8,024,072 samples, 0.08%)</title><rect x="85.0145%" y="1669" width="0.0798%" height="15" fill="rgb(253,128,37)" fg:x="8546639689" fg:w="8024072"/><text x="85.2645%" y="1679.50"></text></g><g><title>core::ptr::read (8,024,072 samples, 0.08%)</title><rect x="85.0145%" y="1653" width="0.0798%" height="15" fill="rgb(221,58,24)" fg:x="8546639689" fg:w="8024072"/><text x="85.2645%" y="1663.50"></text></g><g><title>__free (10,030,090 samples, 0.10%)</title><rect x="85.1841%" y="1637" width="0.0998%" height="15" fill="rgb(230,54,45)" fg:x="8563690842" fg:w="10030090"/><text x="85.4341%" y="1647.50"></text></g><g><title>_int_free (8,024,072 samples, 0.08%)</title><rect x="85.2040%" y="1621" width="0.0798%" height="15" fill="rgb(254,21,18)" fg:x="8565696860" fg:w="8024072"/><text x="85.4540%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;h2::frame::data::Data&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt;&gt;&gt; (16,048,144 samples, 0.16%)</title><rect x="85.1442%" y="1701" width="0.1596%" height="15" fill="rgb(221,108,0)" fg:x="8559678806" fg:w="16048144"/><text x="85.3942%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt;&gt; (16,048,144 samples, 0.16%)</title><rect x="85.1442%" y="1685" width="0.1596%" height="15" fill="rgb(206,95,1)" fg:x="8559678806" fg:w="16048144"/><text x="85.3942%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (13,039,117 samples, 0.13%)</title><rect x="85.1741%" y="1669" width="0.1297%" height="15" fill="rgb(237,52,5)" fg:x="8562687833" fg:w="13039117"/><text x="85.4241%" y="1679.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (13,039,117 samples, 0.13%)</title><rect x="85.1741%" y="1653" width="0.1297%" height="15" fill="rgb(218,150,34)" fg:x="8562687833" fg:w="13039117"/><text x="85.4241%" y="1663.50"></text></g><g><title>h2::proto::streams::prioritize::Prioritize::reclaim_frame_inner (22,066,198 samples, 0.22%)</title><rect x="85.0943%" y="1717" width="0.2195%" height="15" fill="rgb(235,194,28)" fg:x="8554663761" fg:w="22066198"/><text x="85.3443%" y="1727.50"></text></g><g><title>core::fmt::Arguments::new_v1 (2,006,018 samples, 0.02%)</title><rect x="85.4036%" y="1685" width="0.0200%" height="15" fill="rgb(245,92,18)" fg:x="8585757040" fg:w="2006018"/><text x="85.6536%" y="1695.50"></text></g><g><title>tracing::span::Span::enter (16,048,144 samples, 0.16%)</title><rect x="85.3238%" y="1717" width="0.1596%" height="15" fill="rgb(253,203,53)" fg:x="8577732968" fg:w="16048144"/><text x="85.5738%" y="1727.50"></text></g><g><title>tracing::span::Span::do_enter (16,048,144 samples, 0.16%)</title><rect x="85.3238%" y="1701" width="0.1596%" height="15" fill="rgb(249,185,47)" fg:x="8577732968" fg:w="16048144"/><text x="85.5738%" y="1711.50"></text></g><g><title>tracing::span::Span::log (5,015,045 samples, 0.05%)</title><rect x="85.4335%" y="1685" width="0.0499%" height="15" fill="rgb(252,194,52)" fg:x="8588766067" fg:w="5015045"/><text x="85.6835%" y="1695.50"></text></g><g><title>core::fmt::Arguments::new_v1 (2,006,018 samples, 0.02%)</title><rect x="85.6131%" y="1701" width="0.0200%" height="15" fill="rgb(210,53,36)" fg:x="8606820229" fg:w="2006018"/><text x="85.8631%" y="1711.50"></text></g><g><title>tracing::span::Span::log (2,006,018 samples, 0.02%)</title><rect x="85.6330%" y="1701" width="0.0200%" height="15" fill="rgb(237,37,25)" fg:x="8608826247" fg:w="2006018"/><text x="85.8830%" y="1711.50"></text></g><g><title>tracing_core::metadata::Metadata::name (6,018,054 samples, 0.06%)</title><rect x="85.6530%" y="1701" width="0.0599%" height="15" fill="rgb(242,116,27)" fg:x="8610832265" fg:w="6018054"/><text x="85.9030%" y="1711.50"></text></g><g><title>tracing::span::Span::record_all (28,084,252 samples, 0.28%)</title><rect x="85.4834%" y="1717" width="0.2794%" height="15" fill="rgb(213,185,26)" fg:x="8593781112" fg:w="28084252"/><text x="85.7334%" y="1727.50"></text></g><g><title>tracing_core::span::Record::is_empty (5,015,045 samples, 0.05%)</title><rect x="85.7129%" y="1701" width="0.0499%" height="15" fill="rgb(225,204,8)" fg:x="8616850319" fg:w="5015045"/><text x="85.9629%" y="1711.50"></text></g><g><title>tracing_core::field::ValueSet::is_empty (3,009,027 samples, 0.03%)</title><rect x="85.7328%" y="1685" width="0.0299%" height="15" fill="rgb(254,111,37)" fg:x="8618856337" fg:w="3009027"/><text x="85.9828%" y="1695.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (1,192,577,701 samples, 11.86%)</title><rect x="73.9100%" y="2021" width="11.8627%" height="15" fill="rgb(242,35,9)" fg:x="7430290672" fg:w="1192577701"/><text x="74.1600%" y="2031.50">tokio::runtime::ta..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1,192,577,701 samples, 11.86%)</title><rect x="73.9100%" y="2005" width="11.8627%" height="15" fill="rgb(232,138,49)" fg:x="7430290672" fg:w="1192577701"/><text x="74.1600%" y="2015.50">tokio::loom::std::..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (1,192,577,701 samples, 11.86%)</title><rect x="73.9100%" y="1989" width="11.8627%" height="15" fill="rgb(247,56,4)" fg:x="7430290672" fg:w="1192577701"/><text x="74.1600%" y="1999.50">tokio::runtime::ta..</text></g><g><title>&lt;axum::serve::WithGracefulShutdown&lt;L,M,S,F&gt; as core::future::into_future::IntoFuture&gt;::into_future::{{closure}}::{{closure}} (1,192,577,701 samples, 11.86%)</title><rect x="73.9100%" y="1973" width="11.8627%" height="15" fill="rgb(226,179,17)" fg:x="7430290672" fg:w="1192577701"/><text x="74.1600%" y="1983.50">&lt;axum::serve::With..</text></g><g><title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1,192,577,701 samples, 11.86%)</title><rect x="73.9100%" y="1957" width="11.8627%" height="15" fill="rgb(216,163,45)" fg:x="7430290672" fg:w="1192577701"/><text x="74.1600%" y="1967.50">&lt;core::future::pol..</text></g><g><title>&lt;axum::serve::WithGracefulShutdown&lt;L,M,S,F&gt; as core::future::into_future::IntoFuture&gt;::into_future::{{closure}}::{{closure}}::{{closure}} (1,192,577,701 samples, 11.86%)</title><rect x="73.9100%" y="1941" width="11.8627%" height="15" fill="rgb(211,157,3)" fg:x="7430290672" fg:w="1192577701"/><text x="74.1600%" y="1951.50">&lt;axum::serve::With..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,192,577,701 samples, 11.86%)</title><rect x="73.9100%" y="1925" width="11.8627%" height="15" fill="rgb(234,44,20)" fg:x="7430290672" fg:w="1192577701"/><text x="74.1600%" y="1935.50">&lt;core::pin::Pin&lt;P&gt;..</text></g><g><title>&lt;hyper_util::server::conn::auto::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (1,192,577,701 samples, 11.86%)</title><rect x="73.9100%" y="1909" width="11.8627%" height="15" fill="rgb(254,138,23)" fg:x="7430290672" fg:w="1192577701"/><text x="74.1600%" y="1919.50">&lt;hyper_util::serve..</text></g><g><title>&lt;hyper::server::conn::http2::Connection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (1,192,577,701 samples, 11.86%)</title><rect x="73.9100%" y="1893" width="11.8627%" height="15" fill="rgb(206,119,39)" fg:x="7430290672" fg:w="1192577701"/><text x="74.1600%" y="1903.50">&lt;hyper::server::co..</text></g><g><title>&lt;hyper::proto::h2::server::Server&lt;T,S,B,E&gt; as core::future::future::Future&gt;::poll (1,192,577,701 samples, 11.86%)</title><rect x="73.9100%" y="1877" width="11.8627%" height="15" fill="rgb(231,105,52)" fg:x="7430290672" fg:w="1192577701"/><text x="74.1600%" y="1887.50">&lt;hyper::proto::h2:..</text></g><g><title>hyper::proto::h2::server::Serving&lt;T,B&gt;::poll_server (1,192,577,701 samples, 11.86%)</title><rect x="73.9100%" y="1861" width="11.8627%" height="15" fill="rgb(250,20,5)" fg:x="7430290672" fg:w="1192577701"/><text x="74.1600%" y="1871.50">hyper::proto::h2::..</text></g><g><title>h2::server::Connection&lt;T,B&gt;::poll_accept (1,192,577,701 samples, 11.86%)</title><rect x="73.9100%" y="1845" width="11.8627%" height="15" fill="rgb(215,198,30)" fg:x="7430290672" fg:w="1192577701"/><text x="74.1600%" y="1855.50">h2::server::Connec..</text></g><g><title>h2::server::Connection&lt;T,B&gt;::poll_closed (1,192,577,701 samples, 11.86%)</title><rect x="73.9100%" y="1829" width="11.8627%" height="15" fill="rgb(246,142,8)" fg:x="7430290672" fg:w="1192577701"/><text x="74.1600%" y="1839.50">h2::server::Connec..</text></g><g><title>h2::proto::connection::Connection&lt;T,P,B&gt;::poll (1,192,577,701 samples, 11.86%)</title><rect x="73.9100%" y="1813" width="11.8627%" height="15" fill="rgb(243,26,38)" fg:x="7430290672" fg:w="1192577701"/><text x="74.1600%" y="1823.50">h2::proto::connect..</text></g><g><title>h2::proto::streams::streams::Streams&lt;B,P&gt;::poll_complete (548,645,923 samples, 5.46%)</title><rect x="80.3153%" y="1797" width="5.4574%" height="15" fill="rgb(205,133,28)" fg:x="8074222450" fg:w="548645923"/><text x="80.5653%" y="1807.50">h2::pro..</text></g><g><title>h2::proto::streams::streams::Inner::poll_complete (548,645,923 samples, 5.46%)</title><rect x="80.3153%" y="1781" width="5.4574%" height="15" fill="rgb(212,34,0)" fg:x="8074222450" fg:w="548645923"/><text x="80.5653%" y="1791.50">h2::pro..</text></g><g><title>h2::proto::streams::send::Send::poll_complete (548,645,923 samples, 5.46%)</title><rect x="80.3153%" y="1765" width="5.4574%" height="15" fill="rgb(251,226,22)" fg:x="8074222450" fg:w="548645923"/><text x="80.5653%" y="1775.50">h2::pro..</text></g><g><title>h2::proto::streams::prioritize::Prioritize::poll_complete (548,645,923 samples, 5.46%)</title><rect x="80.3153%" y="1749" width="5.4574%" height="15" fill="rgb(252,119,9)" fg:x="8074222450" fg:w="548645923"/><text x="80.5653%" y="1759.50">h2::pro..</text></g><g><title>h2::proto::streams::prioritize::Prioritize::reclaim_frame (115,346,035 samples, 1.15%)</title><rect x="84.6254%" y="1733" width="1.1474%" height="15" fill="rgb(213,150,50)" fg:x="8507522338" fg:w="115346035"/><text x="84.8754%" y="1743.50"></text></g><g><title>__memcpy_evex_unaligned_erms (5,015,045 samples, 0.05%)</title><rect x="85.7927%" y="1461" width="0.0499%" height="15" fill="rgb(212,24,39)" fg:x="8624874391" fg:w="5015045"/><text x="86.0427%" y="1471.50"></text></g><g><title>__memcpy_evex_unaligned_erms (4,012,036 samples, 0.04%)</title><rect x="85.8426%" y="1445" width="0.0399%" height="15" fill="rgb(213,46,39)" fg:x="8629889436" fg:w="4012036"/><text x="86.0926%" y="1455.50"></text></g><g><title>__GI___lll_lock_wake_private (2,006,018 samples, 0.02%)</title><rect x="86.1419%" y="1301" width="0.0200%" height="15" fill="rgb(239,106,12)" fg:x="8659979706" fg:w="2006018"/><text x="86.3919%" y="1311.50"></text></g><g><title>_int_free (14,042,126 samples, 0.14%)</title><rect x="86.1918%" y="1285" width="0.1397%" height="15" fill="rgb(249,229,21)" fg:x="8664994751" fg:w="14042126"/><text x="86.4418%" y="1295.50"></text></g><g><title>unlink_chunk.constprop.0 (3,009,027 samples, 0.03%)</title><rect x="86.3015%" y="1269" width="0.0299%" height="15" fill="rgb(212,158,3)" fg:x="8676027850" fg:w="3009027"/><text x="86.5515%" y="1279.50"></text></g><g><title>__rdl_alloc (84,252,756 samples, 0.84%)</title><rect x="85.8924%" y="1381" width="0.8381%" height="15" fill="rgb(253,26,48)" fg:x="8634904481" fg:w="84252756"/><text x="86.1424%" y="1391.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (84,252,756 samples, 0.84%)</title><rect x="85.8924%" y="1365" width="0.8381%" height="15" fill="rgb(238,178,20)" fg:x="8634904481" fg:w="84252756"/><text x="86.1424%" y="1375.50"></text></g><g><title>std::sys::alloc::unix::aligned_malloc (84,252,756 samples, 0.84%)</title><rect x="85.8924%" y="1349" width="0.8381%" height="15" fill="rgb(208,86,15)" fg:x="8634904481" fg:w="84252756"/><text x="86.1424%" y="1359.50"></text></g><g><title>__posix_memalign (84,252,756 samples, 0.84%)</title><rect x="85.8924%" y="1333" width="0.8381%" height="15" fill="rgb(239,42,53)" fg:x="8634904481" fg:w="84252756"/><text x="86.1424%" y="1343.50"></text></g><g><title>_mid_memalign.constprop.0 (79,237,711 samples, 0.79%)</title><rect x="85.9423%" y="1317" width="0.7882%" height="15" fill="rgb(245,226,8)" fg:x="8639919526" fg:w="79237711"/><text x="86.1923%" y="1327.50"></text></g><g><title>_int_memalign (57,171,513 samples, 0.57%)</title><rect x="86.1618%" y="1301" width="0.5687%" height="15" fill="rgb(216,176,32)" fg:x="8661985724" fg:w="57171513"/><text x="86.4118%" y="1311.50"></text></g><g><title>_int_malloc (40,120,360 samples, 0.40%)</title><rect x="86.3314%" y="1285" width="0.3991%" height="15" fill="rgb(231,186,21)" fg:x="8679036877" fg:w="40120360"/><text x="86.5814%" y="1295.50"></text></g><g><title>unlink_chunk.constprop.0 (9,027,081 samples, 0.09%)</title><rect x="86.6407%" y="1269" width="0.0898%" height="15" fill="rgb(205,95,49)" fg:x="8710130156" fg:w="9027081"/><text x="86.8907%" y="1279.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (90,270,810 samples, 0.90%)</title><rect x="85.8426%" y="1461" width="0.8979%" height="15" fill="rgb(217,145,8)" fg:x="8629889436" fg:w="90270810"/><text x="86.0926%" y="1471.50"></text></g><g><title>alloc::alloc::exchange_malloc (86,258,774 samples, 0.86%)</title><rect x="85.8825%" y="1445" width="0.8580%" height="15" fill="rgb(239,144,48)" fg:x="8633901472" fg:w="86258774"/><text x="86.1325%" y="1455.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (86,258,774 samples, 0.86%)</title><rect x="85.8825%" y="1429" width="0.8580%" height="15" fill="rgb(214,189,23)" fg:x="8633901472" fg:w="86258774"/><text x="86.1325%" y="1439.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (86,258,774 samples, 0.86%)</title><rect x="85.8825%" y="1413" width="0.8580%" height="15" fill="rgb(229,157,17)" fg:x="8633901472" fg:w="86258774"/><text x="86.1325%" y="1423.50"></text></g><g><title>alloc::alloc::alloc (86,258,774 samples, 0.86%)</title><rect x="85.8825%" y="1397" width="0.8580%" height="15" fill="rgb(230,5,48)" fg:x="8633901472" fg:w="86258774"/><text x="86.1325%" y="1407.50"></text></g><g><title>&lt;E as hyper::rt::bounds::h2::Http2ServerConnExec&lt;F,B&gt;&gt;::execute_h2stream (98,294,882 samples, 0.98%)</title><rect x="85.7727%" y="1717" width="0.9778%" height="15" fill="rgb(224,156,48)" fg:x="8622868373" fg:w="98294882"/><text x="86.0227%" y="1727.50"></text></g><g><title>&lt;hyper_util::rt::tokio::TokioExecutor as hyper::rt::Executor&lt;Fut&gt;&gt;::execute (98,294,882 samples, 0.98%)</title><rect x="85.7727%" y="1701" width="0.9778%" height="15" fill="rgb(223,14,29)" fg:x="8622868373" fg:w="98294882"/><text x="86.0227%" y="1711.50"></text></g><g><title>tokio::task::spawn::spawn (98,294,882 samples, 0.98%)</title><rect x="85.7727%" y="1685" width="0.9778%" height="15" fill="rgb(229,96,36)" fg:x="8622868373" fg:w="98294882"/><text x="86.0227%" y="1695.50"></text></g><g><title>tokio::task::spawn::spawn_inner (98,294,882 samples, 0.98%)</title><rect x="85.7727%" y="1669" width="0.9778%" height="15" fill="rgb(231,102,53)" fg:x="8622868373" fg:w="98294882"/><text x="86.0227%" y="1679.50"></text></g><g><title>tokio::runtime::context::current::with_current (98,294,882 samples, 0.98%)</title><rect x="85.7727%" y="1653" width="0.9778%" height="15" fill="rgb(210,77,38)" fg:x="8622868373" fg:w="98294882"/><text x="86.0227%" y="1663.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (98,294,882 samples, 0.98%)</title><rect x="85.7727%" y="1637" width="0.9778%" height="15" fill="rgb(235,131,6)" fg:x="8622868373" fg:w="98294882"/><text x="86.0227%" y="1647.50"></text></g><g><title>tokio::runtime::context::current::with_current::{{closure}} (98,294,882 samples, 0.98%)</title><rect x="85.7727%" y="1621" width="0.9778%" height="15" fill="rgb(252,55,38)" fg:x="8622868373" fg:w="98294882"/><text x="86.0227%" y="1631.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (98,294,882 samples, 0.98%)</title><rect x="85.7727%" y="1605" width="0.9778%" height="15" fill="rgb(246,38,14)" fg:x="8622868373" fg:w="98294882"/><text x="86.0227%" y="1615.50"></text></g><g><title>tokio::task::spawn::spawn_inner::{{closure}} (98,294,882 samples, 0.98%)</title><rect x="85.7727%" y="1589" width="0.9778%" height="15" fill="rgb(242,27,5)" fg:x="8622868373" fg:w="98294882"/><text x="86.0227%" y="1599.50"></text></g><g><title>tokio::runtime::scheduler::Handle::spawn (98,294,882 samples, 0.98%)</title><rect x="85.7727%" y="1573" width="0.9778%" height="15" fill="rgb(228,65,35)" fg:x="8622868373" fg:w="98294882"/><text x="86.0227%" y="1583.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::spawn (98,294,882 samples, 0.98%)</title><rect x="85.7727%" y="1557" width="0.9778%" height="15" fill="rgb(245,93,11)" fg:x="8622868373" fg:w="98294882"/><text x="86.0227%" y="1567.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::handle::Handle::bind_new_task (98,294,882 samples, 0.98%)</title><rect x="85.7727%" y="1541" width="0.9778%" height="15" fill="rgb(213,1,31)" fg:x="8622868373" fg:w="98294882"/><text x="86.0227%" y="1551.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (98,294,882 samples, 0.98%)</title><rect x="85.7727%" y="1525" width="0.9778%" height="15" fill="rgb(237,205,14)" fg:x="8622868373" fg:w="98294882"/><text x="86.0227%" y="1535.50"></text></g><g><title>tokio::runtime::task::new_task (98,294,882 samples, 0.98%)</title><rect x="85.7727%" y="1509" width="0.9778%" height="15" fill="rgb(232,118,45)" fg:x="8622868373" fg:w="98294882"/><text x="86.0227%" y="1519.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (98,294,882 samples, 0.98%)</title><rect x="85.7727%" y="1493" width="0.9778%" height="15" fill="rgb(218,5,6)" fg:x="8622868373" fg:w="98294882"/><text x="86.0227%" y="1503.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (98,294,882 samples, 0.98%)</title><rect x="85.7727%" y="1477" width="0.9778%" height="15" fill="rgb(251,87,51)" fg:x="8622868373" fg:w="98294882"/><text x="86.0227%" y="1487.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2,006,018 samples, 0.02%)</title><rect x="86.9700%" y="1669" width="0.0200%" height="15" fill="rgb(207,225,20)" fg:x="8743229453" fg:w="2006018"/><text x="87.2200%" y="1679.50"></text></g><g><title>&lt;tracing::span::Span as core::clone::Clone&gt;::clone (4,012,036 samples, 0.04%)</title><rect x="86.9899%" y="1669" width="0.0399%" height="15" fill="rgb(222,78,54)" fg:x="8745235471" fg:w="4012036"/><text x="87.2399%" y="1679.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (4,012,036 samples, 0.04%)</title><rect x="86.9899%" y="1653" width="0.0399%" height="15" fill="rgb(232,85,16)" fg:x="8745235471" fg:w="4012036"/><text x="87.2399%" y="1663.50"></text></g><g><title>&lt;tracing_core::callsite::DefaultCallsite as tracing_core::callsite::Callsite&gt;::metadata (2,006,018 samples, 0.02%)</title><rect x="87.0298%" y="1669" width="0.0200%" height="15" fill="rgb(244,25,33)" fg:x="8749247507" fg:w="2006018"/><text x="87.2798%" y="1679.50"></text></g><g><title>tracing::span::Span::log (3,009,027 samples, 0.03%)</title><rect x="87.0797%" y="1621" width="0.0299%" height="15" fill="rgb(233,24,36)" fg:x="8754262552" fg:w="3009027"/><text x="87.3297%" y="1631.50"></text></g><g><title>log::max_level (2,006,018 samples, 0.02%)</title><rect x="87.0897%" y="1605" width="0.0200%" height="15" fill="rgb(253,49,54)" fg:x="8755265561" fg:w="2006018"/><text x="87.3397%" y="1615.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2,006,018 samples, 0.02%)</title><rect x="87.0897%" y="1589" width="0.0200%" height="15" fill="rgb(245,12,22)" fg:x="8755265561" fg:w="2006018"/><text x="87.3397%" y="1599.50"></text></g><g><title>core::sync::atomic::atomic_load (2,006,018 samples, 0.02%)</title><rect x="87.0897%" y="1573" width="0.0200%" height="15" fill="rgb(253,141,28)" fg:x="8755265561" fg:w="2006018"/><text x="87.3397%" y="1583.50"></text></g><g><title>tracing_core::dispatcher::has_been_set (5,015,045 samples, 0.05%)</title><rect x="87.1096%" y="1621" width="0.0499%" height="15" fill="rgb(225,207,27)" fg:x="8757271579" fg:w="5015045"/><text x="87.3596%" y="1631.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (5,015,045 samples, 0.05%)</title><rect x="87.1096%" y="1605" width="0.0499%" height="15" fill="rgb(220,84,2)" fg:x="8757271579" fg:w="5015045"/><text x="87.3596%" y="1615.50"></text></g><g><title>core::sync::atomic::atomic_load (5,015,045 samples, 0.05%)</title><rect x="87.1096%" y="1589" width="0.0499%" height="15" fill="rgb(224,37,37)" fg:x="8757271579" fg:w="5015045"/><text x="87.3596%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (12,036,108 samples, 0.12%)</title><rect x="87.0498%" y="1669" width="0.1197%" height="15" fill="rgb(220,143,18)" fg:x="8751253525" fg:w="12036108"/><text x="87.2998%" y="1679.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (12,036,108 samples, 0.12%)</title><rect x="87.0498%" y="1653" width="0.1197%" height="15" fill="rgb(210,88,33)" fg:x="8751253525" fg:w="12036108"/><text x="87.2998%" y="1663.50"></text></g><g><title>tracing::span::Span::do_exit (12,036,108 samples, 0.12%)</title><rect x="87.0498%" y="1637" width="0.1197%" height="15" fill="rgb(219,87,51)" fg:x="8751253525" fg:w="12036108"/><text x="87.2998%" y="1647.50"></text></g><g><title>tracing::span::Span::log (7,021,063 samples, 0.07%)</title><rect x="87.2094%" y="1637" width="0.0698%" height="15" fill="rgb(211,7,35)" fg:x="8767301669" fg:w="7021063"/><text x="87.4594%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (12,036,108 samples, 0.12%)</title><rect x="87.1695%" y="1669" width="0.1197%" height="15" fill="rgb(232,77,2)" fg:x="8763289633" fg:w="12036108"/><text x="87.4195%" y="1679.50"></text></g><g><title>&lt;tracing::span::Span as core::ops::drop::Drop&gt;::drop (10,030,090 samples, 0.10%)</title><rect x="87.1895%" y="1653" width="0.0998%" height="15" fill="rgb(249,94,25)" fg:x="8765295651" fg:w="10030090"/><text x="87.4395%" y="1663.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2,006,018 samples, 0.02%)</title><rect x="87.3790%" y="1653" width="0.0200%" height="15" fill="rgb(215,112,2)" fg:x="8784352822" fg:w="2006018"/><text x="87.6290%" y="1663.50"></text></g><g><title>&lt;core::task::poll::Poll&lt;core::option::Option&lt;core::result::Result&lt;T,E&gt;&gt;&gt; as core::ops::try_trait::Try&gt;::branch (4,012,036 samples, 0.04%)</title><rect x="87.3990%" y="1653" width="0.0399%" height="15" fill="rgb(226,115,48)" fg:x="8786358840" fg:w="4012036"/><text x="87.6490%" y="1663.50"></text></g><g><title>__memcpy_evex_unaligned_erms (2,006,018 samples, 0.02%)</title><rect x="87.4189%" y="1637" width="0.0200%" height="15" fill="rgb(249,196,10)" fg:x="8788364858" fg:w="2006018"/><text x="87.6689%" y="1647.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (4,012,036 samples, 0.04%)</title><rect x="87.6584%" y="1621" width="0.0399%" height="15" fill="rgb(237,109,14)" fg:x="8812437074" fg:w="4012036"/><text x="87.9084%" y="1631.50"></text></g><g><title>__memcpy_evex_unaligned_erms (2,006,018 samples, 0.02%)</title><rect x="87.6783%" y="1605" width="0.0200%" height="15" fill="rgb(217,103,53)" fg:x="8814443092" fg:w="2006018"/><text x="87.9283%" y="1615.50"></text></g><g><title>tokio_util::codec::length_delimited::LengthDelimitedCodec::decode_data (9,027,081 samples, 0.09%)</title><rect x="87.9178%" y="1573" width="0.0898%" height="15" fill="rgb(244,137,9)" fg:x="8838515308" fg:w="9027081"/><text x="88.1678%" y="1583.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (8,024,072 samples, 0.08%)</title><rect x="87.9278%" y="1557" width="0.0798%" height="15" fill="rgb(227,201,3)" fg:x="8839518317" fg:w="8024072"/><text x="88.1778%" y="1567.50"></text></g><g><title>bytes::bytes_mut::BytesMut::shallow_clone (4,012,036 samples, 0.04%)</title><rect x="87.9677%" y="1541" width="0.0399%" height="15" fill="rgb(243,94,6)" fg:x="8843530353" fg:w="4012036"/><text x="88.2177%" y="1551.50"></text></g><g><title>bytes::bytes_mut::increment_shared (4,012,036 samples, 0.04%)</title><rect x="87.9677%" y="1525" width="0.0399%" height="15" fill="rgb(235,118,5)" fg:x="8843530353" fg:w="4012036"/><text x="88.2177%" y="1535.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_impl::Buf&gt;::advance (2,006,018 samples, 0.02%)</title><rect x="88.0176%" y="1557" width="0.0200%" height="15" fill="rgb(247,10,30)" fg:x="8848545398" fg:w="2006018"/><text x="88.2676%" y="1567.50"></text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (2,006,018 samples, 0.02%)</title><rect x="88.0176%" y="1541" width="0.0200%" height="15" fill="rgb(205,26,28)" fg:x="8848545398" fg:w="2006018"/><text x="88.2676%" y="1551.50"></text></g><g><title>bytes::buf::buf_impl::Buf::try_copy_to_slice (5,015,045 samples, 0.05%)</title><rect x="88.0575%" y="1525" width="0.0499%" height="15" fill="rgb(206,99,35)" fg:x="8852557434" fg:w="5015045"/><text x="88.3075%" y="1535.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (4,012,036 samples, 0.04%)</title><rect x="88.0674%" y="1509" width="0.0399%" height="15" fill="rgb(238,130,40)" fg:x="8853560443" fg:w="4012036"/><text x="88.3174%" y="1519.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4,012,036 samples, 0.04%)</title><rect x="88.0674%" y="1493" width="0.0399%" height="15" fill="rgb(224,126,31)" fg:x="8853560443" fg:w="4012036"/><text x="88.3174%" y="1503.50"></text></g><g><title>__memcpy_evex_unaligned_erms (4,012,036 samples, 0.04%)</title><rect x="88.0674%" y="1477" width="0.0399%" height="15" fill="rgb(254,105,17)" fg:x="8853560443" fg:w="4012036"/><text x="88.3174%" y="1487.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_uint (8,024,072 samples, 0.08%)</title><rect x="88.0375%" y="1557" width="0.0798%" height="15" fill="rgb(216,87,36)" fg:x="8850551416" fg:w="8024072"/><text x="88.2875%" y="1567.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_uint::{{closure}} (8,024,072 samples, 0.08%)</title><rect x="88.0375%" y="1541" width="0.0798%" height="15" fill="rgb(240,21,12)" fg:x="8850551416" fg:w="8024072"/><text x="88.2875%" y="1551.50"></text></g><g><title>&lt;tokio_util::codec::length_delimited::LengthDelimitedCodec as tokio_util::codec::decoder::Decoder&gt;::decode (34,102,306 samples, 0.34%)</title><rect x="87.8080%" y="1589" width="0.3392%" height="15" fill="rgb(245,192,34)" fg:x="8827482209" fg:w="34102306"/><text x="88.0580%" y="1599.50"></text></g><g><title>tokio_util::codec::length_delimited::LengthDelimitedCodec::decode_head (14,042,126 samples, 0.14%)</title><rect x="88.0076%" y="1573" width="0.1397%" height="15" fill="rgb(226,100,49)" fg:x="8847542389" fg:w="14042126"/><text x="88.2576%" y="1583.50"></text></g><g><title>tokio_util::codec::length_delimited::Builder::num_head_bytes (2,006,018 samples, 0.02%)</title><rect x="88.1273%" y="1557" width="0.0200%" height="15" fill="rgb(245,188,27)" fg:x="8859578497" fg:w="2006018"/><text x="88.3773%" y="1567.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (3,009,027 samples, 0.03%)</title><rect x="88.1572%" y="1589" width="0.0299%" height="15" fill="rgb(212,170,8)" fg:x="8862587524" fg:w="3009027"/><text x="88.4072%" y="1599.50"></text></g><g><title>hyper::rt::io::ReadBufCursor::as_mut (8,024,072 samples, 0.08%)</title><rect x="88.3767%" y="1509" width="0.0798%" height="15" fill="rgb(217,113,29)" fg:x="8884653722" fg:w="8024072"/><text x="88.6267%" y="1519.50"></text></g><g><title>__GI___pthread_disable_asynccancel (3,009,027 samples, 0.03%)</title><rect x="88.9853%" y="1349" width="0.0299%" height="15" fill="rgb(237,30,3)" fg:x="8945837271" fg:w="3009027"/><text x="89.2353%" y="1359.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (45,135,405 samples, 0.45%)</title><rect x="88.5763%" y="1493" width="0.4490%" height="15" fill="rgb(227,19,28)" fg:x="8904713902" fg:w="45135405"/><text x="88.8263%" y="1503.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (44,132,396 samples, 0.44%)</title><rect x="88.5863%" y="1477" width="0.4390%" height="15" fill="rgb(239,172,45)" fg:x="8905716911" fg:w="44132396"/><text x="88.8363%" y="1487.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (44,132,396 samples, 0.44%)</title><rect x="88.5863%" y="1461" width="0.4390%" height="15" fill="rgb(254,55,39)" fg:x="8905716911" fg:w="44132396"/><text x="88.8363%" y="1471.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::{{closure}} (44,132,396 samples, 0.44%)</title><rect x="88.5863%" y="1445" width="0.4390%" height="15" fill="rgb(249,208,12)" fg:x="8905716911" fg:w="44132396"/><text x="88.8363%" y="1455.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (44,132,396 samples, 0.44%)</title><rect x="88.5863%" y="1429" width="0.4390%" height="15" fill="rgb(240,52,13)" fg:x="8905716911" fg:w="44132396"/><text x="88.8363%" y="1439.50"></text></g><g><title>std::sys_common::net::TcpStream::read (41,123,369 samples, 0.41%)</title><rect x="88.6162%" y="1413" width="0.4091%" height="15" fill="rgb(252,149,13)" fg:x="8908725938" fg:w="41123369"/><text x="88.8662%" y="1423.50"></text></g><g><title>std::sys::pal::unix::net::Socket::read (41,123,369 samples, 0.41%)</title><rect x="88.6162%" y="1397" width="0.4091%" height="15" fill="rgb(232,81,48)" fg:x="8908725938" fg:w="41123369"/><text x="88.8662%" y="1407.50"></text></g><g><title>std::sys::pal::unix::net::Socket::recv_with_flags (41,123,369 samples, 0.41%)</title><rect x="88.6162%" y="1381" width="0.4091%" height="15" fill="rgb(222,144,2)" fg:x="8908725938" fg:w="41123369"/><text x="88.8662%" y="1391.50"></text></g><g><title>__libc_recv (41,123,369 samples, 0.41%)</title><rect x="88.6162%" y="1365" width="0.4091%" height="15" fill="rgb(216,81,32)" fg:x="8908725938" fg:w="41123369"/><text x="88.8662%" y="1375.50"></text></g><g><title>tokio::runtime::io::registration::Registration::clear_readiness (3,009,027 samples, 0.03%)</title><rect x="89.0252%" y="1493" width="0.0299%" height="15" fill="rgb(244,78,51)" fg:x="8949849307" fg:w="3009027"/><text x="89.2752%" y="1503.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::clear_readiness (3,009,027 samples, 0.03%)</title><rect x="89.0252%" y="1477" width="0.0299%" height="15" fill="rgb(217,66,21)" fg:x="8949849307" fg:w="3009027"/><text x="89.2752%" y="1487.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::set_readiness (2,006,018 samples, 0.02%)</title><rect x="89.0352%" y="1461" width="0.0200%" height="15" fill="rgb(247,101,42)" fg:x="8950852316" fg:w="2006018"/><text x="89.2852%" y="1471.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_update (2,006,018 samples, 0.02%)</title><rect x="89.0352%" y="1445" width="0.0200%" height="15" fill="rgb(227,81,39)" fg:x="8950852316" fg:w="2006018"/><text x="89.2852%" y="1455.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (2,006,018 samples, 0.02%)</title><rect x="89.1549%" y="1445" width="0.0200%" height="15" fill="rgb(220,223,44)" fg:x="8962888424" fg:w="2006018"/><text x="89.4049%" y="1455.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (2,006,018 samples, 0.02%)</title><rect x="89.1549%" y="1429" width="0.0200%" height="15" fill="rgb(205,218,2)" fg:x="8962888424" fg:w="2006018"/><text x="89.4049%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (4,012,036 samples, 0.04%)</title><rect x="89.1849%" y="1445" width="0.0399%" height="15" fill="rgb(212,207,28)" fg:x="8965897451" fg:w="4012036"/><text x="89.4349%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (4,012,036 samples, 0.04%)</title><rect x="89.1849%" y="1429" width="0.0399%" height="15" fill="rgb(224,12,41)" fg:x="8965897451" fg:w="4012036"/><text x="89.4349%" y="1439.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (4,012,036 samples, 0.04%)</title><rect x="89.1849%" y="1413" width="0.0399%" height="15" fill="rgb(216,118,12)" fg:x="8965897451" fg:w="4012036"/><text x="89.4349%" y="1423.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (4,012,036 samples, 0.04%)</title><rect x="89.1849%" y="1397" width="0.0399%" height="15" fill="rgb(252,97,46)" fg:x="8965897451" fg:w="4012036"/><text x="89.4349%" y="1407.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (10,030,090 samples, 0.10%)</title><rect x="89.2248%" y="1445" width="0.0998%" height="15" fill="rgb(244,206,19)" fg:x="8969909487" fg:w="10030090"/><text x="89.4748%" y="1455.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (10,030,090 samples, 0.10%)</title><rect x="89.2248%" y="1429" width="0.0998%" height="15" fill="rgb(231,84,31)" fg:x="8969909487" fg:w="10030090"/><text x="89.4748%" y="1439.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (10,030,090 samples, 0.10%)</title><rect x="89.2248%" y="1413" width="0.0998%" height="15" fill="rgb(244,133,0)" fg:x="8969909487" fg:w="10030090"/><text x="89.4748%" y="1423.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (30,090,270 samples, 0.30%)</title><rect x="89.0851%" y="1461" width="0.2993%" height="15" fill="rgb(223,15,50)" fg:x="8955867361" fg:w="30090270"/><text x="89.3351%" y="1471.50"></text></g><g><title>tokio::runtime::io::driver::Direction::mask (6,018,054 samples, 0.06%)</title><rect x="89.3246%" y="1445" width="0.0599%" height="15" fill="rgb(250,118,49)" fg:x="8979939577" fg:w="6018054"/><text x="89.5746%" y="1455.50"></text></g><g><title>&lt;hyper_util::rt::tokio::TokioIo&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (109,327,981 samples, 1.09%)</title><rect x="88.3468%" y="1525" width="1.0875%" height="15" fill="rgb(248,25,38)" fg:x="8881644695" fg:w="109327981"/><text x="88.5968%" y="1535.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (98,294,882 samples, 0.98%)</title><rect x="88.4565%" y="1509" width="0.9778%" height="15" fill="rgb(215,70,14)" fg:x="8892677794" fg:w="98294882"/><text x="88.7065%" y="1519.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_read_ready (38,114,342 samples, 0.38%)</title><rect x="89.0552%" y="1493" width="0.3791%" height="15" fill="rgb(215,28,15)" fg:x="8952858334" fg:w="38114342"/><text x="89.3052%" y="1503.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (37,111,333 samples, 0.37%)</title><rect x="89.0652%" y="1477" width="0.3692%" height="15" fill="rgb(243,6,28)" fg:x="8953861343" fg:w="37111333"/><text x="89.3152%" y="1487.50"></text></g><g><title>tokio::task::coop::poll_proceed (5,015,045 samples, 0.05%)</title><rect x="89.3844%" y="1461" width="0.0499%" height="15" fill="rgb(222,130,1)" fg:x="8985957631" fg:w="5015045"/><text x="89.6344%" y="1471.50"></text></g><g><title>tokio::runtime::context::budget (5,015,045 samples, 0.05%)</title><rect x="89.3844%" y="1445" width="0.0499%" height="15" fill="rgb(236,166,44)" fg:x="8985957631" fg:w="5015045"/><text x="89.6344%" y="1455.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5,015,045 samples, 0.05%)</title><rect x="89.3844%" y="1429" width="0.0499%" height="15" fill="rgb(221,108,14)" fg:x="8985957631" fg:w="5015045"/><text x="89.6344%" y="1439.50"></text></g><g><title>tokio::runtime::context::budget::{{closure}} (3,009,027 samples, 0.03%)</title><rect x="89.4044%" y="1413" width="0.0299%" height="15" fill="rgb(252,3,45)" fg:x="8987963649" fg:w="3009027"/><text x="89.6544%" y="1423.50"></text></g><g><title>tokio::task::coop::poll_proceed::{{closure}} (3,009,027 samples, 0.03%)</title><rect x="89.4044%" y="1397" width="0.0299%" height="15" fill="rgb(237,68,30)" fg:x="8987963649" fg:w="3009027"/><text x="89.6544%" y="1407.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2,006,018 samples, 0.02%)</title><rect x="89.4143%" y="1381" width="0.0200%" height="15" fill="rgb(211,79,22)" fg:x="8988966658" fg:w="2006018"/><text x="89.6643%" y="1391.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2,006,018 samples, 0.02%)</title><rect x="89.4143%" y="1365" width="0.0200%" height="15" fill="rgb(252,185,21)" fg:x="8988966658" fg:w="2006018"/><text x="89.6643%" y="1375.50"></text></g><g><title>core::mem::replace (2,006,018 samples, 0.02%)</title><rect x="89.4143%" y="1349" width="0.0200%" height="15" fill="rgb(225,189,26)" fg:x="8988966658" fg:w="2006018"/><text x="89.6643%" y="1359.50"></text></g><g><title>core::ptr::write (2,006,018 samples, 0.02%)</title><rect x="89.4143%" y="1333" width="0.0200%" height="15" fill="rgb(241,30,40)" fg:x="8988966658" fg:w="2006018"/><text x="89.6643%" y="1343.50"></text></g><g><title>&lt;hyper_util::common::rewind::Rewind&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (122,367,098 samples, 1.22%)</title><rect x="88.2470%" y="1541" width="1.2172%" height="15" fill="rgb(235,215,44)" fg:x="8871614605" fg:w="122367098"/><text x="88.4970%" y="1551.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (3,009,027 samples, 0.03%)</title><rect x="89.4343%" y="1525" width="0.0299%" height="15" fill="rgb(205,8,29)" fg:x="8990972676" fg:w="3009027"/><text x="89.6843%" y="1535.50"></text></g><g><title>core::mem::replace (3,009,027 samples, 0.03%)</title><rect x="89.4343%" y="1509" width="0.0299%" height="15" fill="rgb(241,137,42)" fg:x="8990972676" fg:w="3009027"/><text x="89.6843%" y="1519.50"></text></g><g><title>core::ptr::write (3,009,027 samples, 0.03%)</title><rect x="89.4343%" y="1493" width="0.0299%" height="15" fill="rgb(237,155,2)" fg:x="8990972676" fg:w="3009027"/><text x="89.6843%" y="1503.50"></text></g><g><title>&lt;h2::codec::framed_write::FramedWrite&lt;T,B&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (128,385,152 samples, 1.28%)</title><rect x="88.2071%" y="1573" width="1.2771%" height="15" fill="rgb(245,29,42)" fg:x="8867602569" fg:w="128385152"/><text x="88.4571%" y="1583.50"></text></g><g><title>&lt;hyper::common::io::compat::Compat&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (128,385,152 samples, 1.28%)</title><rect x="88.2071%" y="1557" width="1.2771%" height="15" fill="rgb(234,101,35)" fg:x="8867602569" fg:w="128385152"/><text x="88.4571%" y="1567.50"></text></g><g><title>&lt;tokio_util::codec::framed_read::FramedRead&lt;T,D&gt; as futures_core::stream::Stream&gt;::poll_next (181,544,629 samples, 1.81%)</title><rect x="87.6983%" y="1621" width="1.8058%" height="15" fill="rgb(228,64,37)" fg:x="8816449110" fg:w="181544629"/><text x="87.9483%" y="1631.50">&lt;..</text></g><g><title>&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,R&gt; as futures_core::stream::Stream&gt;::poll_next (181,544,629 samples, 1.81%)</title><rect x="87.6983%" y="1605" width="1.8058%" height="15" fill="rgb(217,214,36)" fg:x="8816449110" fg:w="181544629"/><text x="87.9483%" y="1615.50">&lt;..</text></g><g><title>tokio_util::util::poll_buf::poll_read_buf (132,397,188 samples, 1.32%)</title><rect x="88.1872%" y="1589" width="1.3170%" height="15" fill="rgb(243,70,3)" fg:x="8865596551" fg:w="132397188"/><text x="88.4372%" y="1599.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::filled (2,006,018 samples, 0.02%)</title><rect x="89.4842%" y="1573" width="0.0200%" height="15" fill="rgb(253,158,52)" fg:x="8995987721" fg:w="2006018"/><text x="89.7342%" y="1583.50"></text></g><g><title>__memcpy_evex_unaligned_erms (10,030,090 samples, 0.10%)</title><rect x="89.5141%" y="1621" width="0.0998%" height="15" fill="rgb(234,111,54)" fg:x="8998996748" fg:w="10030090"/><text x="89.7641%" y="1631.50"></text></g><g><title>tracing::span::Span::log (2,006,018 samples, 0.02%)</title><rect x="89.6438%" y="1573" width="0.0200%" height="15" fill="rgb(217,70,32)" fg:x="9012035865" fg:w="2006018"/><text x="89.8938%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (9,027,081 samples, 0.09%)</title><rect x="89.6139%" y="1621" width="0.0898%" height="15" fill="rgb(234,18,33)" fg:x="9009026838" fg:w="9027081"/><text x="89.8639%" y="1631.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (9,027,081 samples, 0.09%)</title><rect x="89.6139%" y="1605" width="0.0898%" height="15" fill="rgb(234,12,49)" fg:x="9009026838" fg:w="9027081"/><text x="89.8639%" y="1615.50"></text></g><g><title>tracing::span::Span::do_exit (9,027,081 samples, 0.09%)</title><rect x="89.6139%" y="1589" width="0.0898%" height="15" fill="rgb(236,10,21)" fg:x="9009026838" fg:w="9027081"/><text x="89.8639%" y="1599.50"></text></g><g><title>tracing_core::metadata::Metadata::name (4,012,036 samples, 0.04%)</title><rect x="89.6638%" y="1573" width="0.0399%" height="15" fill="rgb(248,182,45)" fg:x="9014041883" fg:w="4012036"/><text x="89.9138%" y="1583.50"></text></g><g><title>core::fmt::Arguments::new_v1 (2,006,018 samples, 0.02%)</title><rect x="89.7635%" y="1589" width="0.0200%" height="15" fill="rgb(217,95,36)" fg:x="9024071973" fg:w="2006018"/><text x="90.0135%" y="1599.50"></text></g><g><title>tracing::span::Span::log (7,021,063 samples, 0.07%)</title><rect x="89.7835%" y="1589" width="0.0698%" height="15" fill="rgb(212,110,31)" fg:x="9026077991" fg:w="7021063"/><text x="90.0335%" y="1599.50"></text></g><g><title>&lt;tracing::span::Span as core::ops::drop::Drop&gt;::drop (14,042,126 samples, 0.14%)</title><rect x="89.7436%" y="1605" width="0.1397%" height="15" fill="rgb(206,32,53)" fg:x="9022065955" fg:w="14042126"/><text x="89.9936%" y="1615.50"></text></g><g><title>tracing_core::metadata::Metadata::name (3,009,027 samples, 0.03%)</title><rect x="89.8533%" y="1589" width="0.0299%" height="15" fill="rgb(246,141,37)" fg:x="9033099054" fg:w="3009027"/><text x="90.1033%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (20,060,180 samples, 0.20%)</title><rect x="89.7037%" y="1621" width="0.1995%" height="15" fill="rgb(219,16,7)" fg:x="9018053919" fg:w="20060180"/><text x="89.9537%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tracing::span::Inner&gt;&gt; (2,006,018 samples, 0.02%)</title><rect x="89.8833%" y="1605" width="0.0200%" height="15" fill="rgb(230,205,45)" fg:x="9036108081" fg:w="2006018"/><text x="90.1333%" y="1615.50"></text></g><g><title>h2::codec::framed_read::decode_frame (4,012,036 samples, 0.04%)</title><rect x="89.9032%" y="1621" width="0.0399%" height="15" fill="rgb(231,43,49)" fg:x="9038114099" fg:w="4012036"/><text x="90.1532%" y="1631.50"></text></g><g><title>tracing::__macro_support::__disabled_span (2,006,018 samples, 0.02%)</title><rect x="89.9431%" y="1621" width="0.0200%" height="15" fill="rgb(212,106,34)" fg:x="9042126135" fg:w="2006018"/><text x="90.1931%" y="1631.50"></text></g><g><title>tracing::span::Span::new_disabled (2,006,018 samples, 0.02%)</title><rect x="89.9431%" y="1605" width="0.0200%" height="15" fill="rgb(206,83,17)" fg:x="9042126135" fg:w="2006018"/><text x="90.1931%" y="1615.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (2,006,018 samples, 0.02%)</title><rect x="89.9731%" y="1589" width="0.0200%" height="15" fill="rgb(244,154,49)" fg:x="9045135162" fg:w="2006018"/><text x="90.2231%" y="1599.50"></text></g><g><title>tracing::span::Span::enter (11,033,099 samples, 0.11%)</title><rect x="89.9631%" y="1621" width="0.1097%" height="15" fill="rgb(244,149,49)" fg:x="9044132153" fg:w="11033099"/><text x="90.2131%" y="1631.50"></text></g><g><title>tracing::span::Span::do_enter (11,033,099 samples, 0.11%)</title><rect x="89.9631%" y="1605" width="0.1097%" height="15" fill="rgb(227,134,18)" fg:x="9044132153" fg:w="11033099"/><text x="90.2131%" y="1615.50"></text></g><g><title>tracing::span::Span::log (8,024,072 samples, 0.08%)</title><rect x="89.9930%" y="1589" width="0.0798%" height="15" fill="rgb(237,116,36)" fg:x="9047141180" fg:w="8024072"/><text x="90.2430%" y="1599.50"></text></g><g><title>tracing::span::Span::log (3,009,027 samples, 0.03%)</title><rect x="90.1526%" y="1605" width="0.0299%" height="15" fill="rgb(205,129,40)" fg:x="9063189324" fg:w="3009027"/><text x="90.4026%" y="1615.50"></text></g><g><title>tracing::span::Span::record_all (13,039,117 samples, 0.13%)</title><rect x="90.0728%" y="1621" width="0.1297%" height="15" fill="rgb(236,178,4)" fg:x="9055165252" fg:w="13039117"/><text x="90.3228%" y="1631.50"></text></g><g><title>&lt;h2::codec::Codec&lt;T,B&gt; as futures_core::stream::Stream&gt;::poll_next (279,839,511 samples, 2.78%)</title><rect x="87.4389%" y="1653" width="2.7836%" height="15" fill="rgb(251,76,53)" fg:x="8790370876" fg:w="279839511"/><text x="87.6889%" y="1663.50">&lt;h..</text></g><g><title>&lt;h2::codec::framed_read::FramedRead&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (279,839,511 samples, 2.78%)</title><rect x="87.4389%" y="1637" width="2.7836%" height="15" fill="rgb(242,92,40)" fg:x="8790370876" fg:w="279839511"/><text x="87.6889%" y="1647.50">&lt;h..</text></g><g><title>tracing_core::dispatcher::has_been_set (2,006,018 samples, 0.02%)</title><rect x="90.2025%" y="1621" width="0.0200%" height="15" fill="rgb(209,45,30)" fg:x="9068204369" fg:w="2006018"/><text x="90.4525%" y="1631.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (2,006,018 samples, 0.02%)</title><rect x="90.2025%" y="1605" width="0.0200%" height="15" fill="rgb(218,157,36)" fg:x="9068204369" fg:w="2006018"/><text x="90.4525%" y="1615.50"></text></g><g><title>core::sync::atomic::atomic_load (2,006,018 samples, 0.02%)</title><rect x="90.2025%" y="1589" width="0.0200%" height="15" fill="rgb(222,186,16)" fg:x="9068204369" fg:w="2006018"/><text x="90.4525%" y="1599.50"></text></g><g><title>__memcpy_evex_unaligned_erms (7,021,063 samples, 0.07%)</title><rect x="90.2225%" y="1653" width="0.0698%" height="15" fill="rgb(254,72,35)" fg:x="9070210387" fg:w="7021063"/><text x="90.4725%" y="1663.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3,009,027 samples, 0.03%)</title><rect x="90.2923%" y="1621" width="0.0299%" height="15" fill="rgb(224,25,35)" fg:x="9077231450" fg:w="3009027"/><text x="90.5423%" y="1631.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (3,009,027 samples, 0.03%)</title><rect x="90.2923%" y="1605" width="0.0299%" height="15" fill="rgb(206,135,52)" fg:x="9077231450" fg:w="3009027"/><text x="90.5423%" y="1615.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (3,009,027 samples, 0.03%)</title><rect x="90.2923%" y="1589" width="0.0299%" height="15" fill="rgb(229,174,47)" fg:x="9077231450" fg:w="3009027"/><text x="90.5423%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::poison::mutex::MutexGuard&lt;h2::proto::streams::streams::Inner&gt;&gt; (5,015,045 samples, 0.05%)</title><rect x="90.3223%" y="1621" width="0.0499%" height="15" fill="rgb(242,184,21)" fg:x="9080240477" fg:w="5015045"/><text x="90.5723%" y="1631.50"></text></g><g><title>&lt;std::sync::poison::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5,015,045 samples, 0.05%)</title><rect x="90.3223%" y="1605" width="0.0499%" height="15" fill="rgb(213,22,45)" fg:x="9080240477" fg:w="5015045"/><text x="90.5723%" y="1615.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (4,012,036 samples, 0.04%)</title><rect x="90.3322%" y="1589" width="0.0399%" height="15" fill="rgb(237,81,54)" fg:x="9081243486" fg:w="4012036"/><text x="90.5822%" y="1599.50"></text></g><g><title>h2::proto::streams::recv::Recv::clear_expired_reset_streams (4,012,036 samples, 0.04%)</title><rect x="90.3721%" y="1621" width="0.0399%" height="15" fill="rgb(248,177,18)" fg:x="9085255522" fg:w="4012036"/><text x="90.6221%" y="1631.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (10,030,090 samples, 0.10%)</title><rect x="90.5717%" y="1573" width="0.0998%" height="15" fill="rgb(254,31,16)" fg:x="9105315702" fg:w="10030090"/><text x="90.8217%" y="1583.50"></text></g><g><title>syscall (8,024,072 samples, 0.08%)</title><rect x="90.5916%" y="1557" width="0.0798%" height="15" fill="rgb(235,20,31)" fg:x="9107321720" fg:w="8024072"/><text x="90.8416%" y="1567.50"></text></g><g><title>h2::proto::streams::streams::Streams&lt;B,P&gt;::clear_expired_reset_streams (46,138,414 samples, 0.46%)</title><rect x="90.2923%" y="1637" width="0.4589%" height="15" fill="rgb(240,56,43)" fg:x="9077231450" fg:w="46138414"/><text x="90.5423%" y="1647.50"></text></g><g><title>std::sync::poison::mutex::Mutex&lt;T&gt;::lock (34,102,306 samples, 0.34%)</title><rect x="90.4121%" y="1621" width="0.3392%" height="15" fill="rgb(237,197,51)" fg:x="9089267558" fg:w="34102306"/><text x="90.6621%" y="1631.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (33,099,297 samples, 0.33%)</title><rect x="90.4220%" y="1605" width="0.3292%" height="15" fill="rgb(241,162,44)" fg:x="9090270567" fg:w="33099297"/><text x="90.6720%" y="1615.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (21,063,189 samples, 0.21%)</title><rect x="90.5418%" y="1589" width="0.2095%" height="15" fill="rgb(224,23,20)" fg:x="9102306675" fg:w="21063189"/><text x="90.7918%" y="1599.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (8,024,072 samples, 0.08%)</title><rect x="90.6715%" y="1573" width="0.0798%" height="15" fill="rgb(250,109,34)" fg:x="9115345792" fg:w="8024072"/><text x="90.9215%" y="1583.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (5,015,045 samples, 0.05%)</title><rect x="90.7014%" y="1557" width="0.0499%" height="15" fill="rgb(214,175,50)" fg:x="9118354819" fg:w="5015045"/><text x="90.9514%" y="1567.50"></text></g><g><title>core::sync::atomic::atomic_load (5,015,045 samples, 0.05%)</title><rect x="90.7014%" y="1541" width="0.0499%" height="15" fill="rgb(213,182,5)" fg:x="9118354819" fg:w="5015045"/><text x="90.9514%" y="1551.50"></text></g><g><title>h2::proto::connection::Connection&lt;T,P,B&gt;::clear_expired_reset_streams (57,171,513 samples, 0.57%)</title><rect x="90.2923%" y="1653" width="0.5687%" height="15" fill="rgb(209,199,19)" fg:x="9077231450" fg:w="57171513"/><text x="90.5423%" y="1663.50"></text></g><g><title>syscall (11,033,099 samples, 0.11%)</title><rect x="90.7513%" y="1637" width="0.1097%" height="15" fill="rgb(236,224,42)" fg:x="9123369864" fg:w="11033099"/><text x="91.0013%" y="1647.50"></text></g><g><title>h2::proto::connection::Connection&lt;T,P,B&gt;::poll_go_away (10,030,090 samples, 0.10%)</title><rect x="90.8610%" y="1653" width="0.0998%" height="15" fill="rgb(246,226,29)" fg:x="9134402963" fg:w="10030090"/><text x="91.1110%" y="1663.50"></text></g><g><title>h2::proto::go_away::GoAway::send_pending_go_away (10,030,090 samples, 0.10%)</title><rect x="90.8610%" y="1637" width="0.0998%" height="15" fill="rgb(227,223,11)" fg:x="9134402963" fg:w="10030090"/><text x="91.1110%" y="1647.50"></text></g><g><title>core::fmt::Arguments::new_v1 (2,006,018 samples, 0.02%)</title><rect x="91.0805%" y="1589" width="0.0200%" height="15" fill="rgb(219,7,51)" fg:x="9156469161" fg:w="2006018"/><text x="91.3305%" y="1599.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (5,015,045 samples, 0.05%)</title><rect x="91.1005%" y="1589" width="0.0499%" height="15" fill="rgb(245,167,10)" fg:x="9158475179" fg:w="5015045"/><text x="91.3505%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (15,045,135 samples, 0.15%)</title><rect x="91.0306%" y="1637" width="0.1497%" height="15" fill="rgb(237,224,16)" fg:x="9151454116" fg:w="15045135"/><text x="91.2806%" y="1647.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (15,045,135 samples, 0.15%)</title><rect x="91.0306%" y="1621" width="0.1497%" height="15" fill="rgb(226,132,13)" fg:x="9151454116" fg:w="15045135"/><text x="91.2806%" y="1631.50"></text></g><g><title>tracing::span::Span::do_exit (15,045,135 samples, 0.15%)</title><rect x="91.0306%" y="1605" width="0.1497%" height="15" fill="rgb(214,140,3)" fg:x="9151454116" fg:w="15045135"/><text x="91.2806%" y="1615.50"></text></g><g><title>tracing::span::Span::log (3,009,027 samples, 0.03%)</title><rect x="91.1504%" y="1589" width="0.0299%" height="15" fill="rgb(221,177,4)" fg:x="9163490224" fg:w="3009027"/><text x="91.4004%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (8,024,072 samples, 0.08%)</title><rect x="91.1803%" y="1637" width="0.0798%" height="15" fill="rgb(238,139,3)" fg:x="9166499251" fg:w="8024072"/><text x="91.4303%" y="1647.50"></text></g><g><title>&lt;tracing::span::Span as core::ops::drop::Drop&gt;::drop (6,018,054 samples, 0.06%)</title><rect x="91.2002%" y="1621" width="0.0599%" height="15" fill="rgb(216,17,39)" fg:x="9168505269" fg:w="6018054"/><text x="91.4502%" y="1631.50"></text></g><g><title>h2::proto::ping_pong::PingPong::send_pending_ping (2,006,018 samples, 0.02%)</title><rect x="91.2601%" y="1637" width="0.0200%" height="15" fill="rgb(238,120,9)" fg:x="9174523323" fg:w="2006018"/><text x="91.5101%" y="1647.50"></text></g><g><title>h2::proto::ping_pong::PingPong::send_pending_pong (6,018,054 samples, 0.06%)</title><rect x="91.2801%" y="1637" width="0.0599%" height="15" fill="rgb(244,92,53)" fg:x="9176529341" fg:w="6018054"/><text x="91.5301%" y="1647.50"></text></g><g><title>h2::proto::settings::Settings::poll_send (8,024,072 samples, 0.08%)</title><rect x="91.3399%" y="1637" width="0.0798%" height="15" fill="rgb(224,148,33)" fg:x="9182547395" fg:w="8024072"/><text x="91.5899%" y="1647.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3,009,027 samples, 0.03%)</title><rect x="91.3898%" y="1621" width="0.0299%" height="15" fill="rgb(243,6,36)" fg:x="9187562440" fg:w="3009027"/><text x="91.6398%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::poison::mutex::MutexGuard&lt;h2::proto::streams::streams::Inner&gt;&gt; (20,060,180 samples, 0.20%)</title><rect x="91.4397%" y="1621" width="0.1995%" height="15" fill="rgb(230,102,11)" fg:x="9192577485" fg:w="20060180"/><text x="91.6897%" y="1631.50"></text></g><g><title>&lt;std::sync::poison::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (20,060,180 samples, 0.20%)</title><rect x="91.4397%" y="1605" width="0.1995%" height="15" fill="rgb(234,148,36)" fg:x="9192577485" fg:w="20060180"/><text x="91.6897%" y="1615.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (19,057,171 samples, 0.19%)</title><rect x="91.4497%" y="1589" width="0.1896%" height="15" fill="rgb(251,153,25)" fg:x="9193580494" fg:w="19057171"/><text x="91.6997%" y="1599.50"></text></g><g><title>syscall (5,015,045 samples, 0.05%)</title><rect x="91.5893%" y="1573" width="0.0499%" height="15" fill="rgb(215,129,8)" fg:x="9207622620" fg:w="5015045"/><text x="91.8393%" y="1583.50"></text></g><g><title>h2::proto::streams::recv::Recv::send_pending_refusal (4,012,036 samples, 0.04%)</title><rect x="91.6392%" y="1621" width="0.0399%" height="15" fill="rgb(224,128,35)" fg:x="9212637665" fg:w="4012036"/><text x="91.8892%" y="1631.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (5,015,045 samples, 0.05%)</title><rect x="91.9186%" y="1573" width="0.0499%" height="15" fill="rgb(237,56,52)" fg:x="9240721917" fg:w="5015045"/><text x="92.1686%" y="1583.50"></text></g><g><title>syscall (5,015,045 samples, 0.05%)</title><rect x="91.9186%" y="1557" width="0.0499%" height="15" fill="rgb(234,213,19)" fg:x="9240721917" fg:w="5015045"/><text x="92.1686%" y="1567.50"></text></g><g><title>h2::proto::streams::streams::Streams&lt;B,P&gt;::send_pending_refusal (59,177,531 samples, 0.59%)</title><rect x="91.4197%" y="1637" width="0.5886%" height="15" fill="rgb(252,82,23)" fg:x="9190571467" fg:w="59177531"/><text x="91.6697%" y="1647.50"></text></g><g><title>std::sync::poison::mutex::Mutex&lt;T&gt;::lock (33,099,297 samples, 0.33%)</title><rect x="91.6791%" y="1621" width="0.3292%" height="15" fill="rgb(254,201,21)" fg:x="9216649701" fg:w="33099297"/><text x="91.9291%" y="1631.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (33,099,297 samples, 0.33%)</title><rect x="91.6791%" y="1605" width="0.3292%" height="15" fill="rgb(250,186,11)" fg:x="9216649701" fg:w="33099297"/><text x="91.9291%" y="1615.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (12,036,108 samples, 0.12%)</title><rect x="91.8887%" y="1589" width="0.1197%" height="15" fill="rgb(211,174,5)" fg:x="9237712890" fg:w="12036108"/><text x="92.1387%" y="1599.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (4,012,036 samples, 0.04%)</title><rect x="91.9685%" y="1573" width="0.0399%" height="15" fill="rgb(214,121,10)" fg:x="9245736962" fg:w="4012036"/><text x="92.2185%" y="1583.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (3,009,027 samples, 0.03%)</title><rect x="91.9784%" y="1557" width="0.0299%" height="15" fill="rgb(241,66,2)" fg:x="9246739971" fg:w="3009027"/><text x="92.2284%" y="1567.50"></text></g><g><title>core::sync::atomic::atomic_load (3,009,027 samples, 0.03%)</title><rect x="91.9784%" y="1541" width="0.0299%" height="15" fill="rgb(220,167,19)" fg:x="9246739971" fg:w="3009027"/><text x="92.2284%" y="1551.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (4,012,036 samples, 0.04%)</title><rect x="92.0682%" y="1605" width="0.0399%" height="15" fill="rgb(231,54,50)" fg:x="9255767052" fg:w="4012036"/><text x="92.3182%" y="1615.50"></text></g><g><title>tracing::span::Span::log (6,018,054 samples, 0.06%)</title><rect x="92.1082%" y="1605" width="0.0599%" height="15" fill="rgb(239,217,53)" fg:x="9259779088" fg:w="6018054"/><text x="92.3582%" y="1615.50"></text></g><g><title>tracing::span::Span::enter (18,054,162 samples, 0.18%)</title><rect x="92.0084%" y="1637" width="0.1796%" height="15" fill="rgb(248,8,0)" fg:x="9249748998" fg:w="18054162"/><text x="92.2584%" y="1647.50"></text></g><g><title>tracing::span::Span::do_enter (18,054,162 samples, 0.18%)</title><rect x="92.0084%" y="1621" width="0.1796%" height="15" fill="rgb(229,118,37)" fg:x="9249748998" fg:w="18054162"/><text x="92.2584%" y="1631.50"></text></g><g><title>tracing::span::Span::log (3,009,027 samples, 0.03%)</title><rect x="92.2778%" y="1621" width="0.0299%" height="15" fill="rgb(253,223,43)" fg:x="9276830241" fg:w="3009027"/><text x="92.5278%" y="1631.50"></text></g><g><title>tracing::span::Span::record_all (16,048,144 samples, 0.16%)</title><rect x="92.1880%" y="1637" width="0.1596%" height="15" fill="rgb(211,77,36)" fg:x="9267803160" fg:w="16048144"/><text x="92.4380%" y="1647.50"></text></g><g><title>tracing_core::span::Record::is_empty (3,009,027 samples, 0.03%)</title><rect x="92.3177%" y="1621" width="0.0299%" height="15" fill="rgb(219,3,53)" fg:x="9280842277" fg:w="3009027"/><text x="92.5677%" y="1631.50"></text></g><g><title>tracing_core::field::ValueSet::is_empty (3,009,027 samples, 0.03%)</title><rect x="92.3177%" y="1605" width="0.0299%" height="15" fill="rgb(244,45,42)" fg:x="9280842277" fg:w="3009027"/><text x="92.5677%" y="1615.50"></text></g><g><title>h2::proto::connection::Connection&lt;T,P,B&gt;::poll_ready (141,424,269 samples, 1.41%)</title><rect x="90.9608%" y="1653" width="1.4068%" height="15" fill="rgb(225,95,27)" fg:x="9144433053" fg:w="141424269"/><text x="91.2108%" y="1663.50"></text></g><g><title>tracing_core::field::FieldSet::value_set (2,006,018 samples, 0.02%)</title><rect x="92.3476%" y="1637" width="0.0200%" height="15" fill="rgb(207,74,8)" fg:x="9283851304" fg:w="2006018"/><text x="92.5976%" y="1647.50"></text></g><g><title>h2::proto::connection::ConnectionInner&lt;P,B&gt;::as_dyn (5,015,045 samples, 0.05%)</title><rect x="92.3676%" y="1653" width="0.0499%" height="15" fill="rgb(243,63,36)" fg:x="9285857322" fg:w="5015045"/><text x="92.6176%" y="1663.50"></text></g><g><title>__memcpy_evex_unaligned_erms (6,018,054 samples, 0.06%)</title><rect x="92.5172%" y="1637" width="0.0599%" height="15" fill="rgb(211,180,12)" fg:x="9300902457" fg:w="6018054"/><text x="92.7672%" y="1647.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::Deref&gt;::deref (2,006,018 samples, 0.02%)</title><rect x="92.6469%" y="1557" width="0.0200%" height="15" fill="rgb(254,166,49)" fg:x="9313941574" fg:w="2006018"/><text x="92.8969%" y="1567.50"></text></g><g><title>&lt;h2::proto::streams::store::Store as core::ops::index::Index&lt;h2::proto::streams::store::Key&gt;&gt;::index (2,006,018 samples, 0.02%)</title><rect x="92.6469%" y="1541" width="0.0200%" height="15" fill="rgb(205,19,0)" fg:x="9313941574" fg:w="2006018"/><text x="92.8969%" y="1551.50"></text></g><g><title>slab::Slab&lt;T&gt;::get (2,006,018 samples, 0.02%)</title><rect x="92.6469%" y="1525" width="0.0200%" height="15" fill="rgb(224,172,32)" fg:x="9313941574" fg:w="2006018"/><text x="92.8969%" y="1535.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::DerefMut&gt;::deref_mut (5,015,045 samples, 0.05%)</title><rect x="92.6669%" y="1557" width="0.0499%" height="15" fill="rgb(254,136,30)" fg:x="9315947592" fg:w="5015045"/><text x="92.9169%" y="1567.50"></text></g><g><title>h2::proto::streams::buffer::Deque::push_back (5,015,045 samples, 0.05%)</title><rect x="92.7367%" y="1557" width="0.0499%" height="15" fill="rgb(246,19,35)" fg:x="9322968655" fg:w="5015045"/><text x="92.9867%" y="1567.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert (3,009,027 samples, 0.03%)</title><rect x="92.7567%" y="1541" width="0.0299%" height="15" fill="rgb(219,24,36)" fg:x="9324974673" fg:w="3009027"/><text x="93.0067%" y="1551.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert_at (2,006,018 samples, 0.02%)</title><rect x="92.7666%" y="1525" width="0.0200%" height="15" fill="rgb(251,55,1)" fg:x="9325977682" fg:w="2006018"/><text x="93.0166%" y="1535.50"></text></g><g><title>h2::proto::streams::flow_control::FlowControl::window_size (2,006,018 samples, 0.02%)</title><rect x="92.7866%" y="1557" width="0.0200%" height="15" fill="rgb(218,117,39)" fg:x="9327983700" fg:w="2006018"/><text x="93.0366%" y="1567.50"></text></g><g><title>h2::proto::streams::flow_control::Window::as_size (2,006,018 samples, 0.02%)</title><rect x="92.7866%" y="1541" width="0.0200%" height="15" fill="rgb(248,169,11)" fg:x="9327983700" fg:w="2006018"/><text x="93.0366%" y="1551.50"></text></g><g><title>h2::proto::streams::recv::Recv::consume_connection_window (3,009,027 samples, 0.03%)</title><rect x="92.8065%" y="1557" width="0.0299%" height="15" fill="rgb(244,40,44)" fg:x="9329989718" fg:w="3009027"/><text x="93.0565%" y="1567.50"></text></g><g><title>h2::proto::streams::state::State::recv_close (2,006,018 samples, 0.02%)</title><rect x="92.8465%" y="1557" width="0.0200%" height="15" fill="rgb(234,62,37)" fg:x="9334001754" fg:w="2006018"/><text x="93.0965%" y="1567.50"></text></g><g><title>h2::proto::streams::stream::Stream::notify_recv (2,006,018 samples, 0.02%)</title><rect x="92.8664%" y="1557" width="0.0200%" height="15" fill="rgb(207,117,42)" fg:x="9336007772" fg:w="2006018"/><text x="93.1164%" y="1567.50"></text></g><g><title>core::task::wake::Waker::wake (2,006,018 samples, 0.02%)</title><rect x="92.8664%" y="1541" width="0.0200%" height="15" fill="rgb(213,43,2)" fg:x="9336007772" fg:w="2006018"/><text x="93.1164%" y="1551.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (2,006,018 samples, 0.02%)</title><rect x="92.8664%" y="1525" width="0.0200%" height="15" fill="rgb(244,202,51)" fg:x="9336007772" fg:w="2006018"/><text x="93.1164%" y="1535.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (2,006,018 samples, 0.02%)</title><rect x="92.8664%" y="1509" width="0.0200%" height="15" fill="rgb(253,174,46)" fg:x="9336007772" fg:w="2006018"/><text x="93.1164%" y="1519.50"></text></g><g><title>h2::proto::streams::counts::Counts::transition (31,093,279 samples, 0.31%)</title><rect x="92.5870%" y="1605" width="0.3093%" height="15" fill="rgb(251,23,1)" fg:x="9307923520" fg:w="31093279"/><text x="92.8370%" y="1615.50"></text></g><g><title>h2::proto::streams::streams::Inner::recv_data::{{closure}} (29,087,261 samples, 0.29%)</title><rect x="92.6070%" y="1589" width="0.2893%" height="15" fill="rgb(253,26,1)" fg:x="9309929538" fg:w="29087261"/><text x="92.8570%" y="1599.50"></text></g><g><title>h2::proto::streams::recv::Recv::recv_data (29,087,261 samples, 0.29%)</title><rect x="92.6070%" y="1573" width="0.2893%" height="15" fill="rgb(216,89,31)" fg:x="9309929538" fg:w="29087261"/><text x="92.8570%" y="1583.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (2,006,018 samples, 0.02%)</title><rect x="92.9362%" y="1557" width="0.0200%" height="15" fill="rgb(209,109,5)" fg:x="9343028835" fg:w="2006018"/><text x="93.1862%" y="1567.50"></text></g><g><title>h2::proto::streams::streams::Inner::recv_data (38,114,342 samples, 0.38%)</title><rect x="92.5870%" y="1621" width="0.3791%" height="15" fill="rgb(229,63,13)" fg:x="9307923520" fg:w="38114342"/><text x="92.8370%" y="1631.50"></text></g><g><title>h2::proto::streams::store::Store::find_mut (7,021,063 samples, 0.07%)</title><rect x="92.8963%" y="1605" width="0.0698%" height="15" fill="rgb(238,137,54)" fg:x="9339016799" fg:w="7021063"/><text x="93.1463%" y="1615.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (7,021,063 samples, 0.07%)</title><rect x="92.8963%" y="1589" width="0.0698%" height="15" fill="rgb(228,1,9)" fg:x="9339016799" fg:w="7021063"/><text x="93.1463%" y="1599.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (4,012,036 samples, 0.04%)</title><rect x="92.9263%" y="1573" width="0.0399%" height="15" fill="rgb(249,120,48)" fg:x="9342025826" fg:w="4012036"/><text x="93.1763%" y="1583.50"></text></g><g><title>h2::proto::streams::streams::DynStreams&lt;B&gt;::recv_data (40,120,360 samples, 0.40%)</title><rect x="92.5771%" y="1637" width="0.3991%" height="15" fill="rgb(209,72,36)" fg:x="9306920511" fg:w="40120360"/><text x="92.8271%" y="1647.50"></text></g><g><title>__memcpy_evex_unaligned_erms (4,012,036 samples, 0.04%)</title><rect x="92.9961%" y="1621" width="0.0399%" height="15" fill="rgb(247,98,49)" fg:x="9349046889" fg:w="4012036"/><text x="93.2461%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::poison::mutex::MutexGuard&lt;h2::proto::streams::streams::Inner&gt;&gt; (5,015,045 samples, 0.05%)</title><rect x="93.0360%" y="1621" width="0.0499%" height="15" fill="rgb(233,75,36)" fg:x="9353058925" fg:w="5015045"/><text x="93.2860%" y="1631.50"></text></g><g><title>&lt;std::sync::poison::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5,015,045 samples, 0.05%)</title><rect x="93.0360%" y="1605" width="0.0499%" height="15" fill="rgb(225,14,24)" fg:x="9353058925" fg:w="5015045"/><text x="93.2860%" y="1615.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (5,015,045 samples, 0.05%)</title><rect x="93.0360%" y="1589" width="0.0499%" height="15" fill="rgb(237,193,20)" fg:x="9353058925" fg:w="5015045"/><text x="93.2860%" y="1599.50"></text></g><g><title>syscall (4,012,036 samples, 0.04%)</title><rect x="93.0460%" y="1573" width="0.0399%" height="15" fill="rgb(239,122,19)" fg:x="9354061934" fg:w="4012036"/><text x="93.2960%" y="1583.50"></text></g><g><title>__memcpy_evex_unaligned_erms (4,012,036 samples, 0.04%)</title><rect x="93.1458%" y="1589" width="0.0399%" height="15" fill="rgb(231,220,10)" fg:x="9364092024" fg:w="4012036"/><text x="93.3958%" y="1599.50"></text></g><g><title>h2::proto::streams::counts::Counts::transition_after (4,012,036 samples, 0.04%)</title><rect x="93.1857%" y="1589" width="0.0399%" height="15" fill="rgb(220,66,15)" fg:x="9368104060" fg:w="4012036"/><text x="93.4357%" y="1599.50"></text></g><g><title>__memcpy_evex_unaligned_erms (5,015,045 samples, 0.05%)</title><rect x="93.2655%" y="1573" width="0.0499%" height="15" fill="rgb(215,171,52)" fg:x="9376128132" fg:w="5015045"/><text x="93.5155%" y="1583.50"></text></g><g><title>h2::proto::streams::counts::Counts::transition (28,084,252 samples, 0.28%)</title><rect x="93.1158%" y="1605" width="0.2794%" height="15" fill="rgb(241,169,50)" fg:x="9361082997" fg:w="28084252"/><text x="93.3658%" y="1615.50"></text></g><g><title>h2::proto::streams::streams::Inner::recv_headers::{{closure}} (16,048,144 samples, 0.16%)</title><rect x="93.2356%" y="1589" width="0.1596%" height="15" fill="rgb(236,189,0)" fg:x="9373119105" fg:w="16048144"/><text x="93.4856%" y="1599.50"></text></g><g><title>h2::proto::streams::streams::Actions::reset_on_recv_stream_err (7,021,063 samples, 0.07%)</title><rect x="93.3254%" y="1573" width="0.0698%" height="15" fill="rgb(217,147,20)" fg:x="9382146186" fg:w="7021063"/><text x="93.5754%" y="1583.50"></text></g><g><title>h2::proto::peer::Dyn::ensure_can_open (6,018,054 samples, 0.06%)</title><rect x="93.4451%" y="1589" width="0.0599%" height="15" fill="rgb(206,188,39)" fg:x="9394182294" fg:w="6018054"/><text x="93.6951%" y="1599.50"></text></g><g><title>h2::proto::streams::recv::Recv::open (13,039,117 samples, 0.13%)</title><rect x="93.3952%" y="1605" width="0.1297%" height="15" fill="rgb(227,118,25)" fg:x="9389167249" fg:w="13039117"/><text x="93.6452%" y="1615.50"></text></g><g><title>h2::proto::streams::recv::Recv::next_stream_id (2,006,018 samples, 0.02%)</title><rect x="93.5049%" y="1589" width="0.0200%" height="15" fill="rgb(248,171,40)" fg:x="9400200348" fg:w="2006018"/><text x="93.7549%" y="1599.50"></text></g><g><title>h2::proto::streams::send::Send::init_window_sz (2,006,018 samples, 0.02%)</title><rect x="93.5249%" y="1605" width="0.0200%" height="15" fill="rgb(251,90,54)" fg:x="9402206366" fg:w="2006018"/><text x="93.7749%" y="1615.50"></text></g><g><title>&lt;h2::frame::stream_id::StreamId as core::hash::Hash&gt;::hash (3,009,027 samples, 0.03%)</title><rect x="93.5748%" y="1557" width="0.0299%" height="15" fill="rgb(234,11,46)" fg:x="9407221411" fg:w="3009027"/><text x="93.8248%" y="1567.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (3,009,027 samples, 0.03%)</title><rect x="93.5748%" y="1541" width="0.0299%" height="15" fill="rgb(229,134,13)" fg:x="9407221411" fg:w="3009027"/><text x="93.8248%" y="1551.50"></text></g><g><title>core::hash::Hasher::write_u32 (3,009,027 samples, 0.03%)</title><rect x="93.5748%" y="1525" width="0.0299%" height="15" fill="rgb(223,129,3)" fg:x="9407221411" fg:w="3009027"/><text x="93.8248%" y="1535.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (3,009,027 samples, 0.03%)</title><rect x="93.5748%" y="1509" width="0.0299%" height="15" fill="rgb(221,124,13)" fg:x="9407221411" fg:w="3009027"/><text x="93.8248%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3,009,027 samples, 0.03%)</title><rect x="93.5748%" y="1493" width="0.0299%" height="15" fill="rgb(234,3,18)" fg:x="9407221411" fg:w="3009027"/><text x="93.8248%" y="1503.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3,009,027 samples, 0.03%)</title><rect x="93.5748%" y="1477" width="0.0299%" height="15" fill="rgb(249,199,20)" fg:x="9407221411" fg:w="3009027"/><text x="93.8248%" y="1487.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (6,018,054 samples, 0.06%)</title><rect x="93.5748%" y="1573" width="0.0599%" height="15" fill="rgb(224,134,6)" fg:x="9407221411" fg:w="6018054"/><text x="93.8248%" y="1583.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (3,009,027 samples, 0.03%)</title><rect x="93.6047%" y="1557" width="0.0299%" height="15" fill="rgb(254,83,26)" fg:x="9410230438" fg:w="3009027"/><text x="93.8547%" y="1567.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3,009,027 samples, 0.03%)</title><rect x="93.6047%" y="1541" width="0.0299%" height="15" fill="rgb(217,88,9)" fg:x="9410230438" fg:w="3009027"/><text x="93.8547%" y="1551.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3,009,027 samples, 0.03%)</title><rect x="93.6047%" y="1525" width="0.0299%" height="15" fill="rgb(225,73,2)" fg:x="9410230438" fg:w="3009027"/><text x="93.8547%" y="1535.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3,009,027 samples, 0.03%)</title><rect x="93.6047%" y="1509" width="0.0299%" height="15" fill="rgb(226,44,39)" fg:x="9410230438" fg:w="3009027"/><text x="93.8547%" y="1519.50"></text></g><g><title>h2::proto::streams::store::Store::find_entry (13,039,117 samples, 0.13%)</title><rect x="93.5448%" y="1605" width="0.1297%" height="15" fill="rgb(228,53,17)" fg:x="9404212384" fg:w="13039117"/><text x="93.7948%" y="1615.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::entry (11,033,099 samples, 0.11%)</title><rect x="93.5648%" y="1589" width="0.1097%" height="15" fill="rgb(212,27,27)" fg:x="9406218402" fg:w="11033099"/><text x="93.8148%" y="1599.50"></text></g><g><title>indexmap::map::core::entry::&lt;impl indexmap::map::core::IndexMapCore&lt;K,V&gt;&gt;::entry (4,012,036 samples, 0.04%)</title><rect x="93.6346%" y="1573" width="0.0399%" height="15" fill="rgb(241,50,6)" fg:x="9413239465" fg:w="4012036"/><text x="93.8846%" y="1583.50"></text></g><g><title>hashbrown::table::HashTable&lt;T,A&gt;::find_entry (3,009,027 samples, 0.03%)</title><rect x="93.6446%" y="1557" width="0.0299%" height="15" fill="rgb(225,28,51)" fg:x="9414242474" fg:w="3009027"/><text x="93.8946%" y="1567.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3,009,027 samples, 0.03%)</title><rect x="93.6446%" y="1541" width="0.0299%" height="15" fill="rgb(215,33,16)" fg:x="9414242474" fg:w="3009027"/><text x="93.8946%" y="1551.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (3,009,027 samples, 0.03%)</title><rect x="93.6446%" y="1525" width="0.0299%" height="15" fill="rgb(243,40,39)" fg:x="9414242474" fg:w="3009027"/><text x="93.8946%" y="1535.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (3,009,027 samples, 0.03%)</title><rect x="93.6446%" y="1509" width="0.0299%" height="15" fill="rgb(225,11,42)" fg:x="9414242474" fg:w="3009027"/><text x="93.8946%" y="1519.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (3,009,027 samples, 0.03%)</title><rect x="93.6446%" y="1493" width="0.0299%" height="15" fill="rgb(241,220,38)" fg:x="9414242474" fg:w="3009027"/><text x="93.8946%" y="1503.50"></text></g><g><title>indexmap::map::core::entry::VacantEntry&lt;K,V&gt;::insert (3,009,027 samples, 0.03%)</title><rect x="93.7244%" y="1589" width="0.0299%" height="15" fill="rgb(244,52,35)" fg:x="9422266546" fg:w="3009027"/><text x="93.9744%" y="1599.50"></text></g><g><title>h2::proto::streams::store::VacantEntry::insert (18,054,162 samples, 0.18%)</title><rect x="93.6745%" y="1605" width="0.1796%" height="15" fill="rgb(246,42,46)" fg:x="9417251501" fg:w="18054162"/><text x="93.9245%" y="1615.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert (10,030,090 samples, 0.10%)</title><rect x="93.7544%" y="1589" width="0.0998%" height="15" fill="rgb(205,184,13)" fg:x="9425275573" fg:w="10030090"/><text x="94.0044%" y="1599.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert_at (10,030,090 samples, 0.10%)</title><rect x="93.7544%" y="1573" width="0.0998%" height="15" fill="rgb(209,48,36)" fg:x="9425275573" fg:w="10030090"/><text x="94.0044%" y="1583.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (2,006,018 samples, 0.02%)</title><rect x="93.8342%" y="1557" width="0.0200%" height="15" fill="rgb(244,34,51)" fg:x="9433299645" fg:w="2006018"/><text x="94.0842%" y="1567.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (2,006,018 samples, 0.02%)</title><rect x="93.8342%" y="1541" width="0.0200%" height="15" fill="rgb(221,107,33)" fg:x="9433299645" fg:w="2006018"/><text x="94.0842%" y="1551.50"></text></g><g><title>core::slice::index::get_noubcheck (2,006,018 samples, 0.02%)</title><rect x="93.8342%" y="1525" width="0.0200%" height="15" fill="rgb(224,203,12)" fg:x="9433299645" fg:w="2006018"/><text x="94.0842%" y="1535.50"></text></g><g><title>h2::proto::streams::stream::Stream::new (10,030,090 samples, 0.10%)</title><rect x="93.8541%" y="1605" width="0.0998%" height="15" fill="rgb(230,215,18)" fg:x="9435305663" fg:w="10030090"/><text x="94.1041%" y="1615.50"></text></g><g><title>h2::proto::streams::flow_control::FlowControl::inc_window (4,012,036 samples, 0.04%)</title><rect x="93.9140%" y="1589" width="0.0399%" height="15" fill="rgb(206,185,35)" fg:x="9441323717" fg:w="4012036"/><text x="94.1640%" y="1599.50"></text></g><g><title>h2::proto::streams::streams::Inner::recv_headers (115,346,035 samples, 1.15%)</title><rect x="93.0859%" y="1621" width="1.1474%" height="15" fill="rgb(228,140,34)" fg:x="9358073970" fg:w="115346035"/><text x="93.3359%" y="1631.50"></text></g><g><title>std::sync::poison::mutex::Mutex&lt;T&gt;::lock (28,084,252 samples, 0.28%)</title><rect x="93.9539%" y="1605" width="0.2794%" height="15" fill="rgb(208,93,13)" fg:x="9445335753" fg:w="28084252"/><text x="94.2039%" y="1615.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (27,081,243 samples, 0.27%)</title><rect x="93.9639%" y="1589" width="0.2694%" height="15" fill="rgb(221,193,39)" fg:x="9446338762" fg:w="27081243"/><text x="94.2139%" y="1599.50"></text></g><g><title>h2::proto::connection::Connection&lt;T,P,B&gt;::poll2 (703,109,309 samples, 6.99%)</title><rect x="87.2892%" y="1669" width="6.9939%" height="15" fill="rgb(241,132,34)" fg:x="8775325741" fg:w="703109309"/><text x="87.5392%" y="1679.50">h2::proto..</text></g><g><title>h2::proto::connection::DynConnection&lt;B&gt;::recv_frame (187,562,683 samples, 1.87%)</title><rect x="92.4174%" y="1653" width="1.8657%" height="15" fill="rgb(221,141,10)" fg:x="9290872367" fg:w="187562683"/><text x="92.6674%" y="1663.50">h..</text></g><g><title>h2::proto::streams::streams::DynStreams&lt;B&gt;::recv_headers (131,394,179 samples, 1.31%)</title><rect x="92.9762%" y="1637" width="1.3070%" height="15" fill="rgb(226,90,31)" fg:x="9347040871" fg:w="131394179"/><text x="93.2262%" y="1647.50"></text></g><g><title>std::sync::poison::mutex::Mutex&lt;T&gt;::lock (5,015,045 samples, 0.05%)</title><rect x="94.2333%" y="1621" width="0.0499%" height="15" fill="rgb(243,75,5)" fg:x="9473420005" fg:w="5015045"/><text x="94.4833%" y="1631.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (5,015,045 samples, 0.05%)</title><rect x="94.2333%" y="1605" width="0.0499%" height="15" fill="rgb(227,156,21)" fg:x="9473420005" fg:w="5015045"/><text x="94.4833%" y="1615.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (3,009,027 samples, 0.03%)</title><rect x="94.2532%" y="1589" width="0.0299%" height="15" fill="rgb(250,195,8)" fg:x="9475426023" fg:w="3009027"/><text x="94.5032%" y="1599.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (2,006,018 samples, 0.02%)</title><rect x="94.2632%" y="1573" width="0.0200%" height="15" fill="rgb(220,134,5)" fg:x="9476429032" fg:w="2006018"/><text x="94.5132%" y="1583.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::wake (2,006,018 samples, 0.02%)</title><rect x="94.4029%" y="1605" width="0.0200%" height="15" fill="rgb(246,106,34)" fg:x="9490471158" fg:w="2006018"/><text x="94.6529%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::poison::mutex::MutexGuard&lt;h2::proto::streams::streams::Inner&gt;&gt; (51,153,459 samples, 0.51%)</title><rect x="94.3430%" y="1653" width="0.5088%" height="15" fill="rgb(205,1,4)" fg:x="9484453104" fg:w="51153459"/><text x="94.5930%" y="1663.50"></text></g><g><title>&lt;std::sync::poison::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (51,153,459 samples, 0.51%)</title><rect x="94.3430%" y="1637" width="0.5088%" height="15" fill="rgb(224,151,29)" fg:x="9484453104" fg:w="51153459"/><text x="94.5930%" y="1647.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (51,153,459 samples, 0.51%)</title><rect x="94.3430%" y="1621" width="0.5088%" height="15" fill="rgb(251,196,0)" fg:x="9484453104" fg:w="51153459"/><text x="94.5930%" y="1631.50"></text></g><g><title>syscall (43,129,387 samples, 0.43%)</title><rect x="94.4228%" y="1605" width="0.4290%" height="15" fill="rgb(212,127,0)" fg:x="9492477176" fg:w="43129387"/><text x="94.6728%" y="1615.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (17,051,153 samples, 0.17%)</title><rect x="94.9117%" y="1637" width="0.1696%" height="15" fill="rgb(236,71,53)" fg:x="9541624617" fg:w="17051153"/><text x="95.1617%" y="1647.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (15,045,135 samples, 0.15%)</title><rect x="94.9317%" y="1621" width="0.1497%" height="15" fill="rgb(227,99,0)" fg:x="9543630635" fg:w="15045135"/><text x="95.1817%" y="1631.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (8,024,072 samples, 0.08%)</title><rect x="95.0015%" y="1605" width="0.0798%" height="15" fill="rgb(239,89,21)" fg:x="9550651698" fg:w="8024072"/><text x="95.2515%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (3,009,027 samples, 0.03%)</title><rect x="95.0813%" y="1637" width="0.0299%" height="15" fill="rgb(243,122,19)" fg:x="9558675770" fg:w="3009027"/><text x="95.3313%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (2,006,018 samples, 0.02%)</title><rect x="95.0913%" y="1621" width="0.0200%" height="15" fill="rgb(229,192,45)" fg:x="9559678779" fg:w="2006018"/><text x="95.3413%" y="1631.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (2,006,018 samples, 0.02%)</title><rect x="95.0913%" y="1605" width="0.0200%" height="15" fill="rgb(235,165,35)" fg:x="9559678779" fg:w="2006018"/><text x="95.3413%" y="1615.50"></text></g><g><title>tokio::runtime::task::waker::drop_waker (2,006,018 samples, 0.02%)</title><rect x="95.0913%" y="1589" width="0.0200%" height="15" fill="rgb(253,202,0)" fg:x="9559678779" fg:w="2006018"/><text x="95.3413%" y="1599.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::drop_reference (2,006,018 samples, 0.02%)</title><rect x="95.0913%" y="1573" width="0.0200%" height="15" fill="rgb(235,51,20)" fg:x="9559678779" fg:w="2006018"/><text x="95.3413%" y="1583.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (2,006,018 samples, 0.02%)</title><rect x="95.0913%" y="1557" width="0.0200%" height="15" fill="rgb(218,95,46)" fg:x="9559678779" fg:w="2006018"/><text x="95.3413%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::poison::mutex::MutexGuard&lt;h2::proto::streams::buffer::Buffer&lt;h2::frame::Frame&lt;hyper::proto::h2::SendBuf&lt;bytes::bytes::Bytes&gt;&gt;&gt;&gt;&gt; (4,012,036 samples, 0.04%)</title><rect x="95.1112%" y="1637" width="0.0399%" height="15" fill="rgb(212,81,10)" fg:x="9561684797" fg:w="4012036"/><text x="95.3612%" y="1647.50"></text></g><g><title>&lt;std::sync::poison::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4,012,036 samples, 0.04%)</title><rect x="95.1112%" y="1621" width="0.0399%" height="15" fill="rgb(240,59,0)" fg:x="9561684797" fg:w="4012036"/><text x="95.3612%" y="1631.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (4,012,036 samples, 0.04%)</title><rect x="95.1112%" y="1605" width="0.0399%" height="15" fill="rgb(212,191,42)" fg:x="9561684797" fg:w="4012036"/><text x="95.3612%" y="1615.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (4,012,036 samples, 0.04%)</title><rect x="95.1112%" y="1589" width="0.0399%" height="15" fill="rgb(233,140,3)" fg:x="9561684797" fg:w="4012036"/><text x="95.3612%" y="1599.50"></text></g><g><title>core::sync::atomic::atomic_swap (4,012,036 samples, 0.04%)</title><rect x="95.1112%" y="1573" width="0.0399%" height="15" fill="rgb(215,69,23)" fg:x="9561684797" fg:w="4012036"/><text x="95.3612%" y="1583.50"></text></g><g><title>h2::codec::Codec&lt;T,B&gt;::poll_ready (6,018,054 samples, 0.06%)</title><rect x="95.2110%" y="1605" width="0.0599%" height="15" fill="rgb(240,202,20)" fg:x="9571714887" fg:w="6018054"/><text x="95.4610%" y="1615.50"></text></g><g><title>h2::codec::framed_write::FramedWrite&lt;T,B&gt;::poll_ready (6,018,054 samples, 0.06%)</title><rect x="95.2110%" y="1589" width="0.0599%" height="15" fill="rgb(209,146,50)" fg:x="9571714887" fg:w="6018054"/><text x="95.4610%" y="1599.50"></text></g><g><title>h2::codec::framed_write::Encoder&lt;B&gt;::has_capacity (6,018,054 samples, 0.06%)</title><rect x="95.2110%" y="1573" width="0.0599%" height="15" fill="rgb(253,102,54)" fg:x="9571714887" fg:w="6018054"/><text x="95.4610%" y="1583.50"></text></g><g><title>h2::proto::streams::recv::Recv::poll_complete (16,048,144 samples, 0.16%)</title><rect x="95.1512%" y="1637" width="0.1596%" height="15" fill="rgb(250,173,47)" fg:x="9565696833" fg:w="16048144"/><text x="95.4012%" y="1647.50"></text></g><g><title>h2::proto::streams::recv::Recv::send_stream_window_updates (11,033,099 samples, 0.11%)</title><rect x="95.2010%" y="1621" width="0.1097%" height="15" fill="rgb(232,142,7)" fg:x="9570711878" fg:w="11033099"/><text x="95.4510%" y="1631.50"></text></g><g><title>h2::proto::streams::store::Queue&lt;N&gt;::pop (4,012,036 samples, 0.04%)</title><rect x="95.2709%" y="1605" width="0.0399%" height="15" fill="rgb(230,157,47)" fg:x="9577732941" fg:w="4012036"/><text x="95.5209%" y="1615.50"></text></g><g><title>__memcpy_evex_unaligned_erms (13,039,117 samples, 0.13%)</title><rect x="95.5403%" y="1605" width="0.1297%" height="15" fill="rgb(214,177,35)" fg:x="9604814184" fg:w="13039117"/><text x="95.7903%" y="1615.50"></text></g><g><title>h2::codec::Codec&lt;T,B&gt;::buffer (3,009,027 samples, 0.03%)</title><rect x="95.6700%" y="1605" width="0.0299%" height="15" fill="rgb(234,119,46)" fg:x="9617853301" fg:w="3009027"/><text x="95.9200%" y="1615.50"></text></g><g><title>h2::codec::framed_write::FramedWrite&lt;T,B&gt;::buffer (3,009,027 samples, 0.03%)</title><rect x="95.6700%" y="1589" width="0.0299%" height="15" fill="rgb(241,180,50)" fg:x="9617853301" fg:w="3009027"/><text x="95.9200%" y="1599.50"></text></g><g><title>h2::codec::framed_write::Encoder&lt;B&gt;::buffer (3,009,027 samples, 0.03%)</title><rect x="95.6700%" y="1573" width="0.0299%" height="15" fill="rgb(221,54,25)" fg:x="9617853301" fg:w="3009027"/><text x="95.9200%" y="1583.50"></text></g><g><title>h2::codec::Codec&lt;T,B&gt;::flush (2,006,018 samples, 0.02%)</title><rect x="95.6999%" y="1605" width="0.0200%" height="15" fill="rgb(209,157,44)" fg:x="9620862328" fg:w="2006018"/><text x="95.9499%" y="1615.50"></text></g><g><title>h2::codec::framed_write::FramedWrite&lt;T,B&gt;::flush (2,006,018 samples, 0.02%)</title><rect x="95.6999%" y="1589" width="0.0200%" height="15" fill="rgb(246,115,41)" fg:x="9620862328" fg:w="2006018"/><text x="95.9499%" y="1599.50"></text></g><g><title>h2::codec::Codec&lt;T,B&gt;::poll_ready (2,006,018 samples, 0.02%)</title><rect x="95.7198%" y="1605" width="0.0200%" height="15" fill="rgb(229,86,1)" fg:x="9622868346" fg:w="2006018"/><text x="95.9698%" y="1615.50"></text></g><g><title>h2::codec::framed_write::FramedWrite&lt;T,B&gt;::poll_ready (2,006,018 samples, 0.02%)</title><rect x="95.7198%" y="1589" width="0.0200%" height="15" fill="rgb(240,108,53)" fg:x="9622868346" fg:w="2006018"/><text x="95.9698%" y="1599.50"></text></g><g><title>h2::codec::framed_write::Encoder&lt;B&gt;::has_capacity (2,006,018 samples, 0.02%)</title><rect x="95.7198%" y="1573" width="0.0200%" height="15" fill="rgb(227,134,2)" fg:x="9622868346" fg:w="2006018"/><text x="95.9698%" y="1583.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::Deref&gt;::deref (15,045,135 samples, 0.15%)</title><rect x="96.0391%" y="1589" width="0.1497%" height="15" fill="rgb(213,129,25)" fg:x="9654964634" fg:w="15045135"/><text x="96.2891%" y="1599.50"></text></g><g><title>&lt;h2::proto::streams::store::Store as core::ops::index::Index&lt;h2::proto::streams::store::Key&gt;&gt;::index (5,015,045 samples, 0.05%)</title><rect x="96.1389%" y="1573" width="0.0499%" height="15" fill="rgb(226,35,21)" fg:x="9664994724" fg:w="5015045"/><text x="96.3889%" y="1583.50"></text></g><g><title>slab::Slab&lt;T&gt;::get (2,006,018 samples, 0.02%)</title><rect x="96.1688%" y="1557" width="0.0200%" height="15" fill="rgb(208,129,26)" fg:x="9668003751" fg:w="2006018"/><text x="96.4188%" y="1567.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::DerefMut&gt;::deref_mut (2,006,018 samples, 0.02%)</title><rect x="96.1888%" y="1589" width="0.0200%" height="15" fill="rgb(224,83,6)" fg:x="9670009769" fg:w="2006018"/><text x="96.4388%" y="1599.50"></text></g><g><title>__memcpy_evex_unaligned_erms (9,027,081 samples, 0.09%)</title><rect x="96.2187%" y="1589" width="0.0898%" height="15" fill="rgb(227,52,39)" fg:x="9673018796" fg:w="9027081"/><text x="96.4687%" y="1599.50"></text></g><g><title>core::cmp::PartialOrd::le (2,006,018 samples, 0.02%)</title><rect x="96.3085%" y="1589" width="0.0200%" height="15" fill="rgb(241,30,17)" fg:x="9682045877" fg:w="2006018"/><text x="96.5585%" y="1599.50"></text></g><g><title>&lt;log::Level as core::cmp::PartialOrd&lt;log::LevelFilter&gt;&gt;::partial_cmp (2,006,018 samples, 0.02%)</title><rect x="96.3085%" y="1573" width="0.0200%" height="15" fill="rgb(246,186,42)" fg:x="9682045877" fg:w="2006018"/><text x="96.5585%" y="1583.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (2,006,018 samples, 0.02%)</title><rect x="96.3085%" y="1557" width="0.0200%" height="15" fill="rgb(221,169,15)" fg:x="9682045877" fg:w="2006018"/><text x="96.5585%" y="1567.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (2,006,018 samples, 0.02%)</title><rect x="96.4083%" y="1541" width="0.0200%" height="15" fill="rgb(235,108,21)" fg:x="9692075967" fg:w="2006018"/><text x="96.6583%" y="1551.50"></text></g><g><title>core::cmp::PartialOrd::le (2,006,018 samples, 0.02%)</title><rect x="96.5080%" y="1525" width="0.0200%" height="15" fill="rgb(219,148,30)" fg:x="9702106057" fg:w="2006018"/><text x="96.7580%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (20,060,180 samples, 0.20%)</title><rect x="96.3384%" y="1589" width="0.1995%" height="15" fill="rgb(220,109,5)" fg:x="9685054904" fg:w="20060180"/><text x="96.5884%" y="1599.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (20,060,180 samples, 0.20%)</title><rect x="96.3384%" y="1573" width="0.1995%" height="15" fill="rgb(213,203,48)" fg:x="9685054904" fg:w="20060180"/><text x="96.5884%" y="1583.50"></text></g><g><title>tracing::span::Span::do_exit (20,060,180 samples, 0.20%)</title><rect x="96.3384%" y="1557" width="0.1995%" height="15" fill="rgb(244,71,33)" fg:x="9685054904" fg:w="20060180"/><text x="96.5884%" y="1567.50"></text></g><g><title>tracing::span::Span::log (11,033,099 samples, 0.11%)</title><rect x="96.4282%" y="1541" width="0.1097%" height="15" fill="rgb(209,23,2)" fg:x="9694081985" fg:w="11033099"/><text x="96.6782%" y="1551.50"></text></g><g><title>core::fmt::Arguments::new_v1 (3,009,027 samples, 0.03%)</title><rect x="96.5978%" y="1557" width="0.0299%" height="15" fill="rgb(219,97,7)" fg:x="9711133138" fg:w="3009027"/><text x="96.8478%" y="1567.50"></text></g><g><title>tracing::span::Span::log (13,039,117 samples, 0.13%)</title><rect x="96.6278%" y="1557" width="0.1297%" height="15" fill="rgb(216,161,23)" fg:x="9714142165" fg:w="13039117"/><text x="96.8778%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (26,078,234 samples, 0.26%)</title><rect x="96.5380%" y="1589" width="0.2594%" height="15" fill="rgb(207,45,42)" fg:x="9705115084" fg:w="26078234"/><text x="96.7880%" y="1599.50"></text></g><g><title>&lt;tracing::span::Span as core::ops::drop::Drop&gt;::drop (21,063,189 samples, 0.21%)</title><rect x="96.5878%" y="1573" width="0.2095%" height="15" fill="rgb(241,61,4)" fg:x="9710130129" fg:w="21063189"/><text x="96.8378%" y="1583.50"></text></g><g><title>tracing_core::metadata::Metadata::name (4,012,036 samples, 0.04%)</title><rect x="96.7575%" y="1557" width="0.0399%" height="15" fill="rgb(236,170,1)" fg:x="9727181282" fg:w="4012036"/><text x="97.0075%" y="1567.50"></text></g><g><title>h2::frame::Frame&lt;T&gt;::map (18,054,162 samples, 0.18%)</title><rect x="96.7974%" y="1589" width="0.1796%" height="15" fill="rgb(239,72,5)" fg:x="9731193318" fg:w="18054162"/><text x="97.0474%" y="1599.50"></text></g><g><title>__memcpy_evex_unaligned_erms (12,036,108 samples, 0.12%)</title><rect x="96.8572%" y="1573" width="0.1197%" height="15" fill="rgb(214,13,50)" fg:x="9737211372" fg:w="12036108"/><text x="97.1072%" y="1583.50"></text></g><g><title>h2::proto::streams::buffer::Deque::pop_front (5,015,045 samples, 0.05%)</title><rect x="96.9770%" y="1589" width="0.0499%" height="15" fill="rgb(224,88,9)" fg:x="9749247480" fg:w="5015045"/><text x="97.2270%" y="1599.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::Deref&gt;::deref (2,006,018 samples, 0.02%)</title><rect x="97.1166%" y="1573" width="0.0200%" height="15" fill="rgb(238,192,34)" fg:x="9763289606" fg:w="2006018"/><text x="97.3666%" y="1583.50"></text></g><g><title>h2::proto::streams::counts::Counts::dec_num_streams (2,006,018 samples, 0.02%)</title><rect x="97.1366%" y="1573" width="0.0200%" height="15" fill="rgb(217,203,50)" fg:x="9765295624" fg:w="2006018"/><text x="97.3866%" y="1583.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::Deref&gt;::deref (2,006,018 samples, 0.02%)</title><rect x="97.1366%" y="1557" width="0.0200%" height="15" fill="rgb(241,123,32)" fg:x="9765295624" fg:w="2006018"/><text x="97.3866%" y="1567.50"></text></g><g><title>h2::proto::streams::store::Ptr::remove (3,009,027 samples, 0.03%)</title><rect x="97.1565%" y="1573" width="0.0299%" height="15" fill="rgb(248,151,39)" fg:x="9767301642" fg:w="3009027"/><text x="97.4065%" y="1583.50"></text></g><g><title>&lt;h2::frame::stream_id::StreamId as core::hash::Hash&gt;::hash (4,012,036 samples, 0.04%)</title><rect x="97.2064%" y="1509" width="0.0399%" height="15" fill="rgb(208,89,6)" fg:x="9772316687" fg:w="4012036"/><text x="97.4564%" y="1519.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (4,012,036 samples, 0.04%)</title><rect x="97.2064%" y="1493" width="0.0399%" height="15" fill="rgb(254,43,26)" fg:x="9772316687" fg:w="4012036"/><text x="97.4564%" y="1503.50"></text></g><g><title>core::hash::Hasher::write_u32 (4,012,036 samples, 0.04%)</title><rect x="97.2064%" y="1477" width="0.0399%" height="15" fill="rgb(216,158,13)" fg:x="9772316687" fg:w="4012036"/><text x="97.4564%" y="1487.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (4,012,036 samples, 0.04%)</title><rect x="97.2064%" y="1461" width="0.0399%" height="15" fill="rgb(212,47,37)" fg:x="9772316687" fg:w="4012036"/><text x="97.4564%" y="1471.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (4,012,036 samples, 0.04%)</title><rect x="97.2064%" y="1445" width="0.0399%" height="15" fill="rgb(254,16,10)" fg:x="9772316687" fg:w="4012036"/><text x="97.4564%" y="1455.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4,012,036 samples, 0.04%)</title><rect x="97.2064%" y="1429" width="0.0399%" height="15" fill="rgb(223,228,16)" fg:x="9772316687" fg:w="4012036"/><text x="97.4564%" y="1439.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (7,021,063 samples, 0.07%)</title><rect x="97.2064%" y="1525" width="0.0698%" height="15" fill="rgb(249,108,50)" fg:x="9772316687" fg:w="7021063"/><text x="97.4564%" y="1535.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (3,009,027 samples, 0.03%)</title><rect x="97.2463%" y="1509" width="0.0299%" height="15" fill="rgb(208,220,5)" fg:x="9776328723" fg:w="3009027"/><text x="97.4963%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3,009,027 samples, 0.03%)</title><rect x="97.2463%" y="1493" width="0.0299%" height="15" fill="rgb(217,89,48)" fg:x="9776328723" fg:w="3009027"/><text x="97.4963%" y="1503.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3,009,027 samples, 0.03%)</title><rect x="97.2463%" y="1477" width="0.0299%" height="15" fill="rgb(212,113,41)" fg:x="9776328723" fg:w="3009027"/><text x="97.4963%" y="1487.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3,009,027 samples, 0.03%)</title><rect x="97.2463%" y="1461" width="0.0299%" height="15" fill="rgb(231,127,5)" fg:x="9776328723" fg:w="3009027"/><text x="97.4963%" y="1471.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3,009,027 samples, 0.03%)</title><rect x="97.2463%" y="1445" width="0.0299%" height="15" fill="rgb(217,141,17)" fg:x="9776328723" fg:w="3009027"/><text x="97.4963%" y="1455.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::pop (3,009,027 samples, 0.03%)</title><rect x="97.2763%" y="1525" width="0.0299%" height="15" fill="rgb(245,125,54)" fg:x="9779337750" fg:w="3009027"/><text x="97.5263%" y="1535.50"></text></g><g><title>indexmap::map::core::erase_index (3,009,027 samples, 0.03%)</title><rect x="97.2763%" y="1509" width="0.0299%" height="15" fill="rgb(248,125,3)" fg:x="9779337750" fg:w="3009027"/><text x="97.5263%" y="1519.50"></text></g><g><title>hashbrown::table::OccupiedEntry&lt;T,A&gt;::remove (2,006,018 samples, 0.02%)</title><rect x="97.2862%" y="1493" width="0.0200%" height="15" fill="rgb(236,119,51)" fg:x="9780340759" fg:w="2006018"/><text x="97.5362%" y="1503.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove (2,006,018 samples, 0.02%)</title><rect x="97.2862%" y="1477" width="0.0200%" height="15" fill="rgb(239,99,8)" fg:x="9780340759" fg:w="2006018"/><text x="97.5362%" y="1487.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::erase_no_drop (2,006,018 samples, 0.02%)</title><rect x="97.2862%" y="1461" width="0.0200%" height="15" fill="rgb(224,228,4)" fg:x="9780340759" fg:w="2006018"/><text x="97.5362%" y="1471.50"></text></g><g><title>hashbrown::raw::RawTableInner::erase (2,006,018 samples, 0.02%)</title><rect x="97.2862%" y="1445" width="0.0200%" height="15" fill="rgb(220,131,45)" fg:x="9780340759" fg:w="2006018"/><text x="97.5362%" y="1455.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (3,009,027 samples, 0.03%)</title><rect x="97.3361%" y="1461" width="0.0299%" height="15" fill="rgb(215,62,5)" fg:x="9785355804" fg:w="3009027"/><text x="97.5861%" y="1471.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (3,009,027 samples, 0.03%)</title><rect x="97.3361%" y="1445" width="0.0299%" height="15" fill="rgb(253,12,24)" fg:x="9785355804" fg:w="3009027"/><text x="97.5861%" y="1455.50"></text></g><g><title>hashbrown::table::HashTable&lt;T,A&gt;::find_entry (6,018,054 samples, 0.06%)</title><rect x="97.3361%" y="1509" width="0.0599%" height="15" fill="rgb(248,120,50)" fg:x="9785355804" fg:w="6018054"/><text x="97.5861%" y="1519.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6,018,054 samples, 0.06%)</title><rect x="97.3361%" y="1493" width="0.0599%" height="15" fill="rgb(245,194,10)" fg:x="9785355804" fg:w="6018054"/><text x="97.5861%" y="1503.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (6,018,054 samples, 0.06%)</title><rect x="97.3361%" y="1477" width="0.0599%" height="15" fill="rgb(241,149,38)" fg:x="9785355804" fg:w="6018054"/><text x="97.5861%" y="1487.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (3,009,027 samples, 0.03%)</title><rect x="97.3661%" y="1461" width="0.0299%" height="15" fill="rgb(219,215,7)" fg:x="9788364831" fg:w="3009027"/><text x="97.6161%" y="1471.50"></text></g><g><title>indexmap::map::core::equivalent::{{closure}} (3,009,027 samples, 0.03%)</title><rect x="97.3661%" y="1445" width="0.0299%" height="15" fill="rgb(208,120,31)" fg:x="9788364831" fg:w="3009027"/><text x="97.6161%" y="1455.50"></text></g><g><title>hashbrown::table::OccupiedEntry&lt;T,A&gt;::remove (6,018,054 samples, 0.06%)</title><rect x="97.3960%" y="1509" width="0.0599%" height="15" fill="rgb(244,30,8)" fg:x="9791373858" fg:w="6018054"/><text x="97.6460%" y="1519.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove (6,018,054 samples, 0.06%)</title><rect x="97.3960%" y="1493" width="0.0599%" height="15" fill="rgb(238,35,44)" fg:x="9791373858" fg:w="6018054"/><text x="97.6460%" y="1503.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::erase_no_drop (6,018,054 samples, 0.06%)</title><rect x="97.3960%" y="1477" width="0.0599%" height="15" fill="rgb(243,218,37)" fg:x="9791373858" fg:w="6018054"/><text x="97.6460%" y="1487.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket_index (6,018,054 samples, 0.06%)</title><rect x="97.3960%" y="1461" width="0.0599%" height="15" fill="rgb(218,169,10)" fg:x="9791373858" fg:w="6018054"/><text x="97.6460%" y="1471.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::to_base_index (6,018,054 samples, 0.06%)</title><rect x="97.3960%" y="1445" width="0.0599%" height="15" fill="rgb(221,144,10)" fg:x="9791373858" fg:w="6018054"/><text x="97.6460%" y="1455.50"></text></g><g><title>hashbrown::raw::offset_from (6,018,054 samples, 0.06%)</title><rect x="97.3960%" y="1429" width="0.0599%" height="15" fill="rgb(226,41,38)" fg:x="9791373858" fg:w="6018054"/><text x="97.6460%" y="1439.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (6,018,054 samples, 0.06%)</title><rect x="97.3960%" y="1413" width="0.0599%" height="15" fill="rgb(228,3,1)" fg:x="9791373858" fg:w="6018054"/><text x="97.6460%" y="1423.50"></text></g><g><title>h2::proto::streams::store::Ptr::unlink (31,093,279 samples, 0.31%)</title><rect x="97.1865%" y="1573" width="0.3093%" height="15" fill="rgb(209,129,12)" fg:x="9770310669" fg:w="31093279"/><text x="97.4365%" y="1583.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::swap_remove (30,090,270 samples, 0.30%)</title><rect x="97.1964%" y="1557" width="0.2993%" height="15" fill="rgb(213,136,33)" fg:x="9771313678" fg:w="30090270"/><text x="97.4464%" y="1567.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::swap_remove_full (30,090,270 samples, 0.30%)</title><rect x="97.1964%" y="1541" width="0.2993%" height="15" fill="rgb(209,181,29)" fg:x="9771313678" fg:w="30090270"/><text x="97.4464%" y="1551.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::swap_remove_full (19,057,171 samples, 0.19%)</title><rect x="97.3062%" y="1525" width="0.1896%" height="15" fill="rgb(234,173,18)" fg:x="9782346777" fg:w="19057171"/><text x="97.5562%" y="1535.50"></text></g><g><title>indexmap::map::core::RefMut&lt;K,V&gt;::swap_remove_finish (4,012,036 samples, 0.04%)</title><rect x="97.4559%" y="1509" width="0.0399%" height="15" fill="rgb(227,73,47)" fg:x="9797391912" fg:w="4012036"/><text x="97.7059%" y="1519.50"></text></g><g><title>indexmap::map::core::update_index (4,012,036 samples, 0.04%)</title><rect x="97.4559%" y="1493" width="0.0399%" height="15" fill="rgb(234,9,34)" fg:x="9797391912" fg:w="4012036"/><text x="97.7059%" y="1503.50"></text></g><g><title>hashbrown::table::HashTable&lt;T,A&gt;::find_mut (2,006,018 samples, 0.02%)</title><rect x="97.4758%" y="1477" width="0.0200%" height="15" fill="rgb(235,172,15)" fg:x="9799397930" fg:w="2006018"/><text x="97.7258%" y="1487.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (2,006,018 samples, 0.02%)</title><rect x="97.4758%" y="1461" width="0.0200%" height="15" fill="rgb(245,61,2)" fg:x="9799397930" fg:w="2006018"/><text x="97.7258%" y="1471.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2,006,018 samples, 0.02%)</title><rect x="97.4758%" y="1445" width="0.0200%" height="15" fill="rgb(238,39,47)" fg:x="9799397930" fg:w="2006018"/><text x="97.7258%" y="1455.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (2,006,018 samples, 0.02%)</title><rect x="97.4758%" y="1429" width="0.0200%" height="15" fill="rgb(234,37,24)" fg:x="9799397930" fg:w="2006018"/><text x="97.7258%" y="1439.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (2,006,018 samples, 0.02%)</title><rect x="97.4758%" y="1413" width="0.0200%" height="15" fill="rgb(248,223,24)" fg:x="9799397930" fg:w="2006018"/><text x="97.7258%" y="1423.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2,006,018 samples, 0.02%)</title><rect x="97.4758%" y="1397" width="0.0200%" height="15" fill="rgb(223,12,15)" fg:x="9799397930" fg:w="2006018"/><text x="97.7258%" y="1407.50"></text></g><g><title>h2::proto::streams::counts::Counts::transition_after (50,150,450 samples, 0.50%)</title><rect x="97.0268%" y="1589" width="0.4989%" height="15" fill="rgb(249,6,3)" fg:x="9754262525" fg:w="50150450"/><text x="97.2768%" y="1599.50"></text></g><g><title>h2::proto::streams::stream::Stream::is_released (2,006,018 samples, 0.02%)</title><rect x="97.5057%" y="1573" width="0.0200%" height="15" fill="rgb(237,105,33)" fg:x="9802406957" fg:w="2006018"/><text x="97.7557%" y="1583.50"></text></g><g><title>h2::proto::streams::stream::Stream::is_closed (2,006,018 samples, 0.02%)</title><rect x="97.5057%" y="1557" width="0.0200%" height="15" fill="rgb(252,208,35)" fg:x="9802406957" fg:w="2006018"/><text x="97.7557%" y="1567.50"></text></g><g><title>h2::proto::streams::flow_control::FlowControl::available (3,009,027 samples, 0.03%)</title><rect x="97.5257%" y="1589" width="0.0299%" height="15" fill="rgb(215,181,35)" fg:x="9804412975" fg:w="3009027"/><text x="97.7757%" y="1599.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2,006,018 samples, 0.02%)</title><rect x="97.7153%" y="1525" width="0.0200%" height="15" fill="rgb(246,212,3)" fg:x="9823470146" fg:w="2006018"/><text x="97.9653%" y="1535.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (2,006,018 samples, 0.02%)</title><rect x="97.7153%" y="1509" width="0.0200%" height="15" fill="rgb(247,156,24)" fg:x="9823470146" fg:w="2006018"/><text x="97.9653%" y="1519.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (2,006,018 samples, 0.02%)</title><rect x="97.7153%" y="1493" width="0.0200%" height="15" fill="rgb(248,9,31)" fg:x="9823470146" fg:w="2006018"/><text x="97.9653%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2,006,018 samples, 0.02%)</title><rect x="97.7153%" y="1477" width="0.0200%" height="15" fill="rgb(234,26,45)" fg:x="9823470146" fg:w="2006018"/><text x="97.9653%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (2,006,018 samples, 0.02%)</title><rect x="97.7153%" y="1461" width="0.0200%" height="15" fill="rgb(249,11,32)" fg:x="9823470146" fg:w="2006018"/><text x="97.9653%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (2,006,018 samples, 0.02%)</title><rect x="97.7153%" y="1445" width="0.0200%" height="15" fill="rgb(249,162,33)" fg:x="9823470146" fg:w="2006018"/><text x="97.9653%" y="1455.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::Deref&gt;::deref (4,012,036 samples, 0.04%)</title><rect x="97.7053%" y="1573" width="0.0399%" height="15" fill="rgb(232,4,32)" fg:x="9822467137" fg:w="4012036"/><text x="97.9553%" y="1583.50"></text></g><g><title>&lt;h2::proto::streams::store::Store as core::ops::index::Index&lt;h2::proto::streams::store::Key&gt;&gt;::index (3,009,027 samples, 0.03%)</title><rect x="97.7153%" y="1557" width="0.0299%" height="15" fill="rgb(212,5,45)" fg:x="9823470146" fg:w="3009027"/><text x="97.9653%" y="1567.50"></text></g><g><title>slab::Slab&lt;T&gt;::get (3,009,027 samples, 0.03%)</title><rect x="97.7153%" y="1541" width="0.0299%" height="15" fill="rgb(227,95,13)" fg:x="9823470146" fg:w="3009027"/><text x="97.9653%" y="1551.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::DerefMut&gt;::deref_mut (13,039,117 samples, 0.13%)</title><rect x="97.7452%" y="1573" width="0.1297%" height="15" fill="rgb(223,205,10)" fg:x="9826479173" fg:w="13039117"/><text x="97.9952%" y="1583.50"></text></g><g><title>&lt;h2::proto::streams::store::Store as core::ops::index::IndexMut&lt;h2::proto::streams::store::Key&gt;&gt;::index_mut (10,030,090 samples, 0.10%)</title><rect x="97.7751%" y="1557" width="0.0998%" height="15" fill="rgb(222,178,8)" fg:x="9829488200" fg:w="10030090"/><text x="98.0251%" y="1567.50"></text></g><g><title>slab::Slab&lt;T&gt;::get_mut (9,027,081 samples, 0.09%)</title><rect x="97.7851%" y="1541" width="0.0898%" height="15" fill="rgb(216,13,22)" fg:x="9830491209" fg:w="9027081"/><text x="98.0351%" y="1551.50"></text></g><g><title>h2::proto::streams::store::Queue&lt;N&gt;::pop (34,102,306 samples, 0.34%)</title><rect x="97.5556%" y="1589" width="0.3392%" height="15" fill="rgb(240,167,12)" fg:x="9807422002" fg:w="34102306"/><text x="97.8056%" y="1599.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (2,006,018 samples, 0.02%)</title><rect x="97.8749%" y="1573" width="0.0200%" height="15" fill="rgb(235,68,35)" fg:x="9839518290" fg:w="2006018"/><text x="98.1249%" y="1583.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::Deref&gt;::deref (2,006,018 samples, 0.02%)</title><rect x="97.9348%" y="1573" width="0.0200%" height="15" fill="rgb(253,40,27)" fg:x="9845536344" fg:w="2006018"/><text x="98.1848%" y="1583.50"></text></g><g><title>&lt;h2::proto::streams::store::Ptr as core::ops::deref::DerefMut&gt;::deref_mut (4,012,036 samples, 0.04%)</title><rect x="97.9547%" y="1573" width="0.0399%" height="15" fill="rgb(214,19,28)" fg:x="9847542362" fg:w="4012036"/><text x="98.2047%" y="1583.50"></text></g><g><title>&lt;h2::proto::streams::store::Store as core::ops::index::IndexMut&lt;h2::proto::streams::store::Key&gt;&gt;::index_mut (2,006,018 samples, 0.02%)</title><rect x="97.9747%" y="1557" width="0.0200%" height="15" fill="rgb(210,167,45)" fg:x="9849548380" fg:w="2006018"/><text x="98.2247%" y="1567.50"></text></g><g><title>h2::proto::streams::store::Queue&lt;N&gt;::push (14,042,126 samples, 0.14%)</title><rect x="97.8948%" y="1589" width="0.1397%" height="15" fill="rgb(232,97,40)" fg:x="9841524308" fg:w="14042126"/><text x="98.1448%" y="1599.50"></text></g><g><title>h2::proto::streams::stream::Stream::is_pending_reset_expiration (4,012,036 samples, 0.04%)</title><rect x="98.0345%" y="1589" width="0.0399%" height="15" fill="rgb(250,35,23)" fg:x="9855566434" fg:w="4012036"/><text x="98.2845%" y="1599.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (4,012,036 samples, 0.04%)</title><rect x="98.0345%" y="1573" width="0.0399%" height="15" fill="rgb(248,47,53)" fg:x="9855566434" fg:w="4012036"/><text x="98.2845%" y="1583.50"></text></g><g><title>tracing::__macro_support::__disabled_span (6,018,054 samples, 0.06%)</title><rect x="98.0844%" y="1589" width="0.0599%" height="15" fill="rgb(226,58,50)" fg:x="9860581479" fg:w="6018054"/><text x="98.3344%" y="1599.50"></text></g><g><title>tracing::span::Span::new_disabled (6,018,054 samples, 0.06%)</title><rect x="98.0844%" y="1573" width="0.0599%" height="15" fill="rgb(217,105,26)" fg:x="9860581479" fg:w="6018054"/><text x="98.3344%" y="1583.50"></text></g><g><title>tracing::span::Span::log (8,024,072 samples, 0.08%)</title><rect x="98.2141%" y="1557" width="0.0798%" height="15" fill="rgb(208,64,1)" fg:x="9873620596" fg:w="8024072"/><text x="98.4641%" y="1567.50"></text></g><g><title>tracing::span::Span::enter (17,051,153 samples, 0.17%)</title><rect x="98.1443%" y="1589" width="0.1696%" height="15" fill="rgb(214,80,1)" fg:x="9866599533" fg:w="17051153"/><text x="98.3943%" y="1599.50"></text></g><g><title>tracing::span::Span::do_enter (17,051,153 samples, 0.17%)</title><rect x="98.1443%" y="1573" width="0.1696%" height="15" fill="rgb(206,175,26)" fg:x="9866599533" fg:w="17051153"/><text x="98.3943%" y="1583.50"></text></g><g><title>core::fmt::Arguments::new_v1 (2,006,018 samples, 0.02%)</title><rect x="98.3239%" y="1525" width="0.0200%" height="15" fill="rgb(235,156,37)" fg:x="9884653695" fg:w="2006018"/><text x="98.5739%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (4,012,036 samples, 0.04%)</title><rect x="98.3139%" y="1573" width="0.0399%" height="15" fill="rgb(213,100,9)" fg:x="9883650686" fg:w="4012036"/><text x="98.5639%" y="1583.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (4,012,036 samples, 0.04%)</title><rect x="98.3139%" y="1557" width="0.0399%" height="15" fill="rgb(241,15,13)" fg:x="9883650686" fg:w="4012036"/><text x="98.5639%" y="1567.50"></text></g><g><title>tracing::span::Span::do_exit (4,012,036 samples, 0.04%)</title><rect x="98.3139%" y="1541" width="0.0399%" height="15" fill="rgb(205,97,43)" fg:x="9883650686" fg:w="4012036"/><text x="98.5639%" y="1551.50"></text></g><g><title>h2::proto::streams::flow_control::FlowControl::assign_capacity (6,018,054 samples, 0.06%)</title><rect x="98.3737%" y="1557" width="0.0599%" height="15" fill="rgb(216,106,32)" fg:x="9889668740" fg:w="6018054"/><text x="98.6237%" y="1567.50"></text></g><g><title>h2::proto::streams::flow_control::Window::increase_by (6,018,054 samples, 0.06%)</title><rect x="98.3737%" y="1541" width="0.0599%" height="15" fill="rgb(226,200,8)" fg:x="9889668740" fg:w="6018054"/><text x="98.6237%" y="1551.50"></text></g><g><title>h2::proto::streams::flow_control::Window::add (6,018,054 samples, 0.06%)</title><rect x="98.3737%" y="1525" width="0.0599%" height="15" fill="rgb(244,54,29)" fg:x="9889668740" fg:w="6018054"/><text x="98.6237%" y="1535.50"></text></g><g><title>core::num::&lt;impl i32&gt;::checked_add (6,018,054 samples, 0.06%)</title><rect x="98.3737%" y="1509" width="0.0599%" height="15" fill="rgb(252,169,12)" fg:x="9889668740" fg:w="6018054"/><text x="98.6237%" y="1519.50"></text></g><g><title>core::num::&lt;impl i32&gt;::overflowing_add (6,018,054 samples, 0.06%)</title><rect x="98.3737%" y="1493" width="0.0599%" height="15" fill="rgb(231,199,11)" fg:x="9889668740" fg:w="6018054"/><text x="98.6237%" y="1503.50"></text></g><g><title>h2::proto::streams::flow_control::FlowControl::send_data (3,009,027 samples, 0.03%)</title><rect x="98.4336%" y="1557" width="0.0299%" height="15" fill="rgb(233,191,18)" fg:x="9895686794" fg:w="3009027"/><text x="98.6836%" y="1567.50"></text></g><g><title>h2::proto::streams::prioritize::Prioritize::pop_frame::{{closure}} (19,057,171 samples, 0.19%)</title><rect x="98.3538%" y="1573" width="0.1896%" height="15" fill="rgb(215,83,47)" fg:x="9887662722" fg:w="19057171"/><text x="98.6038%" y="1583.50"></text></g><g><title>h2::proto::streams::stream::Stream::send_data (8,024,072 samples, 0.08%)</title><rect x="98.4635%" y="1557" width="0.0798%" height="15" fill="rgb(251,67,19)" fg:x="9898695821" fg:w="8024072"/><text x="98.7135%" y="1567.50"></text></g><g><title>h2::proto::streams::stream::Stream::capacity (3,009,027 samples, 0.03%)</title><rect x="98.5134%" y="1541" width="0.0299%" height="15" fill="rgb(240,7,20)" fg:x="9903710866" fg:w="3009027"/><text x="98.7634%" y="1551.50"></text></g><g><title>h2::proto::streams::flow_control::FlowControl::available (2,006,018 samples, 0.02%)</title><rect x="98.5234%" y="1525" width="0.0200%" height="15" fill="rgb(210,150,26)" fg:x="9904713875" fg:w="2006018"/><text x="98.7734%" y="1535.50"></text></g><g><title>tracing::span::Span::in_scope (27,081,243 samples, 0.27%)</title><rect x="98.3139%" y="1589" width="0.2694%" height="15" fill="rgb(228,75,42)" fg:x="9883650686" fg:w="27081243"/><text x="98.5639%" y="1599.50"></text></g><g><title>tracing::span::Span::enter (4,012,036 samples, 0.04%)</title><rect x="98.5434%" y="1573" width="0.0399%" height="15" fill="rgb(237,134,48)" fg:x="9906719893" fg:w="4012036"/><text x="98.7934%" y="1583.50"></text></g><g><title>tracing::span::Span::do_enter (4,012,036 samples, 0.04%)</title><rect x="98.5434%" y="1557" width="0.0399%" height="15" fill="rgb(205,80,50)" fg:x="9906719893" fg:w="4012036"/><text x="98.7934%" y="1567.50"></text></g><g><title>core::fmt::Arguments::new_v1 (4,012,036 samples, 0.04%)</title><rect x="98.6930%" y="1573" width="0.0399%" height="15" fill="rgb(217,74,48)" fg:x="9921765028" fg:w="4012036"/><text x="98.9430%" y="1583.50"></text></g><g><title>tracing::span::Span::log (4,012,036 samples, 0.04%)</title><rect x="98.7329%" y="1573" width="0.0399%" height="15" fill="rgb(205,82,50)" fg:x="9925777064" fg:w="4012036"/><text x="98.9829%" y="1583.50"></text></g><g><title>tracing_core::metadata::Metadata::name (7,021,063 samples, 0.07%)</title><rect x="98.7728%" y="1573" width="0.0698%" height="15" fill="rgb(228,1,33)" fg:x="9929789100" fg:w="7021063"/><text x="99.0228%" y="1583.50"></text></g><g><title>tracing::span::Span::record_all (35,105,315 samples, 0.35%)</title><rect x="98.5833%" y="1589" width="0.3492%" height="15" fill="rgb(214,50,23)" fg:x="9910731929" fg:w="35105315"/><text x="98.8333%" y="1599.50"></text></g><g><title>tracing_core::span::Record::is_empty (8,024,072 samples, 0.08%)</title><rect x="98.8526%" y="1573" width="0.0798%" height="15" fill="rgb(210,62,9)" fg:x="9937813172" fg:w="8024072"/><text x="99.1026%" y="1583.50"></text></g><g><title>tracing_core::field::ValueSet::is_empty (4,012,036 samples, 0.04%)</title><rect x="98.8925%" y="1557" width="0.0399%" height="15" fill="rgb(210,104,37)" fg:x="9941825208" fg:w="4012036"/><text x="99.1425%" y="1567.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::all (2,006,018 samples, 0.02%)</title><rect x="98.9125%" y="1541" width="0.0200%" height="15" fill="rgb(232,104,43)" fg:x="9943831226" fg:w="2006018"/><text x="99.1625%" y="1551.50"></text></g><g><title>tracing_core::field::FieldSet::value_set (5,015,045 samples, 0.05%)</title><rect x="98.9424%" y="1589" width="0.0499%" height="15" fill="rgb(244,52,6)" fg:x="9946840253" fg:w="5015045"/><text x="99.1924%" y="1599.50"></text></g><g><title>h2::proto::streams::prioritize::Prioritize::pop_frame (330,992,970 samples, 3.29%)</title><rect x="95.7398%" y="1605" width="3.2924%" height="15" fill="rgb(211,174,52)" fg:x="9624874364" fg:w="330992970"/><text x="95.9898%" y="1615.50">h2:..</text></g><g><title>tracing_core::metadata::LevelFilter::current (4,012,036 samples, 0.04%)</title><rect x="98.9923%" y="1589" width="0.0399%" height="15" fill="rgb(229,48,4)" fg:x="9951855298" fg:w="4012036"/><text x="99.2423%" y="1599.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (4,012,036 samples, 0.04%)</title><rect x="98.9923%" y="1573" width="0.0399%" height="15" fill="rgb(205,155,16)" fg:x="9951855298" fg:w="4012036"/><text x="99.2423%" y="1583.50"></text></g><g><title>core::sync::atomic::atomic_load (4,012,036 samples, 0.04%)</title><rect x="98.9923%" y="1557" width="0.0399%" height="15" fill="rgb(211,141,53)" fg:x="9951855298" fg:w="4012036"/><text x="99.2423%" y="1567.50"></text></g><g><title>h2::proto::streams::counts::Counts::can_inc_num_send_streams (8,024,072 samples, 0.08%)</title><rect x="99.1619%" y="1589" width="0.0798%" height="15" fill="rgb(240,148,11)" fg:x="9968906451" fg:w="8024072"/><text x="99.4119%" y="1599.50"></text></g><g><title>h2::proto::streams::store::Queue&lt;N&gt;::pop (6,018,054 samples, 0.06%)</title><rect x="99.2417%" y="1589" width="0.0599%" height="15" fill="rgb(214,45,23)" fg:x="9976930523" fg:w="6018054"/><text x="99.4917%" y="1599.50"></text></g><g><title>h2::proto::streams::prioritize::Prioritize::pop_pending_open (28,084,252 samples, 0.28%)</title><rect x="99.0322%" y="1605" width="0.2794%" height="15" fill="rgb(248,74,26)" fg:x="9955867334" fg:w="28084252"/><text x="99.2822%" y="1615.50"></text></g><g><title>h2::proto::streams::send::Send::poll_complete (413,239,708 samples, 4.11%)</title><rect x="95.3108%" y="1637" width="4.1105%" height="15" fill="rgb(218,121,16)" fg:x="9581744977" fg:w="413239708"/><text x="95.5608%" y="1647.50">h2::..</text></g><g><title>h2::proto::streams::prioritize::Prioritize::poll_complete (413,239,708 samples, 4.11%)</title><rect x="95.3108%" y="1621" width="4.1105%" height="15" fill="rgb(218,10,47)" fg:x="9581744977" fg:w="413239708"/><text x="95.5608%" y="1631.50">h2::..</text></g><g><title>h2::proto::streams::prioritize::Prioritize::reclaim_frame (11,033,099 samples, 0.11%)</title><rect x="99.3116%" y="1605" width="0.1097%" height="15" fill="rgb(227,99,14)" fg:x="9983951586" fg:w="11033099"/><text x="99.5616%" y="1615.50"></text></g><g><title>h2::proto::streams::streams::Inner::poll_complete (464,393,167 samples, 4.62%)</title><rect x="94.8518%" y="1653" width="4.6194%" height="15" fill="rgb(229,83,46)" fg:x="9535606563" fg:w="464393167"/><text x="95.1018%" y="1663.50">h2::p..</text></g><g><title>std::sync::poison::mutex::Mutex&lt;T&gt;::lock (5,015,045 samples, 0.05%)</title><rect x="99.4213%" y="1637" width="0.0499%" height="15" fill="rgb(228,25,1)" fg:x="9994984685" fg:w="5015045"/><text x="99.6713%" y="1647.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (5,015,045 samples, 0.05%)</title><rect x="99.4213%" y="1621" width="0.0499%" height="15" fill="rgb(252,190,15)" fg:x="9994984685" fg:w="5015045"/><text x="99.6713%" y="1631.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (5,015,045 samples, 0.05%)</title><rect x="99.4213%" y="1605" width="0.0499%" height="15" fill="rgb(213,103,51)" fg:x="9994984685" fg:w="5015045"/><text x="99.6713%" y="1615.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (5,015,045 samples, 0.05%)</title><rect x="99.4213%" y="1589" width="0.0499%" height="15" fill="rgb(220,38,44)" fg:x="9994984685" fg:w="5015045"/><text x="99.6713%" y="1599.50"></text></g><g><title>std::sync::poison::mutex::MutexGuard&lt;T&gt;::new (3,009,027 samples, 0.03%)</title><rect x="99.4712%" y="1637" width="0.0299%" height="15" fill="rgb(210,45,26)" fg:x="9999999730" fg:w="3009027"/><text x="99.7212%" y="1647.50"></text></g><g><title>std::sync::poison::Flag::guard (3,009,027 samples, 0.03%)</title><rect x="99.4712%" y="1621" width="0.0299%" height="15" fill="rgb(205,95,48)" fg:x="9999999730" fg:w="3009027"/><text x="99.7212%" y="1631.50"></text></g><g><title>std::thread::panicking (3,009,027 samples, 0.03%)</title><rect x="99.4712%" y="1605" width="0.0299%" height="15" fill="rgb(225,179,37)" fg:x="9999999730" fg:w="3009027"/><text x="99.7212%" y="1615.50"></text></g><g><title>std::panicking::panicking (3,009,027 samples, 0.03%)</title><rect x="99.4712%" y="1589" width="0.0299%" height="15" fill="rgb(230,209,3)" fg:x="9999999730" fg:w="3009027"/><text x="99.7212%" y="1599.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (3,009,027 samples, 0.03%)</title><rect x="99.4712%" y="1573" width="0.0299%" height="15" fill="rgb(248,12,46)" fg:x="9999999730" fg:w="3009027"/><text x="99.7212%" y="1583.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2,006,018 samples, 0.02%)</title><rect x="99.4812%" y="1557" width="0.0200%" height="15" fill="rgb(234,18,0)" fg:x="10001002739" fg:w="2006018"/><text x="99.7312%" y="1567.50"></text></g><g><title>core::sync::atomic::atomic_load (2,006,018 samples, 0.02%)</title><rect x="99.4812%" y="1541" width="0.0200%" height="15" fill="rgb(238,197,14)" fg:x="10001002739" fg:w="2006018"/><text x="99.7312%" y="1551.50"></text></g><g><title>std::sys::pal::unix::futex::futex_wait (6,018,054 samples, 0.06%)</title><rect x="99.5710%" y="1605" width="0.0599%" height="15" fill="rgb(251,162,48)" fg:x="10010029820" fg:w="6018054"/><text x="99.8210%" y="1615.50"></text></g><g><title>syscall (3,009,027 samples, 0.03%)</title><rect x="99.6009%" y="1589" width="0.0299%" height="15" fill="rgb(237,73,42)" fg:x="10013038847" fg:w="3009027"/><text x="99.8509%" y="1599.50"></text></g><g><title>h2::proto::streams::streams::Streams&lt;B,P&gt;::poll_complete (552,657,959 samples, 5.50%)</title><rect x="94.2931%" y="1669" width="5.4974%" height="15" fill="rgb(211,108,8)" fg:x="9479438059" fg:w="552657959"/><text x="94.5431%" y="1679.50">h2::pro..</text></g><g><title>std::sync::poison::mutex::Mutex&lt;T&gt;::lock (32,096,288 samples, 0.32%)</title><rect x="99.4712%" y="1653" width="0.3193%" height="15" fill="rgb(213,45,22)" fg:x="9999999730" fg:w="32096288"/><text x="99.7212%" y="1663.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (29,087,261 samples, 0.29%)</title><rect x="99.5011%" y="1637" width="0.2893%" height="15" fill="rgb(252,154,5)" fg:x="10003008757" fg:w="29087261"/><text x="99.7511%" y="1647.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (24,072,216 samples, 0.24%)</title><rect x="99.5510%" y="1621" width="0.2394%" height="15" fill="rgb(221,79,52)" fg:x="10008023802" fg:w="24072216"/><text x="99.8010%" y="1631.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (16,048,144 samples, 0.16%)</title><rect x="99.6308%" y="1605" width="0.1596%" height="15" fill="rgb(229,220,36)" fg:x="10016047874" fg:w="16048144"/><text x="99.8808%" y="1615.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (10,030,090 samples, 0.10%)</title><rect x="99.6907%" y="1589" width="0.0998%" height="15" fill="rgb(211,17,16)" fg:x="10022065928" fg:w="10030090"/><text x="99.9407%" y="1599.50"></text></g><g><title>core::sync::atomic::atomic_load (10,030,090 samples, 0.10%)</title><rect x="99.6907%" y="1573" width="0.0998%" height="15" fill="rgb(222,55,31)" fg:x="10022065928" fg:w="10030090"/><text x="99.9407%" y="1583.50"></text></g><g><title>tracing::span::Span::log (3,009,027 samples, 0.03%)</title><rect x="99.8104%" y="1637" width="0.0299%" height="15" fill="rgb(221,221,31)" fg:x="10034102036" fg:w="3009027"/><text x="100.0604%" y="1647.50"></text></g><g><title>tracing::span::Span::enter (6,018,054 samples, 0.06%)</title><rect x="99.8005%" y="1669" width="0.0599%" height="15" fill="rgb(227,168,26)" fg:x="10033099027" fg:w="6018054"/><text x="100.0505%" y="1679.50"></text></g><g><title>tracing::span::Span::do_enter (6,018,054 samples, 0.06%)</title><rect x="99.8005%" y="1653" width="0.0599%" height="15" fill="rgb(224,139,9)" fg:x="10033099027" fg:w="6018054"/><text x="100.0505%" y="1663.50"></text></g><g><title>tracing_core::metadata::Metadata::name (2,006,018 samples, 0.02%)</title><rect x="99.8404%" y="1637" width="0.0200%" height="15" fill="rgb(254,172,0)" fg:x="10037111063" fg:w="2006018"/><text x="100.0904%" y="1647.50"></text></g><g><title>http-worker (10,052,156,198 samples, 99.99%)</title><rect x="0.0000%" y="2037" width="99.9900%" height="15" fill="rgb(235,203,1)" fg:x="0" fg:w="10052156198"/><text x="0.2500%" y="2047.50">http-worker</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1,429,287,825 samples, 14.22%)</title><rect x="85.7727%" y="2021" width="14.2173%" height="15" fill="rgb(216,205,24)" fg:x="8622868373" fg:w="1429287825"/><text x="86.0227%" y="2031.50">tokio::runtime::task::..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (1,429,287,825 samples, 14.22%)</title><rect x="85.7727%" y="2005" width="14.2173%" height="15" fill="rgb(233,24,6)" fg:x="8622868373" fg:w="1429287825"/><text x="86.0227%" y="2015.50">tokio::runtime::task::..</text></g><g><title>tokio::runtime::task::harness::poll_future (1,429,287,825 samples, 14.22%)</title><rect x="85.7727%" y="1989" width="14.2173%" height="15" fill="rgb(244,110,9)" fg:x="8622868373" fg:w="1429287825"/><text x="86.0227%" y="1999.50">tokio::runtime::task::..</text></g><g><title>std::panic::catch_unwind (1,429,287,825 samples, 14.22%)</title><rect x="85.7727%" y="1973" width="14.2173%" height="15" fill="rgb(239,222,42)" fg:x="8622868373" fg:w="1429287825"/><text x="86.0227%" y="1983.50">std::panic::catch_unwi..</text></g><g><title>std::panicking::try (1,429,287,825 samples, 14.22%)</title><rect x="85.7727%" y="1957" width="14.2173%" height="15" fill="rgb(218,145,13)" fg:x="8622868373" fg:w="1429287825"/><text x="86.0227%" y="1967.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,429,287,825 samples, 14.22%)</title><rect x="85.7727%" y="1941" width="14.2173%" height="15" fill="rgb(207,69,11)" fg:x="8622868373" fg:w="1429287825"/><text x="86.0227%" y="1951.50">std::panicking::try::d..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,429,287,825 samples, 14.22%)</title><rect x="85.7727%" y="1925" width="14.2173%" height="15" fill="rgb(220,223,22)" fg:x="8622868373" fg:w="1429287825"/><text x="86.0227%" y="1935.50">&lt;core::panic::unwind_s..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (1,429,287,825 samples, 14.22%)</title><rect x="85.7727%" y="1909" width="14.2173%" height="15" fill="rgb(245,102,5)" fg:x="8622868373" fg:w="1429287825"/><text x="86.0227%" y="1919.50">tokio::runtime::task::..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (1,429,287,825 samples, 14.22%)</title><rect x="85.7727%" y="1893" width="14.2173%" height="15" fill="rgb(211,148,2)" fg:x="8622868373" fg:w="1429287825"/><text x="86.0227%" y="1903.50">tokio::runtime::task::..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1,429,287,825 samples, 14.22%)</title><rect x="85.7727%" y="1877" width="14.2173%" height="15" fill="rgb(241,13,44)" fg:x="8622868373" fg:w="1429287825"/><text x="86.0227%" y="1887.50">tokio::loom::std::unsa..</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (1,429,287,825 samples, 14.22%)</title><rect x="85.7727%" y="1861" width="14.2173%" height="15" fill="rgb(219,137,21)" fg:x="8622868373" fg:w="1429287825"/><text x="86.0227%" y="1871.50">tokio::runtime::task::..</text></g><g><title>&lt;axum::serve::WithGracefulShutdown&lt;L,M,S,F&gt; as core::future::into_future::IntoFuture&gt;::into_future::{{closure}}::{{closure}} (1,429,287,825 samples, 14.22%)</title><rect x="85.7727%" y="1845" width="14.2173%" height="15" fill="rgb(242,206,5)" fg:x="8622868373" fg:w="1429287825"/><text x="86.0227%" y="1855.50">&lt;axum::serve::WithGrac..</text></g><g><title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1,429,287,825 samples, 14.22%)</title><rect x="85.7727%" y="1829" width="14.2173%" height="15" fill="rgb(217,114,22)" fg:x="8622868373" fg:w="1429287825"/><text x="86.0227%" y="1839.50">&lt;core::future::poll_fn..</text></g><g><title>&lt;axum::serve::WithGracefulShutdown&lt;L,M,S,F&gt; as core::future::into_future::IntoFuture&gt;::into_future::{{closure}}::{{closure}}::{{closure}} (1,429,287,825 samples, 14.22%)</title><rect x="85.7727%" y="1813" width="14.2173%" height="15" fill="rgb(253,206,42)" fg:x="8622868373" fg:w="1429287825"/><text x="86.0227%" y="1823.50">&lt;axum::serve::WithGrac..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,429,287,825 samples, 14.22%)</title><rect x="85.7727%" y="1797" width="14.2173%" height="15" fill="rgb(236,102,18)" fg:x="8622868373" fg:w="1429287825"/><text x="86.0227%" y="1807.50">&lt;core::pin::Pin&lt;P&gt; as ..</text></g><g><title>&lt;hyper_util::server::conn::auto::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (1,429,287,825 samples, 14.22%)</title><rect x="85.7727%" y="1781" width="14.2173%" height="15" fill="rgb(208,59,49)" fg:x="8622868373" fg:w="1429287825"/><text x="86.0227%" y="1791.50">&lt;hyper_util::server::c..</text></g><g><title>&lt;hyper::server::conn::http2::Connection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (1,429,287,825 samples, 14.22%)</title><rect x="85.7727%" y="1765" width="14.2173%" height="15" fill="rgb(215,194,28)" fg:x="8622868373" fg:w="1429287825"/><text x="86.0227%" y="1775.50">&lt;hyper::server::conn::..</text></g><g><title>&lt;hyper::proto::h2::server::Server&lt;T,S,B,E&gt; as core::future::future::Future&gt;::poll (1,429,287,825 samples, 14.22%)</title><rect x="85.7727%" y="1749" width="14.2173%" height="15" fill="rgb(243,207,11)" fg:x="8622868373" fg:w="1429287825"/><text x="86.0227%" y="1759.50">&lt;hyper::proto::h2::ser..</text></g><g><title>hyper::proto::h2::server::Serving&lt;T,B&gt;::poll_server (1,429,287,825 samples, 14.22%)</title><rect x="85.7727%" y="1733" width="14.2173%" height="15" fill="rgb(254,179,35)" fg:x="8622868373" fg:w="1429287825"/><text x="86.0227%" y="1743.50">hyper::proto::h2::serv..</text></g><g><title>h2::server::Connection&lt;T,B&gt;::poll_accept (1,330,992,943 samples, 13.24%)</title><rect x="86.7505%" y="1717" width="13.2395%" height="15" fill="rgb(235,97,3)" fg:x="8721163255" fg:w="1330992943"/><text x="87.0005%" y="1727.50">h2::server::Connecti..</text></g><g><title>h2::server::Connection&lt;T,B&gt;::poll_closed (1,330,992,943 samples, 13.24%)</title><rect x="86.7505%" y="1701" width="13.2395%" height="15" fill="rgb(215,155,33)" fg:x="8721163255" fg:w="1330992943"/><text x="87.0005%" y="1711.50">h2::server::Connecti..</text></g><g><title>h2::proto::connection::Connection&lt;T,P,B&gt;::poll (1,330,992,943 samples, 13.24%)</title><rect x="86.7505%" y="1685" width="13.2395%" height="15" fill="rgb(223,128,12)" fg:x="8721163255" fg:w="1330992943"/><text x="87.0005%" y="1695.50">h2::proto::connectio..</text></g><g><title>tracing::span::Span::record_all (13,039,117 samples, 0.13%)</title><rect x="99.8603%" y="1669" width="0.1297%" height="15" fill="rgb(208,157,18)" fg:x="10039117081" fg:w="13039117"/><text x="100.1103%" y="1679.50"></text></g><g><title>tracing_core::span::Record::is_empty (5,015,045 samples, 0.05%)</title><rect x="99.9401%" y="1653" width="0.0499%" height="15" fill="rgb(249,70,54)" fg:x="10047141153" fg:w="5015045"/><text x="100.1901%" y="1663.50"></text></g><g><title>tracing_core::field::ValueSet::is_empty (2,006,018 samples, 0.02%)</title><rect x="99.9701%" y="1637" width="0.0200%" height="15" fill="rgb(244,118,24)" fg:x="10050150180" fg:w="2006018"/><text x="100.2201%" y="1647.50"></text></g><g><title>all (10,053,159,207 samples, 100%)</title><rect x="0.0000%" y="2053" width="100.0000%" height="15" fill="rgb(211,54,0)" fg:x="0" fg:w="10053159207"/><text x="0.2500%" y="2063.50"></text></g></svg></svg>